
KEYPAD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000182  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000012e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000182  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001b4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b2d  00000000  00000000  00000214  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000097e  00000000  00000000  00000d41  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002f2  00000000  00000000  000016bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000019b4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004d8  00000000  00000000  000019d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00001eb0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
   8:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
   c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  10:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  14:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  18:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  1c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  20:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  24:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  28:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  2c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  30:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  34:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  38:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  3c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  40:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  44:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  48:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  4c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  50:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  54:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  58:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  5c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  60:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  64:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  68:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  6c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  70:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  74:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  78:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  7c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  80:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  84:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  88:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  8c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  90:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  94:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  98:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  9c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a4:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a8:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  ac:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  b0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61
  c0:	0e 94 66 00 	call	0xcc	; 0xcc <main>
  c4:	0c 94 95 00 	jmp	0x12a	; 0x12a <_exit>

000000c8 <__bad_interrupt>:
  c8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000cc <main>:
#include "CONFIG.h"

int main(void){
	
	DDRDbits.NIBBLE_L = 0xF;
  cc:	8a b1       	in	r24, 0x0a	; 10
  ce:	8f 60       	ori	r24, 0x0F	; 15
  d0:	8a b9       	out	0x0a, r24	; 10
	DDRDbits.NIBBLE_H = 0x0;
  d2:	8a b1       	in	r24, 0x0a	; 10
  d4:	8f 70       	andi	r24, 0x0F	; 15
  d6:	8a b9       	out	0x0a, r24	; 10
	
	
    while(1){
		
		PORTDbits.D0 = PINDbits.D4;
  d8:	89 b1       	in	r24, 0x09	; 9
  da:	82 95       	swap	r24
  dc:	81 70       	andi	r24, 0x01	; 1
  de:	9b b1       	in	r25, 0x0b	; 11
  e0:	80 fb       	bst	r24, 0
  e2:	90 f9       	bld	r25, 0
  e4:	9b b9       	out	0x0b, r25	; 11
		PORTDbits.D1 = PINDbits.D5;
  e6:	89 b1       	in	r24, 0x09	; 9
  e8:	85 fb       	bst	r24, 5
  ea:	88 27       	eor	r24, r24
  ec:	80 f9       	bld	r24, 0
  ee:	9b b1       	in	r25, 0x0b	; 11
  f0:	80 fb       	bst	r24, 0
  f2:	91 f9       	bld	r25, 1
  f4:	9b b9       	out	0x0b, r25	; 11
		PORTDbits.D2 = PINDbits.D6;
  f6:	89 b1       	in	r24, 0x09	; 9
  f8:	86 fb       	bst	r24, 6
  fa:	88 27       	eor	r24, r24
  fc:	80 f9       	bld	r24, 0
  fe:	9b b1       	in	r25, 0x0b	; 11
 100:	80 fb       	bst	r24, 0
 102:	92 f9       	bld	r25, 2
 104:	9b b9       	out	0x0b, r25	; 11
		PORTDbits.D3 = PINDbits.D7;
 106:	89 b1       	in	r24, 0x09	; 9
 108:	87 fb       	bst	r24, 7
 10a:	88 27       	eor	r24, r24
 10c:	80 f9       	bld	r24, 0
 10e:	9b b1       	in	r25, 0x0b	; 11
 110:	80 fb       	bst	r24, 0
 112:	93 f9       	bld	r25, 3
 114:	9b b9       	out	0x0b, r25	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 116:	2f e7       	ldi	r18, 0x7F	; 127
 118:	88 e3       	ldi	r24, 0x38	; 56
 11a:	91 e0       	ldi	r25, 0x01	; 1
 11c:	21 50       	subi	r18, 0x01	; 1
 11e:	80 40       	sbci	r24, 0x00	; 0
 120:	90 40       	sbci	r25, 0x00	; 0
 122:	e1 f7       	brne	.-8      	; 0x11c <main+0x50>
 124:	00 c0       	rjmp	.+0      	; 0x126 <main+0x5a>
 126:	00 00       	nop
 128:	d7 cf       	rjmp	.-82     	; 0xd8 <main+0xc>

0000012a <_exit>:
 12a:	f8 94       	cli

0000012c <__stop_program>:
 12c:	ff cf       	rjmp	.-2      	; 0x12c <__stop_program>
