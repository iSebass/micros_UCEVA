
CONTADOR_MULTIPLEX.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  000002f2  00000386  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002f2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080010c  0080010c  00000392  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000392  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003c4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000404  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b33  00000000  00000000  0000045c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ec  00000000  00000000  00000f8f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000050f  00000000  00000000  0000187b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000078  00000000  00000000  00001d8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004b0  00000000  00000000  00001e04  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000141  00000000  00000000  000022b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  000023f5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 ef       	ldi	r30, 0xF2	; 242
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 30       	cpi	r26, 0x0C	; 12
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ac e0       	ldi	r26, 0x0C	; 12
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a6 31       	cpi	r26, 0x16	; 22
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	2f d0       	rcall	.+94     	; 0x122 <main>
  c4:	14 c1       	rjmp	.+552    	; 0x2ee <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <multiplex_display>:

int contador=2576, u, d, c, m, resi;


void multiplex_display(){
	PORTC = (1<<0);
  c8:	81 e0       	ldi	r24, 0x01	; 1
  ca:	88 b9       	out	0x08, r24	; 8
	SevenSeg_DisplayACValue(m);
  cc:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <m>
  d0:	8a d0       	rcall	.+276    	; 0x1e6 <SevenSeg_DisplayACValue>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d2:	8f e4       	ldi	r24, 0x4F	; 79
  d4:	93 ec       	ldi	r25, 0xC3	; 195
  d6:	01 97       	sbiw	r24, 0x01	; 1
  d8:	f1 f7       	brne	.-4      	; 0xd6 <multiplex_display+0xe>
  da:	00 c0       	rjmp	.+0      	; 0xdc <multiplex_display+0x14>
  dc:	00 00       	nop
	_delay_ms(te);
	
	PORTC = (1<<1);
  de:	82 e0       	ldi	r24, 0x02	; 2
  e0:	88 b9       	out	0x08, r24	; 8
	SevenSeg_DisplayACValue(c);
  e2:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
  e6:	7f d0       	rcall	.+254    	; 0x1e6 <SevenSeg_DisplayACValue>
  e8:	8f e4       	ldi	r24, 0x4F	; 79
  ea:	93 ec       	ldi	r25, 0xC3	; 195
  ec:	01 97       	sbiw	r24, 0x01	; 1
  ee:	f1 f7       	brne	.-4      	; 0xec <multiplex_display+0x24>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <multiplex_display+0x2a>
  f2:	00 00       	nop
	_delay_ms(te);
	
	PORTC = (1<<2);
  f4:	84 e0       	ldi	r24, 0x04	; 4
  f6:	88 b9       	out	0x08, r24	; 8
	SevenSeg_DisplayACValue(d);
  f8:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <d>
  fc:	74 d0       	rcall	.+232    	; 0x1e6 <SevenSeg_DisplayACValue>
  fe:	8f e4       	ldi	r24, 0x4F	; 79
 100:	93 ec       	ldi	r25, 0xC3	; 195
 102:	01 97       	sbiw	r24, 0x01	; 1
 104:	f1 f7       	brne	.-4      	; 0x102 <multiplex_display+0x3a>
 106:	00 c0       	rjmp	.+0      	; 0x108 <multiplex_display+0x40>
 108:	00 00       	nop
	_delay_ms(te);
	
	PORTC = (1<<3);
 10a:	88 e0       	ldi	r24, 0x08	; 8
	SevenSeg_DisplayACValue(u);
 10c:	88 b9       	out	0x08, r24	; 8
 10e:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <u>
 112:	69 d0       	rcall	.+210    	; 0x1e6 <SevenSeg_DisplayACValue>
 114:	8f e4       	ldi	r24, 0x4F	; 79
 116:	93 ec       	ldi	r25, 0xC3	; 195
 118:	01 97       	sbiw	r24, 0x01	; 1
 11a:	f1 f7       	brne	.-4      	; 0x118 <multiplex_display+0x50>
 11c:	00 c0       	rjmp	.+0      	; 0x11e <multiplex_display+0x56>
 11e:	00 00       	nop
 120:	08 95       	ret

00000122 <main>:


int main(void)
{
	
	SevenSeg_Init();
 122:	5d d0       	rcall	.+186    	; 0x1de <SevenSeg_Init>
	DDRC = 0x0F;
 124:	8f e0       	ldi	r24, 0x0F	; 15
 126:	87 b9       	out	0x07, r24	; 7
	DDRB &= ~( (1<<0) | (1<<1) );
 128:	84 b1       	in	r24, 0x04	; 4
 12a:	8c 7f       	andi	r24, 0xFC	; 252
	
	while (1)
	{
		multiplex_display();
 12c:	84 b9       	out	0x04, r24	; 4
 12e:	cc df       	rcall	.-104    	; 0xc8 <multiplex_display>
		
		if( ( PINB & (1<<0) ) ){
 130:	18 99       	sbic	0x03, 0	; 3
 132:	02 c0       	rjmp	.+4      	; 0x138 <main+0x16>
			while( ( PINB & (1<<0) ) ){
				multiplex_display();
 134:	0c c0       	rjmp	.+24     	; 0x14e <main+0x2c>
 136:	c8 df       	rcall	.-112    	; 0xc8 <multiplex_display>
	while (1)
	{
		multiplex_display();
		
		if( ( PINB & (1<<0) ) ){
			while( ( PINB & (1<<0) ) ){
 138:	18 99       	sbic	0x03, 0	; 3
 13a:	fd cf       	rjmp	.-6      	; 0x136 <main+0x14>
				multiplex_display();
			}
			contador++;
 13c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 140:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 144:	01 96       	adiw	r24, 0x01	; 1
 146:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 14a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		}
		if( ( PINB & (1<<1) ) ){
 14e:	19 99       	sbic	0x03, 1	; 3
 150:	02 c0       	rjmp	.+4      	; 0x156 <main+0x34>
			while( ( PINB & (1<<1) ) ){
				multiplex_display();
 152:	0c c0       	rjmp	.+24     	; 0x16c <main+0x4a>
 154:	b9 df       	rcall	.-142    	; 0xc8 <multiplex_display>
				multiplex_display();
			}
			contador++;
		}
		if( ( PINB & (1<<1) ) ){
			while( ( PINB & (1<<1) ) ){
 156:	19 99       	sbic	0x03, 1	; 3
 158:	fd cf       	rjmp	.-6      	; 0x154 <main+0x32>
				multiplex_display();
			}
			contador--;
 15a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 15e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 162:	01 97       	sbiw	r24, 0x01	; 1
 164:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 168:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		}
		
		if(contador > 9999){
 16c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 170:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 174:	80 31       	cpi	r24, 0x10	; 16
 176:	97 42       	sbci	r25, 0x27	; 39
 178:	34 f0       	brlt	.+12     	; 0x186 <main+0x64>
			contador = 9999;
 17a:	8f e0       	ldi	r24, 0x0F	; 15
 17c:	97 e2       	ldi	r25, 0x27	; 39
 17e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 182:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		}
		
		if(contador < 0){
 186:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 18a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 18e:	99 23       	and	r25, r25
 190:	24 f4       	brge	.+8      	; 0x19a <main+0x78>
			contador = 0;
 192:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 196:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
		}
		
		m = contador / 1000;
 19a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 19e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1a2:	68 ee       	ldi	r22, 0xE8	; 232
 1a4:	73 e0       	ldi	r23, 0x03	; 3
 1a6:	7c d0       	rcall	.+248    	; 0x2a0 <__divmodhi4>
 1a8:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <m+0x1>
 1ac:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <m>
		resi = contador % 1000;
		c    = resi /100;
 1b0:	64 e6       	ldi	r22, 0x64	; 100
 1b2:	70 e0       	ldi	r23, 0x00	; 0
 1b4:	75 d0       	rcall	.+234    	; 0x2a0 <__divmodhi4>
 1b6:	70 93 0d 01 	sts	0x010D, r23	; 0x80010d <__data_end+0x1>
 1ba:	60 93 0c 01 	sts	0x010C, r22	; 0x80010c <__data_end>
		resi = resi % 100;
 1be:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <resi+0x1>
 1c2:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <resi>
		
		d = resi / 10;
 1c6:	6a e0       	ldi	r22, 0x0A	; 10
 1c8:	70 e0       	ldi	r23, 0x00	; 0
 1ca:	6a d0       	rcall	.+212    	; 0x2a0 <__divmodhi4>
 1cc:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <d+0x1>
 1d0:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <d>
		u = resi % 10;
 1d4:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <u+0x1>
 1d8:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <u>
		
		
		
	}
 1dc:	a8 cf       	rjmp	.-176    	; 0x12e <main+0xc>

000001de <SevenSeg_Init>:
				   (1<<SEGE)|
				   (1<<SEGF)|
				   (1<<SEGG);
}

void SevenSeg_DisplayCCValue(char val){
 1de:	81 b1       	in	r24, 0x01	; 1
 1e0:	8f 67       	ori	r24, 0x7F	; 127
 1e2:	81 b9       	out	0x01, r24	; 1
 1e4:	08 95       	ret

000001e6 <SevenSeg_DisplayACValue>:
	
}

void SevenSeg_DisplayACValue(char val){
	
	if( (decoAC[val] & 1  ) != 0) DISPLAYPORT |= (1<<SEGA); else DISPLAYPORT &= ~(1<<SEGA);
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	fc 01       	movw	r30, r24
 1ea:	ee 5f       	subi	r30, 0xFE	; 254
 1ec:	fe 4f       	sbci	r31, 0xFE	; 254
 1ee:	20 81       	ld	r18, Z
 1f0:	20 ff       	sbrs	r18, 0
 1f2:	04 c0       	rjmp	.+8      	; 0x1fc <SevenSeg_DisplayACValue+0x16>
 1f4:	22 b1       	in	r18, 0x02	; 2
 1f6:	21 60       	ori	r18, 0x01	; 1
 1f8:	22 b9       	out	0x02, r18	; 2
 1fa:	03 c0       	rjmp	.+6      	; 0x202 <SevenSeg_DisplayACValue+0x1c>
 1fc:	22 b1       	in	r18, 0x02	; 2
 1fe:	2e 7f       	andi	r18, 0xFE	; 254
 200:	22 b9       	out	0x02, r18	; 2
	if( (decoAC[val] & 2  ) != 0) DISPLAYPORT |= (1<<SEGB); else DISPLAYPORT &= ~(1<<SEGB);
 202:	fc 01       	movw	r30, r24
 204:	ee 5f       	subi	r30, 0xFE	; 254
 206:	fe 4f       	sbci	r31, 0xFE	; 254
 208:	20 81       	ld	r18, Z
 20a:	21 ff       	sbrs	r18, 1
 20c:	04 c0       	rjmp	.+8      	; 0x216 <SevenSeg_DisplayACValue+0x30>
 20e:	22 b1       	in	r18, 0x02	; 2
 210:	22 60       	ori	r18, 0x02	; 2
 212:	22 b9       	out	0x02, r18	; 2
 214:	03 c0       	rjmp	.+6      	; 0x21c <SevenSeg_DisplayACValue+0x36>
 216:	22 b1       	in	r18, 0x02	; 2
 218:	2d 7f       	andi	r18, 0xFD	; 253
 21a:	22 b9       	out	0x02, r18	; 2
	if( (decoAC[val] & 4  ) != 0) DISPLAYPORT |= (1<<SEGC); else DISPLAYPORT &= ~(1<<SEGC);
 21c:	fc 01       	movw	r30, r24
 21e:	ee 5f       	subi	r30, 0xFE	; 254
 220:	fe 4f       	sbci	r31, 0xFE	; 254
 222:	20 81       	ld	r18, Z
 224:	22 ff       	sbrs	r18, 2
 226:	04 c0       	rjmp	.+8      	; 0x230 <SevenSeg_DisplayACValue+0x4a>
 228:	22 b1       	in	r18, 0x02	; 2
 22a:	24 60       	ori	r18, 0x04	; 4
 22c:	22 b9       	out	0x02, r18	; 2
 22e:	03 c0       	rjmp	.+6      	; 0x236 <SevenSeg_DisplayACValue+0x50>
 230:	22 b1       	in	r18, 0x02	; 2
 232:	2b 7f       	andi	r18, 0xFB	; 251
 234:	22 b9       	out	0x02, r18	; 2
	if( (decoAC[val] & 8  ) != 0) DISPLAYPORT |= (1<<SEGD); else DISPLAYPORT &= ~(1<<SEGD);
 236:	fc 01       	movw	r30, r24
 238:	ee 5f       	subi	r30, 0xFE	; 254
 23a:	fe 4f       	sbci	r31, 0xFE	; 254
 23c:	20 81       	ld	r18, Z
 23e:	23 ff       	sbrs	r18, 3
 240:	04 c0       	rjmp	.+8      	; 0x24a <SevenSeg_DisplayACValue+0x64>
 242:	22 b1       	in	r18, 0x02	; 2
 244:	28 60       	ori	r18, 0x08	; 8
 246:	22 b9       	out	0x02, r18	; 2
 248:	03 c0       	rjmp	.+6      	; 0x250 <SevenSeg_DisplayACValue+0x6a>
 24a:	22 b1       	in	r18, 0x02	; 2
 24c:	27 7f       	andi	r18, 0xF7	; 247
 24e:	22 b9       	out	0x02, r18	; 2
	if( (decoAC[val] & 16 ) != 0) DISPLAYPORT |= (1<<SEGE); else DISPLAYPORT &= ~(1<<SEGE);
 250:	fc 01       	movw	r30, r24
 252:	ee 5f       	subi	r30, 0xFE	; 254
 254:	fe 4f       	sbci	r31, 0xFE	; 254
 256:	20 81       	ld	r18, Z
 258:	24 ff       	sbrs	r18, 4
 25a:	04 c0       	rjmp	.+8      	; 0x264 <SevenSeg_DisplayACValue+0x7e>
 25c:	22 b1       	in	r18, 0x02	; 2
 25e:	20 61       	ori	r18, 0x10	; 16
 260:	22 b9       	out	0x02, r18	; 2
 262:	03 c0       	rjmp	.+6      	; 0x26a <SevenSeg_DisplayACValue+0x84>
 264:	22 b1       	in	r18, 0x02	; 2
 266:	2f 7e       	andi	r18, 0xEF	; 239
 268:	22 b9       	out	0x02, r18	; 2
	if( (decoAC[val] & 32 ) != 0) DISPLAYPORT |= (1<<SEGF); else DISPLAYPORT &= ~(1<<SEGF);
 26a:	fc 01       	movw	r30, r24
 26c:	ee 5f       	subi	r30, 0xFE	; 254
 26e:	fe 4f       	sbci	r31, 0xFE	; 254
 270:	20 81       	ld	r18, Z
 272:	25 ff       	sbrs	r18, 5
 274:	04 c0       	rjmp	.+8      	; 0x27e <SevenSeg_DisplayACValue+0x98>
 276:	22 b1       	in	r18, 0x02	; 2
 278:	20 62       	ori	r18, 0x20	; 32
 27a:	22 b9       	out	0x02, r18	; 2
 27c:	03 c0       	rjmp	.+6      	; 0x284 <SevenSeg_DisplayACValue+0x9e>
 27e:	22 b1       	in	r18, 0x02	; 2
 280:	2f 7d       	andi	r18, 0xDF	; 223
 282:	22 b9       	out	0x02, r18	; 2
	if( (decoAC[val] & 64 ) != 0) DISPLAYPORT |= (1<<SEGG); else DISPLAYPORT &= ~(1<<SEGG);
 284:	fc 01       	movw	r30, r24
 286:	ee 5f       	subi	r30, 0xFE	; 254
 288:	fe 4f       	sbci	r31, 0xFE	; 254
 28a:	80 81       	ld	r24, Z
 28c:	86 ff       	sbrs	r24, 6
 28e:	04 c0       	rjmp	.+8      	; 0x298 <SevenSeg_DisplayACValue+0xb2>
 290:	82 b1       	in	r24, 0x02	; 2
 292:	80 64       	ori	r24, 0x40	; 64
 294:	82 b9       	out	0x02, r24	; 2
 296:	08 95       	ret
 298:	82 b1       	in	r24, 0x02	; 2
 29a:	8f 7b       	andi	r24, 0xBF	; 191
 29c:	82 b9       	out	0x02, r24	; 2
 29e:	08 95       	ret

000002a0 <__divmodhi4>:
 2a0:	97 fb       	bst	r25, 7
 2a2:	07 2e       	mov	r0, r23
 2a4:	16 f4       	brtc	.+4      	; 0x2aa <__divmodhi4+0xa>
 2a6:	00 94       	com	r0
 2a8:	06 d0       	rcall	.+12     	; 0x2b6 <__divmodhi4_neg1>
 2aa:	77 fd       	sbrc	r23, 7
 2ac:	08 d0       	rcall	.+16     	; 0x2be <__divmodhi4_neg2>
 2ae:	0b d0       	rcall	.+22     	; 0x2c6 <__udivmodhi4>
 2b0:	07 fc       	sbrc	r0, 7
 2b2:	05 d0       	rcall	.+10     	; 0x2be <__divmodhi4_neg2>
 2b4:	3e f4       	brtc	.+14     	; 0x2c4 <__divmodhi4_exit>

000002b6 <__divmodhi4_neg1>:
 2b6:	90 95       	com	r25
 2b8:	81 95       	neg	r24
 2ba:	9f 4f       	sbci	r25, 0xFF	; 255
 2bc:	08 95       	ret

000002be <__divmodhi4_neg2>:
 2be:	70 95       	com	r23
 2c0:	61 95       	neg	r22
 2c2:	7f 4f       	sbci	r23, 0xFF	; 255

000002c4 <__divmodhi4_exit>:
 2c4:	08 95       	ret

000002c6 <__udivmodhi4>:
 2c6:	aa 1b       	sub	r26, r26
 2c8:	bb 1b       	sub	r27, r27
 2ca:	51 e1       	ldi	r21, 0x11	; 17
 2cc:	07 c0       	rjmp	.+14     	; 0x2dc <__udivmodhi4_ep>

000002ce <__udivmodhi4_loop>:
 2ce:	aa 1f       	adc	r26, r26
 2d0:	bb 1f       	adc	r27, r27
 2d2:	a6 17       	cp	r26, r22
 2d4:	b7 07       	cpc	r27, r23
 2d6:	10 f0       	brcs	.+4      	; 0x2dc <__udivmodhi4_ep>
 2d8:	a6 1b       	sub	r26, r22
 2da:	b7 0b       	sbc	r27, r23

000002dc <__udivmodhi4_ep>:
 2dc:	88 1f       	adc	r24, r24
 2de:	99 1f       	adc	r25, r25
 2e0:	5a 95       	dec	r21
 2e2:	a9 f7       	brne	.-22     	; 0x2ce <__udivmodhi4_loop>
 2e4:	80 95       	com	r24
 2e6:	90 95       	com	r25
 2e8:	bc 01       	movw	r22, r24
 2ea:	cd 01       	movw	r24, r26
 2ec:	08 95       	ret

000002ee <_exit>:
 2ee:	f8 94       	cli

000002f0 <__stop_program>:
 2f0:	ff cf       	rjmp	.-2      	; 0x2f0 <__stop_program>
