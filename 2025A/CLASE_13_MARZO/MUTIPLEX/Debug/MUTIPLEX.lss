
MUTIPLEX.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  000002d0  00000364  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002d0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  0080010e  0080010e  00000372  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000372  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  000003e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ace  00000000  00000000  00000434  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008d4  00000000  00000000  00000f02  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004c0  00000000  00000000  000017d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000068  00000000  00000000  00001c98  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000048f  00000000  00000000  00001d00  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000141  00000000  00000000  0000218f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  000022d0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 ed       	ldi	r30, 0xD0	; 208
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ae 30       	cpi	r26, 0x0E	; 14
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ae e0       	ldi	r26, 0x0E	; 14
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 31       	cpi	r26, 0x10	; 16
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	02 d0       	rcall	.+4      	; 0xc8 <main>
  c4:	03 c1       	rjmp	.+518    	; 0x2cc <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <main>:


int main(void)
{
	
	SevenSeg_Init();
  c8:	79 d0       	rcall	.+242    	; 0x1bc <SevenSeg_Init>
	DDRC = 0x0F;
  ca:	8f e0       	ldi	r24, 0x0F	; 15
  cc:	87 b9       	out	0x07, r24	; 7
	
	while (1)
	{
		PORTC = (1<<0);
  ce:	81 e0       	ldi	r24, 0x01	; 1
  d0:	88 b9       	out	0x08, r24	; 8
		SevenSeg_DisplayACValue(mm/10);
  d2:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <mm>
  d6:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <mm+0x1>
  da:	ca e0       	ldi	r28, 0x0A	; 10
  dc:	d0 e0       	ldi	r29, 0x00	; 0
  de:	be 01       	movw	r22, r28
  e0:	ce d0       	rcall	.+412    	; 0x27e <__divmodhi4>
  e2:	86 2f       	mov	r24, r22
  e4:	6f d0       	rcall	.+222    	; 0x1c4 <SevenSeg_DisplayACValue>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e6:	8f e4       	ldi	r24, 0x4F	; 79
  e8:	93 ec       	ldi	r25, 0xC3	; 195
  ea:	01 97       	sbiw	r24, 0x01	; 1
  ec:	f1 f7       	brne	.-4      	; 0xea <main+0x22>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <main+0x28>
  f0:	00 00       	nop
		_delay_ms(te);
		
		PORTC = (1<<1);
  f2:	82 e0       	ldi	r24, 0x02	; 2
  f4:	88 b9       	out	0x08, r24	; 8
		SevenSeg_DisplayACValue(mm%10);
  f6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <mm>
  fa:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <mm+0x1>
  fe:	be 01       	movw	r22, r28
 100:	be d0       	rcall	.+380    	; 0x27e <__divmodhi4>
 102:	60 d0       	rcall	.+192    	; 0x1c4 <SevenSeg_DisplayACValue>
 104:	8f e4       	ldi	r24, 0x4F	; 79
 106:	93 ec       	ldi	r25, 0xC3	; 195
 108:	01 97       	sbiw	r24, 0x01	; 1
 10a:	f1 f7       	brne	.-4      	; 0x108 <main+0x40>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <main+0x46>
 10e:	00 00       	nop
		_delay_ms(te);
		
		PORTC = (1<<2);
 110:	84 e0       	ldi	r24, 0x04	; 4
 112:	88 b9       	out	0x08, r24	; 8
		SevenSeg_DisplayACValue(ss/10);
 114:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 118:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 11c:	be 01       	movw	r22, r28
 11e:	af d0       	rcall	.+350    	; 0x27e <__divmodhi4>
 120:	86 2f       	mov	r24, r22
 122:	50 d0       	rcall	.+160    	; 0x1c4 <SevenSeg_DisplayACValue>
 124:	8f e4       	ldi	r24, 0x4F	; 79
 126:	93 ec       	ldi	r25, 0xC3	; 195
 128:	01 97       	sbiw	r24, 0x01	; 1
 12a:	f1 f7       	brne	.-4      	; 0x128 <main+0x60>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <main+0x66>
 12e:	00 00       	nop
		_delay_ms(te);
		
		PORTC = (1<<3);
 130:	88 e0       	ldi	r24, 0x08	; 8
		SevenSeg_DisplayACValue(ss%10);
 132:	88 b9       	out	0x08, r24	; 8
 134:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 138:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 13c:	be 01       	movw	r22, r28
 13e:	9f d0       	rcall	.+318    	; 0x27e <__divmodhi4>
 140:	41 d0       	rcall	.+130    	; 0x1c4 <SevenSeg_DisplayACValue>
 142:	8f e4       	ldi	r24, 0x4F	; 79
 144:	93 ec       	ldi	r25, 0xC3	; 195
 146:	01 97       	sbiw	r24, 0x01	; 1
 148:	f1 f7       	brne	.-4      	; 0x146 <main+0x7e>
 14a:	00 c0       	rjmp	.+0      	; 0x14c <main+0x84>
 14c:	00 00       	nop
 14e:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <__data_end>
		_delay_ms(te);
		
		
		contador++;
 152:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <__data_end+0x1>
 156:	01 96       	adiw	r24, 0x01	; 1
 158:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <__data_end+0x1>
 15c:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <__data_end>
 160:	49 97       	sbiw	r24, 0x19	; 25
		if(contador==25){
 162:	69 f4       	brne	.+26     	; 0x17e <main+0xb6>
 164:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <__data_end+0x1>
			contador=0;
 168:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <__data_end>
 16c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
			ss++;
 170:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 174:	01 96       	adiw	r24, 0x01	; 1
 176:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 17a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 17e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
		}
		
		
		
		if(ss>59){
 182:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 186:	cc 97       	sbiw	r24, 0x3c	; 60
 188:	6c f0       	brlt	.+26     	; 0x1a4 <main+0xdc>
 18a:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
			ss=0;
 18e:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
 192:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <mm>
			mm++;
 196:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <mm+0x1>
 19a:	01 96       	adiw	r24, 0x01	; 1
 19c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <mm+0x1>
 1a0:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <mm>
 1a4:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <mm>
		}
		if(mm>59){
 1a8:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <mm+0x1>
 1ac:	cc 97       	sbiw	r24, 0x3c	; 60
 1ae:	0c f4       	brge	.+2      	; 0x1b2 <main+0xea>
 1b0:	8e cf       	rjmp	.-228    	; 0xce <main+0x6>
 1b2:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <mm+0x1>
			 mm=0;
 1b6:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <mm>
 1ba:	89 cf       	rjmp	.-238    	; 0xce <main+0x6>

000001bc <SevenSeg_Init>:
 1bc:	81 b1       	in	r24, 0x01	; 1
				   (1<<SEGE)|
				   (1<<SEGF)|
				   (1<<SEGG);
}

void SevenSeg_DisplayCCValue(char val){
 1be:	8f 67       	ori	r24, 0x7F	; 127
 1c0:	81 b9       	out	0x01, r24	; 1
 1c2:	08 95       	ret

000001c4 <SevenSeg_DisplayACValue>:
	
}

void SevenSeg_DisplayACValue(char val){
	
	if( (decoAC[val] & 1  ) != 0) DISPLAYPORT |= (1<<SEGA); else DISPLAYPORT &= ~(1<<SEGA);
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	fc 01       	movw	r30, r24
 1c8:	ec 5f       	subi	r30, 0xFC	; 252
 1ca:	fe 4f       	sbci	r31, 0xFE	; 254
 1cc:	20 81       	ld	r18, Z
 1ce:	20 ff       	sbrs	r18, 0
 1d0:	04 c0       	rjmp	.+8      	; 0x1da <SevenSeg_DisplayACValue+0x16>
 1d2:	22 b1       	in	r18, 0x02	; 2
 1d4:	21 60       	ori	r18, 0x01	; 1
 1d6:	22 b9       	out	0x02, r18	; 2
 1d8:	03 c0       	rjmp	.+6      	; 0x1e0 <SevenSeg_DisplayACValue+0x1c>
 1da:	22 b1       	in	r18, 0x02	; 2
 1dc:	2e 7f       	andi	r18, 0xFE	; 254
 1de:	22 b9       	out	0x02, r18	; 2
	if( (decoAC[val] & 2  ) != 0) DISPLAYPORT |= (1<<SEGB); else DISPLAYPORT &= ~(1<<SEGB);
 1e0:	fc 01       	movw	r30, r24
 1e2:	ec 5f       	subi	r30, 0xFC	; 252
 1e4:	fe 4f       	sbci	r31, 0xFE	; 254
 1e6:	20 81       	ld	r18, Z
 1e8:	21 ff       	sbrs	r18, 1
 1ea:	04 c0       	rjmp	.+8      	; 0x1f4 <SevenSeg_DisplayACValue+0x30>
 1ec:	22 b1       	in	r18, 0x02	; 2
 1ee:	22 60       	ori	r18, 0x02	; 2
 1f0:	22 b9       	out	0x02, r18	; 2
 1f2:	03 c0       	rjmp	.+6      	; 0x1fa <SevenSeg_DisplayACValue+0x36>
 1f4:	22 b1       	in	r18, 0x02	; 2
 1f6:	2d 7f       	andi	r18, 0xFD	; 253
 1f8:	22 b9       	out	0x02, r18	; 2
	if( (decoAC[val] & 4  ) != 0) DISPLAYPORT |= (1<<SEGC); else DISPLAYPORT &= ~(1<<SEGC);
 1fa:	fc 01       	movw	r30, r24
 1fc:	ec 5f       	subi	r30, 0xFC	; 252
 1fe:	fe 4f       	sbci	r31, 0xFE	; 254
 200:	20 81       	ld	r18, Z
 202:	22 ff       	sbrs	r18, 2
 204:	04 c0       	rjmp	.+8      	; 0x20e <SevenSeg_DisplayACValue+0x4a>
 206:	22 b1       	in	r18, 0x02	; 2
 208:	24 60       	ori	r18, 0x04	; 4
 20a:	22 b9       	out	0x02, r18	; 2
 20c:	03 c0       	rjmp	.+6      	; 0x214 <SevenSeg_DisplayACValue+0x50>
 20e:	22 b1       	in	r18, 0x02	; 2
 210:	2b 7f       	andi	r18, 0xFB	; 251
 212:	22 b9       	out	0x02, r18	; 2
	if( (decoAC[val] & 8  ) != 0) DISPLAYPORT |= (1<<SEGD); else DISPLAYPORT &= ~(1<<SEGD);
 214:	fc 01       	movw	r30, r24
 216:	ec 5f       	subi	r30, 0xFC	; 252
 218:	fe 4f       	sbci	r31, 0xFE	; 254
 21a:	20 81       	ld	r18, Z
 21c:	23 ff       	sbrs	r18, 3
 21e:	04 c0       	rjmp	.+8      	; 0x228 <SevenSeg_DisplayACValue+0x64>
 220:	22 b1       	in	r18, 0x02	; 2
 222:	28 60       	ori	r18, 0x08	; 8
 224:	22 b9       	out	0x02, r18	; 2
 226:	03 c0       	rjmp	.+6      	; 0x22e <SevenSeg_DisplayACValue+0x6a>
 228:	22 b1       	in	r18, 0x02	; 2
 22a:	27 7f       	andi	r18, 0xF7	; 247
 22c:	22 b9       	out	0x02, r18	; 2
	if( (decoAC[val] & 16 ) != 0) DISPLAYPORT |= (1<<SEGE); else DISPLAYPORT &= ~(1<<SEGE);
 22e:	fc 01       	movw	r30, r24
 230:	ec 5f       	subi	r30, 0xFC	; 252
 232:	fe 4f       	sbci	r31, 0xFE	; 254
 234:	20 81       	ld	r18, Z
 236:	24 ff       	sbrs	r18, 4
 238:	04 c0       	rjmp	.+8      	; 0x242 <SevenSeg_DisplayACValue+0x7e>
 23a:	22 b1       	in	r18, 0x02	; 2
 23c:	20 61       	ori	r18, 0x10	; 16
 23e:	22 b9       	out	0x02, r18	; 2
 240:	03 c0       	rjmp	.+6      	; 0x248 <SevenSeg_DisplayACValue+0x84>
 242:	22 b1       	in	r18, 0x02	; 2
 244:	2f 7e       	andi	r18, 0xEF	; 239
 246:	22 b9       	out	0x02, r18	; 2
	if( (decoAC[val] & 32 ) != 0) DISPLAYPORT |= (1<<SEGF); else DISPLAYPORT &= ~(1<<SEGF);
 248:	fc 01       	movw	r30, r24
 24a:	ec 5f       	subi	r30, 0xFC	; 252
 24c:	fe 4f       	sbci	r31, 0xFE	; 254
 24e:	20 81       	ld	r18, Z
 250:	25 ff       	sbrs	r18, 5
 252:	04 c0       	rjmp	.+8      	; 0x25c <SevenSeg_DisplayACValue+0x98>
 254:	22 b1       	in	r18, 0x02	; 2
 256:	20 62       	ori	r18, 0x20	; 32
 258:	22 b9       	out	0x02, r18	; 2
 25a:	03 c0       	rjmp	.+6      	; 0x262 <SevenSeg_DisplayACValue+0x9e>
 25c:	22 b1       	in	r18, 0x02	; 2
 25e:	2f 7d       	andi	r18, 0xDF	; 223
 260:	22 b9       	out	0x02, r18	; 2
	if( (decoAC[val] & 64 ) != 0) DISPLAYPORT |= (1<<SEGG); else DISPLAYPORT &= ~(1<<SEGG);
 262:	fc 01       	movw	r30, r24
 264:	ec 5f       	subi	r30, 0xFC	; 252
 266:	fe 4f       	sbci	r31, 0xFE	; 254
 268:	80 81       	ld	r24, Z
 26a:	86 ff       	sbrs	r24, 6
 26c:	04 c0       	rjmp	.+8      	; 0x276 <SevenSeg_DisplayACValue+0xb2>
 26e:	82 b1       	in	r24, 0x02	; 2
 270:	80 64       	ori	r24, 0x40	; 64
 272:	82 b9       	out	0x02, r24	; 2
 274:	08 95       	ret
 276:	82 b1       	in	r24, 0x02	; 2
 278:	8f 7b       	andi	r24, 0xBF	; 191
 27a:	82 b9       	out	0x02, r24	; 2
 27c:	08 95       	ret

0000027e <__divmodhi4>:
 27e:	97 fb       	bst	r25, 7
 280:	07 2e       	mov	r0, r23
 282:	16 f4       	brtc	.+4      	; 0x288 <__divmodhi4+0xa>
 284:	00 94       	com	r0
 286:	06 d0       	rcall	.+12     	; 0x294 <__divmodhi4_neg1>
 288:	77 fd       	sbrc	r23, 7
 28a:	08 d0       	rcall	.+16     	; 0x29c <__divmodhi4_neg2>
 28c:	0b d0       	rcall	.+22     	; 0x2a4 <__udivmodhi4>
 28e:	07 fc       	sbrc	r0, 7
 290:	05 d0       	rcall	.+10     	; 0x29c <__divmodhi4_neg2>
 292:	3e f4       	brtc	.+14     	; 0x2a2 <__divmodhi4_exit>

00000294 <__divmodhi4_neg1>:
 294:	90 95       	com	r25
 296:	81 95       	neg	r24
 298:	9f 4f       	sbci	r25, 0xFF	; 255
 29a:	08 95       	ret

0000029c <__divmodhi4_neg2>:
 29c:	70 95       	com	r23
 29e:	61 95       	neg	r22
 2a0:	7f 4f       	sbci	r23, 0xFF	; 255

000002a2 <__divmodhi4_exit>:
 2a2:	08 95       	ret

000002a4 <__udivmodhi4>:
 2a4:	aa 1b       	sub	r26, r26
 2a6:	bb 1b       	sub	r27, r27
 2a8:	51 e1       	ldi	r21, 0x11	; 17
 2aa:	07 c0       	rjmp	.+14     	; 0x2ba <__udivmodhi4_ep>

000002ac <__udivmodhi4_loop>:
 2ac:	aa 1f       	adc	r26, r26
 2ae:	bb 1f       	adc	r27, r27
 2b0:	a6 17       	cp	r26, r22
 2b2:	b7 07       	cpc	r27, r23
 2b4:	10 f0       	brcs	.+4      	; 0x2ba <__udivmodhi4_ep>
 2b6:	a6 1b       	sub	r26, r22
 2b8:	b7 0b       	sbc	r27, r23

000002ba <__udivmodhi4_ep>:
 2ba:	88 1f       	adc	r24, r24
 2bc:	99 1f       	adc	r25, r25
 2be:	5a 95       	dec	r21
 2c0:	a9 f7       	brne	.-22     	; 0x2ac <__udivmodhi4_loop>
 2c2:	80 95       	com	r24
 2c4:	90 95       	com	r25
 2c6:	bc 01       	movw	r22, r24
 2c8:	cd 01       	movw	r24, r26
 2ca:	08 95       	ret

000002cc <_exit>:
 2cc:	f8 94       	cli

000002ce <__stop_program>:
 2ce:	ff cf       	rjmp	.-2      	; 0x2ce <__stop_program>
