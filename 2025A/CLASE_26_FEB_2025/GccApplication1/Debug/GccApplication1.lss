
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  000002c0  00000354  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002c0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  0080010c  0080010c  00000360  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000360  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000390  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  000003d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b36  00000000  00000000  00000420  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ee  00000000  00000000  00000f56  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000047b  00000000  00000000  00001844  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000068  00000000  00000000  00001cc0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000541  00000000  00000000  00001d28  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000141  00000000  00000000  00002269  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  000023aa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 ec       	ldi	r30, 0xC0	; 192
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 30       	cpi	r26, 0x0C	; 12
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ac e0       	ldi	r26, 0x0C	; 12
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a8 31       	cpi	r26, 0x18	; 24
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	02 d0       	rcall	.+4      	; 0xc8 <main>
  c4:	fb c0       	rjmp	.+502    	; 0x2bc <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <main>:
const int te=10;

int contador=5268, contador_seg=0, unidad, decena, centena, miles, aux;

int main(void){
    DisplaySevengSegInit();
  c8:	72 d0       	rcall	.+228    	; 0x1ae <_Z20DisplaySevengSegInitv>
	DISPLAY_DDR = 0x0F;
  ca:	8f e0       	ldi	r24, 0x0F	; 15
  cc:	81 b9       	out	0x01, r24	; 1
	DISPLAY_CONTROL = 0xF;
  ce:	82 b9       	out	0x02, r24	; 2
	
    while (1) 
    {
		miles = contador / 1000;
  d0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  d4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  d8:	68 ee       	ldi	r22, 0xE8	; 232
  da:	73 e0       	ldi	r23, 0x03	; 3
  dc:	c8 d0       	rcall	.+400    	; 0x26e <__divmodhi4>
  de:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <miles+0x1>
  e2:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <miles>
		aux = contador % 1000;
		
		centena = aux / 100;
  e6:	64 e6       	ldi	r22, 0x64	; 100
  e8:	70 e0       	ldi	r23, 0x00	; 0
  ea:	c1 d0       	rcall	.+386    	; 0x26e <__divmodhi4>
  ec:	70 93 11 01 	sts	0x0111, r23	; 0x800111 <centena+0x1>
  f0:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <centena>
		aux = aux % 100;
  f4:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <__data_end+0x1>
  f8:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
		
		decena = aux / 10;
  fc:	6a e0       	ldi	r22, 0x0A	; 10
  fe:	70 e0       	ldi	r23, 0x00	; 0
 100:	b6 d0       	rcall	.+364    	; 0x26e <__divmodhi4>
 102:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <decena+0x1>
 106:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <decena>
		unidad = aux % 10;
 10a:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <unidad+0x1>
 10e:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <unidad>
		
		SET_DISPLAY_1();
 112:	88 e0       	ldi	r24, 0x08	; 8
		DisplaySevenSegCA(unidad);
 114:	82 b9       	out	0x02, r24	; 2
 116:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <unidad>
 11a:	4c d0       	rcall	.+152    	; 0x1b4 <_Z17DisplaySevenSegCAc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 11c:	8f e1       	ldi	r24, 0x1F	; 31
 11e:	9e e4       	ldi	r25, 0x4E	; 78
 120:	01 97       	sbiw	r24, 0x01	; 1
 122:	f1 f7       	brne	.-4      	; 0x120 <main+0x58>
 124:	00 c0       	rjmp	.+0      	; 0x126 <main+0x5e>
		_delay_ms(te);
		
		SET_DISPLAY_2();
 126:	00 00       	nop
 128:	84 e0       	ldi	r24, 0x04	; 4
		DisplaySevenSegCA(decena);
 12a:	82 b9       	out	0x02, r24	; 2
 12c:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <decena>
 130:	41 d0       	rcall	.+130    	; 0x1b4 <_Z17DisplaySevenSegCAc>
 132:	8f e1       	ldi	r24, 0x1F	; 31
 134:	9e e4       	ldi	r25, 0x4E	; 78
 136:	01 97       	sbiw	r24, 0x01	; 1
 138:	f1 f7       	brne	.-4      	; 0x136 <main+0x6e>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <main+0x74>
		_delay_ms(te);
		
		SET_DISPLAY_3();
 13c:	00 00       	nop
 13e:	82 e0       	ldi	r24, 0x02	; 2
		DisplaySevenSegCA(centena);
 140:	82 b9       	out	0x02, r24	; 2
 142:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <centena>
 146:	36 d0       	rcall	.+108    	; 0x1b4 <_Z17DisplaySevenSegCAc>
 148:	8f e1       	ldi	r24, 0x1F	; 31
 14a:	9e e4       	ldi	r25, 0x4E	; 78
 14c:	01 97       	sbiw	r24, 0x01	; 1
 14e:	f1 f7       	brne	.-4      	; 0x14c <main+0x84>
 150:	00 c0       	rjmp	.+0      	; 0x152 <main+0x8a>
		_delay_ms(te);
		
		SET_DISPLAY_4();
 152:	00 00       	nop
 154:	81 e0       	ldi	r24, 0x01	; 1
		DisplaySevenSegCA(miles);
 156:	82 b9       	out	0x02, r24	; 2
 158:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <miles>
 15c:	2b d0       	rcall	.+86     	; 0x1b4 <_Z17DisplaySevenSegCAc>
 15e:	8f e1       	ldi	r24, 0x1F	; 31
 160:	9e e4       	ldi	r25, 0x4E	; 78
 162:	01 97       	sbiw	r24, 0x01	; 1
 164:	f1 f7       	brne	.-4      	; 0x162 <main+0x9a>
 166:	00 c0       	rjmp	.+0      	; 0x168 <main+0xa0>
 168:	00 00       	nop
		_delay_ms(te);
		
		contador_seg++;
 16a:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <contador_seg>
 16e:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <contador_seg+0x1>
 172:	01 96       	adiw	r24, 0x01	; 1
 174:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <contador_seg+0x1>
 178:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <contador_seg>
		if(contador_seg == 25){
 17c:	49 97       	sbiw	r24, 0x19	; 25
 17e:	09 f0       	breq	.+2      	; 0x182 <main+0xba>
 180:	a7 cf       	rjmp	.-178    	; 0xd0 <main+0x8>
			contador_seg=0;
 182:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <contador_seg+0x1>
 186:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <contador_seg>
			contador++;
 18a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 18e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 192:	01 96       	adiw	r24, 0x01	; 1
 194:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 198:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if( contador > 9999) contador=0;
 19c:	80 31       	cpi	r24, 0x10	; 16
 19e:	97 42       	sbci	r25, 0x27	; 39
 1a0:	0c f4       	brge	.+2      	; 0x1a4 <main+0xdc>
 1a2:	96 cf       	rjmp	.-212    	; 0xd0 <main+0x8>
 1a4:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1a8:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
 1ac:	91 cf       	rjmp	.-222    	; 0xd0 <main+0x8>

000001ae <_Z20DisplaySevengSegInitv>:

char decoAC[10]={0xC0, 0xF9, 0xA4, 0xB0, 0x99,
0x92, 0x82, 0xF8, 0x80, 0x90};

void DisplaySevengSegInit(void ){
	DIR_SEVENSEG = 0xFF;
 1ae:	8f ef       	ldi	r24, 0xFF	; 255
 1b0:	87 b9       	out	0x07, r24	; 7
 1b2:	08 95       	ret

000001b4 <_Z17DisplaySevenSegCAc>:
}
void DisplaySevenSegCA(char val){
	
	if( (decoAC[val] & 1) == 0 )   PORT_SEVENSEG &= ~(1<<SEGA); else PORT_SEVENSEG |= (1<<SEGA);
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	fc 01       	movw	r30, r24
 1b8:	ee 5f       	subi	r30, 0xFE	; 254
 1ba:	fe 4f       	sbci	r31, 0xFE	; 254
 1bc:	20 81       	ld	r18, Z
 1be:	20 fd       	sbrc	r18, 0
 1c0:	04 c0       	rjmp	.+8      	; 0x1ca <_Z17DisplaySevenSegCAc+0x16>
 1c2:	28 b1       	in	r18, 0x08	; 8
 1c4:	2e 7f       	andi	r18, 0xFE	; 254
 1c6:	28 b9       	out	0x08, r18	; 8
 1c8:	03 c0       	rjmp	.+6      	; 0x1d0 <_Z17DisplaySevenSegCAc+0x1c>
 1ca:	28 b1       	in	r18, 0x08	; 8
 1cc:	21 60       	ori	r18, 0x01	; 1
 1ce:	28 b9       	out	0x08, r18	; 8
	if( (decoAC[val] & 2) == 0 )   PORT_SEVENSEG &= ~(1<<SEGB); else PORT_SEVENSEG |= (1<<SEGB);
 1d0:	fc 01       	movw	r30, r24
 1d2:	ee 5f       	subi	r30, 0xFE	; 254
 1d4:	fe 4f       	sbci	r31, 0xFE	; 254
 1d6:	20 81       	ld	r18, Z
 1d8:	21 fd       	sbrc	r18, 1
 1da:	04 c0       	rjmp	.+8      	; 0x1e4 <_Z17DisplaySevenSegCAc+0x30>
 1dc:	28 b1       	in	r18, 0x08	; 8
 1de:	2d 7f       	andi	r18, 0xFD	; 253
 1e0:	28 b9       	out	0x08, r18	; 8
 1e2:	03 c0       	rjmp	.+6      	; 0x1ea <_Z17DisplaySevenSegCAc+0x36>
 1e4:	28 b1       	in	r18, 0x08	; 8
 1e6:	22 60       	ori	r18, 0x02	; 2
 1e8:	28 b9       	out	0x08, r18	; 8
	if( (decoAC[val] & 4) == 0 )   PORT_SEVENSEG &= ~(1<<SEGC); else PORT_SEVENSEG |= (1<<SEGC);
 1ea:	fc 01       	movw	r30, r24
 1ec:	ee 5f       	subi	r30, 0xFE	; 254
 1ee:	fe 4f       	sbci	r31, 0xFE	; 254
 1f0:	20 81       	ld	r18, Z
 1f2:	22 fd       	sbrc	r18, 2
 1f4:	04 c0       	rjmp	.+8      	; 0x1fe <_Z17DisplaySevenSegCAc+0x4a>
 1f6:	28 b1       	in	r18, 0x08	; 8
 1f8:	2b 7f       	andi	r18, 0xFB	; 251
 1fa:	28 b9       	out	0x08, r18	; 8
 1fc:	03 c0       	rjmp	.+6      	; 0x204 <_Z17DisplaySevenSegCAc+0x50>
 1fe:	28 b1       	in	r18, 0x08	; 8
 200:	24 60       	ori	r18, 0x04	; 4
 202:	28 b9       	out	0x08, r18	; 8
	if( (decoAC[val] & 8) == 0 )   PORT_SEVENSEG &= ~(1<<SEGD); else PORT_SEVENSEG |= (1<<SEGD);
 204:	fc 01       	movw	r30, r24
 206:	ee 5f       	subi	r30, 0xFE	; 254
 208:	fe 4f       	sbci	r31, 0xFE	; 254
 20a:	20 81       	ld	r18, Z
 20c:	23 fd       	sbrc	r18, 3
 20e:	04 c0       	rjmp	.+8      	; 0x218 <_Z17DisplaySevenSegCAc+0x64>
 210:	28 b1       	in	r18, 0x08	; 8
 212:	27 7f       	andi	r18, 0xF7	; 247
 214:	28 b9       	out	0x08, r18	; 8
 216:	03 c0       	rjmp	.+6      	; 0x21e <_Z17DisplaySevenSegCAc+0x6a>
 218:	28 b1       	in	r18, 0x08	; 8
 21a:	28 60       	ori	r18, 0x08	; 8
 21c:	28 b9       	out	0x08, r18	; 8
	if( (decoAC[val] & 16) == 0 )  PORT_SEVENSEG &= ~(1<<SEGE); else PORT_SEVENSEG |= (1<<SEGE);
 21e:	fc 01       	movw	r30, r24
 220:	ee 5f       	subi	r30, 0xFE	; 254
 222:	fe 4f       	sbci	r31, 0xFE	; 254
 224:	20 81       	ld	r18, Z
 226:	24 fd       	sbrc	r18, 4
 228:	04 c0       	rjmp	.+8      	; 0x232 <_Z17DisplaySevenSegCAc+0x7e>
 22a:	28 b1       	in	r18, 0x08	; 8
 22c:	2f 7e       	andi	r18, 0xEF	; 239
 22e:	28 b9       	out	0x08, r18	; 8
 230:	03 c0       	rjmp	.+6      	; 0x238 <_Z17DisplaySevenSegCAc+0x84>
 232:	28 b1       	in	r18, 0x08	; 8
 234:	20 61       	ori	r18, 0x10	; 16
 236:	28 b9       	out	0x08, r18	; 8
	if( (decoAC[val] & 32) == 0 )  PORT_SEVENSEG &= ~(1<<SEGF); else PORT_SEVENSEG |= (1<<SEGF);
 238:	fc 01       	movw	r30, r24
 23a:	ee 5f       	subi	r30, 0xFE	; 254
 23c:	fe 4f       	sbci	r31, 0xFE	; 254
 23e:	20 81       	ld	r18, Z
 240:	25 fd       	sbrc	r18, 5
 242:	04 c0       	rjmp	.+8      	; 0x24c <_Z17DisplaySevenSegCAc+0x98>
 244:	28 b1       	in	r18, 0x08	; 8
 246:	2f 7d       	andi	r18, 0xDF	; 223
 248:	28 b9       	out	0x08, r18	; 8
 24a:	03 c0       	rjmp	.+6      	; 0x252 <_Z17DisplaySevenSegCAc+0x9e>
 24c:	28 b1       	in	r18, 0x08	; 8
 24e:	20 62       	ori	r18, 0x20	; 32
 250:	28 b9       	out	0x08, r18	; 8
	if( (decoAC[val] & 64) == 0 )  PORT_SEVENSEG &= ~(1<<SEGG); else PORT_SEVENSEG |= (1<<SEGG);
 252:	fc 01       	movw	r30, r24
 254:	ee 5f       	subi	r30, 0xFE	; 254
 256:	fe 4f       	sbci	r31, 0xFE	; 254
 258:	80 81       	ld	r24, Z
 25a:	86 fd       	sbrc	r24, 6
 25c:	04 c0       	rjmp	.+8      	; 0x266 <_Z17DisplaySevenSegCAc+0xb2>
 25e:	88 b1       	in	r24, 0x08	; 8
 260:	8f 7b       	andi	r24, 0xBF	; 191
 262:	88 b9       	out	0x08, r24	; 8
 264:	08 95       	ret
 266:	88 b1       	in	r24, 0x08	; 8
 268:	80 64       	ori	r24, 0x40	; 64
 26a:	88 b9       	out	0x08, r24	; 8
 26c:	08 95       	ret

0000026e <__divmodhi4>:
 26e:	97 fb       	bst	r25, 7
 270:	07 2e       	mov	r0, r23
 272:	16 f4       	brtc	.+4      	; 0x278 <__divmodhi4+0xa>
 274:	00 94       	com	r0
 276:	06 d0       	rcall	.+12     	; 0x284 <__divmodhi4_neg1>
 278:	77 fd       	sbrc	r23, 7
 27a:	08 d0       	rcall	.+16     	; 0x28c <__divmodhi4_neg2>
 27c:	0b d0       	rcall	.+22     	; 0x294 <__udivmodhi4>
 27e:	07 fc       	sbrc	r0, 7
 280:	05 d0       	rcall	.+10     	; 0x28c <__divmodhi4_neg2>
 282:	3e f4       	brtc	.+14     	; 0x292 <__divmodhi4_exit>

00000284 <__divmodhi4_neg1>:
 284:	90 95       	com	r25
 286:	81 95       	neg	r24
 288:	9f 4f       	sbci	r25, 0xFF	; 255
 28a:	08 95       	ret

0000028c <__divmodhi4_neg2>:
 28c:	70 95       	com	r23
 28e:	61 95       	neg	r22
 290:	7f 4f       	sbci	r23, 0xFF	; 255

00000292 <__divmodhi4_exit>:
 292:	08 95       	ret

00000294 <__udivmodhi4>:
 294:	aa 1b       	sub	r26, r26
 296:	bb 1b       	sub	r27, r27
 298:	51 e1       	ldi	r21, 0x11	; 17
 29a:	07 c0       	rjmp	.+14     	; 0x2aa <__udivmodhi4_ep>

0000029c <__udivmodhi4_loop>:
 29c:	aa 1f       	adc	r26, r26
 29e:	bb 1f       	adc	r27, r27
 2a0:	a6 17       	cp	r26, r22
 2a2:	b7 07       	cpc	r27, r23
 2a4:	10 f0       	brcs	.+4      	; 0x2aa <__udivmodhi4_ep>
 2a6:	a6 1b       	sub	r26, r22
 2a8:	b7 0b       	sbc	r27, r23

000002aa <__udivmodhi4_ep>:
 2aa:	88 1f       	adc	r24, r24
 2ac:	99 1f       	adc	r25, r25
 2ae:	5a 95       	dec	r21
 2b0:	a9 f7       	brne	.-22     	; 0x29c <__udivmodhi4_loop>
 2b2:	80 95       	com	r24
 2b4:	90 95       	com	r25
 2b6:	bc 01       	movw	r22, r24
 2b8:	cd 01       	movw	r24, r26
 2ba:	08 95       	ret

000002bc <_exit>:
 2bc:	f8 94       	cli

000002be <__stop_program>:
 2be:	ff cf       	rjmp	.-2      	; 0x2be <__stop_program>
