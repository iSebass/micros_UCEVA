
MOTOR_DC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000192  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000013e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000192  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001c4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  00000204  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009e7  00000000  00000000  00000254  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000832  00000000  00000000  00000c3b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000384  00000000  00000000  0000146d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000084  00000000  00000000  000017f4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000051f  00000000  00000000  00001878  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000090  00000000  00000000  00001d97  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00001e27  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	2c d0       	rcall	.+88     	; 0xf2 <main>
  9a:	4f c0       	rjmp	.+158    	; 0x13a <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <_Z13girarmotorA_Rv>:
void frenarmotorA(void);
void frenarmotorB(void);


void girarmotorA_R(void){
	 PORTB |=  (1<<0);
  9e:	85 b1       	in	r24, 0x05	; 5
  a0:	81 60       	ori	r24, 0x01	; 1
  a2:	85 b9       	out	0x05, r24	; 5
	 PORTB &= ~(1<<1);
  a4:	85 b1       	in	r24, 0x05	; 5
  a6:	8d 7f       	andi	r24, 0xFD	; 253
  a8:	85 b9       	out	0x05, r24	; 5
  aa:	08 95       	ret

000000ac <_Z13girarmotorB_Rv>:
}
void girarmotorB_R(void){
	 PORTB |=  (1<<2);
  ac:	85 b1       	in	r24, 0x05	; 5
  ae:	84 60       	ori	r24, 0x04	; 4
  b0:	85 b9       	out	0x05, r24	; 5
	 PORTB &= ~(1<<3);
  b2:	85 b1       	in	r24, 0x05	; 5
  b4:	87 7f       	andi	r24, 0xF7	; 247
  b6:	85 b9       	out	0x05, r24	; 5
  b8:	08 95       	ret

000000ba <_Z13girarmotorA_Lv>:
}

void girarmotorA_L(void){
	 PORTB |=  (1<<1);
  ba:	85 b1       	in	r24, 0x05	; 5
  bc:	82 60       	ori	r24, 0x02	; 2
  be:	85 b9       	out	0x05, r24	; 5
	 PORTB &= ~(1<<0);
  c0:	85 b1       	in	r24, 0x05	; 5
  c2:	8e 7f       	andi	r24, 0xFE	; 254
  c4:	85 b9       	out	0x05, r24	; 5
  c6:	08 95       	ret

000000c8 <_Z13girarmotorB_Lv>:
}
void girarmotorB_L(void){
	PORTB |=  (1<<3);
  c8:	85 b1       	in	r24, 0x05	; 5
  ca:	88 60       	ori	r24, 0x08	; 8
  cc:	85 b9       	out	0x05, r24	; 5
	PORTB &= ~(1<<2);
  ce:	85 b1       	in	r24, 0x05	; 5
  d0:	8b 7f       	andi	r24, 0xFB	; 251
  d2:	85 b9       	out	0x05, r24	; 5
  d4:	08 95       	ret

000000d6 <_Z12frenarmotorAv>:
}

void frenarmotorA(void){
	PORTB |=  (1<<0);
  d6:	85 b1       	in	r24, 0x05	; 5
  d8:	81 60       	ori	r24, 0x01	; 1
  da:	85 b9       	out	0x05, r24	; 5
	PORTB |=  (1<<1);
  dc:	85 b1       	in	r24, 0x05	; 5
  de:	82 60       	ori	r24, 0x02	; 2
  e0:	85 b9       	out	0x05, r24	; 5
  e2:	08 95       	ret

000000e4 <_Z12frenarmotorBv>:
}
void frenarmotorB(void){
	PORTB &=  ~(1<<2);
  e4:	85 b1       	in	r24, 0x05	; 5
  e6:	8b 7f       	andi	r24, 0xFB	; 251
  e8:	85 b9       	out	0x05, r24	; 5
	PORTB &=  ~(1<<3);
  ea:	85 b1       	in	r24, 0x05	; 5
  ec:	87 7f       	andi	r24, 0xF7	; 247
  ee:	85 b9       	out	0x05, r24	; 5
  f0:	08 95       	ret

000000f2 <main>:


int main(void)
{
	
    DDRB = 0x0F;
  f2:	8f e0       	ldi	r24, 0x0F	; 15
  f4:	84 b9       	out	0x04, r24	; 4
	
    while (1) 
    {
		girarmotorA_R();
  f6:	d3 df       	rcall	.-90     	; 0x9e <_Z13girarmotorA_Rv>
		girarmotorB_L();
  f8:	e7 df       	rcall	.-50     	; 0xc8 <_Z13girarmotorB_Lv>
  fa:	2f ef       	ldi	r18, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  fc:	83 ed       	ldi	r24, 0xD3	; 211
  fe:	90 e3       	ldi	r25, 0x30	; 48
 100:	21 50       	subi	r18, 0x01	; 1
 102:	80 40       	sbci	r24, 0x00	; 0
 104:	90 40       	sbci	r25, 0x00	; 0
 106:	e1 f7       	brne	.-8      	; 0x100 <main+0xe>
 108:	00 c0       	rjmp	.+0      	; 0x10a <main+0x18>
 10a:	00 00       	nop
		_delay_ms(2000);
		
		girarmotorA_L();
 10c:	d6 df       	rcall	.-84     	; 0xba <_Z13girarmotorA_Lv>
 10e:	ce df       	rcall	.-100    	; 0xac <_Z13girarmotorB_Rv>
		girarmotorB_R();
 110:	2f ef       	ldi	r18, 0xFF	; 255
 112:	83 ed       	ldi	r24, 0xD3	; 211
 114:	90 e3       	ldi	r25, 0x30	; 48
 116:	21 50       	subi	r18, 0x01	; 1
 118:	80 40       	sbci	r24, 0x00	; 0
 11a:	90 40       	sbci	r25, 0x00	; 0
 11c:	e1 f7       	brne	.-8      	; 0x116 <main+0x24>
 11e:	00 c0       	rjmp	.+0      	; 0x120 <main+0x2e>
 120:	00 00       	nop
		_delay_ms(2000);
		
		frenarmotorB();
 122:	e0 df       	rcall	.-64     	; 0xe4 <_Z12frenarmotorBv>
 124:	d8 df       	rcall	.-80     	; 0xd6 <_Z12frenarmotorAv>
		frenarmotorA();
 126:	2f ef       	ldi	r18, 0xFF	; 255
 128:	83 ed       	ldi	r24, 0xD3	; 211
 12a:	90 e3       	ldi	r25, 0x30	; 48
 12c:	21 50       	subi	r18, 0x01	; 1
 12e:	80 40       	sbci	r24, 0x00	; 0
 130:	90 40       	sbci	r25, 0x00	; 0
 132:	e1 f7       	brne	.-8      	; 0x12c <main+0x3a>
 134:	00 c0       	rjmp	.+0      	; 0x136 <main+0x44>
 136:	00 00       	nop
 138:	de cf       	rjmp	.-68     	; 0xf6 <main+0x4>

0000013a <_exit>:
 13a:	f8 94       	cli

0000013c <__stop_program>:
 13c:	ff cf       	rjmp	.-2      	; 0x13c <__stop_program>
