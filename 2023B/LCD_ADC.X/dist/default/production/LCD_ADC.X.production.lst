

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Sep 15 10:18:59 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1939
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2,group=3
    51                           	psect	text28,local,class=CODE,merge=1,delta=2,group=3
    52                           	psect	text29,local,class=CODE,merge=1,delta=2,group=3
    53                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    70                           	dabs	1,0x7E,2
    71  0000                     
    72                           ; Version 2.40
    73                           ; Generated 17/11/2021 GMT
    74                           ; 
    75                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution. Publication is not required when
    89                           ;        this file is used in an embedded application.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC16F1939 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0015                     	;# 
   128  0016                     	;# 
   129  0016                     	;# 
   130  0017                     	;# 
   131  0018                     	;# 
   132  0019                     	;# 
   133  001A                     	;# 
   134  001B                     	;# 
   135  001C                     	;# 
   136  001E                     	;# 
   137  001F                     	;# 
   138  008C                     	;# 
   139  008D                     	;# 
   140  008E                     	;# 
   141  008F                     	;# 
   142  0090                     	;# 
   143  0091                     	;# 
   144  0092                     	;# 
   145  0093                     	;# 
   146  0095                     	;# 
   147  0096                     	;# 
   148  0097                     	;# 
   149  0098                     	;# 
   150  0099                     	;# 
   151  009A                     	;# 
   152  009B                     	;# 
   153  009B                     	;# 
   154  009C                     	;# 
   155  009D                     	;# 
   156  009E                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  0110                     	;# 
   162  0111                     	;# 
   163  0112                     	;# 
   164  0113                     	;# 
   165  0114                     	;# 
   166  0115                     	;# 
   167  0116                     	;# 
   168  0117                     	;# 
   169  0118                     	;# 
   170  0119                     	;# 
   171  011A                     	;# 
   172  011B                     	;# 
   173  011D                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176  018F                     	;# 
   177  0190                     	;# 
   178  0191                     	;# 
   179  0191                     	;# 
   180  0192                     	;# 
   181  0193                     	;# 
   182  0193                     	;# 
   183  0193                     	;# 
   184  0194                     	;# 
   185  0195                     	;# 
   186  0196                     	;# 
   187  0199                     	;# 
   188  019A                     	;# 
   189  019B                     	;# 
   190  019B                     	;# 
   191  019B                     	;# 
   192  019B                     	;# 
   193  019C                     	;# 
   194  019C                     	;# 
   195  019D                     	;# 
   196  019E                     	;# 
   197  019F                     	;# 
   198  020D                     	;# 
   199  0210                     	;# 
   200  0211                     	;# 
   201  0212                     	;# 
   202  0213                     	;# 
   203  0214                     	;# 
   204  0215                     	;# 
   205  0215                     	;# 
   206  0216                     	;# 
   207  0217                     	;# 
   208  0291                     	;# 
   209  0291                     	;# 
   210  0292                     	;# 
   211  0293                     	;# 
   212  0294                     	;# 
   213  0295                     	;# 
   214  0295                     	;# 
   215  0296                     	;# 
   216  0298                     	;# 
   217  0298                     	;# 
   218  0299                     	;# 
   219  029A                     	;# 
   220  029B                     	;# 
   221  029C                     	;# 
   222  029C                     	;# 
   223  029D                     	;# 
   224  029E                     	;# 
   225  029F                     	;# 
   226  0311                     	;# 
   227  0311                     	;# 
   228  0312                     	;# 
   229  0313                     	;# 
   230  0314                     	;# 
   231  0315                     	;# 
   232  0315                     	;# 
   233  0316                     	;# 
   234  0318                     	;# 
   235  0318                     	;# 
   236  0319                     	;# 
   237  031A                     	;# 
   238  031C                     	;# 
   239  031C                     	;# 
   240  031D                     	;# 
   241  031E                     	;# 
   242  0394                     	;# 
   243  0395                     	;# 
   244  0396                     	;# 
   245  0415                     	;# 
   246  0416                     	;# 
   247  0417                     	;# 
   248  041C                     	;# 
   249  041D                     	;# 
   250  041E                     	;# 
   251  0791                     	;# 
   252  0792                     	;# 
   253  0793                     	;# 
   254  0794                     	;# 
   255  0795                     	;# 
   256  0798                     	;# 
   257  0799                     	;# 
   258  079A                     	;# 
   259  07A0                     	;# 
   260  07A1                     	;# 
   261  07A2                     	;# 
   262  07A3                     	;# 
   263  07A4                     	;# 
   264  07A5                     	;# 
   265  07A6                     	;# 
   266  07A7                     	;# 
   267  07A8                     	;# 
   268  07A9                     	;# 
   269  07AA                     	;# 
   270  07AB                     	;# 
   271  0FE4                     	;# 
   272  0FE5                     	;# 
   273  0FE6                     	;# 
   274  0FE7                     	;# 
   275  0FE8                     	;# 
   276  0FE9                     	;# 
   277  0FEA                     	;# 
   278  0FEB                     	;# 
   279  0FED                     	;# 
   280  0FEE                     	;# 
   281  0FEF                     	;# 
   282  0000                     	;# 
   283  0001                     	;# 
   284  0002                     	;# 
   285  0003                     	;# 
   286  0004                     	;# 
   287  0005                     	;# 
   288  0006                     	;# 
   289  0007                     	;# 
   290  0008                     	;# 
   291  0009                     	;# 
   292  000A                     	;# 
   293  000B                     	;# 
   294  000C                     	;# 
   295  000D                     	;# 
   296  000E                     	;# 
   297  000F                     	;# 
   298  0010                     	;# 
   299  0011                     	;# 
   300  0012                     	;# 
   301  0013                     	;# 
   302  0015                     	;# 
   303  0016                     	;# 
   304  0016                     	;# 
   305  0017                     	;# 
   306  0018                     	;# 
   307  0019                     	;# 
   308  001A                     	;# 
   309  001B                     	;# 
   310  001C                     	;# 
   311  001E                     	;# 
   312  001F                     	;# 
   313  008C                     	;# 
   314  008D                     	;# 
   315  008E                     	;# 
   316  008F                     	;# 
   317  0090                     	;# 
   318  0091                     	;# 
   319  0092                     	;# 
   320  0093                     	;# 
   321  0095                     	;# 
   322  0096                     	;# 
   323  0097                     	;# 
   324  0098                     	;# 
   325  0099                     	;# 
   326  009A                     	;# 
   327  009B                     	;# 
   328  009B                     	;# 
   329  009C                     	;# 
   330  009D                     	;# 
   331  009E                     	;# 
   332  010C                     	;# 
   333  010D                     	;# 
   334  010E                     	;# 
   335  010F                     	;# 
   336  0110                     	;# 
   337  0111                     	;# 
   338  0112                     	;# 
   339  0113                     	;# 
   340  0114                     	;# 
   341  0115                     	;# 
   342  0116                     	;# 
   343  0117                     	;# 
   344  0118                     	;# 
   345  0119                     	;# 
   346  011A                     	;# 
   347  011B                     	;# 
   348  011D                     	;# 
   349  018C                     	;# 
   350  018D                     	;# 
   351  018F                     	;# 
   352  0190                     	;# 
   353  0191                     	;# 
   354  0191                     	;# 
   355  0192                     	;# 
   356  0193                     	;# 
   357  0193                     	;# 
   358  0193                     	;# 
   359  0194                     	;# 
   360  0195                     	;# 
   361  0196                     	;# 
   362  0199                     	;# 
   363  019A                     	;# 
   364  019B                     	;# 
   365  019B                     	;# 
   366  019B                     	;# 
   367  019B                     	;# 
   368  019C                     	;# 
   369  019C                     	;# 
   370  019D                     	;# 
   371  019E                     	;# 
   372  019F                     	;# 
   373  020D                     	;# 
   374  0210                     	;# 
   375  0211                     	;# 
   376  0212                     	;# 
   377  0213                     	;# 
   378  0214                     	;# 
   379  0215                     	;# 
   380  0215                     	;# 
   381  0216                     	;# 
   382  0217                     	;# 
   383  0291                     	;# 
   384  0291                     	;# 
   385  0292                     	;# 
   386  0293                     	;# 
   387  0294                     	;# 
   388  0295                     	;# 
   389  0295                     	;# 
   390  0296                     	;# 
   391  0298                     	;# 
   392  0298                     	;# 
   393  0299                     	;# 
   394  029A                     	;# 
   395  029B                     	;# 
   396  029C                     	;# 
   397  029C                     	;# 
   398  029D                     	;# 
   399  029E                     	;# 
   400  029F                     	;# 
   401  0311                     	;# 
   402  0311                     	;# 
   403  0312                     	;# 
   404  0313                     	;# 
   405  0314                     	;# 
   406  0315                     	;# 
   407  0315                     	;# 
   408  0316                     	;# 
   409  0318                     	;# 
   410  0318                     	;# 
   411  0319                     	;# 
   412  031A                     	;# 
   413  031C                     	;# 
   414  031C                     	;# 
   415  031D                     	;# 
   416  031E                     	;# 
   417  0394                     	;# 
   418  0395                     	;# 
   419  0396                     	;# 
   420  0415                     	;# 
   421  0416                     	;# 
   422  0417                     	;# 
   423  041C                     	;# 
   424  041D                     	;# 
   425  041E                     	;# 
   426  0791                     	;# 
   427  0792                     	;# 
   428  0793                     	;# 
   429  0794                     	;# 
   430  0795                     	;# 
   431  0798                     	;# 
   432  0799                     	;# 
   433  079A                     	;# 
   434  07A0                     	;# 
   435  07A1                     	;# 
   436  07A2                     	;# 
   437  07A3                     	;# 
   438  07A4                     	;# 
   439  07A5                     	;# 
   440  07A6                     	;# 
   441  07A7                     	;# 
   442  07A8                     	;# 
   443  07A9                     	;# 
   444  07AA                     	;# 
   445  07AB                     	;# 
   446  0FE4                     	;# 
   447  0FE5                     	;# 
   448  0FE6                     	;# 
   449  0FE7                     	;# 
   450  0FE8                     	;# 
   451  0FE9                     	;# 
   452  0FEA                     	;# 
   453  0FEB                     	;# 
   454  0FED                     	;# 
   455  0FEE                     	;# 
   456  0FEF                     	;# 
   457  0000                     	;# 
   458  0001                     	;# 
   459  0002                     	;# 
   460  0003                     	;# 
   461  0004                     	;# 
   462  0005                     	;# 
   463  0006                     	;# 
   464  0007                     	;# 
   465  0008                     	;# 
   466  0009                     	;# 
   467  000A                     	;# 
   468  000B                     	;# 
   469  000C                     	;# 
   470  000D                     	;# 
   471  000E                     	;# 
   472  000F                     	;# 
   473  0010                     	;# 
   474  0011                     	;# 
   475  0012                     	;# 
   476  0013                     	;# 
   477  0015                     	;# 
   478  0016                     	;# 
   479  0016                     	;# 
   480  0017                     	;# 
   481  0018                     	;# 
   482  0019                     	;# 
   483  001A                     	;# 
   484  001B                     	;# 
   485  001C                     	;# 
   486  001E                     	;# 
   487  001F                     	;# 
   488  008C                     	;# 
   489  008D                     	;# 
   490  008E                     	;# 
   491  008F                     	;# 
   492  0090                     	;# 
   493  0091                     	;# 
   494  0092                     	;# 
   495  0093                     	;# 
   496  0095                     	;# 
   497  0096                     	;# 
   498  0097                     	;# 
   499  0098                     	;# 
   500  0099                     	;# 
   501  009A                     	;# 
   502  009B                     	;# 
   503  009B                     	;# 
   504  009C                     	;# 
   505  009D                     	;# 
   506  009E                     	;# 
   507  010C                     	;# 
   508  010D                     	;# 
   509  010E                     	;# 
   510  010F                     	;# 
   511  0110                     	;# 
   512  0111                     	;# 
   513  0112                     	;# 
   514  0113                     	;# 
   515  0114                     	;# 
   516  0115                     	;# 
   517  0116                     	;# 
   518  0117                     	;# 
   519  0118                     	;# 
   520  0119                     	;# 
   521  011A                     	;# 
   522  011B                     	;# 
   523  011D                     	;# 
   524  018C                     	;# 
   525  018D                     	;# 
   526  018F                     	;# 
   527  0190                     	;# 
   528  0191                     	;# 
   529  0191                     	;# 
   530  0192                     	;# 
   531  0193                     	;# 
   532  0193                     	;# 
   533  0193                     	;# 
   534  0194                     	;# 
   535  0195                     	;# 
   536  0196                     	;# 
   537  0199                     	;# 
   538  019A                     	;# 
   539  019B                     	;# 
   540  019B                     	;# 
   541  019B                     	;# 
   542  019B                     	;# 
   543  019C                     	;# 
   544  019C                     	;# 
   545  019D                     	;# 
   546  019E                     	;# 
   547  019F                     	;# 
   548  020D                     	;# 
   549  0210                     	;# 
   550  0211                     	;# 
   551  0212                     	;# 
   552  0213                     	;# 
   553  0214                     	;# 
   554  0215                     	;# 
   555  0215                     	;# 
   556  0216                     	;# 
   557  0217                     	;# 
   558  0291                     	;# 
   559  0291                     	;# 
   560  0292                     	;# 
   561  0293                     	;# 
   562  0294                     	;# 
   563  0295                     	;# 
   564  0295                     	;# 
   565  0296                     	;# 
   566  0298                     	;# 
   567  0298                     	;# 
   568  0299                     	;# 
   569  029A                     	;# 
   570  029B                     	;# 
   571  029C                     	;# 
   572  029C                     	;# 
   573  029D                     	;# 
   574  029E                     	;# 
   575  029F                     	;# 
   576  0311                     	;# 
   577  0311                     	;# 
   578  0312                     	;# 
   579  0313                     	;# 
   580  0314                     	;# 
   581  0315                     	;# 
   582  0315                     	;# 
   583  0316                     	;# 
   584  0318                     	;# 
   585  0318                     	;# 
   586  0319                     	;# 
   587  031A                     	;# 
   588  031C                     	;# 
   589  031C                     	;# 
   590  031D                     	;# 
   591  031E                     	;# 
   592  0394                     	;# 
   593  0395                     	;# 
   594  0396                     	;# 
   595  0415                     	;# 
   596  0416                     	;# 
   597  0417                     	;# 
   598  041C                     	;# 
   599  041D                     	;# 
   600  041E                     	;# 
   601  0791                     	;# 
   602  0792                     	;# 
   603  0793                     	;# 
   604  0794                     	;# 
   605  0795                     	;# 
   606  0798                     	;# 
   607  0799                     	;# 
   608  079A                     	;# 
   609  07A0                     	;# 
   610  07A1                     	;# 
   611  07A2                     	;# 
   612  07A3                     	;# 
   613  07A4                     	;# 
   614  07A5                     	;# 
   615  07A6                     	;# 
   616  07A7                     	;# 
   617  07A8                     	;# 
   618  07A9                     	;# 
   619  07AA                     	;# 
   620  07AB                     	;# 
   621  0FE4                     	;# 
   622  0FE5                     	;# 
   623  0FE6                     	;# 
   624  0FE7                     	;# 
   625  0FE8                     	;# 
   626  0FE9                     	;# 
   627  0FEA                     	;# 
   628  0FEB                     	;# 
   629  0FED                     	;# 
   630  0FEE                     	;# 
   631  0FEF                     	;# 
   632  0000                     	;# 
   633  0001                     	;# 
   634  0002                     	;# 
   635  0003                     	;# 
   636  0004                     	;# 
   637  0005                     	;# 
   638  0006                     	;# 
   639  0007                     	;# 
   640  0008                     	;# 
   641  0009                     	;# 
   642  000A                     	;# 
   643  000B                     	;# 
   644  000C                     	;# 
   645  000D                     	;# 
   646  000E                     	;# 
   647  000F                     	;# 
   648  0010                     	;# 
   649  0011                     	;# 
   650  0012                     	;# 
   651  0013                     	;# 
   652  0015                     	;# 
   653  0016                     	;# 
   654  0016                     	;# 
   655  0017                     	;# 
   656  0018                     	;# 
   657  0019                     	;# 
   658  001A                     	;# 
   659  001B                     	;# 
   660  001C                     	;# 
   661  001E                     	;# 
   662  001F                     	;# 
   663  008C                     	;# 
   664  008D                     	;# 
   665  008E                     	;# 
   666  008F                     	;# 
   667  0090                     	;# 
   668  0091                     	;# 
   669  0092                     	;# 
   670  0093                     	;# 
   671  0095                     	;# 
   672  0096                     	;# 
   673  0097                     	;# 
   674  0098                     	;# 
   675  0099                     	;# 
   676  009A                     	;# 
   677  009B                     	;# 
   678  009B                     	;# 
   679  009C                     	;# 
   680  009D                     	;# 
   681  009E                     	;# 
   682  010C                     	;# 
   683  010D                     	;# 
   684  010E                     	;# 
   685  010F                     	;# 
   686  0110                     	;# 
   687  0111                     	;# 
   688  0112                     	;# 
   689  0113                     	;# 
   690  0114                     	;# 
   691  0115                     	;# 
   692  0116                     	;# 
   693  0117                     	;# 
   694  0118                     	;# 
   695  0119                     	;# 
   696  011A                     	;# 
   697  011B                     	;# 
   698  011D                     	;# 
   699  018C                     	;# 
   700  018D                     	;# 
   701  018F                     	;# 
   702  0190                     	;# 
   703  0191                     	;# 
   704  0191                     	;# 
   705  0192                     	;# 
   706  0193                     	;# 
   707  0193                     	;# 
   708  0193                     	;# 
   709  0194                     	;# 
   710  0195                     	;# 
   711  0196                     	;# 
   712  0199                     	;# 
   713  019A                     	;# 
   714  019B                     	;# 
   715  019B                     	;# 
   716  019B                     	;# 
   717  019B                     	;# 
   718  019C                     	;# 
   719  019C                     	;# 
   720  019D                     	;# 
   721  019E                     	;# 
   722  019F                     	;# 
   723  020D                     	;# 
   724  0210                     	;# 
   725  0211                     	;# 
   726  0212                     	;# 
   727  0213                     	;# 
   728  0214                     	;# 
   729  0215                     	;# 
   730  0215                     	;# 
   731  0216                     	;# 
   732  0217                     	;# 
   733  0291                     	;# 
   734  0291                     	;# 
   735  0292                     	;# 
   736  0293                     	;# 
   737  0294                     	;# 
   738  0295                     	;# 
   739  0295                     	;# 
   740  0296                     	;# 
   741  0298                     	;# 
   742  0298                     	;# 
   743  0299                     	;# 
   744  029A                     	;# 
   745  029B                     	;# 
   746  029C                     	;# 
   747  029C                     	;# 
   748  029D                     	;# 
   749  029E                     	;# 
   750  029F                     	;# 
   751  0311                     	;# 
   752  0311                     	;# 
   753  0312                     	;# 
   754  0313                     	;# 
   755  0314                     	;# 
   756  0315                     	;# 
   757  0315                     	;# 
   758  0316                     	;# 
   759  0318                     	;# 
   760  0318                     	;# 
   761  0319                     	;# 
   762  031A                     	;# 
   763  031C                     	;# 
   764  031C                     	;# 
   765  031D                     	;# 
   766  031E                     	;# 
   767  0394                     	;# 
   768  0395                     	;# 
   769  0396                     	;# 
   770  0415                     	;# 
   771  0416                     	;# 
   772  0417                     	;# 
   773  041C                     	;# 
   774  041D                     	;# 
   775  041E                     	;# 
   776  0791                     	;# 
   777  0792                     	;# 
   778  0793                     	;# 
   779  0794                     	;# 
   780  0795                     	;# 
   781  0798                     	;# 
   782  0799                     	;# 
   783  079A                     	;# 
   784  07A0                     	;# 
   785  07A1                     	;# 
   786  07A2                     	;# 
   787  07A3                     	;# 
   788  07A4                     	;# 
   789  07A5                     	;# 
   790  07A6                     	;# 
   791  07A7                     	;# 
   792  07A8                     	;# 
   793  07A9                     	;# 
   794  07AA                     	;# 
   795  07AB                     	;# 
   796  0FE4                     	;# 
   797  0FE5                     	;# 
   798  0FE6                     	;# 
   799  0FE7                     	;# 
   800  0FE8                     	;# 
   801  0FE9                     	;# 
   802  0FEA                     	;# 
   803  0FEB                     	;# 
   804  0FED                     	;# 
   805  0FEE                     	;# 
   806  0FEF                     	;# 
   807  0000                     	;# 
   808  0001                     	;# 
   809  0002                     	;# 
   810  0003                     	;# 
   811  0004                     	;# 
   812  0005                     	;# 
   813  0006                     	;# 
   814  0007                     	;# 
   815  0008                     	;# 
   816  0009                     	;# 
   817  000A                     	;# 
   818  000B                     	;# 
   819  000C                     	;# 
   820  000D                     	;# 
   821  000E                     	;# 
   822  000F                     	;# 
   823  0010                     	;# 
   824  0011                     	;# 
   825  0012                     	;# 
   826  0013                     	;# 
   827  0015                     	;# 
   828  0016                     	;# 
   829  0016                     	;# 
   830  0017                     	;# 
   831  0018                     	;# 
   832  0019                     	;# 
   833  001A                     	;# 
   834  001B                     	;# 
   835  001C                     	;# 
   836  001E                     	;# 
   837  001F                     	;# 
   838  008C                     	;# 
   839  008D                     	;# 
   840  008E                     	;# 
   841  008F                     	;# 
   842  0090                     	;# 
   843  0091                     	;# 
   844  0092                     	;# 
   845  0093                     	;# 
   846  0095                     	;# 
   847  0096                     	;# 
   848  0097                     	;# 
   849  0098                     	;# 
   850  0099                     	;# 
   851  009A                     	;# 
   852  009B                     	;# 
   853  009B                     	;# 
   854  009C                     	;# 
   855  009D                     	;# 
   856  009E                     	;# 
   857  010C                     	;# 
   858  010D                     	;# 
   859  010E                     	;# 
   860  010F                     	;# 
   861  0110                     	;# 
   862  0111                     	;# 
   863  0112                     	;# 
   864  0113                     	;# 
   865  0114                     	;# 
   866  0115                     	;# 
   867  0116                     	;# 
   868  0117                     	;# 
   869  0118                     	;# 
   870  0119                     	;# 
   871  011A                     	;# 
   872  011B                     	;# 
   873  011D                     	;# 
   874  018C                     	;# 
   875  018D                     	;# 
   876  018F                     	;# 
   877  0190                     	;# 
   878  0191                     	;# 
   879  0191                     	;# 
   880  0192                     	;# 
   881  0193                     	;# 
   882  0193                     	;# 
   883  0193                     	;# 
   884  0194                     	;# 
   885  0195                     	;# 
   886  0196                     	;# 
   887  0199                     	;# 
   888  019A                     	;# 
   889  019B                     	;# 
   890  019B                     	;# 
   891  019B                     	;# 
   892  019B                     	;# 
   893  019C                     	;# 
   894  019C                     	;# 
   895  019D                     	;# 
   896  019E                     	;# 
   897  019F                     	;# 
   898  020D                     	;# 
   899  0210                     	;# 
   900  0211                     	;# 
   901  0212                     	;# 
   902  0213                     	;# 
   903  0214                     	;# 
   904  0215                     	;# 
   905  0215                     	;# 
   906  0216                     	;# 
   907  0217                     	;# 
   908  0291                     	;# 
   909  0291                     	;# 
   910  0292                     	;# 
   911  0293                     	;# 
   912  0294                     	;# 
   913  0295                     	;# 
   914  0295                     	;# 
   915  0296                     	;# 
   916  0298                     	;# 
   917  0298                     	;# 
   918  0299                     	;# 
   919  029A                     	;# 
   920  029B                     	;# 
   921  029C                     	;# 
   922  029C                     	;# 
   923  029D                     	;# 
   924  029E                     	;# 
   925  029F                     	;# 
   926  0311                     	;# 
   927  0311                     	;# 
   928  0312                     	;# 
   929  0313                     	;# 
   930  0314                     	;# 
   931  0315                     	;# 
   932  0315                     	;# 
   933  0316                     	;# 
   934  0318                     	;# 
   935  0318                     	;# 
   936  0319                     	;# 
   937  031A                     	;# 
   938  031C                     	;# 
   939  031C                     	;# 
   940  031D                     	;# 
   941  031E                     	;# 
   942  0394                     	;# 
   943  0395                     	;# 
   944  0396                     	;# 
   945  0415                     	;# 
   946  0416                     	;# 
   947  0417                     	;# 
   948  041C                     	;# 
   949  041D                     	;# 
   950  041E                     	;# 
   951  0791                     	;# 
   952  0792                     	;# 
   953  0793                     	;# 
   954  0794                     	;# 
   955  0795                     	;# 
   956  0798                     	;# 
   957  0799                     	;# 
   958  079A                     	;# 
   959  07A0                     	;# 
   960  07A1                     	;# 
   961  07A2                     	;# 
   962  07A3                     	;# 
   963  07A4                     	;# 
   964  07A5                     	;# 
   965  07A6                     	;# 
   966  07A7                     	;# 
   967  07A8                     	;# 
   968  07A9                     	;# 
   969  07AA                     	;# 
   970  07AB                     	;# 
   971  0FE4                     	;# 
   972  0FE5                     	;# 
   973  0FE6                     	;# 
   974  0FE7                     	;# 
   975  0FE8                     	;# 
   976  0FE9                     	;# 
   977  0FEA                     	;# 
   978  0FEB                     	;# 
   979  0FED                     	;# 
   980  0FEE                     	;# 
   981  0FEF                     	;# 
   982  0000                     	;# 
   983  0001                     	;# 
   984  0002                     	;# 
   985  0003                     	;# 
   986  0004                     	;# 
   987  0005                     	;# 
   988  0006                     	;# 
   989  0007                     	;# 
   990  0008                     	;# 
   991  0009                     	;# 
   992  000A                     	;# 
   993  000B                     	;# 
   994  000C                     	;# 
   995  000D                     	;# 
   996  000E                     	;# 
   997  000F                     	;# 
   998  0010                     	;# 
   999  0011                     	;# 
  1000  0012                     	;# 
  1001  0013                     	;# 
  1002  0015                     	;# 
  1003  0016                     	;# 
  1004  0016                     	;# 
  1005  0017                     	;# 
  1006  0018                     	;# 
  1007  0019                     	;# 
  1008  001A                     	;# 
  1009  001B                     	;# 
  1010  001C                     	;# 
  1011  001E                     	;# 
  1012  001F                     	;# 
  1013  008C                     	;# 
  1014  008D                     	;# 
  1015  008E                     	;# 
  1016  008F                     	;# 
  1017  0090                     	;# 
  1018  0091                     	;# 
  1019  0092                     	;# 
  1020  0093                     	;# 
  1021  0095                     	;# 
  1022  0096                     	;# 
  1023  0097                     	;# 
  1024  0098                     	;# 
  1025  0099                     	;# 
  1026  009A                     	;# 
  1027  009B                     	;# 
  1028  009B                     	;# 
  1029  009C                     	;# 
  1030  009D                     	;# 
  1031  009E                     	;# 
  1032  010C                     	;# 
  1033  010D                     	;# 
  1034  010E                     	;# 
  1035  010F                     	;# 
  1036  0110                     	;# 
  1037  0111                     	;# 
  1038  0112                     	;# 
  1039  0113                     	;# 
  1040  0114                     	;# 
  1041  0115                     	;# 
  1042  0116                     	;# 
  1043  0117                     	;# 
  1044  0118                     	;# 
  1045  0119                     	;# 
  1046  011A                     	;# 
  1047  011B                     	;# 
  1048  011D                     	;# 
  1049  018C                     	;# 
  1050  018D                     	;# 
  1051  018F                     	;# 
  1052  0190                     	;# 
  1053  0191                     	;# 
  1054  0191                     	;# 
  1055  0192                     	;# 
  1056  0193                     	;# 
  1057  0193                     	;# 
  1058  0193                     	;# 
  1059  0194                     	;# 
  1060  0195                     	;# 
  1061  0196                     	;# 
  1062  0199                     	;# 
  1063  019A                     	;# 
  1064  019B                     	;# 
  1065  019B                     	;# 
  1066  019B                     	;# 
  1067  019B                     	;# 
  1068  019C                     	;# 
  1069  019C                     	;# 
  1070  019D                     	;# 
  1071  019E                     	;# 
  1072  019F                     	;# 
  1073  020D                     	;# 
  1074  0210                     	;# 
  1075  0211                     	;# 
  1076  0212                     	;# 
  1077  0213                     	;# 
  1078  0214                     	;# 
  1079  0215                     	;# 
  1080  0215                     	;# 
  1081  0216                     	;# 
  1082  0217                     	;# 
  1083  0291                     	;# 
  1084  0291                     	;# 
  1085  0292                     	;# 
  1086  0293                     	;# 
  1087  0294                     	;# 
  1088  0295                     	;# 
  1089  0295                     	;# 
  1090  0296                     	;# 
  1091  0298                     	;# 
  1092  0298                     	;# 
  1093  0299                     	;# 
  1094  029A                     	;# 
  1095  029B                     	;# 
  1096  029C                     	;# 
  1097  029C                     	;# 
  1098  029D                     	;# 
  1099  029E                     	;# 
  1100  029F                     	;# 
  1101  0311                     	;# 
  1102  0311                     	;# 
  1103  0312                     	;# 
  1104  0313                     	;# 
  1105  0314                     	;# 
  1106  0315                     	;# 
  1107  0315                     	;# 
  1108  0316                     	;# 
  1109  0318                     	;# 
  1110  0318                     	;# 
  1111  0319                     	;# 
  1112  031A                     	;# 
  1113  031C                     	;# 
  1114  031C                     	;# 
  1115  031D                     	;# 
  1116  031E                     	;# 
  1117  0394                     	;# 
  1118  0395                     	;# 
  1119  0396                     	;# 
  1120  0415                     	;# 
  1121  0416                     	;# 
  1122  0417                     	;# 
  1123  041C                     	;# 
  1124  041D                     	;# 
  1125  041E                     	;# 
  1126  0791                     	;# 
  1127  0792                     	;# 
  1128  0793                     	;# 
  1129  0794                     	;# 
  1130  0795                     	;# 
  1131  0798                     	;# 
  1132  0799                     	;# 
  1133  079A                     	;# 
  1134  07A0                     	;# 
  1135  07A1                     	;# 
  1136  07A2                     	;# 
  1137  07A3                     	;# 
  1138  07A4                     	;# 
  1139  07A5                     	;# 
  1140  07A6                     	;# 
  1141  07A7                     	;# 
  1142  07A8                     	;# 
  1143  07A9                     	;# 
  1144  07AA                     	;# 
  1145  07AB                     	;# 
  1146  0FE4                     	;# 
  1147  0FE5                     	;# 
  1148  0FE6                     	;# 
  1149  0FE7                     	;# 
  1150  0FE8                     	;# 
  1151  0FE9                     	;# 
  1152  0FEA                     	;# 
  1153  0FEB                     	;# 
  1154  0FED                     	;# 
  1155  0FEE                     	;# 
  1156  0FEF                     	;# 
  1157                           
  1158                           	psect	idataBANK2
  1159  1E40                     __pidataBANK2:
  1160                           
  1161                           ;initializer for _strText
  1162  1E40  3420               	retlw	32
  1163  1E41  3400               	retlw	0
  1164  1E42  3400               	retlw	0
  1165  1E43  3400               	retlw	0
  1166  1E44  3400               	retlw	0
  1167  1E45  3400               	retlw	0
  1168  1E46  3400               	retlw	0
  1169  1E47  3400               	retlw	0
  1170  1E48  3400               	retlw	0
  1171  1E49  3400               	retlw	0
  1172  1E4A  3400               	retlw	0
  1173  1E4B  3400               	retlw	0
  1174  1E4C  3400               	retlw	0
  1175  1E4D  3400               	retlw	0
  1176  1E4E  3400               	retlw	0
  1177  1E4F  3400               	retlw	0
  1178  1E50  3400               	retlw	0
  1179  1E51  3400               	retlw	0
  1180  1E52  3400               	retlw	0
  1181  1E53  3400               	retlw	0
  1182  008F                     _TRISDbits	set	143
  1183  009D                     _ADCON0bits	set	157
  1184  009D                     _ADCON0	set	157
  1185  009C                     _ADRESH	set	156
  1186  009B                     _ADRESL	set	155
  1187  009E                     _ADCON1	set	158
  1188  0095                     _OPTION_REGbits	set	149
  1189  008F                     _TRISD	set	143
  1190  008E                     _TRISC	set	142
  1191  008D                     _TRISB	set	141
  1192  008C                     _TRISA	set	140
  1193  0090                     _TRISE	set	144
  1194  0097                     _WDTCON	set	151
  1195  0098                     _OSCTUNE	set	152
  1196  0099                     _OSCCON	set	153
  1197  04D6                     _PLLR	set	1238
  1198  010F                     _LATDbits	set	271
  1199  011D                     _APFCON	set	285
  1200  010E                     _LATC	set	270
  1201  010D                     _LATB	set	269
  1202  010C                     _LATA	set	268
  1203  010F                     _LATD	set	271
  1204  0110                     _LATE	set	272
  1205  0116                     _BORCON	set	278
  1206  018C                     _ANSELA	set	396
  1207  0190                     _ANSELE	set	400
  1208  018D                     _ANSELB	set	397
  1209  018F                     _ANSELD	set	399
  1210  020D                     _WPUB	set	525
  1211  0210                     _WPUE	set	528
  1212                           
  1213                           	psect	stringtext1
  1214  2000                     __pstringtext1:
  1215  2000                     STR_1:
  1216  2000  3474               	retlw	116	;'t'
  1217  2001  3465               	retlw	101	;'e'
  1218  2002  346D               	retlw	109	;'m'
  1219  2003  3470               	retlw	112	;'p'
  1220  2004  343A               	retlw	58	;':'
  1221  2005  3420               	retlw	32	;' '
  1222  2006  3425               	retlw	37	;'%'
  1223  2007  3436               	retlw	54	;'6'
  1224  2008  342E               	retlw	46	;'.'
  1225  2009  3431               	retlw	49	;'1'
  1226  200A  3466               	retlw	102	;'f'
  1227  200B  3400               	retlw	0
  1228                           
  1229                           	psect	stringtext2
  1230  200C                     __pstringtext2:
  1231  200C                     STR_2:
  1232  200C  3449               	retlw	73	;'I'
  1233  200D  344E               	retlw	78	;'N'
  1234  200E  3446               	retlw	70	;'F'
  1235  200F  3400               	retlw	0
  1236                           
  1237                           	psect	stringtext3
  1238  2010                     __pstringtext3:
  1239  2010                     STR_6:
  1240  2010  344E               	retlw	78	;'N'
  1241  2011  3441               	retlw	65	;'A'
  1242  2012  344E               	retlw	78	;'N'
  1243  2013  3400               	retlw	0
  1244                           
  1245                           	psect	stringtext4
  1246  2014                     __pstringtext4:
  1247  2014                     STR_3:
  1248  2014  3469               	retlw	105	;'i'
  1249  2015  346E               	retlw	110	;'n'
  1250  2016  3466               	retlw	102	;'f'
  1251  2017  3400               	retlw	0
  1252                           
  1253                           	psect	stringtext5
  1254  2018                     __pstringtext5:
  1255  2018                     STR_7:
  1256  2018  346E               	retlw	110	;'n'
  1257  2019  3461               	retlw	97	;'a'
  1258  201A  346E               	retlw	110	;'n'
  1259  201B  3400               	retlw	0
  1260                           
  1261                           	psect	stringtext6
  1262  201C                     __pstringtext6:
  1263  201C                     STR_10:
  1264  201C  346C               	retlw	108	;'l'
  1265  201D  3466               	retlw	102	;'f'
  1266  201E  3400               	retlw	0
  1267                           
  1268                           	psect	stringtext7
  1269  0000                     __pstringtext7:
  1270  201C                     
  1271                           	psect	cinit
  1272  07D5                     start_initialization:	
  1273                           ; #config settings
  1274                           
  1275  07D5                     __initialization:
  1276                           
  1277                           ; Initialize objects allocated to BANK2
  1278  07D5  3040               	movlw	low __pidataBANK2
  1279  07D6  0084               	movwf	4
  1280  07D7  309E               	movlw	(high __pidataBANK2)| (0+128)
  1281  07D8  0085               	movwf	5
  1282  07D9  3020               	movlw	low __pdataBANK2
  1283  07DA  0086               	movwf	6
  1284  07DB  3001               	movlw	high __pdataBANK2
  1285  07DC  0087               	movwf	7
  1286  07DD  3014               	movlw	20
  1287  07DE  3180  2004  3187   	fcall	init_ram
  1288                           
  1289                           ; Clear objects allocated to BANK0
  1290  07E1  01EC               	clrf	__pbssBANK0& (0+127)
  1291  07E2  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  1292  07E3  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  1293  07E4  01EF               	clrf	(__pbssBANK0+3)& (0+127)
  1294                           
  1295                           ; Clear objects allocated to BANK1
  1296  07E5  30DF               	movlw	low __pbssBANK1
  1297  07E6  0084               	movwf	4
  1298  07E7  3000               	movlw	high __pbssBANK1
  1299  07E8  0085               	movwf	5
  1300  07E9  300E               	movlw	14
  1301  07EA  319E  261B  3187   	fcall	clear_ram0
  1302                           
  1303                           ; Clear objects allocated to BANK2
  1304  07ED  3034               	movlw	low __pbssBANK2
  1305  07EE  0084               	movwf	4
  1306  07EF  3001               	movlw	high __pbssBANK2
  1307  07F0  0085               	movwf	5
  1308  07F1  300C               	movlw	12
  1309  07F2  319E  261B  3187   	fcall	clear_ram0
  1310                           
  1311                           ; Clear objects allocated to BANK3
  1312  07F5  30A0               	movlw	low __pbssBANK3
  1313  07F6  0084               	movwf	4
  1314  07F7  3001               	movlw	high __pbssBANK3
  1315  07F8  0085               	movwf	5
  1316  07F9  3050               	movlw	80
  1317  07FA  319E  261B  3187   	fcall	clear_ram0
  1318  07FD                     end_of_initialization:	
  1319                           ;End of C runtime variable initialization code
  1320                           
  1321  07FD                     __end_of__initialization:
  1322  07FD  0020               	movlb	0
  1323  07FE  3195  2D67         	ljmp	_main	;jump to C main() function
  1324                           
  1325                           	psect	bssBANK0
  1326  006C                     __pbssBANK0:
  1327  006C                     _prec:
  1328  006C                     	ds	2
  1329  006E                     _flags:
  1330  006E                     	ds	2
  1331                           
  1332                           	psect	bssBANK1
  1333  00DF                     __pbssBANK1:
  1334  00DF                     ___fpclassifyf@F465:
  1335  00DF                     	ds	4
  1336  00E3                     _nout:
  1337  00E3                     	ds	2
  1338  00E5                     _width:
  1339  00E5                     	ds	2
  1340  00E7                     _ADC_InterruptHandler:
  1341  00E7                     	ds	2
  1342  00E9                     _temp:
  1343  00E9                     	ds	4
  1344                           
  1345                           	psect	bssBANK2
  1346  0134                     __pbssBANK2:
  1347  0134                     floorf@F526:
  1348  0134                     	ds	4
  1349  0138                     _ekg:
  1350  0138                     	ds	4
  1351  013C                     _pot:
  1352  013C                     	ds	4
  1353                           
  1354                           	psect	dataBANK2
  1355  0120                     __pdataBANK2:
  1356  0120                     _strText:
  1357  0120                     	ds	20
  1358                           
  1359                           	psect	bssBANK3
  1360  01A0                     __pbssBANK3:
  1361  01A0                     _dbuf:
  1362  01A0                     	ds	80
  1363                           
  1364                           	psect	inittext
  1365  0004                     init_ram:
  1366  0004  00FE               	movwf	btemp
  1367  0005                     initloop:
  1368  0005  0012               	moviw fsr0++
  1369  0006  001E               	movwi fsr1++
  1370  0007  0BFE               	decfsz	btemp,f
  1371  0008  2805               	goto	initloop
  1372  0009  3400               	retlw	0
  1373                           
  1374                           	psect	clrtext
  1375  1E1B                     clear_ram0:	
  1376                           ;	Called with FSR0 containing the base address, and
  1377                           ;	WREG with the size to clear
  1378                           
  1379  1E1B  0064               	clrwdt	;clear the watchdog before getting into this loop
  1380  1E1C                     clrloop0:
  1381  1E1C  0180               	clrf	0	;clear RAM location pointed to by FSR
  1382  1E1D  3101               	addfsr 0,1
  1383  1E1E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1384  1E1F  2E1C               	goto	clrloop0	;have we reached the end yet?
  1385  1E20  3400               	retlw	0	;all done for this memory range, return
  1386                           
  1387                           	psect	cstackBANK1
  1388  00A0                     __pcstackBANK1:
  1389  00A0                     _efgtoa$926:
  1390                           
  1391                           ; 2 bytes @ 0x0
  1392  00A0                     	ds	2
  1393  00A2                     _efgtoa$934:
  1394                           
  1395                           ; 2 bytes @ 0x2
  1396  00A2                     	ds	2
  1397  00A4                     _efgtoa$935:
  1398                           
  1399                           ; 2 bytes @ 0x4
  1400  00A4                     	ds	2
  1401  00A6                     efgtoa@t:
  1402                           
  1403                           ; 2 bytes @ 0x6
  1404  00A6                     	ds	2
  1405  00A8                     efgtoa@pp:
  1406                           
  1407                           ; 2 bytes @ 0x8
  1408  00A8                     	ds	2
  1409  00AA                     efgtoa@ne:
  1410                           
  1411                           ; 2 bytes @ 0xA
  1412  00AA                     	ds	2
  1413  00AC                     efgtoa@m:
  1414                           
  1415                           ; 2 bytes @ 0xC
  1416  00AC                     	ds	2
  1417  00AE                     efgtoa@ou:
  1418                           
  1419                           ; 4 bytes @ 0xE
  1420  00AE                     	ds	4
  1421  00B2                     efgtoa@d:
  1422                           
  1423                           ; 2 bytes @ 0x12
  1424  00B2                     	ds	2
  1425  00B4                     efgtoa@sign:
  1426                           
  1427                           ; 2 bytes @ 0x14
  1428  00B4                     	ds	2
  1429  00B6                     efgtoa@fp:
  1430                           
  1431                           ; 1 bytes @ 0x16
  1432  00B6                     	ds	1
  1433  00B7                     efgtoa@p:
  1434                           
  1435                           ; 2 bytes @ 0x17
  1436  00B7                     	ds	2
  1437  00B9                     efgtoa@w:
  1438                           
  1439                           ; 2 bytes @ 0x19
  1440  00B9                     	ds	2
  1441  00BB                     efgtoa@nmode:
  1442                           
  1443                           ; 1 bytes @ 0x1B
  1444  00BB                     	ds	1
  1445  00BC                     efgtoa@mode:
  1446                           
  1447                           ; 1 bytes @ 0x1C
  1448  00BC                     	ds	1
  1449  00BD                     efgtoa@h:
  1450                           
  1451                           ; 4 bytes @ 0x1D
  1452  00BD                     	ds	4
  1453  00C1                     efgtoa@l:
  1454                           
  1455                           ; 4 bytes @ 0x21
  1456  00C1                     	ds	4
  1457  00C5                     efgtoa@i:
  1458                           
  1459                           ; 2 bytes @ 0x25
  1460  00C5                     	ds	2
  1461  00C7                     efgtoa@g:
  1462                           
  1463                           ; 4 bytes @ 0x27
  1464  00C7                     	ds	4
  1465  00CB                     efgtoa@e:
  1466                           
  1467                           ; 2 bytes @ 0x2B
  1468  00CB                     	ds	2
  1469  00CD                     efgtoa@n:
  1470                           
  1471                           ; 2 bytes @ 0x2D
  1472  00CD                     	ds	2
  1473  00CF                     efgtoa@u:
  1474                           
  1475                           ; 4 bytes @ 0x2F
  1476  00CF                     	ds	4
  1477  00D3                     sprintf@s:
  1478                           
  1479                           ; 1 bytes @ 0x33
  1480  00D3                     	ds	1
  1481  00D4                     sprintf@ap:
  1482                           
  1483                           ; 1 bytes @ 0x34
  1484  00D4                     	ds	1
  1485  00D5                     sprintf@f:
  1486                           
  1487                           ; 10 bytes @ 0x35
  1488  00D5                     	ds	10
  1489                           
  1490                           	psect	cstackCOMMON
  1491  0070                     __pcstackCOMMON:
  1492  0070                     ?___fleq:
  1493  0070                     ?_PIN_MANAGER_Initialize:	
  1494                           ; 1 bit 
  1495                           
  1496  0070                     ??_PIN_MANAGER_Initialize:	
  1497                           ; 1 bytes @ 0x0
  1498                           
  1499  0070                     ?_OSCILLATOR_Initialize:	
  1500                           ; 1 bytes @ 0x0
  1501                           
  1502  0070                     ??_OSCILLATOR_Initialize:	
  1503                           ; 1 bytes @ 0x0
  1504                           
  1505  0070                     ?_WDT_Initialize:	
  1506                           ; 1 bytes @ 0x0
  1507                           
  1508  0070                     ??_WDT_Initialize:	
  1509                           ; 1 bytes @ 0x0
  1510                           
  1511  0070                     ?_ADC_Initialize:	
  1512                           ; 1 bytes @ 0x0
  1513                           
  1514  0070                     ??_ADC_Initialize:	
  1515                           ; 1 bytes @ 0x0
  1516                           
  1517  0070                     ?_LCD_Init:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520  0070                     ?_LCD_Cmd:	
  1521                           ; 1 bytes @ 0x0
  1522                           
  1523  0070                     ?_strcpy:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526  0070                     ?_putch:	
  1527                           ; 1 bytes @ 0x0
  1528                           
  1529  0070                     ??_putch:	
  1530                           ; 1 bytes @ 0x0
  1531                           
  1532  0070                     ?_SYSTEM_Initialize:	
  1533                           ; 1 bytes @ 0x0
  1534                           
  1535  0070                     ??_SYSTEM_Initialize:	
  1536                           ; 1 bytes @ 0x0
  1537                           
  1538  0070                     ?_main:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541  0070                     ?_Load_Cmd:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544  0070                     ??_Load_Cmd:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  0070                     ?_Load_Data:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     ??_Load_Data:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0070                     ?_LCD_Write_Cp:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     ?__Umul8_16:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559  0070                     ?_fputc:	
  1560                           ; 2 bytes @ 0x0
  1561                           
  1562  0070                     ?_strlen:	
  1563                           ; 2 bytes @ 0x0
  1564                           
  1565  0070                     ?___fpclassifyf:	
  1566                           ; 2 bytes @ 0x0
  1567                           
  1568  0070                     ?_isupper:	
  1569                           ; 2 bytes @ 0x0
  1570                           
  1571  0070                     ?_isdigit:	
  1572                           ; 2 bytes @ 0x0
  1573                           
  1574  0070                     ?_strncmp:	
  1575                           ; 2 bytes @ 0x0
  1576                           
  1577  0070                     ?_isspace:	
  1578                           ; 2 bytes @ 0x0
  1579                           
  1580  0070                     ?_ADC_GetConversion:	
  1581                           ; 2 bytes @ 0x0
  1582                           
  1583  0070                     ?___wmul:	
  1584                           ; 2 bytes @ 0x0
  1585                           
  1586  0070                     ?___awdiv:	
  1587                           ; 2 bytes @ 0x0
  1588                           
  1589  0070                     ?___awmod:	
  1590                           ; 2 bytes @ 0x0
  1591                           
  1592  0070                     ?___flneg:	
  1593                           ; 2 bytes @ 0x0
  1594                           
  1595  0070                     ?___fltol:	
  1596                           ; 4 bytes @ 0x0
  1597                           
  1598  0070                     ?___fladd:	
  1599                           ; 4 bytes @ 0x0
  1600                           
  1601  0070                     ?___fldiv:	
  1602                           ; 4 bytes @ 0x0
  1603                           
  1604  0070                     __Umul8_16@multiplicand:	
  1605                           ; 4 bytes @ 0x0
  1606                           
  1607  0070                     putch@c:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610  0070                     ___wmul@multiplier:	
  1611                           ; 1 bytes @ 0x0
  1612                           
  1613  0070                     ___awdiv@divisor:	
  1614                           ; 2 bytes @ 0x0
  1615                           
  1616  0070                     ___awmod@divisor:	
  1617                           ; 2 bytes @ 0x0
  1618                           
  1619  0070                     isdigit@c:	
  1620                           ; 2 bytes @ 0x0
  1621                           
  1622  0070                     isspace@c:	
  1623                           ; 2 bytes @ 0x0
  1624                           
  1625  0070                     isupper@c:	
  1626                           ; 2 bytes @ 0x0
  1627                           
  1628  0070                     fputc@c:	
  1629                           ; 2 bytes @ 0x0
  1630                           
  1631  0070                     strcpy@src:	
  1632                           ; 2 bytes @ 0x0
  1633                           
  1634  0070                     strncmp@_r:	
  1635                           ; 2 bytes @ 0x0
  1636                           
  1637  0070                     ___fleq@ff1:	
  1638                           ; 2 bytes @ 0x0
  1639                           
  1640  0070                     ___flneg@f1:	
  1641                           ; 4 bytes @ 0x0
  1642                           
  1643  0070                     ___fltol@f1:	
  1644                           ; 4 bytes @ 0x0
  1645                           
  1646  0070                     ___fladd@b:	
  1647                           ; 4 bytes @ 0x0
  1648                           
  1649  0070                     ___fldiv@a:	
  1650                           ; 4 bytes @ 0x0
  1651                           
  1652  0070                     ___fpclassifyf@x:	
  1653                           ; 4 bytes @ 0x0
  1654                           
  1655                           
  1656                           ; 4 bytes @ 0x0
  1657  0070                     	ds	1
  1658  0071                     Load_Cmd@cmd:
  1659  0071                     Load_Data@data:	
  1660                           ; 1 bytes @ 0x1
  1661                           
  1662                           
  1663                           ; 1 bytes @ 0x1
  1664  0071                     	ds	1
  1665  0072                     ??_LCD_Init:
  1666  0072                     ??_LCD_Cmd:	
  1667                           ; 1 bytes @ 0x2
  1668                           
  1669  0072                     ??__Umul8_16:	
  1670                           ; 1 bytes @ 0x2
  1671                           
  1672  0072                     ??_strlen:	
  1673                           ; 1 bytes @ 0x2
  1674                           
  1675  0072                     ??_isupper:	
  1676                           ; 1 bytes @ 0x2
  1677                           
  1678  0072                     ??_strcpy:	
  1679                           ; 1 bytes @ 0x2
  1680                           
  1681  0072                     ??_isdigit:	
  1682                           ; 1 bytes @ 0x2
  1683                           
  1684  0072                     ??_isspace:	
  1685                           ; 1 bytes @ 0x2
  1686                           
  1687  0072                     ??_ADC_GetConversion:	
  1688                           ; 1 bytes @ 0x2
  1689                           
  1690  0072                     ??_LCD_Write_Cp:	
  1691                           ; 1 bytes @ 0x2
  1692                           
  1693  0072                     fputc@fp:	
  1694                           ; 1 bytes @ 0x2
  1695                           
  1696  0072                     ___wmul@multiplicand:	
  1697                           ; 1 bytes @ 0x2
  1698                           
  1699  0072                     ___awdiv@dividend:	
  1700                           ; 2 bytes @ 0x2
  1701                           
  1702  0072                     ___awmod@dividend:	
  1703                           ; 2 bytes @ 0x2
  1704                           
  1705  0072                     strncmp@n:	
  1706                           ; 2 bytes @ 0x2
  1707                           
  1708                           
  1709                           ; 2 bytes @ 0x2
  1710  0072                     	ds	1
  1711  0073                     ??_fputc:
  1712  0073                     ADC_GetConversion@channel:	
  1713                           ; 1 bytes @ 0x3
  1714                           
  1715  0073                     strlen@a:	
  1716                           ; 1 bytes @ 0x3
  1717                           
  1718                           
  1719                           ; 1 bytes @ 0x3
  1720  0073                     	ds	1
  1721  0074                     ??___fpclassifyf:
  1722  0074                     ??_strncmp:	
  1723                           ; 1 bytes @ 0x4
  1724                           
  1725  0074                     ??___wmul:	
  1726                           ; 1 bytes @ 0x4
  1727                           
  1728  0074                     ??___awdiv:	
  1729                           ; 1 bytes @ 0x4
  1730                           
  1731  0074                     ??___awmod:	
  1732                           ; 1 bytes @ 0x4
  1733                           
  1734  0074                     ??___flneg:	
  1735                           ; 1 bytes @ 0x4
  1736                           
  1737  0074                     ??___fltol:	
  1738                           ; 1 bytes @ 0x4
  1739                           
  1740  0074                     ?___xxtofl:	
  1741                           ; 1 bytes @ 0x4
  1742                           
  1743  0074                     LCD_Cmd@NibbleH:	
  1744                           ; 4 bytes @ 0x4
  1745                           
  1746  0074                     LCD_Write_Cp@NibbleH:	
  1747                           ; 1 bytes @ 0x4
  1748                           
  1749  0074                     _isspace$1013:	
  1750                           ; 1 bytes @ 0x4
  1751                           
  1752  0074                     strlen@s:	
  1753                           ; 1 bytes @ 0x4
  1754                           
  1755  0074                     ___wmul@product:	
  1756                           ; 1 bytes @ 0x4
  1757                           
  1758  0074                     __Umul8_16@product:	
  1759                           ; 2 bytes @ 0x4
  1760                           
  1761  0074                     strcpy@s:	
  1762                           ; 2 bytes @ 0x4
  1763                           
  1764  0074                     ___fleq@ff2:	
  1765                           ; 2 bytes @ 0x4
  1766                           
  1767  0074                     ___fladd@a:	
  1768                           ; 4 bytes @ 0x4
  1769                           
  1770  0074                     ___fldiv@b:	
  1771                           ; 4 bytes @ 0x4
  1772                           
  1773  0074                     ___xxtofl@val:	
  1774                           ; 4 bytes @ 0x4
  1775                           
  1776                           
  1777                           ; 4 bytes @ 0x4
  1778  0074                     	ds	1
  1779  0075                     LCD_Cmd@NibbleL:
  1780  0075                     LCD_Write_Cp@NibbleL:	
  1781                           ; 1 bytes @ 0x5
  1782                           
  1783  0075                     ___awdiv@counter:	
  1784                           ; 1 bytes @ 0x5
  1785                           
  1786  0075                     ___awmod@counter:	
  1787                           ; 1 bytes @ 0x5
  1788                           
  1789  0075                     strncmp@_l:	
  1790                           ; 1 bytes @ 0x5
  1791                           
  1792                           
  1793                           ; 1 bytes @ 0x5
  1794  0075                     	ds	1
  1795  0076                     ?_tolower:
  1796  0076                     ?_atoi:	
  1797                           ; 2 bytes @ 0x6
  1798                           
  1799  0076                     LCD_Cmd@cmd:	
  1800                           ; 2 bytes @ 0x6
  1801                           
  1802  0076                     LCD_Write_Cp@letra:	
  1803                           ; 1 bytes @ 0x6
  1804                           
  1805  0076                     ___awdiv@sign:	
  1806                           ; 1 bytes @ 0x6
  1807                           
  1808  0076                     ___awmod@sign:	
  1809                           ; 1 bytes @ 0x6
  1810                           
  1811  0076                     strcpy@d:	
  1812                           ; 1 bytes @ 0x6
  1813                           
  1814  0076                     __Umul8_16@word_mpld:	
  1815                           ; 1 bytes @ 0x6
  1816                           
  1817  0076                     atoi@s:	
  1818                           ; 2 bytes @ 0x6
  1819                           
  1820  0076                     strncmp@r:	
  1821                           ; 2 bytes @ 0x6
  1822                           
  1823  0076                     tolower@c:	
  1824                           ; 2 bytes @ 0x6
  1825                           
  1826                           
  1827                           ; 2 bytes @ 0x6
  1828  0076                     	ds	1
  1829  0077                     ?_LCD_Set_Cursor:
  1830  0077                     LCD_Set_Cursor@col:	
  1831                           ; 1 bytes @ 0x7
  1832                           
  1833  0077                     strcpy@dest:	
  1834                           ; 1 bytes @ 0x7
  1835                           
  1836  0077                     ___awdiv@quotient:	
  1837                           ; 1 bytes @ 0x7
  1838                           
  1839                           
  1840                           ; 2 bytes @ 0x7
  1841  0077                     	ds	1
  1842  0078                     ??_tolower:
  1843  0078                     ??_atoi:	
  1844                           ; 1 bytes @ 0x8
  1845                           
  1846  0078                     ??_LCD_Set_Cursor:	
  1847                           ; 1 bytes @ 0x8
  1848                           
  1849  0078                     ??___fleq:	
  1850                           ; 1 bytes @ 0x8
  1851                           
  1852  0078                     ??___fldiv:	
  1853                           ; 1 bytes @ 0x8
  1854                           
  1855  0078                     ??___xxtofl:	
  1856                           ; 1 bytes @ 0x8
  1857                           
  1858  0078                     ?_fputs:	
  1859                           ; 1 bytes @ 0x8
  1860                           
  1861  0078                     ___fladd@signs:	
  1862                           ; 2 bytes @ 0x8
  1863                           
  1864  0078                     __Umul8_16@multiplier:	
  1865                           ; 1 bytes @ 0x8
  1866                           
  1867  0078                     fputs@fp:	
  1868                           ; 1 bytes @ 0x8
  1869                           
  1870  0078                     strncmp@l:	
  1871                           ; 1 bytes @ 0x8
  1872                           
  1873                           
  1874                           ; 1 bytes @ 0x8
  1875  0078                     	ds	1
  1876  0079                     ??_fputs:
  1877  0079                     ??___flmul:	
  1878                           ; 1 bytes @ 0x9
  1879                           
  1880  0079                     ___fltol@sign1:	
  1881                           ; 1 bytes @ 0x9
  1882                           
  1883  0079                     ___fladd@aexp:	
  1884                           ; 1 bytes @ 0x9
  1885                           
  1886                           
  1887                           ; 1 bytes @ 0x9
  1888  0079                     	ds	1
  1889  007A                     LCD_Set_Cursor@fila:
  1890  007A                     ___fltol@exp1:	
  1891                           ; 1 bytes @ 0xA
  1892                           
  1893  007A                     ___fladd@bexp:	
  1894                           ; 1 bytes @ 0xA
  1895                           
  1896                           
  1897                           ; 1 bytes @ 0xA
  1898  007A                     	ds	1
  1899  007B                     LCD_Set_Cursor@pos:
  1900  007B                     ___fladd@grs:	
  1901                           ; 1 bytes @ 0xB
  1902                           
  1903                           
  1904                           ; 1 bytes @ 0xB
  1905  007B                     	ds	1
  1906  007C                     ?_LCD_Write_Text:
  1907  007C                     ??_pad:	
  1908                           ; 1 bytes @ 0xC
  1909                           
  1910  007C                     LCD_Write_Text@col:	
  1911                           ; 1 bytes @ 0xC
  1912                           
  1913                           
  1914                           ; 1 bytes @ 0xC
  1915  007C                     	ds	1
  1916  007D                     LCD_Write_Text@text:
  1917                           
  1918                           ; 1 bytes @ 0xD
  1919  007D                     	ds	1
  1920  007E                     ??___flsub:
  1921                           
  1922                           	psect	cstackBANK0
  1923  0020                     __pcstackBANK0:	
  1924                           ; 1 bytes @ 0xE
  1925                           
  1926  0020                     ??_LCD_Write_Text:
  1927  0020                     ??___fladd:	
  1928                           ; 1 bytes @ 0x0
  1929                           
  1930  0020                     ?___flmul:	
  1931                           ; 1 bytes @ 0x0
  1932                           
  1933  0020                     ___xxtofl@sign:	
  1934                           ; 4 bytes @ 0x0
  1935                           
  1936  0020                     fputs@c:	
  1937                           ; 1 bytes @ 0x0
  1938                           
  1939  0020                     ___fpclassifyf@e:	
  1940                           ; 1 bytes @ 0x0
  1941                           
  1942  0020                     atoi@neg:	
  1943                           ; 2 bytes @ 0x0
  1944                           
  1945  0020                     ___fldiv@rem:	
  1946                           ; 2 bytes @ 0x0
  1947                           
  1948  0020                     ___flmul@b:	
  1949                           ; 4 bytes @ 0x0
  1950                           
  1951                           
  1952                           ; 4 bytes @ 0x0
  1953  0020                     	ds	1
  1954  0021                     LCD_Write_Text@fila:
  1955  0021                     ___xxtofl@exp:	
  1956                           ; 1 bytes @ 0x1
  1957                           
  1958  0021                     fputs@i:	
  1959                           ; 1 bytes @ 0x1
  1960                           
  1961                           
  1962                           ; 2 bytes @ 0x1
  1963  0021                     	ds	1
  1964  0022                     atoi@n:
  1965  0022                     ___xxtofl@arg:	
  1966                           ; 2 bytes @ 0x2
  1967                           
  1968  0022                     ___fpclassifyf@u:	
  1969                           ; 4 bytes @ 0x2
  1970                           
  1971                           
  1972                           ; 4 bytes @ 0x2
  1973  0022                     	ds	1
  1974  0023                     fputs@s:
  1975                           
  1976                           ; 1 bytes @ 0x3
  1977  0023                     	ds	1
  1978  0024                     ?_pad:
  1979  0024                     ___fldiv@sign:	
  1980                           ; 2 bytes @ 0x4
  1981                           
  1982  0024                     pad@buf:	
  1983                           ; 1 bytes @ 0x4
  1984                           
  1985  0024                     ___flmul@a:	
  1986                           ; 1 bytes @ 0x4
  1987                           
  1988                           
  1989                           ; 4 bytes @ 0x4
  1990  0024                     	ds	1
  1991  0025                     ___fldiv@new_exp:
  1992  0025                     pad@p:	
  1993                           ; 2 bytes @ 0x5
  1994                           
  1995                           
  1996                           ; 2 bytes @ 0x5
  1997  0025                     	ds	2
  1998  0027                     pad@i:
  1999  0027                     ___fldiv@grs:	
  2000                           ; 2 bytes @ 0x7
  2001                           
  2002                           
  2003                           ; 4 bytes @ 0x7
  2004  0027                     	ds	1
  2005  0028                     ___flmul@sign:
  2006                           
  2007                           ; 1 bytes @ 0x8
  2008  0028                     	ds	1
  2009  0029                     pad@w:
  2010  0029                     ___flmul@grs:	
  2011                           ; 2 bytes @ 0x9
  2012                           
  2013                           
  2014                           ; 4 bytes @ 0x9
  2015  0029                     	ds	2
  2016  002B                     ___fldiv@bexp:
  2017  002B                     pad@fp:	
  2018                           ; 1 bytes @ 0xB
  2019                           
  2020                           
  2021                           ; 1 bytes @ 0xB
  2022  002B                     	ds	1
  2023  002C                     ___fldiv@aexp:
  2024                           
  2025                           ; 1 bytes @ 0xC
  2026  002C                     	ds	1
  2027  002D                     ?_floorf:
  2028  002D                     ___flmul@aexp:	
  2029                           ; 4 bytes @ 0xD
  2030                           
  2031  002D                     floorf@x:	
  2032                           ; 1 bytes @ 0xD
  2033                           
  2034                           
  2035                           ; 4 bytes @ 0xD
  2036  002D                     	ds	1
  2037  002E                     ___flmul@bexp:
  2038                           
  2039                           ; 1 bytes @ 0xE
  2040  002E                     	ds	1
  2041  002F                     ___flmul@prod:
  2042                           
  2043                           ; 4 bytes @ 0xF
  2044  002F                     	ds	2
  2045  0031                     ??_floorf:
  2046                           
  2047                           ; 1 bytes @ 0x11
  2048  0031                     	ds	2
  2049  0033                     ___flmul@temp:
  2050                           
  2051                           ; 2 bytes @ 0x13
  2052  0033                     	ds	2
  2053  0035                     ?___flge:
  2054  0035                     ?___flsub:	
  2055                           ; 1 bit 
  2056                           
  2057  0035                     ___flge@ff1:	
  2058                           ; 4 bytes @ 0x15
  2059                           
  2060  0035                     ___flsub@a:	
  2061                           ; 4 bytes @ 0x15
  2062                           
  2063                           
  2064                           ; 4 bytes @ 0x15
  2065  0035                     	ds	2
  2066  0037                     floorf@m:
  2067                           
  2068                           ; 4 bytes @ 0x17
  2069  0037                     	ds	2
  2070  0039                     ___flge@ff2:
  2071  0039                     ___flsub@b:	
  2072                           ; 4 bytes @ 0x19
  2073                           
  2074                           
  2075                           ; 4 bytes @ 0x19
  2076  0039                     	ds	2
  2077  003B                     floorf@e:
  2078                           
  2079                           ; 2 bytes @ 0x1B
  2080  003B                     	ds	2
  2081  003D                     ??___flge:
  2082  003D                     floorf@u:	
  2083                           ; 1 bytes @ 0x1D
  2084                           
  2085                           
  2086                           ; 4 bytes @ 0x1D
  2087  003D                     	ds	4
  2088  0041                     ?_efgtoa:
  2089  0041                     efgtoa@f:	
  2090                           ; 2 bytes @ 0x21
  2091                           
  2092                           
  2093                           ; 4 bytes @ 0x21
  2094  0041                     	ds	4
  2095  0045                     efgtoa@c:
  2096                           
  2097                           ; 1 bytes @ 0x25
  2098  0045                     	ds	1
  2099  0046                     ??_efgtoa:
  2100                           
  2101                           ; 1 bytes @ 0x26
  2102  0046                     	ds	3
  2103  0049                     ?_vfpfcnvrt:
  2104  0049                     vfpfcnvrt@fmt:	
  2105                           ; 2 bytes @ 0x29
  2106                           
  2107                           
  2108                           ; 1 bytes @ 0x29
  2109  0049                     	ds	1
  2110  004A                     vfpfcnvrt@ap:
  2111                           
  2112                           ; 1 bytes @ 0x2A
  2113  004A                     	ds	1
  2114  004B                     ??_vfpfcnvrt:
  2115                           
  2116                           ; 1 bytes @ 0x2B
  2117  004B                     	ds	5
  2118  0050                     vfpfcnvrt@f:
  2119                           
  2120                           ; 4 bytes @ 0x30
  2121  0050                     	ds	4
  2122  0054                     vfpfcnvrt@ct:
  2123                           
  2124                           ; 3 bytes @ 0x34
  2125  0054                     	ds	3
  2126  0057                     vfpfcnvrt@c:
  2127                           
  2128                           ; 1 bytes @ 0x37
  2129  0057                     	ds	1
  2130  0058                     vfpfcnvrt@fp:
  2131                           
  2132                           ; 1 bytes @ 0x38
  2133  0058                     	ds	1
  2134  0059                     ?_vfprintf:
  2135  0059                     vfprintf@fmt:	
  2136                           ; 2 bytes @ 0x39
  2137                           
  2138                           
  2139                           ; 2 bytes @ 0x39
  2140  0059                     	ds	2
  2141  005B                     vfprintf@ap:
  2142                           
  2143                           ; 1 bytes @ 0x3B
  2144  005B                     	ds	1
  2145  005C                     ??_vfprintf:
  2146                           
  2147                           ; 1 bytes @ 0x3C
  2148  005C                     	ds	2
  2149  005E                     vfprintf@fp:
  2150                           
  2151                           ; 1 bytes @ 0x3E
  2152  005E                     	ds	1
  2153  005F                     vfprintf@cfmt:
  2154                           
  2155                           ; 2 bytes @ 0x3F
  2156  005F                     	ds	2
  2157  0061                     ?_sprintf:
  2158  0061                     sprintf@fmt:	
  2159                           ; 2 bytes @ 0x41
  2160                           
  2161                           
  2162                           ; 2 bytes @ 0x41
  2163  0061                     	ds	6
  2164  0067                     ??_sprintf:
  2165                           
  2166                           ; 1 bytes @ 0x47
  2167  0067                     	ds	1
  2168  0068                     ??_main:
  2169                           
  2170                           ; 1 bytes @ 0x48
  2171  0068                     	ds	4
  2172                           
  2173                           	psect	maintext
  2174  1567                     __pmaintext:	
  2175 ;;
  2176 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2177 ;;
  2178 ;; *************** function _main *****************
  2179 ;; Defined at:
  2180 ;;		line 12 in file "main.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;		None
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;		None
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  1    wreg      void 
  2187 ;; Registers used:
  2188 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2189 ;; Tracked objects:
  2190 ;;		On entry : B1F/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2196 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2197 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2198 ;;Total ram usage:        4 bytes
  2199 ;; Hardware stack levels required when called: 8
  2200 ;; This function calls:
  2201 ;;		_ADC_GetConversion
  2202 ;;		_LCD_Cmd
  2203 ;;		_LCD_Init
  2204 ;;		_LCD_Write_Text
  2205 ;;		_SYSTEM_Initialize
  2206 ;;		___flmul
  2207 ;;		___xxtofl
  2208 ;;		_sprintf
  2209 ;; This function is called by:
  2210 ;;		Startup code after reset
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214  1567                     _main:	
  2215                           ;psect for function _main
  2216                           
  2217  1567                     l4228:	
  2218                           ;incstack = 0
  2219                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2220                           
  2221                           
  2222                           ;main.c: 15:     SYSTEM_Initialize();
  2223  1567  3180  200A  3195   	fcall	_SYSTEM_Initialize
  2224                           
  2225                           ;main.c: 16:     LCD_Init();
  2226  156A  3191  2151  3195   	fcall	_LCD_Init
  2227                           
  2228                           ;main.c: 17:     LCD_Cmd(12);
  2229  156D  300C               	movlw	12
  2230  156E  319F  270D  3195   	fcall	_LCD_Cmd
  2231  1571                     l137:	
  2232                           ;main.c: 19:     while (1)
  2233                           
  2234                           
  2235                           ;main.c: 20:     {;main.c: 21:         temp = ADC_GetConversion(0);
  2236  1571  3000               	movlw	0
  2237  1572  3190  2002  3195   	fcall	_ADC_GetConversion
  2238  1575  0870               	movf	?_ADC_GetConversion,w
  2239  1576  0020               	movlb	0	; select bank0
  2240  1577  00E8               	movwf	??_main
  2241  1578  0871               	movf	?_ADC_GetConversion+1,w
  2242  1579  00E9               	movwf	??_main+1
  2243  157A  01EA               	clrf	??_main+2
  2244  157B  01EB               	clrf	??_main+3
  2245  157C  086B               	movf	??_main+3,w
  2246  157D  00F7               	movwf	___xxtofl@val+3
  2247  157E  086A               	movf	??_main+2,w
  2248  157F  00F6               	movwf	___xxtofl@val+2
  2249  1580  0869               	movf	??_main+1,w
  2250  1581  00F5               	movwf	___xxtofl@val+1
  2251  1582  0868               	movf	??_main,w
  2252  1583  00F4               	movwf	___xxtofl@val
  2253  1584  3000               	movlw	0
  2254  1585  3180  2017  3195   	fcall	___xxtofl
  2255  1588  0877               	movf	?___xxtofl+3,w
  2256  1589  0021               	movlb	1	; select bank1
  2257  158A  00EC               	movwf	(_temp+3)^(0+128)
  2258  158B  0876               	movf	?___xxtofl+2,w
  2259  158C  00EB               	movwf	(_temp+2)^(0+128)
  2260  158D  0875               	movf	?___xxtofl+1,w
  2261  158E  00EA               	movwf	(_temp+1)^(0+128)
  2262  158F  0874               	movf	?___xxtofl,w
  2263  1590  00E9               	movwf	_temp^(0+128)
  2264  1591                     l4230:
  2265                           
  2266                           ;main.c: 22:         _delay((unsigned long)((20)*(32000000/4000.0)));
  2267  1591  30D0               	movlw	208
  2268  1592  0020               	movlb	0	; select bank0
  2269  1593  00E8               	movwf	??_main
  2270  1594  30C9               	movlw	201
  2271  1595                     u5597:
  2272  1595  0B89               	decfsz	9,f
  2273  1596  2D95               	goto	u5597
  2274  1597  0BE8               	decfsz	??_main,f
  2275  1598  2D95               	goto	u5597
  2276  1599  3200               	nop2
  2277  159A                     l4232:
  2278                           
  2279                           ;main.c: 23:         pot = ADC_GetConversion(1);
  2280  159A  3001               	movlw	1
  2281  159B  3190  2002  3195   	fcall	_ADC_GetConversion
  2282  159E  0870               	movf	?_ADC_GetConversion,w
  2283  159F  0020               	movlb	0	; select bank0
  2284  15A0  00E8               	movwf	??_main
  2285  15A1  0871               	movf	?_ADC_GetConversion+1,w
  2286  15A2  00E9               	movwf	??_main+1
  2287  15A3  01EA               	clrf	??_main+2
  2288  15A4  01EB               	clrf	??_main+3
  2289  15A5  086B               	movf	??_main+3,w
  2290  15A6  00F7               	movwf	___xxtofl@val+3
  2291  15A7  086A               	movf	??_main+2,w
  2292  15A8  00F6               	movwf	___xxtofl@val+2
  2293  15A9  0869               	movf	??_main+1,w
  2294  15AA  00F5               	movwf	___xxtofl@val+1
  2295  15AB  0868               	movf	??_main,w
  2296  15AC  00F4               	movwf	___xxtofl@val
  2297  15AD  3000               	movlw	0
  2298  15AE  3180  2017  3195   	fcall	___xxtofl
  2299  15B1  0877               	movf	?___xxtofl+3,w
  2300  15B2  0022               	movlb	2	; select bank2
  2301  15B3  00BF               	movwf	(_pot+3)^(0+256)
  2302  15B4  0876               	movf	?___xxtofl+2,w
  2303  15B5  00BE               	movwf	(_pot+2)^(0+256)
  2304  15B6  0875               	movf	?___xxtofl+1,w
  2305  15B7  00BD               	movwf	(_pot+1)^(0+256)
  2306  15B8  0874               	movf	?___xxtofl,w
  2307  15B9  00BC               	movwf	_pot^(0+256)
  2308                           
  2309                           ;main.c: 24:         _delay((unsigned long)((20)*(32000000/4000.0)));
  2310  15BA  30D0               	movlw	208
  2311  15BB  0020               	movlb	0	; select bank0
  2312  15BC  00E8               	movwf	??_main
  2313  15BD  30C9               	movlw	201
  2314  15BE                     u5607:
  2315  15BE  0B89               	decfsz	9,f
  2316  15BF  2DBE               	goto	u5607
  2317  15C0  0BE8               	decfsz	??_main,f
  2318  15C1  2DBE               	goto	u5607
  2319  15C2  3200               	nop2
  2320  15C3                     l4234:
  2321                           
  2322                           ;main.c: 25:         ekg = ADC_GetConversion(2);
  2323  15C3  3002               	movlw	2
  2324  15C4  3190  2002  3195   	fcall	_ADC_GetConversion
  2325  15C7  0870               	movf	?_ADC_GetConversion,w
  2326  15C8  0020               	movlb	0	; select bank0
  2327  15C9  00E8               	movwf	??_main
  2328  15CA  0871               	movf	?_ADC_GetConversion+1,w
  2329  15CB  00E9               	movwf	??_main+1
  2330  15CC  01EA               	clrf	??_main+2
  2331  15CD  01EB               	clrf	??_main+3
  2332  15CE  086B               	movf	??_main+3,w
  2333  15CF  00F7               	movwf	___xxtofl@val+3
  2334  15D0  086A               	movf	??_main+2,w
  2335  15D1  00F6               	movwf	___xxtofl@val+2
  2336  15D2  0869               	movf	??_main+1,w
  2337  15D3  00F5               	movwf	___xxtofl@val+1
  2338  15D4  0868               	movf	??_main,w
  2339  15D5  00F4               	movwf	___xxtofl@val
  2340  15D6  3000               	movlw	0
  2341  15D7  3180  2017  3195   	fcall	___xxtofl
  2342  15DA  0877               	movf	?___xxtofl+3,w
  2343  15DB  0022               	movlb	2	; select bank2
  2344  15DC  00BB               	movwf	(_ekg+3)^(0+256)
  2345  15DD  0876               	movf	?___xxtofl+2,w
  2346  15DE  00BA               	movwf	(_ekg+2)^(0+256)
  2347  15DF  0875               	movf	?___xxtofl+1,w
  2348  15E0  00B9               	movwf	(_ekg+1)^(0+256)
  2349  15E1  0874               	movf	?___xxtofl,w
  2350  15E2  00B8               	movwf	_ekg^(0+256)
  2351  15E3                     l4236:
  2352                           
  2353                           ;main.c: 26:         _delay((unsigned long)((20)*(32000000/4000.0)));
  2354  15E3  30D0               	movlw	208
  2355  15E4  0020               	movlb	0	; select bank0
  2356  15E5  00E8               	movwf	??_main
  2357  15E6  30C9               	movlw	201
  2358  15E7                     u5617:
  2359  15E7  0B89               	decfsz	9,f
  2360  15E8  2DE7               	goto	u5617
  2361  15E9  0BE8               	decfsz	??_main,f
  2362  15EA  2DE7               	goto	u5617
  2363  15EB  3200               	nop2
  2364                           
  2365                           ;main.c: 28:         temp = (150.0/308.0)*temp;
  2366  15EC  303E               	movlw	62
  2367  15ED  0020               	movlb	0	; select bank0
  2368  15EE  00A3               	movwf	___flmul@b+3
  2369  15EF  30F9               	movlw	249
  2370  15F0  00A2               	movwf	___flmul@b+2
  2371  15F1  3059               	movlw	89
  2372  15F2  00A1               	movwf	___flmul@b+1
  2373  15F3  30C4               	movlw	196
  2374  15F4  00A0               	movwf	___flmul@b
  2375  15F5  0021               	movlb	1	; select bank1
  2376  15F6  086C               	movf	(_temp+3)^(0+128),w
  2377  15F7  0020               	movlb	0	; select bank0
  2378  15F8  00A7               	movwf	___flmul@a+3
  2379  15F9  0021               	movlb	1	; select bank1
  2380  15FA  086B               	movf	(_temp+2)^(0+128),w
  2381  15FB  0020               	movlb	0	; select bank0
  2382  15FC  00A6               	movwf	___flmul@a+2
  2383  15FD  0021               	movlb	1	; select bank1
  2384  15FE  086A               	movf	(_temp+1)^(0+128),w
  2385  15FF  0020               	movlb	0	; select bank0
  2386  1600  00A5               	movwf	___flmul@a+1
  2387  1601  0021               	movlb	1	; select bank1
  2388  1602  0869               	movf	_temp^(0+128),w
  2389  1603  0020               	movlb	0	; select bank0
  2390  1604  00A4               	movwf	___flmul@a
  2391  1605  318B  232E  3195   	fcall	___flmul
  2392  1608  0020               	movlb	0	; select bank0
  2393  1609  0823               	movf	?___flmul+3,w
  2394  160A  0021               	movlb	1	; select bank1
  2395  160B  00EC               	movwf	(_temp+3)^(0+128)
  2396  160C  0020               	movlb	0	; select bank0
  2397  160D  0822               	movf	?___flmul+2,w
  2398  160E  0021               	movlb	1	; select bank1
  2399  160F  00EB               	movwf	(_temp+2)^(0+128)
  2400  1610  0020               	movlb	0	; select bank0
  2401  1611  0821               	movf	?___flmul+1,w
  2402  1612  0021               	movlb	1	; select bank1
  2403  1613  00EA               	movwf	(_temp+1)^(0+128)
  2404  1614  0020               	movlb	0	; select bank0
  2405  1615  0820               	movf	?___flmul,w
  2406  1616  0021               	movlb	1	; select bank1
  2407  1617  00E9               	movwf	_temp^(0+128)
  2408  1618                     l4238:
  2409                           
  2410                           ;main.c: 30:         sprintf(strText,"temp: %6.1f", temp);
  2411  1618  3000               	movlw	low (STR_1| (0+32768))
  2412  1619  0020               	movlb	0	; select bank0
  2413  161A  00E1               	movwf	sprintf@fmt
  2414  161B  30A0               	movlw	high (STR_1| (0+32768))
  2415  161C  00E2               	movwf	sprintf@fmt+1
  2416  161D  0021               	movlb	1	; select bank1
  2417  161E  086C               	movf	(_temp+3)^(0+128),w
  2418  161F  0020               	movlb	0	; select bank0
  2419  1620  00E6               	movwf	?_sprintf+5
  2420  1621  0021               	movlb	1	; select bank1
  2421  1622  086B               	movf	(_temp+2)^(0+128),w
  2422  1623  0020               	movlb	0	; select bank0
  2423  1624  00E5               	movwf	?_sprintf+4
  2424  1625  0021               	movlb	1	; select bank1
  2425  1626  086A               	movf	(_temp+1)^(0+128),w
  2426  1627  0020               	movlb	0	; select bank0
  2427  1628  00E4               	movwf	?_sprintf+3
  2428  1629  0021               	movlb	1	; select bank1
  2429  162A  0869               	movf	_temp^(0+128),w
  2430  162B  0020               	movlb	0	; select bank0
  2431  162C  00E3               	movwf	?_sprintf+2
  2432  162D  3020               	movlw	(low (_strText| (0+256)))& (0+255)
  2433  162E  3190  201D  3195   	fcall	_sprintf
  2434  1631                     l4240:
  2435                           
  2436                           ;main.c: 31:         LCD_Write_Text(1, 1, strText);
  2437  1631  01FC               	clrf	LCD_Write_Text@col
  2438  1632  0AFC               	incf	LCD_Write_Text@col,f
  2439  1633  3020               	movlw	(low (_strText| (0+256)))& (0+255)
  2440  1634  0020               	movlb	0	; select bank0
  2441  1635  00E8               	movwf	??_main
  2442  1636  0868               	movf	??_main,w
  2443  1637  00FD               	movwf	LCD_Write_Text@text
  2444  1638  3001               	movlw	1
  2445  1639  319F  2770  3195   	fcall	_LCD_Write_Text
  2446  163C                     l4242:
  2447                           
  2448                           ;main.c: 32:         _delay((unsigned long)((200)*(32000000/4000.0)));
  2449  163C  3009               	movlw	9
  2450  163D  0020               	movlb	0	; select bank0
  2451  163E  00E9               	movwf	??_main+1
  2452  163F  301E               	movlw	30
  2453  1640  00E8               	movwf	??_main
  2454  1641  30E4               	movlw	228
  2455  1642                     u5627:
  2456  1642  0B89               	decfsz	9,f
  2457  1643  2E42               	goto	u5627
  2458  1644  0BE8               	decfsz	??_main,f
  2459  1645  2E42               	goto	u5627
  2460  1646  0BE9               	decfsz	??_main+1,f
  2461  1647  2E42               	goto	u5627
  2462  1648  0000               	nop
  2463  1649  2D71               	goto	l137
  2464  164A  3180  2802         	ljmp	start
  2465  164C                     __end_of_main:
  2466                           
  2467                           	psect	text1
  2468  101D                     __ptext1:	
  2469 ;; *************** function _sprintf *****************
  2470 ;; Defined at:
  2471 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  s               1    wreg     PTR unsigned char 
  2474 ;;		 -> strText(20), 
  2475 ;;  fmt             2   65[BANK0 ] PTR const unsigned char 
  2476 ;;		 -> STR_1(12), 
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;  s               1   51[BANK1 ] PTR unsigned char 
  2479 ;;		 -> strText(20), 
  2480 ;;  f              10   53[BANK1 ] struct _IO_FILE
  2481 ;;  ret             2    0        int 
  2482 ;;  ap              1   52[BANK1 ] PTR void [1]
  2483 ;;		 -> ?_sprintf(2), 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  2   65[BANK0 ] int 
  2486 ;; Registers used:
  2487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2493 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2494 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  2495 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2496 ;;      Totals:         0       7      12       0       0       0       0       0       0       0       0       0       
      +0       0
  2497 ;;Total ram usage:       19 bytes
  2498 ;; Hardware stack levels used: 1
  2499 ;; Hardware stack levels required when called: 7
  2500 ;; This function calls:
  2501 ;;		_vfprintf
  2502 ;; This function is called by:
  2503 ;;		_main
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507  101D                     _sprintf:	
  2508                           ;psect for function _sprintf
  2509                           
  2510                           
  2511                           ;incstack = 0
  2512                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2513                           ;sprintf@s stored from wreg
  2514  101D  0021               	movlb	1	; select bank1
  2515  101E  00D3               	movwf	sprintf@s^(0+128)
  2516  101F                     l4164:
  2517  101F  3063               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2518  1020  0020               	movlb	0	; select bank0
  2519  1021  00E7               	movwf	??_sprintf
  2520  1022  0867               	movf	??_sprintf,w
  2521  1023  0021               	movlb	1	; select bank1
  2522  1024  00D4               	movwf	sprintf@ap^(0+128)
  2523  1025  0853               	movf	sprintf@s^(0+128),w
  2524  1026  0020               	movlb	0	; select bank0
  2525  1027  00E7               	movwf	??_sprintf
  2526  1028  0867               	movf	??_sprintf,w
  2527  1029  0021               	movlb	1	; select bank1
  2528  102A  00D5               	movwf	sprintf@f^(0+128)
  2529  102B                     l4166:
  2530  102B  01D7               	clrf	(sprintf@f^(0+128)+2)
  2531  102C  01D8               	clrf	((sprintf@f+1)^(0+128)+2)
  2532  102D                     l4168:
  2533  102D  01DD               	clrf	(sprintf@f^(0+128)+8)
  2534  102E  01DE               	clrf	((sprintf@f+1)^(0+128)+8)
  2535  102F                     l4170:
  2536  102F  0020               	movlb	0	; select bank0
  2537  1030  0862               	movf	sprintf@fmt+1,w
  2538  1031  00DA               	movwf	vfprintf@fmt+1
  2539  1032  0861               	movf	sprintf@fmt,w
  2540  1033  00D9               	movwf	vfprintf@fmt
  2541  1034  30D4               	movlw	(low (sprintf@ap| 0))& (0+255)
  2542  1035  00E7               	movwf	??_sprintf
  2543  1036  0867               	movf	??_sprintf,w
  2544  1037  00DB               	movwf	vfprintf@ap
  2545  1038  30D5               	movlw	(low (sprintf@f| 0))& (0+255)
  2546  1039  3190  209D  3190   	fcall	_vfprintf
  2547  103C                     l4172:
  2548  103C  0021               	movlb	1	; select bank1
  2549  103D  0857               	movf	(sprintf@f^(0+128)+2),w
  2550  103E  0753               	addwf	sprintf@s^(0+128),w
  2551  103F  0020               	movlb	0	; select bank0
  2552  1040  00E7               	movwf	??_sprintf
  2553  1041  0867               	movf	??_sprintf,w
  2554  1042  0086               	movwf	6
  2555  1043  3001               	movlw	1	; select bank2/3
  2556  1044  0087               	movwf	7
  2557  1045  0181               	clrf	1
  2558  1046                     l814:
  2559  1046  0008               	return
  2560  1047                     __end_of_sprintf:
  2561                           
  2562                           	psect	text2
  2563  109D                     __ptext2:	
  2564 ;; *************** function _vfprintf *****************
  2565 ;; Defined at:
  2566 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;  fp              1    wreg     PTR struct _IO_FILE
  2569 ;;		 -> sprintf@f(10), 
  2570 ;;  fmt             2   57[BANK0 ] PTR const unsigned char 
  2571 ;;		 -> STR_1(12), 
  2572 ;;  ap              1   59[BANK0 ] PTR PTR void 
  2573 ;;		 -> sprintf@ap(1), 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  fp              1   62[BANK0 ] PTR struct _IO_FILE
  2576 ;;		 -> sprintf@f(10), 
  2577 ;;  cfmt            2   63[BANK0 ] PTR unsigned char 
  2578 ;;		 -> STR_1(12), 
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  2   57[BANK0 ] int 
  2581 ;; Registers used:
  2582 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2588 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2589 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2590 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2591 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2592 ;;Total ram usage:        8 bytes
  2593 ;; Hardware stack levels used: 1
  2594 ;; Hardware stack levels required when called: 6
  2595 ;; This function calls:
  2596 ;;		_vfpfcnvrt
  2597 ;; This function is called by:
  2598 ;;		_sprintf
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602  109D                     _vfprintf:	
  2603                           ;psect for function _vfprintf
  2604                           
  2605                           
  2606                           ;incstack = 0
  2607                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2608                           ;vfprintf@fp stored from wreg
  2609  109D  0020               	movlb	0	; select bank0
  2610  109E  00DE               	movwf	vfprintf@fp
  2611  109F                     l4110:
  2612                           
  2613                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2614  109F  085A               	movf	vfprintf@fmt+1,w
  2615  10A0  00E0               	movwf	vfprintf@cfmt+1
  2616  10A1  0859               	movf	vfprintf@fmt,w
  2617  10A2  00DF               	movwf	vfprintf@cfmt
  2618  10A3                     l4112:
  2619                           
  2620                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2621  10A3  0021               	movlb	1	; select bank1
  2622  10A4  01E3               	clrf	_nout^(0+128)
  2623  10A5  01E4               	clrf	(_nout+1)^(0+128)
  2624                           
  2625                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2626  10A6  28BB               	goto	l4116
  2627  10A7                     l4114:
  2628                           
  2629                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2630  10A7  305F               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2631  10A8  00DC               	movwf	??_vfprintf
  2632  10A9  085C               	movf	??_vfprintf,w
  2633  10AA  00C9               	movwf	vfpfcnvrt@fmt
  2634  10AB  085B               	movf	vfprintf@ap,w
  2635  10AC  00DD               	movwf	??_vfprintf+1
  2636  10AD  085D               	movf	??_vfprintf+1,w
  2637  10AE  00CA               	movwf	vfpfcnvrt@ap
  2638  10AF  085E               	movf	vfprintf@fp,w
  2639  10B0  318D  2585  3190   	fcall	_vfpfcnvrt
  2640  10B3  0020               	movlb	0	; select bank0
  2641  10B4  0849               	movf	?_vfpfcnvrt,w
  2642  10B5  0021               	movlb	1	; select bank1
  2643  10B6  07E3               	addwf	_nout^(0+128),f
  2644  10B7  0020               	movlb	0	; select bank0
  2645  10B8  084A               	movf	?_vfpfcnvrt+1,w
  2646  10B9  0021               	movlb	1	; select bank1
  2647  10BA  3DE4               	addwfc	(_nout+1)^(0+128),f
  2648  10BB                     l4116:
  2649                           
  2650                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2651  10BB  0020               	movlb	0	; select bank0
  2652  10BC  085F               	movf	vfprintf@cfmt,w
  2653  10BD  0084               	movwf	4
  2654  10BE  0860               	movf	vfprintf@cfmt+1,w
  2655  10BF  0085               	movwf	5
  2656  10C0  0012               	moviw fsr0++
  2657  10C1  1D03               	btfss	3,2
  2658  10C2  28C4               	goto	u5411
  2659  10C3  28C5               	goto	u5410
  2660  10C4                     u5411:
  2661  10C4  28A7               	goto	l4114
  2662  10C5                     u5410:
  2663  10C5                     l4118:
  2664                           
  2665                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2666  10C5  0021               	movlb	1	; select bank1
  2667  10C6  0864               	movf	(_nout+1)^(0+128),w
  2668  10C7  0020               	movlb	0	; select bank0
  2669  10C8  00DA               	movwf	?_vfprintf+1
  2670  10C9  0021               	movlb	1	; select bank1
  2671  10CA  0863               	movf	_nout^(0+128),w
  2672  10CB  0020               	movlb	0	; select bank0
  2673  10CC  00D9               	movwf	?_vfprintf
  2674  10CD                     l982:
  2675  10CD  0008               	return
  2676  10CE                     __end_of_vfprintf:
  2677                           
  2678                           	psect	text3
  2679  0D85                     __ptext3:	
  2680 ;; *************** function _vfpfcnvrt *****************
  2681 ;; Defined at:
  2682 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  fp              1    wreg     PTR struct _IO_FILE
  2685 ;;		 -> sprintf@f(10), 
  2686 ;;  fmt             1   41[BANK0 ] PTR PTR unsigned char 
  2687 ;;		 -> vfprintf@cfmt(2), 
  2688 ;;  ap              1   42[BANK0 ] PTR PTR void 
  2689 ;;		 -> sprintf@ap(1), 
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;  fp              1   56[BANK0 ] PTR struct _IO_FILE
  2692 ;;		 -> sprintf@f(10), 
  2693 ;;  llu             8    0        unsigned long long 
  2694 ;;  ll              8    0        long long 
  2695 ;;  f               4   48[BANK0 ] long long 
  2696 ;;  ct              3   52[BANK0 ] unsigned char [3]
  2697 ;;  vp              2    0        PTR void 
  2698 ;;  i               2    0        int 
  2699 ;;  done            2    0        int 
  2700 ;;  cp              2    0        PTR unsigned char 
  2701 ;;  c               1   55[BANK0 ] unsigned char 
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  2   41[BANK0 ] int 
  2704 ;; Registers used:
  2705 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2711 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2712 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2713 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2714 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2715 ;;Total ram usage:       16 bytes
  2716 ;; Hardware stack levels used: 1
  2717 ;; Hardware stack levels required when called: 5
  2718 ;; This function calls:
  2719 ;;		_atoi
  2720 ;;		_efgtoa
  2721 ;;		_fputc
  2722 ;;		_isdigit
  2723 ;;		_isupper
  2724 ;;		_strncmp
  2725 ;;		_tolower
  2726 ;; This function is called by:
  2727 ;;		_vfprintf
  2728 ;; This function uses a non-reentrant model
  2729 ;;
  2730                           
  2731  0D85                     _vfpfcnvrt:	
  2732                           ;psect for function _vfpfcnvrt
  2733                           
  2734                           
  2735                           ;incstack = 0
  2736                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2737                           ;vfpfcnvrt@fp stored from wreg
  2738  0D85  0020               	movlb	0	; select bank0
  2739  0D86  00D8               	movwf	vfpfcnvrt@fp
  2740  0D87                     l3928:
  2741                           
  2742                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2743  0D87  0849               	movf	vfpfcnvrt@fmt,w
  2744  0D88  0086               	movwf	6
  2745  0D89  0187               	clrf	7
  2746  0D8A  3F40               	moviw [0]fsr1
  2747  0D8B  00CB               	movwf	??_vfpfcnvrt
  2748  0D8C  3F41               	moviw [1]fsr1
  2749  0D8D  00CC               	movwf	??_vfpfcnvrt+1
  2750  0D8E  084B               	movf	??_vfpfcnvrt,w
  2751  0D8F  0084               	movwf	4
  2752  0D90  084C               	movf	??_vfpfcnvrt+1,w
  2753  0D91  0085               	movwf	5
  2754  0D92  0012               	moviw fsr0++
  2755  0D93  3A25               	xorlw	37
  2756  0D94  1D03               	btfss	3,2
  2757  0D95  2D97               	goto	u5261
  2758  0D96  2D98               	goto	u5260
  2759  0D97                     u5261:
  2760  0D97  2FDC               	goto	l4032
  2761  0D98                     u5260:
  2762  0D98                     l3930:
  2763                           
  2764                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2765  0D98  0849               	movf	vfpfcnvrt@fmt,w
  2766  0D99  0086               	movwf	6
  2767  0D9A  0187               	clrf	7
  2768  0D9B  3001               	movlw	1
  2769  0D9C  0781               	addwf	1,f
  2770  0D9D  3141               	addfsr 1,1
  2771  0D9E  1803               	skipnc
  2772  0D9F  0A81               	incf	1,f
  2773  0DA0                     l3932:
  2774                           
  2775                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2776  0DA0  0021               	movlb	1	; select bank1
  2777  0DA1  01E5               	clrf	_width^(0+128)
  2778  0DA2  01E6               	clrf	(_width+1)^(0+128)
  2779  0DA3  0020               	movlb	0	; select bank0
  2780  0DA4  01EE               	clrf	_flags
  2781  0DA5  01EF               	clrf	_flags+1
  2782  0DA6                     l3934:
  2783                           
  2784                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2785  0DA6  30FF               	movlw	255
  2786  0DA7  00EC               	movwf	_prec
  2787  0DA8  30FF               	movlw	255
  2788  0DA9  00ED               	movwf	_prec+1
  2789  0DAA                     l3936:
  2790                           
  2791                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2792  0DAA  0849               	movf	vfpfcnvrt@fmt,w
  2793  0DAB  0086               	movwf	6
  2794  0DAC  0187               	clrf	7
  2795  0DAD  3F40               	moviw [0]fsr1
  2796  0DAE  00CB               	movwf	??_vfpfcnvrt
  2797  0DAF  3F41               	moviw [1]fsr1
  2798  0DB0  00CC               	movwf	??_vfpfcnvrt+1
  2799  0DB1  084B               	movf	??_vfpfcnvrt,w
  2800  0DB2  0084               	movwf	4
  2801  0DB3  084C               	movf	??_vfpfcnvrt+1,w
  2802  0DB4  0085               	movwf	5
  2803  0DB5  0012               	moviw fsr0++
  2804  0DB6  3A2A               	xorlw	42
  2805  0DB7  1D03               	btfss	3,2
  2806  0DB8  2DBA               	goto	u5271
  2807  0DB9  2DBB               	goto	u5270
  2808  0DBA                     u5271:
  2809  0DBA  2DDD               	goto	l3948
  2810  0DBB                     u5270:
  2811  0DBB                     l3938:
  2812                           
  2813                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2814  0DBB  0849               	movf	vfpfcnvrt@fmt,w
  2815  0DBC  0086               	movwf	6
  2816  0DBD  0187               	clrf	7
  2817  0DBE  3001               	movlw	1
  2818  0DBF  0781               	addwf	1,f
  2819  0DC0  3141               	addfsr 1,1
  2820  0DC1  1803               	skipnc
  2821  0DC2  0A81               	incf	1,f
  2822  0DC3                     l3940:
  2823                           
  2824                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2825  0DC3  084A               	movf	vfpfcnvrt@ap,w
  2826  0DC4  0086               	movwf	6
  2827  0DC5  0187               	clrf	7
  2828  0DC6  0801               	movf	1,w
  2829  0DC7  0084               	movwf	4
  2830  0DC8  0185               	clrf	5
  2831  0DC9  3002               	movlw	2
  2832  0DCA  0781               	addwf	1,f
  2833  0DCB  3F00               	moviw [0]fsr0
  2834  0DCC  0021               	movlb	1	; select bank1
  2835  0DCD  00E5               	movwf	_width^(0+128)
  2836  0DCE  3F01               	moviw [1]fsr0
  2837  0DCF  00E6               	movwf	(_width+1)^(0+128)
  2838  0DD0                     l3942:
  2839                           
  2840                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2841  0DD0  1FE6               	btfss	(_width+1)^(0+128),7
  2842  0DD1  2DD3               	goto	u5281
  2843  0DD2  2DD4               	goto	u5280
  2844  0DD3                     u5281:
  2845  0DD3  2E11               	goto	l3956
  2846  0DD4                     u5280:
  2847  0DD4                     l3944:
  2848                           
  2849                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2850  0DD4  0020               	movlb	0	; select bank0
  2851  0DD5  146E               	bsf	_flags,0
  2852  0DD6                     l3946:
  2853                           
  2854                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2855  0DD6  0021               	movlb	1	; select bank1
  2856  0DD7  09E5               	comf	_width^(0+128),f
  2857  0DD8  09E6               	comf	(_width+1)^(0+128),f
  2858  0DD9  0AE5               	incf	_width^(0+128),f
  2859  0DDA  1903               	skipnz
  2860  0DDB  0AE6               	incf	(_width+1)^(0+128),f
  2861  0DDC  2E11               	goto	l3956
  2862  0DDD                     l3948:
  2863                           
  2864                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2865  0DDD  0849               	movf	vfpfcnvrt@fmt,w
  2866  0DDE  0086               	movwf	6
  2867  0DDF  0187               	clrf	7
  2868  0DE0  3F40               	moviw [0]fsr1
  2869  0DE1  00F6               	movwf	atoi@s
  2870  0DE2  3F41               	moviw [1]fsr1
  2871  0DE3  00F7               	movwf	atoi@s+1
  2872  0DE4  3194  24D3  318D   	fcall	_atoi
  2873  0DE7  0877               	movf	?_atoi+1,w
  2874  0DE8  0021               	movlb	1	; select bank1
  2875  0DE9  00E6               	movwf	(_width+1)^(0+128)
  2876  0DEA  0876               	movf	?_atoi,w
  2877  0DEB  00E5               	movwf	_width^(0+128)
  2878                           
  2879                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2880  0DEC  2DF5               	goto	l3954
  2881  0DED                     l3950:
  2882                           
  2883                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2884  0DED  0849               	movf	vfpfcnvrt@fmt,w
  2885  0DEE  0086               	movwf	6
  2886  0DEF  0187               	clrf	7
  2887  0DF0  3001               	movlw	1
  2888  0DF1  0781               	addwf	1,f
  2889  0DF2  3141               	addfsr 1,1
  2890  0DF3  1803               	skipnc
  2891  0DF4  0A81               	incf	1,f
  2892  0DF5                     l3954:
  2893  0DF5  0020               	movlb	0	; select bank0
  2894  0DF6  0849               	movf	vfpfcnvrt@fmt,w
  2895  0DF7  0086               	movwf	6
  2896  0DF8  0187               	clrf	7
  2897  0DF9  3F40               	moviw [0]fsr1
  2898  0DFA  00CB               	movwf	??_vfpfcnvrt
  2899  0DFB  3F41               	moviw [1]fsr1
  2900  0DFC  00CC               	movwf	??_vfpfcnvrt+1
  2901  0DFD  084B               	movf	??_vfpfcnvrt,w
  2902  0DFE  0084               	movwf	4
  2903  0DFF  084C               	movf	??_vfpfcnvrt+1,w
  2904  0E00  0085               	movwf	5
  2905  0E01  0800               	movf	0,w	;code access
  2906  0E02  3ED0               	addlw	208
  2907  0E03  00CD               	movwf	??_vfpfcnvrt+2
  2908  0E04  30FF               	movlw	255
  2909  0E05  1803               	skipnc
  2910  0E06  3000               	movlw	0
  2911  0E07  00CE               	movwf	??_vfpfcnvrt+3
  2912  0E08  3000               	movlw	0
  2913  0E09  024E               	subwf	??_vfpfcnvrt+3,w
  2914  0E0A  300A               	movlw	10
  2915  0E0B  1903               	skipnz
  2916  0E0C  024D               	subwf	??_vfpfcnvrt+2,w
  2917  0E0D  1C03               	skipc
  2918  0E0E  2E10               	goto	u5291
  2919  0E0F  2E11               	goto	u5290
  2920  0E10                     u5291:
  2921  0E10  2DED               	goto	l3950
  2922  0E11                     u5290:
  2923  0E11                     l3956:
  2924                           
  2925                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2926  0E11  0020               	movlb	0	; select bank0
  2927  0E12  0849               	movf	vfpfcnvrt@fmt,w
  2928  0E13  0086               	movwf	6
  2929  0E14  0187               	clrf	7
  2930  0E15  3F40               	moviw [0]fsr1
  2931  0E16  00CB               	movwf	??_vfpfcnvrt
  2932  0E17  3F41               	moviw [1]fsr1
  2933  0E18  00CC               	movwf	??_vfpfcnvrt+1
  2934  0E19  084B               	movf	??_vfpfcnvrt,w
  2935  0E1A  0084               	movwf	4
  2936  0E1B  084C               	movf	??_vfpfcnvrt+1,w
  2937  0E1C  0085               	movwf	5
  2938  0E1D  0012               	moviw fsr0++
  2939  0E1E  3A2E               	xorlw	46
  2940  0E1F  1D03               	btfss	3,2
  2941  0E20  2E22               	goto	u5301
  2942  0E21  2E23               	goto	u5300
  2943  0E22                     u5301:
  2944  0E22  2E86               	goto	l3976
  2945  0E23                     u5300:
  2946  0E23                     l3958:
  2947                           
  2948                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2949  0E23  01EC               	clrf	_prec
  2950  0E24  01ED               	clrf	_prec+1
  2951  0E25                     l3960:
  2952                           
  2953                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2954  0E25  0849               	movf	vfpfcnvrt@fmt,w
  2955  0E26  0086               	movwf	6
  2956  0E27  0187               	clrf	7
  2957  0E28  3001               	movlw	1
  2958  0E29  0781               	addwf	1,f
  2959  0E2A  3141               	addfsr 1,1
  2960  0E2B  1803               	skipnc
  2961  0E2C  0A81               	incf	1,f
  2962  0E2D                     l3962:
  2963                           
  2964                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2965  0E2D  0849               	movf	vfpfcnvrt@fmt,w
  2966  0E2E  0086               	movwf	6
  2967  0E2F  0187               	clrf	7
  2968  0E30  3F40               	moviw [0]fsr1
  2969  0E31  00CB               	movwf	??_vfpfcnvrt
  2970  0E32  3F41               	moviw [1]fsr1
  2971  0E33  00CC               	movwf	??_vfpfcnvrt+1
  2972  0E34  084B               	movf	??_vfpfcnvrt,w
  2973  0E35  0084               	movwf	4
  2974  0E36  084C               	movf	??_vfpfcnvrt+1,w
  2975  0E37  0085               	movwf	5
  2976  0E38  0012               	moviw fsr0++
  2977  0E39  3A2A               	xorlw	42
  2978  0E3A  1D03               	btfss	3,2
  2979  0E3B  2E3D               	goto	u5311
  2980  0E3C  2E3E               	goto	u5310
  2981  0E3D                     u5311:
  2982  0E3D  2E53               	goto	l3968
  2983  0E3E                     u5310:
  2984  0E3E                     l3964:
  2985                           
  2986                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2987  0E3E  0849               	movf	vfpfcnvrt@fmt,w
  2988  0E3F  0086               	movwf	6
  2989  0E40  0187               	clrf	7
  2990  0E41  3001               	movlw	1
  2991  0E42  0781               	addwf	1,f
  2992  0E43  3141               	addfsr 1,1
  2993  0E44  1803               	skipnc
  2994  0E45  0A81               	incf	1,f
  2995  0E46                     l3966:
  2996                           
  2997                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2998  0E46  084A               	movf	vfpfcnvrt@ap,w
  2999  0E47  0086               	movwf	6
  3000  0E48  0187               	clrf	7
  3001  0E49  0801               	movf	1,w
  3002  0E4A  0084               	movwf	4
  3003  0E4B  0185               	clrf	5
  3004  0E4C  3002               	movlw	2
  3005  0E4D  0781               	addwf	1,f
  3006  0E4E  3F00               	moviw [0]fsr0
  3007  0E4F  00EC               	movwf	_prec
  3008  0E50  3F01               	moviw [1]fsr0
  3009  0E51  00ED               	movwf	_prec+1
  3010                           
  3011                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  3012  0E52  2E86               	goto	l3976
  3013  0E53                     l3968:
  3014                           
  3015                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  3016  0E53  0849               	movf	vfpfcnvrt@fmt,w
  3017  0E54  0086               	movwf	6
  3018  0E55  0187               	clrf	7
  3019  0E56  3F40               	moviw [0]fsr1
  3020  0E57  00F6               	movwf	atoi@s
  3021  0E58  3F41               	moviw [1]fsr1
  3022  0E59  00F7               	movwf	atoi@s+1
  3023  0E5A  3194  24D3  318D   	fcall	_atoi
  3024  0E5D  0877               	movf	?_atoi+1,w
  3025  0E5E  0020               	movlb	0	; select bank0
  3026  0E5F  00ED               	movwf	_prec+1
  3027  0E60  0876               	movf	?_atoi,w
  3028  0E61  00EC               	movwf	_prec
  3029                           
  3030                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  3031  0E62  2E6B               	goto	l3974
  3032  0E63                     l3970:
  3033                           
  3034                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  3035  0E63  0849               	movf	vfpfcnvrt@fmt,w
  3036  0E64  0086               	movwf	6
  3037  0E65  0187               	clrf	7
  3038  0E66  3001               	movlw	1
  3039  0E67  0781               	addwf	1,f
  3040  0E68  3141               	addfsr 1,1
  3041  0E69  1803               	skipnc
  3042  0E6A  0A81               	incf	1,f
  3043  0E6B                     l3974:
  3044  0E6B  0849               	movf	vfpfcnvrt@fmt,w
  3045  0E6C  0086               	movwf	6
  3046  0E6D  0187               	clrf	7
  3047  0E6E  3F40               	moviw [0]fsr1
  3048  0E6F  00CB               	movwf	??_vfpfcnvrt
  3049  0E70  3F41               	moviw [1]fsr1
  3050  0E71  00CC               	movwf	??_vfpfcnvrt+1
  3051  0E72  084B               	movf	??_vfpfcnvrt,w
  3052  0E73  0084               	movwf	4
  3053  0E74  084C               	movf	??_vfpfcnvrt+1,w
  3054  0E75  0085               	movwf	5
  3055  0E76  0800               	movf	0,w	;code access
  3056  0E77  3ED0               	addlw	208
  3057  0E78  00CD               	movwf	??_vfpfcnvrt+2
  3058  0E79  30FF               	movlw	255
  3059  0E7A  1803               	skipnc
  3060  0E7B  3000               	movlw	0
  3061  0E7C  00CE               	movwf	??_vfpfcnvrt+3
  3062  0E7D  3000               	movlw	0
  3063  0E7E  024E               	subwf	??_vfpfcnvrt+3,w
  3064  0E7F  300A               	movlw	10
  3065  0E80  1903               	skipnz
  3066  0E81  024D               	subwf	??_vfpfcnvrt+2,w
  3067  0E82  1C03               	skipc
  3068  0E83  2E85               	goto	u5321
  3069  0E84  2E86               	goto	u5320
  3070  0E85                     u5321:
  3071  0E85  2E63               	goto	l3970
  3072  0E86                     u5320:
  3073  0E86                     l3976:
  3074                           
  3075                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3076  0E86  0849               	movf	vfpfcnvrt@fmt,w
  3077  0E87  0086               	movwf	6
  3078  0E88  0187               	clrf	7
  3079  0E89  3F40               	moviw [0]fsr1
  3080  0E8A  00CB               	movwf	??_vfpfcnvrt
  3081  0E8B  3F41               	moviw [1]fsr1
  3082  0E8C  00CC               	movwf	??_vfpfcnvrt+1
  3083  0E8D  084B               	movf	??_vfpfcnvrt,w
  3084  0E8E  0084               	movwf	4
  3085  0E8F  084C               	movf	??_vfpfcnvrt+1,w
  3086  0E90  0085               	movwf	5
  3087  0E91  0800               	movf	0,w	;code access
  3088  0E92  00CD               	movwf	??_vfpfcnvrt+2
  3089  0E93  01CE               	clrf	??_vfpfcnvrt+3
  3090  0E94  084D               	movf	??_vfpfcnvrt+2,w
  3091  0E95  00F6               	movwf	tolower@c
  3092  0E96  084E               	movf	??_vfpfcnvrt+3,w
  3093  0E97  00F7               	movwf	tolower@c+1
  3094  0E98  319E  2654  318D   	fcall	_tolower
  3095  0E9B  0876               	movf	?_tolower,w
  3096  0E9C  0020               	movlb	0	; select bank0
  3097  0E9D  00CF               	movwf	??_vfpfcnvrt+4
  3098  0E9E  084F               	movf	??_vfpfcnvrt+4,w
  3099  0E9F  00D4               	movwf	vfpfcnvrt@ct
  3100  0EA0                     l3978:
  3101                           
  3102                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3103  0EA0  0854               	movf	vfpfcnvrt@ct,w
  3104  0EA1  1903               	btfsc	3,2
  3105  0EA2  2EA4               	goto	u5331
  3106  0EA3  2EA5               	goto	u5330
  3107  0EA4                     u5331:
  3108  0EA4  2EE4               	goto	l3986
  3109  0EA5                     u5330:
  3110  0EA5                     l3980:
  3111                           
  3112                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3113  0EA5  0849               	movf	vfpfcnvrt@fmt,w
  3114  0EA6  0086               	movwf	6
  3115  0EA7  0187               	clrf	7
  3116  0EA8  3F40               	moviw [0]fsr1
  3117  0EA9  00CB               	movwf	??_vfpfcnvrt
  3118  0EAA  3F41               	moviw [1]fsr1
  3119  0EAB  00CC               	movwf	??_vfpfcnvrt+1
  3120  0EAC  3001               	movlw	1
  3121  0EAD  074B               	addwf	??_vfpfcnvrt,w
  3122  0EAE  0084               	movwf	4
  3123  0EAF  084C               	movf	??_vfpfcnvrt+1,w
  3124  0EB0  1803               	skipnc
  3125  0EB1  0A4C               	incf	??_vfpfcnvrt+1,w
  3126  0EB2  0085               	movwf	5
  3127  0EB3  0800               	movf	0,w	;code access
  3128  0EB4  00CD               	movwf	??_vfpfcnvrt+2
  3129  0EB5  01CE               	clrf	??_vfpfcnvrt+3
  3130  0EB6  084D               	movf	??_vfpfcnvrt+2,w
  3131  0EB7  00F6               	movwf	tolower@c
  3132  0EB8  084E               	movf	??_vfpfcnvrt+3,w
  3133  0EB9  00F7               	movwf	tolower@c+1
  3134  0EBA  319E  2654  318D   	fcall	_tolower
  3135  0EBD  0876               	movf	?_tolower,w
  3136  0EBE  0020               	movlb	0	; select bank0
  3137  0EBF  00CF               	movwf	??_vfpfcnvrt+4
  3138  0EC0  084F               	movf	??_vfpfcnvrt+4,w
  3139  0EC1  00D5               	movwf	vfpfcnvrt@ct+1
  3140  0EC2                     l3982:
  3141                           
  3142                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3143  0EC2  0855               	movf	vfpfcnvrt@ct+1,w
  3144  0EC3  1903               	btfsc	3,2
  3145  0EC4  2EC6               	goto	u5341
  3146  0EC5  2EC7               	goto	u5340
  3147  0EC6                     u5341:
  3148  0EC6  2EE4               	goto	l3986
  3149  0EC7                     u5340:
  3150  0EC7                     l3984:
  3151                           
  3152                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3153  0EC7  0849               	movf	vfpfcnvrt@fmt,w
  3154  0EC8  0086               	movwf	6
  3155  0EC9  0187               	clrf	7
  3156  0ECA  3F40               	moviw [0]fsr1
  3157  0ECB  00CB               	movwf	??_vfpfcnvrt
  3158  0ECC  3F41               	moviw [1]fsr1
  3159  0ECD  00CC               	movwf	??_vfpfcnvrt+1
  3160  0ECE  3002               	movlw	2
  3161  0ECF  074B               	addwf	??_vfpfcnvrt,w
  3162  0ED0  0084               	movwf	4
  3163  0ED1  084C               	movf	??_vfpfcnvrt+1,w
  3164  0ED2  1803               	skipnc
  3165  0ED3  0A4C               	incf	??_vfpfcnvrt+1,w
  3166  0ED4  0085               	movwf	5
  3167  0ED5  0800               	movf	0,w	;code access
  3168  0ED6  00CD               	movwf	??_vfpfcnvrt+2
  3169  0ED7  01CE               	clrf	??_vfpfcnvrt+3
  3170  0ED8  084D               	movf	??_vfpfcnvrt+2,w
  3171  0ED9  00F6               	movwf	tolower@c
  3172  0EDA  084E               	movf	??_vfpfcnvrt+3,w
  3173  0EDB  00F7               	movwf	tolower@c+1
  3174  0EDC  319E  2654  318D   	fcall	_tolower
  3175  0EDF  0876               	movf	?_tolower,w
  3176  0EE0  0020               	movlb	0	; select bank0
  3177  0EE1  00CF               	movwf	??_vfpfcnvrt+4
  3178  0EE2  084F               	movf	??_vfpfcnvrt+4,w
  3179  0EE3  00D6               	movwf	vfpfcnvrt@ct+2
  3180  0EE4                     l3986:
  3181                           
  3182                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3183  0EE4  3066               	movlw	102
  3184  0EE5  0654               	xorwf	vfpfcnvrt@ct,w
  3185  0EE6  1D03               	btfss	3,2
  3186  0EE7  2EE9               	goto	u5351
  3187  0EE8  2EEA               	goto	u5350
  3188  0EE9                     u5351:
  3189  0EE9  2F27               	goto	l3998
  3190  0EEA                     u5350:
  3191  0EEA                     l3988:
  3192                           
  3193                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3194  0EEA  0849               	movf	vfpfcnvrt@fmt,w
  3195  0EEB  0086               	movwf	6
  3196  0EEC  0187               	clrf	7
  3197  0EED  3F40               	moviw [0]fsr1
  3198  0EEE  00CB               	movwf	??_vfpfcnvrt
  3199  0EEF  3F41               	moviw [1]fsr1
  3200  0EF0  00CC               	movwf	??_vfpfcnvrt+1
  3201  0EF1  084B               	movf	??_vfpfcnvrt,w
  3202  0EF2  0084               	movwf	4
  3203  0EF3  084C               	movf	??_vfpfcnvrt+1,w
  3204  0EF4  0085               	movwf	5
  3205  0EF5  0800               	movf	0,w	;code access
  3206  0EF6  00CD               	movwf	??_vfpfcnvrt+2
  3207  0EF7  084D               	movf	??_vfpfcnvrt+2,w
  3208  0EF8  00D7               	movwf	vfpfcnvrt@c
  3209  0EF9                     l3990:
  3210                           
  3211                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3212  0EF9  0849               	movf	vfpfcnvrt@fmt,w
  3213  0EFA  0086               	movwf	6
  3214  0EFB  0187               	clrf	7
  3215  0EFC  3001               	movlw	1
  3216  0EFD  0781               	addwf	1,f
  3217  0EFE  3141               	addfsr 1,1
  3218  0EFF  1803               	skipnc
  3219  0F00  0A81               	incf	1,f
  3220  0F01                     l3992:
  3221                           
  3222                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3223  0F01  084A               	movf	vfpfcnvrt@ap,w
  3224  0F02  0086               	movwf	6
  3225  0F03  0187               	clrf	7
  3226  0F04  0801               	movf	1,w
  3227  0F05  0084               	movwf	4
  3228  0F06  0185               	clrf	5
  3229  0F07  3004               	movlw	4
  3230  0F08  0781               	addwf	1,f
  3231  0F09  3F00               	moviw [0]fsr0
  3232  0F0A  00D0               	movwf	vfpfcnvrt@f
  3233  0F0B  3F01               	moviw [1]fsr0
  3234  0F0C  00D1               	movwf	vfpfcnvrt@f+1
  3235  0F0D  3F02               	moviw [2]fsr0
  3236  0F0E  00D2               	movwf	vfpfcnvrt@f+2
  3237  0F0F  3F03               	moviw [3]fsr0
  3238  0F10  00D3               	movwf	vfpfcnvrt@f+3
  3239  0F11                     l3994:
  3240                           
  3241                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3242  0F11  0853               	movf	vfpfcnvrt@f+3,w
  3243  0F12  00C4               	movwf	efgtoa@f+3
  3244  0F13  0852               	movf	vfpfcnvrt@f+2,w
  3245  0F14  00C3               	movwf	efgtoa@f+2
  3246  0F15  0851               	movf	vfpfcnvrt@f+1,w
  3247  0F16  00C2               	movwf	efgtoa@f+1
  3248  0F17  0850               	movf	vfpfcnvrt@f,w
  3249  0F18  00C1               	movwf	efgtoa@f
  3250  0F19  0857               	movf	vfpfcnvrt@c,w
  3251  0F1A  00CB               	movwf	??_vfpfcnvrt
  3252  0F1B  084B               	movf	??_vfpfcnvrt,w
  3253  0F1C  00C5               	movwf	efgtoa@c
  3254  0F1D  0858               	movf	vfpfcnvrt@fp,w
  3255  0F1E  3180  20C4  318D   	fcall	_efgtoa
  3256  0F21  0020               	movlb	0	; select bank0
  3257  0F22  0842               	movf	?_efgtoa+1,w
  3258  0F23  00CA               	movwf	?_vfpfcnvrt+1
  3259  0F24  0841               	movf	?_efgtoa,w
  3260  0F25  00C9               	movwf	?_vfpfcnvrt
  3261  0F26  2FFF               	goto	l970
  3262  0F27                     l3998:
  3263                           
  3264                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3265  0F27  301C               	movlw	low (STR_10| (0+32768))
  3266  0F28  00F0               	movwf	strncmp@_r
  3267  0F29  30A0               	movlw	high (STR_10| (0+32768))
  3268  0F2A  00F1               	movwf	strncmp@_r+1
  3269  0F2B  3002               	movlw	2
  3270  0F2C  00F2               	movwf	strncmp@n
  3271  0F2D  3000               	movlw	0
  3272  0F2E  00F3               	movwf	strncmp@n+1
  3273  0F2F  3054               	movlw	(low (vfpfcnvrt@ct| 0))& (0+255)
  3274  0F30  3192  229E  318D   	fcall	_strncmp
  3275  0F33  0870               	movf	?_strncmp,w
  3276  0F34  0471               	iorwf	?_strncmp+1,w
  3277  0F35  1D03               	btfss	3,2
  3278  0F36  2F38               	goto	u5361
  3279  0F37  2F39               	goto	u5360
  3280  0F38                     u5361:
  3281  0F38  2FA6               	goto	l4016
  3282  0F39                     u5360:
  3283  0F39                     l4000:
  3284                           
  3285                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  3286  0F39  0020               	movlb	0	; select bank0
  3287  0F3A  0849               	movf	vfpfcnvrt@fmt,w
  3288  0F3B  0086               	movwf	6
  3289  0F3C  0187               	clrf	7
  3290  0F3D  3F40               	moviw [0]fsr1
  3291  0F3E  00CB               	movwf	??_vfpfcnvrt
  3292  0F3F  3F41               	moviw [1]fsr1
  3293  0F40  00CC               	movwf	??_vfpfcnvrt+1
  3294  0F41  3001               	movlw	1
  3295  0F42  074B               	addwf	??_vfpfcnvrt,w
  3296  0F43  0084               	movwf	4
  3297  0F44  084C               	movf	??_vfpfcnvrt+1,w
  3298  0F45  1803               	skipnc
  3299  0F46  0A4C               	incf	??_vfpfcnvrt+1,w
  3300  0F47  0085               	movwf	5
  3301  0F48  0800               	movf	0,w	;code access
  3302  0F49  00CD               	movwf	??_vfpfcnvrt+2
  3303  0F4A  084D               	movf	??_vfpfcnvrt+2,w
  3304  0F4B  00D7               	movwf	vfpfcnvrt@c
  3305  0F4C                     l4004:	
  3306                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 && isupper((int)(*fmt)[0]), ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3307                           
  3308  0F4C  0849               	movf	vfpfcnvrt@fmt,w
  3309  0F4D  0086               	movwf	6
  3310  0F4E  0187               	clrf	7
  3311  0F4F  3F40               	moviw [0]fsr1
  3312  0F50  00CB               	movwf	??_vfpfcnvrt
  3313  0F51  3F41               	moviw [1]fsr1
  3314  0F52  00CC               	movwf	??_vfpfcnvrt+1
  3315  0F53  084B               	movf	??_vfpfcnvrt,w
  3316  0F54  0084               	movwf	4
  3317  0F55  084C               	movf	??_vfpfcnvrt+1,w
  3318  0F56  0085               	movwf	5
  3319  0F57  0800               	movf	0,w	;code access
  3320  0F58  3EBF               	addlw	191
  3321  0F59  00CD               	movwf	??_vfpfcnvrt+2
  3322  0F5A  30FF               	movlw	255
  3323  0F5B  1803               	skipnc
  3324  0F5C  3000               	movlw	0
  3325  0F5D  00CE               	movwf	??_vfpfcnvrt+3
  3326  0F5E  3000               	movlw	0
  3327  0F5F  024E               	subwf	??_vfpfcnvrt+3,w
  3328  0F60  301A               	movlw	26
  3329  0F61  1903               	skipnz
  3330  0F62  024D               	subwf	??_vfpfcnvrt+2,w
  3331  0F63  1803               	skipnc
  3332  0F64  2F66               	goto	u5371
  3333  0F65  2F67               	goto	u5370
  3334  0F66                     u5371:
  3335  0F66  2F78               	goto	l4008
  3336  0F67                     u5370:
  3337  0F67                     l4006:
  3338                           
  3339                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3340  0F67  084A               	movf	vfpfcnvrt@ap,w
  3341  0F68  0086               	movwf	6
  3342  0F69  0187               	clrf	7
  3343  0F6A  0801               	movf	1,w
  3344  0F6B  0084               	movwf	4
  3345  0F6C  0185               	clrf	5
  3346  0F6D  3004               	movlw	4
  3347  0F6E  0781               	addwf	1,f
  3348  0F6F  3F00               	moviw [0]fsr0
  3349  0F70  00D0               	movwf	vfpfcnvrt@f
  3350  0F71  3F01               	moviw [1]fsr0
  3351  0F72  00D1               	movwf	vfpfcnvrt@f+1
  3352  0F73  3F02               	moviw [2]fsr0
  3353  0F74  00D2               	movwf	vfpfcnvrt@f+2
  3354  0F75  3F03               	moviw [3]fsr0
  3355  0F76  00D3               	movwf	vfpfcnvrt@f+3
  3356                           
  3357                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3358  0F77  2F88               	goto	l4010
  3359  0F78                     l4008:
  3360                           
  3361                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3362  0F78  084A               	movf	vfpfcnvrt@ap,w
  3363  0F79  0086               	movwf	6
  3364  0F7A  0187               	clrf	7
  3365  0F7B  0801               	movf	1,w
  3366  0F7C  0084               	movwf	4
  3367  0F7D  0185               	clrf	5
  3368  0F7E  3004               	movlw	4
  3369  0F7F  0781               	addwf	1,f
  3370  0F80  3F00               	moviw [0]fsr0
  3371  0F81  00D0               	movwf	vfpfcnvrt@f
  3372  0F82  3F01               	moviw [1]fsr0
  3373  0F83  00D1               	movwf	vfpfcnvrt@f+1
  3374  0F84  3F02               	moviw [2]fsr0
  3375  0F85  00D2               	movwf	vfpfcnvrt@f+2
  3376  0F86  3F03               	moviw [3]fsr0
  3377  0F87  00D3               	movwf	vfpfcnvrt@f+3
  3378  0F88                     l4010:
  3379                           
  3380                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3381  0F88  0849               	movf	vfpfcnvrt@fmt,w
  3382  0F89  0086               	movwf	6
  3383  0F8A  0187               	clrf	7
  3384  0F8B  3002               	movlw	2
  3385  0F8C  0781               	addwf	1,f
  3386  0F8D  3141               	addfsr 1,1
  3387  0F8E  1803               	skipnc
  3388  0F8F  0A81               	incf	1,f
  3389  0F90                     l4012:
  3390                           
  3391                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  3392  0F90  0853               	movf	vfpfcnvrt@f+3,w
  3393  0F91  00C4               	movwf	efgtoa@f+3
  3394  0F92  0852               	movf	vfpfcnvrt@f+2,w
  3395  0F93  00C3               	movwf	efgtoa@f+2
  3396  0F94  0851               	movf	vfpfcnvrt@f+1,w
  3397  0F95  00C2               	movwf	efgtoa@f+1
  3398  0F96  0850               	movf	vfpfcnvrt@f,w
  3399  0F97  00C1               	movwf	efgtoa@f
  3400  0F98  0857               	movf	vfpfcnvrt@c,w
  3401  0F99  00CB               	movwf	??_vfpfcnvrt
  3402  0F9A  084B               	movf	??_vfpfcnvrt,w
  3403  0F9B  00C5               	movwf	efgtoa@c
  3404  0F9C  0858               	movf	vfpfcnvrt@fp,w
  3405  0F9D  3180  20C4  318D   	fcall	_efgtoa
  3406  0FA0  0020               	movlb	0	; select bank0
  3407  0FA1  0842               	movf	?_efgtoa+1,w
  3408  0FA2  00CA               	movwf	?_vfpfcnvrt+1
  3409  0FA3  0841               	movf	?_efgtoa,w
  3410  0FA4  00C9               	movwf	?_vfpfcnvrt
  3411  0FA5  2FFF               	goto	l970
  3412  0FA6                     l4016:
  3413                           
  3414                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3415  0FA6  0020               	movlb	0	; select bank0
  3416  0FA7  0849               	movf	vfpfcnvrt@fmt,w
  3417  0FA8  0086               	movwf	6
  3418  0FA9  0187               	clrf	7
  3419  0FAA  3F40               	moviw [0]fsr1
  3420  0FAB  00CB               	movwf	??_vfpfcnvrt
  3421  0FAC  3F41               	moviw [1]fsr1
  3422  0FAD  00CC               	movwf	??_vfpfcnvrt+1
  3423  0FAE  084B               	movf	??_vfpfcnvrt,w
  3424  0FAF  0084               	movwf	4
  3425  0FB0  084C               	movf	??_vfpfcnvrt+1,w
  3426  0FB1  0085               	movwf	5
  3427  0FB2  0012               	moviw fsr0++
  3428  0FB3  3A25               	xorlw	37
  3429  0FB4  1D03               	btfss	3,2
  3430  0FB5  2FB7               	goto	u5381
  3431  0FB6  2FB8               	goto	u5380
  3432  0FB7                     u5381:
  3433  0FB7  2FD1               	goto	l4026
  3434  0FB8                     u5380:
  3435  0FB8                     l4018:
  3436                           
  3437                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3438  0FB8  0849               	movf	vfpfcnvrt@fmt,w
  3439  0FB9  0086               	movwf	6
  3440  0FBA  0187               	clrf	7
  3441  0FBB  3001               	movlw	1
  3442  0FBC  0781               	addwf	1,f
  3443  0FBD  3141               	addfsr 1,1
  3444  0FBE  1803               	skipnc
  3445  0FBF  0A81               	incf	1,f
  3446  0FC0                     l4020:
  3447                           
  3448                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3449  0FC0  3025               	movlw	37
  3450  0FC1  00F0               	movwf	fputc@c
  3451  0FC2  3000               	movlw	0
  3452  0FC3  00F1               	movwf	fputc@c+1
  3453  0FC4  0858               	movf	vfpfcnvrt@fp,w
  3454  0FC5  00CB               	movwf	??_vfpfcnvrt
  3455  0FC6  084B               	movf	??_vfpfcnvrt,w
  3456  0FC7  00F2               	movwf	fputc@fp
  3457  0FC8  3191  21F5  318D   	fcall	_fputc
  3458  0FCB                     l4022:
  3459                           
  3460                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3461  0FCB  3001               	movlw	1
  3462  0FCC  0020               	movlb	0	; select bank0
  3463  0FCD  00C9               	movwf	?_vfpfcnvrt
  3464  0FCE  3000               	movlw	0
  3465  0FCF  00CA               	movwf	?_vfpfcnvrt+1
  3466  0FD0  2FFF               	goto	l970
  3467  0FD1                     l4026:
  3468                           
  3469                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3470  0FD1  0849               	movf	vfpfcnvrt@fmt,w
  3471  0FD2  0086               	movwf	6
  3472  0FD3  0187               	clrf	7
  3473  0FD4  3001               	movlw	1
  3474  0FD5  0781               	addwf	1,f
  3475  0FD6  3141               	addfsr 1,1
  3476  0FD7  1803               	skipnc
  3477  0FD8  0A81               	incf	1,f
  3478  0FD9                     l4028:
  3479                           
  3480                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3481  0FD9  01C9               	clrf	?_vfpfcnvrt
  3482  0FDA  01CA               	clrf	?_vfpfcnvrt+1
  3483  0FDB  2FFF               	goto	l970
  3484  0FDC                     l4032:
  3485                           
  3486                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3487  0FDC  0849               	movf	vfpfcnvrt@fmt,w
  3488  0FDD  0086               	movwf	6
  3489  0FDE  0187               	clrf	7
  3490  0FDF  3F40               	moviw [0]fsr1
  3491  0FE0  00CB               	movwf	??_vfpfcnvrt
  3492  0FE1  3F41               	moviw [1]fsr1
  3493  0FE2  00CC               	movwf	??_vfpfcnvrt+1
  3494  0FE3  084B               	movf	??_vfpfcnvrt,w
  3495  0FE4  0084               	movwf	4
  3496  0FE5  084C               	movf	??_vfpfcnvrt+1,w
  3497  0FE6  0085               	movwf	5
  3498  0FE7  0800               	movf	0,w	;code access
  3499  0FE8  00CD               	movwf	??_vfpfcnvrt+2
  3500  0FE9  01CE               	clrf	??_vfpfcnvrt+3
  3501  0FEA  084D               	movf	??_vfpfcnvrt+2,w
  3502  0FEB  00F0               	movwf	fputc@c
  3503  0FEC  084E               	movf	??_vfpfcnvrt+3,w
  3504  0FED  00F1               	movwf	fputc@c+1
  3505  0FEE  0858               	movf	vfpfcnvrt@fp,w
  3506  0FEF  00CF               	movwf	??_vfpfcnvrt+4
  3507  0FF0  084F               	movf	??_vfpfcnvrt+4,w
  3508  0FF1  00F2               	movwf	fputc@fp
  3509  0FF2  3191  21F5  318D   	fcall	_fputc
  3510  0FF5                     l4034:
  3511                           
  3512                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3513  0FF5  0020               	movlb	0	; select bank0
  3514  0FF6  0849               	movf	vfpfcnvrt@fmt,w
  3515  0FF7  0086               	movwf	6
  3516  0FF8  0187               	clrf	7
  3517  0FF9  3001               	movlw	1
  3518  0FFA  0781               	addwf	1,f
  3519  0FFB  3141               	addfsr 1,1
  3520  0FFC  1803               	skipnc
  3521  0FFD  0A81               	incf	1,f
  3522  0FFE  2FCB               	goto	l4022
  3523  0FFF                     l970:
  3524  0FFF  0008               	return
  3525  1000                     __end_of_vfpfcnvrt:
  3526                           
  3527                           	psect	text4
  3528  129E                     __ptext4:	
  3529 ;; *************** function _strncmp *****************
  3530 ;; Defined at:
  3531 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  _l              1    wreg     PTR const unsigned char 
  3534 ;;		 -> vfpfcnvrt@ct(3), 
  3535 ;;  _r              2    0[COMMON] PTR const unsigned char 
  3536 ;;		 -> STR_12(3), 
  3537 ;;  n               2    2[COMMON] unsigned int 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;  _l              1    5[COMMON] PTR const unsigned char 
  3540 ;;		 -> vfpfcnvrt@ct(3), 
  3541 ;;  r               2    6[COMMON] PTR const unsigned char 
  3542 ;;		 -> STR_12(3), 
  3543 ;;  l               1    8[COMMON] PTR const unsigned char 
  3544 ;;		 -> vfpfcnvrt@ct(3), 
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  2    0[COMMON] int 
  3547 ;; Registers used:
  3548 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3554 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3555 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3556 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3557 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3558 ;;Total ram usage:        9 bytes
  3559 ;; Hardware stack levels used: 1
  3560 ;; This function calls:
  3561 ;;		Nothing
  3562 ;; This function is called by:
  3563 ;;		_vfpfcnvrt
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567  129E                     _strncmp:	
  3568                           ;psect for function _strncmp
  3569                           
  3570                           
  3571                           ;incstack = 0
  3572                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  3573                           ;strncmp@_l stored from wreg
  3574  129E  00F5               	movwf	strncmp@_l
  3575  129F                     l3872:
  3576  129F  0875               	movf	strncmp@_l,w
  3577  12A0  00F4               	movwf	??_strncmp
  3578  12A1  0874               	movf	??_strncmp,w
  3579  12A2  00F8               	movwf	strncmp@l
  3580  12A3  0871               	movf	strncmp@_r+1,w
  3581  12A4  00F7               	movwf	strncmp@r+1
  3582  12A5  0870               	movf	strncmp@_r,w
  3583  12A6  00F6               	movwf	strncmp@r
  3584  12A7                     l3874:
  3585  12A7  3001               	movlw	1
  3586  12A8  02F2               	subwf	strncmp@n,f
  3587  12A9  3000               	movlw	0
  3588  12AA  3BF3               	subwfb	strncmp@n+1,f
  3589  12AB  0A72               	incf	strncmp@n,w
  3590  12AC  1D03               	skipz
  3591  12AD  2AB2               	goto	u5161
  3592  12AE  0A73               	incf	strncmp@n+1,w
  3593  12AF  1D03               	btfss	3,2
  3594  12B0  2AB2               	goto	u5161
  3595  12B1  2AB3               	goto	u5160
  3596  12B2                     u5161:
  3597  12B2  2AC2               	goto	l3886
  3598  12B3                     u5160:
  3599  12B3                     l3876:
  3600  12B3  01F0               	clrf	?_strncmp
  3601  12B4  01F1               	clrf	?_strncmp+1
  3602  12B5  2AF5               	goto	l1090
  3603  12B6                     l3880:
  3604  12B6  3001               	movlw	1
  3605  12B7  00F4               	movwf	??_strncmp
  3606  12B8  0874               	movf	??_strncmp,w
  3607  12B9  07F8               	addwf	strncmp@l,f
  3608  12BA                     l3882:
  3609  12BA  3001               	movlw	1
  3610  12BB  07F6               	addwf	strncmp@r,f
  3611  12BC  3000               	movlw	0
  3612  12BD  3DF7               	addwfc	strncmp@r+1,f
  3613  12BE                     l3884:
  3614  12BE  3001               	movlw	1
  3615  12BF  02F2               	subwf	strncmp@n,f
  3616  12C0  3000               	movlw	0
  3617  12C1  3BF3               	subwfb	strncmp@n+1,f
  3618  12C2                     l3886:
  3619  12C2  0878               	movf	strncmp@l,w
  3620  12C3  0086               	movwf	6
  3621  12C4  0187               	clrf	7
  3622  12C5  0801               	movf	1,w
  3623  12C6  1903               	btfsc	3,2
  3624  12C7  2AC9               	goto	u5171
  3625  12C8  2ACA               	goto	u5170
  3626  12C9                     u5171:
  3627  12C9  2AE8               	goto	l3894
  3628  12CA                     u5170:
  3629  12CA                     l3888:
  3630  12CA  0876               	movf	strncmp@r,w
  3631  12CB  0084               	movwf	4
  3632  12CC  0877               	movf	strncmp@r+1,w
  3633  12CD  0085               	movwf	5
  3634  12CE  0012               	moviw fsr0++
  3635  12CF  1903               	btfsc	3,2
  3636  12D0  2AD2               	goto	u5181
  3637  12D1  2AD3               	goto	u5180
  3638  12D2                     u5181:
  3639  12D2  2AE8               	goto	l3894
  3640  12D3                     u5180:
  3641  12D3                     l3890:
  3642  12D3  0872               	movf	strncmp@n,w
  3643  12D4  0473               	iorwf	strncmp@n+1,w
  3644  12D5  1903               	btfsc	3,2
  3645  12D6  2AD8               	goto	u5191
  3646  12D7  2AD9               	goto	u5190
  3647  12D8                     u5191:
  3648  12D8  2AE8               	goto	l3894
  3649  12D9                     u5190:
  3650  12D9                     l3892:
  3651  12D9  0876               	movf	strncmp@r,w
  3652  12DA  0084               	movwf	4
  3653  12DB  0877               	movf	strncmp@r+1,w
  3654  12DC  0085               	movwf	5
  3655  12DD  0800               	movf	0,w	;code access
  3656  12DE  00F4               	movwf	??_strncmp
  3657  12DF  0878               	movf	strncmp@l,w
  3658  12E0  0086               	movwf	6
  3659  12E1  0187               	clrf	7
  3660  12E2  0801               	movf	1,w
  3661  12E3  0674               	xorwf	??_strncmp,w
  3662  12E4  1903               	skipnz
  3663  12E5  2AE7               	goto	u5201
  3664  12E6  2AE8               	goto	u5200
  3665  12E7                     u5201:
  3666  12E7  2AB6               	goto	l3880
  3667  12E8                     u5200:
  3668  12E8                     l3894:
  3669  12E8  0878               	movf	strncmp@l,w
  3670  12E9  0086               	movwf	6
  3671  12EA  0187               	clrf	7
  3672  12EB  0876               	movf	strncmp@r,w
  3673  12EC  0084               	movwf	4
  3674  12ED  0877               	movf	strncmp@r+1,w
  3675  12EE  0085               	movwf	5
  3676  12EF  0800               	movf	0,w	;code access
  3677  12F0  0201               	subwf	1,w
  3678  12F1  00F0               	movwf	?_strncmp
  3679  12F2  01F1               	clrf	?_strncmp+1
  3680  12F3  1C03               	skipc
  3681  12F4  03F1               	decf	?_strncmp+1,f
  3682  12F5                     l1090:
  3683  12F5  0008               	return
  3684  12F6                     __end_of_strncmp:
  3685                           
  3686                           	psect	text5
  3687  00C4                     __ptext5:	
  3688 ;; *************** function _efgtoa *****************
  3689 ;; Defined at:
  3690 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;  fp              1    wreg     PTR struct _IO_FILE
  3693 ;;		 -> sprintf@f(10), 
  3694 ;;  f               4   33[BANK0 ] PTR struct _IO_FILE
  3695 ;;  c               1   37[BANK0 ] unsigned char 
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;  fp              1   22[BANK1 ] PTR struct _IO_FILE
  3698 ;;		 -> sprintf@f(10), 
  3699 ;;  u               4   47[BANK1 ] PTR struct _IO_FILE
  3700 ;;  g               4   39[BANK1 ] PTR struct _IO_FILE
  3701 ;;  l               4   33[BANK1 ] PTR struct _IO_FILE
  3702 ;;  h               4   29[BANK1 ] PTR struct _IO_FILE
  3703 ;;  ou              4   14[BANK1 ] PTR struct _IO_FILE
  3704 ;;  n               2   45[BANK1 ] int 
  3705 ;;  e               2   43[BANK1 ] int 
  3706 ;;  i               2   37[BANK1 ] int 
  3707 ;;  w               2   25[BANK1 ] int 
  3708 ;;  p               2   23[BANK1 ] int 
  3709 ;;  sign            2   20[BANK1 ] int 
  3710 ;;  d               2   18[BANK1 ] int 
  3711 ;;  m               2   12[BANK1 ] int 
  3712 ;;  ne              2   10[BANK1 ] int 
  3713 ;;  pp              2    8[BANK1 ] int 
  3714 ;;  t               2    6[BANK1 ] int 
  3715 ;;  mode            1   28[BANK1 ] unsigned char 
  3716 ;;  nmode           1   27[BANK1 ] unsigned char 
  3717 ;; Return value:  Size  Location     Type
  3718 ;;                  2   33[BANK0 ] int 
  3719 ;; Registers used:
  3720 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3726 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3727 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0
  3728 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3729 ;;      Totals:         0       8      51       0       0       0       0       0       0       0       0       0       
      +0       0
  3730 ;;Total ram usage:       59 bytes
  3731 ;; Hardware stack levels used: 1
  3732 ;; Hardware stack levels required when called: 4
  3733 ;; This function calls:
  3734 ;;		___awdiv
  3735 ;;		___awmod
  3736 ;;		___fladd
  3737 ;;		___fldiv
  3738 ;;		___fleq
  3739 ;;		___flge
  3740 ;;		___flmul
  3741 ;;		___flneg
  3742 ;;		___flsub
  3743 ;;		___fltol
  3744 ;;		___fpclassifyf
  3745 ;;		_floorf
  3746 ;;		_isupper
  3747 ;;		_pad
  3748 ;;		_strcpy
  3749 ;;		_tolower
  3750 ;; This function is called by:
  3751 ;;		_vfpfcnvrt
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755  00C4                     _efgtoa:	
  3756                           ;psect for function _efgtoa
  3757                           
  3758                           
  3759                           ;incstack = 0
  3760                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3761                           ;efgtoa@fp stored from wreg
  3762  00C4  0021               	movlb	1	; select bank1
  3763  00C5  00B6               	movwf	efgtoa@fp^(0+128)
  3764  00C6                     l3540:
  3765                           
  3766                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3767  00C6  01B4               	clrf	efgtoa@sign^(0+128)
  3768  00C7  01B5               	clrf	(efgtoa@sign+1)^(0+128)
  3769  00C8                     l3542:
  3770                           
  3771                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3772  00C8  0020               	movlb	0	; select bank0
  3773  00C9  0844               	movf	efgtoa@f+3,w
  3774  00CA  0021               	movlb	1	; select bank1
  3775  00CB  00CA               	movwf	(efgtoa@g+3)^(0+128)
  3776  00CC  0020               	movlb	0	; select bank0
  3777  00CD  0843               	movf	efgtoa@f+2,w
  3778  00CE  0021               	movlb	1	; select bank1
  3779  00CF  00C9               	movwf	(efgtoa@g+2)^(0+128)
  3780  00D0  0020               	movlb	0	; select bank0
  3781  00D1  0842               	movf	efgtoa@f+1,w
  3782  00D2  0021               	movlb	1	; select bank1
  3783  00D3  00C8               	movwf	(efgtoa@g+1)^(0+128)
  3784  00D4  0020               	movlb	0	; select bank0
  3785  00D5  0841               	movf	efgtoa@f,w
  3786  00D6  0021               	movlb	1	; select bank1
  3787  00D7  00C7               	movwf	efgtoa@g^(0+128)
  3788  00D8                     l3544:
  3789                           
  3790                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3791  00D8  084A               	movf	(efgtoa@g+3)^(0+128),w
  3792  00D9  0020               	movlb	0	; select bank0
  3793  00DA  00B8               	movwf	___flge@ff1+3
  3794  00DB  0021               	movlb	1	; select bank1
  3795  00DC  0849               	movf	(efgtoa@g+2)^(0+128),w
  3796  00DD  0020               	movlb	0	; select bank0
  3797  00DE  00B7               	movwf	___flge@ff1+2
  3798  00DF  0021               	movlb	1	; select bank1
  3799  00E0  0848               	movf	(efgtoa@g+1)^(0+128),w
  3800  00E1  0020               	movlb	0	; select bank0
  3801  00E2  00B6               	movwf	___flge@ff1+1
  3802  00E3  0021               	movlb	1	; select bank1
  3803  00E4  0847               	movf	efgtoa@g^(0+128),w
  3804  00E5  0020               	movlb	0	; select bank0
  3805  00E6  00B5               	movwf	___flge@ff1
  3806  00E7  3000               	movlw	0
  3807  00E8  00BC               	movwf	___flge@ff2+3
  3808  00E9  3000               	movlw	0
  3809  00EA  00BB               	movwf	___flge@ff2+2
  3810  00EB  3000               	movlw	0
  3811  00EC  00BA               	movwf	___flge@ff2+1
  3812  00ED  3000               	movlw	0
  3813  00EE  00B9               	movwf	___flge@ff2
  3814  00EF  3194  2448  3180   	fcall	___flge
  3815  00F2  1803               	btfsc	3,0
  3816  00F3  28F5               	goto	u4641
  3817  00F4  28F6               	goto	u4640
  3818  00F5                     u4641:
  3819  00F5  290F               	goto	l3550
  3820  00F6                     u4640:
  3821  00F6                     l3546:
  3822                           
  3823                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3824  00F6  3001               	movlw	1
  3825  00F7  0021               	movlb	1	; select bank1
  3826  00F8  00B4               	movwf	efgtoa@sign^(0+128)
  3827  00F9  3000               	movlw	0
  3828  00FA  00B5               	movwf	(efgtoa@sign^(0+128)+1)
  3829  00FB                     l3548:
  3830                           
  3831                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3832  00FB  084A               	movf	(efgtoa@g+3)^(0+128),w
  3833  00FC  00F3               	movwf	___flneg@f1+3
  3834  00FD  0849               	movf	(efgtoa@g+2)^(0+128),w
  3835  00FE  00F2               	movwf	___flneg@f1+2
  3836  00FF  0848               	movf	(efgtoa@g+1)^(0+128),w
  3837  0100  00F1               	movwf	___flneg@f1+1
  3838  0101  0847               	movf	efgtoa@g^(0+128),w
  3839  0102  00F0               	movwf	___flneg@f1
  3840  0103  319E  2629  3180   	fcall	___flneg
  3841  0106  0873               	movf	?___flneg+3,w
  3842  0107  0021               	movlb	1	; select bank1
  3843  0108  00CA               	movwf	(efgtoa@g+3)^(0+128)
  3844  0109  0872               	movf	?___flneg+2,w
  3845  010A  00C9               	movwf	(efgtoa@g+2)^(0+128)
  3846  010B  0871               	movf	?___flneg+1,w
  3847  010C  00C8               	movwf	(efgtoa@g+1)^(0+128)
  3848  010D  0870               	movf	?___flneg,w
  3849  010E  00C7               	movwf	efgtoa@g^(0+128)
  3850  010F                     l3550:
  3851                           
  3852                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3853  010F  0021               	movlb	1	; select bank1
  3854  0110  01CD               	clrf	efgtoa@n^(0+128)
  3855  0111  01CE               	clrf	(efgtoa@n+1)^(0+128)
  3856  0112                     l3552:
  3857                           
  3858                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3859  0112  0866               	movf	(_width+1)^(0+128),w
  3860  0113  00BA               	movwf	(efgtoa@w+1)^(0+128)
  3861  0114  0865               	movf	_width^(0+128),w
  3862  0115  00B9               	movwf	efgtoa@w^(0+128)
  3863  0116                     l3554:
  3864                           
  3865                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3866  0116  0834               	movf	efgtoa@sign^(0+128),w
  3867  0117  0435               	iorwf	(efgtoa@sign+1)^(0+128),w
  3868  0118  1D03               	btfss	3,2
  3869  0119  291B               	goto	u4651
  3870  011A  291C               	goto	u4650
  3871  011B                     u4651:
  3872  011B  2921               	goto	l3558
  3873  011C                     u4650:
  3874  011C                     l3556:
  3875  011C  0020               	movlb	0	; select bank0
  3876  011D  1D6E               	btfss	_flags,2
  3877  011E  2920               	goto	u4661
  3878  011F  2921               	goto	u4660
  3879  0120                     u4661:
  3880  0120  2940               	goto	l3570
  3881  0121                     u4660:
  3882  0121                     l3558:
  3883                           
  3884                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3885  0121  0021               	movlb	1	; select bank1
  3886  0122  0834               	movf	efgtoa@sign^(0+128),w
  3887  0123  0435               	iorwf	(efgtoa@sign+1)^(0+128),w
  3888  0124  1D03               	btfss	3,2
  3889  0125  2927               	goto	u4671
  3890  0126  2928               	goto	u4670
  3891  0127                     u4671:
  3892  0127  292D               	goto	l3562
  3893  0128                     u4670:
  3894  0128                     l3560:
  3895  0128  302B               	movlw	43
  3896  0129  00A0               	movwf	_efgtoa$926^(0+128)
  3897  012A  3000               	movlw	0
  3898  012B  00A1               	movwf	(_efgtoa$926^(0+128)+1)
  3899  012C  2931               	goto	l3564
  3900  012D                     l3562:
  3901  012D  302D               	movlw	45
  3902  012E  00A0               	movwf	_efgtoa$926^(0+128)
  3903  012F  3000               	movlw	0
  3904  0130  00A1               	movwf	(_efgtoa$926^(0+128)+1)
  3905  0131                     l3564:
  3906  0131  0820               	movf	_efgtoa$926^(0+128),w
  3907  0132  0020               	movlb	0	; select bank0
  3908  0133  00C6               	movwf	??_efgtoa
  3909  0134  0846               	movf	??_efgtoa,w
  3910  0135  0023               	movlb	3	; select bank3
  3911  0136  00A0               	movwf	_dbuf^(0+384)
  3912  0137                     l3566:
  3913                           
  3914                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3915  0137  3001               	movlw	1
  3916  0138  0021               	movlb	1	; select bank1
  3917  0139  07CD               	addwf	efgtoa@n^(0+128),f
  3918  013A  3000               	movlw	0
  3919  013B  3DCE               	addwfc	(efgtoa@n+1)^(0+128),f
  3920  013C                     l3568:
  3921                           
  3922                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  3923  013C  30FF               	movlw	255
  3924  013D  07B9               	addwf	efgtoa@w^(0+128),f
  3925  013E  30FF               	movlw	255
  3926  013F  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  3927  0140                     l3570:
  3928                           
  3929                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  3930  0140  0021               	movlb	1	; select bank1
  3931  0141  084A               	movf	(efgtoa@g+3)^(0+128),w
  3932  0142  00F3               	movwf	___fpclassifyf@x+3
  3933  0143  0849               	movf	(efgtoa@g+2)^(0+128),w
  3934  0144  00F2               	movwf	___fpclassifyf@x+2
  3935  0145  0848               	movf	(efgtoa@g+1)^(0+128),w
  3936  0146  00F1               	movwf	___fpclassifyf@x+1
  3937  0147  0847               	movf	efgtoa@g^(0+128),w
  3938  0148  00F0               	movwf	___fpclassifyf@x
  3939  0149  3193  23C9  3180   	fcall	___fpclassifyf
  3940  014C  0370               	decf	?___fpclassifyf,w
  3941  014D  0471               	iorwf	?___fpclassifyf+1,w
  3942  014E  1D03               	btfss	3,2
  3943  014F  2951               	goto	u4681
  3944  0150  2952               	goto	u4680
  3945  0151                     u4681:
  3946  0151  2995               	goto	l3588
  3947  0152                     u4680:
  3948  0152                     l3576:
  3949  0152  0020               	movlb	0	; select bank0
  3950  0153  0845               	movf	efgtoa@c,w
  3951  0154  3EBF               	addlw	191
  3952  0155  00C6               	movwf	??_efgtoa
  3953  0156  30FF               	movlw	255
  3954  0157  1803               	skipnc
  3955  0158  3000               	movlw	0
  3956  0159  00C7               	movwf	??_efgtoa+1
  3957  015A  3000               	movlw	0
  3958  015B  0247               	subwf	??_efgtoa+1,w
  3959  015C  301A               	movlw	26
  3960  015D  1903               	skipnz
  3961  015E  0246               	subwf	??_efgtoa,w
  3962  015F  1803               	skipnc
  3963  0160  2962               	goto	u4691
  3964  0161  2963               	goto	u4690
  3965  0162                     u4691:
  3966  0162  296E               	goto	l3580
  3967  0163                     u4690:
  3968  0163                     l3578:
  3969                           
  3970                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3971  0163  300C               	movlw	low (STR_2| (0+32768))
  3972  0164  00F0               	movwf	strcpy@src
  3973  0165  30A0               	movlw	high (STR_2| (0+32768))
  3974  0166  00F1               	movwf	strcpy@src+1
  3975  0167  0021               	movlb	1	; select bank1
  3976  0168  084D               	movf	efgtoa@n^(0+128),w
  3977  0169  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3978  016A  319F  274F  3180   	fcall	_strcpy
  3979                           
  3980                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3981  016D  2978               	goto	l3582
  3982  016E                     l3580:
  3983                           
  3984                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3985  016E  3014               	movlw	low (STR_3| (0+32768))
  3986  016F  00F0               	movwf	strcpy@src
  3987  0170  30A0               	movlw	high (STR_3| (0+32768))
  3988  0171  00F1               	movwf	strcpy@src+1
  3989  0172  0021               	movlb	1	; select bank1
  3990  0173  084D               	movf	efgtoa@n^(0+128),w
  3991  0174  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3992  0175  319F  274F  3180   	fcall	_strcpy
  3993  0178                     l3582:
  3994                           
  3995                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3996  0178  30FD               	movlw	253
  3997  0179  0021               	movlb	1	; select bank1
  3998  017A  07B9               	addwf	efgtoa@w^(0+128),f
  3999  017B  30FF               	movlw	255
  4000  017C  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  4001  017D                     l3584:
  4002                           
  4003                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4004  017D  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  4005  017E  0020               	movlb	0	; select bank0
  4006  017F  00C6               	movwf	??_efgtoa
  4007  0180  0846               	movf	??_efgtoa,w
  4008  0181  00A4               	movwf	pad@buf
  4009  0182  0021               	movlb	1	; select bank1
  4010  0183  083A               	movf	(efgtoa@w+1)^(0+128),w
  4011  0184  0020               	movlb	0	; select bank0
  4012  0185  00A6               	movwf	pad@p+1
  4013  0186  0021               	movlb	1	; select bank1
  4014  0187  0839               	movf	efgtoa@w^(0+128),w
  4015  0188  0020               	movlb	0	; select bank0
  4016  0189  00A5               	movwf	pad@p
  4017  018A  0021               	movlb	1	; select bank1
  4018  018B  0836               	movf	efgtoa@fp^(0+128),w
  4019  018C  3192  2248  3180   	fcall	_pad
  4020  018F  0020               	movlb	0	; select bank0
  4021  0190  0825               	movf	?_pad+1,w
  4022  0191  00C2               	movwf	?_efgtoa+1
  4023  0192  0824               	movf	?_pad,w
  4024  0193  00C1               	movwf	?_efgtoa
  4025  0194  2FD4               	goto	l876
  4026  0195                     l3588:
  4027                           
  4028                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  4029  0195  0021               	movlb	1	; select bank1
  4030  0196  084A               	movf	(efgtoa@g+3)^(0+128),w
  4031  0197  00F3               	movwf	___fpclassifyf@x+3
  4032  0198  0849               	movf	(efgtoa@g+2)^(0+128),w
  4033  0199  00F2               	movwf	___fpclassifyf@x+2
  4034  019A  0848               	movf	(efgtoa@g+1)^(0+128),w
  4035  019B  00F1               	movwf	___fpclassifyf@x+1
  4036  019C  0847               	movf	efgtoa@g^(0+128),w
  4037  019D  00F0               	movwf	___fpclassifyf@x
  4038  019E  3193  23C9  3180   	fcall	___fpclassifyf
  4039  01A1  0870               	movf	?___fpclassifyf,w
  4040  01A2  0471               	iorwf	?___fpclassifyf+1,w
  4041  01A3  1D03               	btfss	3,2
  4042  01A4  29A6               	goto	u4701
  4043  01A5  29A7               	goto	u4700
  4044  01A6                     u4701:
  4045  01A6  29EA               	goto	l3606
  4046  01A7                     u4700:
  4047  01A7                     l3594:
  4048  01A7  0020               	movlb	0	; select bank0
  4049  01A8  0845               	movf	efgtoa@c,w
  4050  01A9  3EBF               	addlw	191
  4051  01AA  00C6               	movwf	??_efgtoa
  4052  01AB  30FF               	movlw	255
  4053  01AC  1803               	skipnc
  4054  01AD  3000               	movlw	0
  4055  01AE  00C7               	movwf	??_efgtoa+1
  4056  01AF  3000               	movlw	0
  4057  01B0  0247               	subwf	??_efgtoa+1,w
  4058  01B1  301A               	movlw	26
  4059  01B2  1903               	skipnz
  4060  01B3  0246               	subwf	??_efgtoa,w
  4061  01B4  1803               	skipnc
  4062  01B5  29B7               	goto	u4711
  4063  01B6  29B8               	goto	u4710
  4064  01B7                     u4711:
  4065  01B7  29C3               	goto	l3598
  4066  01B8                     u4710:
  4067  01B8                     l3596:
  4068                           
  4069                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4070  01B8  3010               	movlw	low (STR_6| (0+32768))
  4071  01B9  00F0               	movwf	strcpy@src
  4072  01BA  30A0               	movlw	high (STR_6| (0+32768))
  4073  01BB  00F1               	movwf	strcpy@src+1
  4074  01BC  0021               	movlb	1	; select bank1
  4075  01BD  084D               	movf	efgtoa@n^(0+128),w
  4076  01BE  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4077  01BF  319F  274F  3180   	fcall	_strcpy
  4078                           
  4079                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4080  01C2  29CD               	goto	l3600
  4081  01C3                     l3598:
  4082                           
  4083                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4084  01C3  3018               	movlw	low (STR_7| (0+32768))
  4085  01C4  00F0               	movwf	strcpy@src
  4086  01C5  30A0               	movlw	high (STR_7| (0+32768))
  4087  01C6  00F1               	movwf	strcpy@src+1
  4088  01C7  0021               	movlb	1	; select bank1
  4089  01C8  084D               	movf	efgtoa@n^(0+128),w
  4090  01C9  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4091  01CA  319F  274F  3180   	fcall	_strcpy
  4092  01CD                     l3600:
  4093                           
  4094                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4095  01CD  30FD               	movlw	253
  4096  01CE  0021               	movlb	1	; select bank1
  4097  01CF  07B9               	addwf	efgtoa@w^(0+128),f
  4098  01D0  30FF               	movlw	255
  4099  01D1  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  4100  01D2                     l3602:
  4101                           
  4102                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4103  01D2  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  4104  01D3  0020               	movlb	0	; select bank0
  4105  01D4  00C6               	movwf	??_efgtoa
  4106  01D5  0846               	movf	??_efgtoa,w
  4107  01D6  00A4               	movwf	pad@buf
  4108  01D7  0021               	movlb	1	; select bank1
  4109  01D8  083A               	movf	(efgtoa@w+1)^(0+128),w
  4110  01D9  0020               	movlb	0	; select bank0
  4111  01DA  00A6               	movwf	pad@p+1
  4112  01DB  0021               	movlb	1	; select bank1
  4113  01DC  0839               	movf	efgtoa@w^(0+128),w
  4114  01DD  0020               	movlb	0	; select bank0
  4115  01DE  00A5               	movwf	pad@p
  4116  01DF  0021               	movlb	1	; select bank1
  4117  01E0  0836               	movf	efgtoa@fp^(0+128),w
  4118  01E1  3192  2248  3180   	fcall	_pad
  4119  01E4  0020               	movlb	0	; select bank0
  4120  01E5  0825               	movf	?_pad+1,w
  4121  01E6  00C2               	movwf	?_efgtoa+1
  4122  01E7  0824               	movf	?_pad,w
  4123  01E8  00C1               	movwf	?_efgtoa
  4124  01E9  2FD4               	goto	l876
  4125  01EA                     l3606:
  4126                           
  4127                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  4128  01EA  303F               	movlw	63
  4129  01EB  0021               	movlb	1	; select bank1
  4130  01EC  00D2               	movwf	(efgtoa@u+3)^(0+128)
  4131  01ED  3080               	movlw	128
  4132  01EE  00D1               	movwf	(efgtoa@u+2)^(0+128)
  4133  01EF  3000               	movlw	0
  4134  01F0  00D0               	movwf	(efgtoa@u+1)^(0+128)
  4135  01F1  3000               	movlw	0
  4136  01F2  00CF               	movwf	efgtoa@u^(0+128)
  4137  01F3                     l3608:
  4138                           
  4139                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4140  01F3  01CB               	clrf	efgtoa@e^(0+128)
  4141  01F4  01CC               	clrf	(efgtoa@e+1)^(0+128)
  4142  01F5                     l3610:
  4143                           
  4144                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4145  01F5  084A               	movf	(efgtoa@g+3)^(0+128),w
  4146  01F6  00F3               	movwf	___fleq@ff1+3
  4147  01F7  0849               	movf	(efgtoa@g+2)^(0+128),w
  4148  01F8  00F2               	movwf	___fleq@ff1+2
  4149  01F9  0848               	movf	(efgtoa@g+1)^(0+128),w
  4150  01FA  00F1               	movwf	___fleq@ff1+1
  4151  01FB  0847               	movf	efgtoa@g^(0+128),w
  4152  01FC  00F0               	movwf	___fleq@ff1
  4153  01FD  3000               	movlw	0
  4154  01FE  00F7               	movwf	___fleq@ff2+3
  4155  01FF  3000               	movlw	0
  4156  0200  00F6               	movwf	___fleq@ff2+2
  4157  0201  3000               	movlw	0
  4158  0202  00F5               	movwf	___fleq@ff2+1
  4159  0203  3000               	movlw	0
  4160  0204  00F4               	movwf	___fleq@ff2
  4161  0205  3191  2103  3180   	fcall	___fleq
  4162  0208  1803               	btfsc	3,0
  4163  0209  2A0B               	goto	u4721
  4164  020A  2A0C               	goto	u4720
  4165  020B                     u4721:
  4166  020B  2AC1               	goto	l3626
  4167  020C                     u4720:
  4168  020C  2A3D               	goto	l3618
  4169  020D                     l3614:
  4170                           
  4171                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4172  020D  3041               	movlw	65
  4173  020E  0020               	movlb	0	; select bank0
  4174  020F  00A3               	movwf	___flmul@b+3
  4175  0210  3020               	movlw	32
  4176  0211  00A2               	movwf	___flmul@b+2
  4177  0212  3000               	movlw	0
  4178  0213  00A1               	movwf	___flmul@b+1
  4179  0214  3000               	movlw	0
  4180  0215  00A0               	movwf	___flmul@b
  4181  0216  0021               	movlb	1	; select bank1
  4182  0217  0852               	movf	(efgtoa@u+3)^(0+128),w
  4183  0218  0020               	movlb	0	; select bank0
  4184  0219  00A7               	movwf	___flmul@a+3
  4185  021A  0021               	movlb	1	; select bank1
  4186  021B  0851               	movf	(efgtoa@u+2)^(0+128),w
  4187  021C  0020               	movlb	0	; select bank0
  4188  021D  00A6               	movwf	___flmul@a+2
  4189  021E  0021               	movlb	1	; select bank1
  4190  021F  0850               	movf	(efgtoa@u+1)^(0+128),w
  4191  0220  0020               	movlb	0	; select bank0
  4192  0221  00A5               	movwf	___flmul@a+1
  4193  0222  0021               	movlb	1	; select bank1
  4194  0223  084F               	movf	efgtoa@u^(0+128),w
  4195  0224  0020               	movlb	0	; select bank0
  4196  0225  00A4               	movwf	___flmul@a
  4197  0226  318B  232E  3180   	fcall	___flmul
  4198  0229  0020               	movlb	0	; select bank0
  4199  022A  0823               	movf	?___flmul+3,w
  4200  022B  0021               	movlb	1	; select bank1
  4201  022C  00D2               	movwf	(efgtoa@u+3)^(0+128)
  4202  022D  0020               	movlb	0	; select bank0
  4203  022E  0822               	movf	?___flmul+2,w
  4204  022F  0021               	movlb	1	; select bank1
  4205  0230  00D1               	movwf	(efgtoa@u+2)^(0+128)
  4206  0231  0020               	movlb	0	; select bank0
  4207  0232  0821               	movf	?___flmul+1,w
  4208  0233  0021               	movlb	1	; select bank1
  4209  0234  00D0               	movwf	(efgtoa@u+1)^(0+128)
  4210  0235  0020               	movlb	0	; select bank0
  4211  0236  0820               	movf	?___flmul,w
  4212  0237  0021               	movlb	1	; select bank1
  4213  0238  00CF               	movwf	efgtoa@u^(0+128)
  4214  0239                     l3616:
  4215                           
  4216                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4217  0239  3001               	movlw	1
  4218  023A  07CB               	addwf	efgtoa@e^(0+128),f
  4219  023B  3000               	movlw	0
  4220  023C  3DCC               	addwfc	(efgtoa@e+1)^(0+128),f
  4221  023D                     l3618:
  4222                           
  4223                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4224  023D  0021               	movlb	1	; select bank1
  4225  023E  084A               	movf	(efgtoa@g+3)^(0+128),w
  4226  023F  0020               	movlb	0	; select bank0
  4227  0240  00B8               	movwf	___flge@ff1+3
  4228  0241  0021               	movlb	1	; select bank1
  4229  0242  0849               	movf	(efgtoa@g+2)^(0+128),w
  4230  0243  0020               	movlb	0	; select bank0
  4231  0244  00B7               	movwf	___flge@ff1+2
  4232  0245  0021               	movlb	1	; select bank1
  4233  0246  0848               	movf	(efgtoa@g+1)^(0+128),w
  4234  0247  0020               	movlb	0	; select bank0
  4235  0248  00B6               	movwf	___flge@ff1+1
  4236  0249  0021               	movlb	1	; select bank1
  4237  024A  0847               	movf	efgtoa@g^(0+128),w
  4238  024B  0020               	movlb	0	; select bank0
  4239  024C  00B5               	movwf	___flge@ff1
  4240  024D  3041               	movlw	65
  4241  024E  00A3               	movwf	___flmul@b+3
  4242  024F  3020               	movlw	32
  4243  0250  00A2               	movwf	___flmul@b+2
  4244  0251  3000               	movlw	0
  4245  0252  00A1               	movwf	___flmul@b+1
  4246  0253  3000               	movlw	0
  4247  0254  00A0               	movwf	___flmul@b
  4248  0255  0021               	movlb	1	; select bank1
  4249  0256  0852               	movf	(efgtoa@u+3)^(0+128),w
  4250  0257  0020               	movlb	0	; select bank0
  4251  0258  00A7               	movwf	___flmul@a+3
  4252  0259  0021               	movlb	1	; select bank1
  4253  025A  0851               	movf	(efgtoa@u+2)^(0+128),w
  4254  025B  0020               	movlb	0	; select bank0
  4255  025C  00A6               	movwf	___flmul@a+2
  4256  025D  0021               	movlb	1	; select bank1
  4257  025E  0850               	movf	(efgtoa@u+1)^(0+128),w
  4258  025F  0020               	movlb	0	; select bank0
  4259  0260  00A5               	movwf	___flmul@a+1
  4260  0261  0021               	movlb	1	; select bank1
  4261  0262  084F               	movf	efgtoa@u^(0+128),w
  4262  0263  0020               	movlb	0	; select bank0
  4263  0264  00A4               	movwf	___flmul@a
  4264  0265  318B  232E  3180   	fcall	___flmul
  4265  0268  0020               	movlb	0	; select bank0
  4266  0269  0823               	movf	?___flmul+3,w
  4267  026A  00BC               	movwf	___flge@ff2+3
  4268  026B  0822               	movf	?___flmul+2,w
  4269  026C  00BB               	movwf	___flge@ff2+2
  4270  026D  0821               	movf	?___flmul+1,w
  4271  026E  00BA               	movwf	___flge@ff2+1
  4272  026F  0820               	movf	?___flmul,w
  4273  0270  00B9               	movwf	___flge@ff2
  4274  0271  3194  2448  3180   	fcall	___flge
  4275  0274  1803               	btfsc	3,0
  4276  0275  2A77               	goto	u4731
  4277  0276  2A78               	goto	u4730
  4278  0277                     u4731:
  4279  0277  2A0D               	goto	l3614
  4280  0278                     u4730:
  4281  0278  2A9A               	goto	l3624
  4282  0279                     l3620:
  4283                           
  4284                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4285  0279  3041               	movlw	65
  4286  027A  00F3               	movwf	___fldiv@a+3
  4287  027B  3020               	movlw	32
  4288  027C  00F2               	movwf	___fldiv@a+2
  4289  027D  3000               	movlw	0
  4290  027E  00F1               	movwf	___fldiv@a+1
  4291  027F  3000               	movlw	0
  4292  0280  00F0               	movwf	___fldiv@a
  4293  0281  0021               	movlb	1	; select bank1
  4294  0282  0852               	movf	(efgtoa@u+3)^(0+128),w
  4295  0283  00F7               	movwf	___fldiv@b+3
  4296  0284  0851               	movf	(efgtoa@u+2)^(0+128),w
  4297  0285  00F6               	movwf	___fldiv@b+2
  4298  0286  0850               	movf	(efgtoa@u+1)^(0+128),w
  4299  0287  00F5               	movwf	___fldiv@b+1
  4300  0288  084F               	movf	efgtoa@u^(0+128),w
  4301  0289  00F4               	movwf	___fldiv@b
  4302  028A  3196  264C  3180   	fcall	___fldiv
  4303  028D  0873               	movf	?___fldiv+3,w
  4304  028E  0021               	movlb	1	; select bank1
  4305  028F  00D2               	movwf	(efgtoa@u+3)^(0+128)
  4306  0290  0872               	movf	?___fldiv+2,w
  4307  0291  00D1               	movwf	(efgtoa@u+2)^(0+128)
  4308  0292  0871               	movf	?___fldiv+1,w
  4309  0293  00D0               	movwf	(efgtoa@u+1)^(0+128)
  4310  0294  0870               	movf	?___fldiv,w
  4311  0295  00CF               	movwf	efgtoa@u^(0+128)
  4312  0296                     l3622:
  4313                           
  4314                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4315  0296  30FF               	movlw	255
  4316  0297  07CB               	addwf	efgtoa@e^(0+128),f
  4317  0298  30FF               	movlw	255
  4318  0299  3DCC               	addwfc	(efgtoa@e+1)^(0+128),f
  4319  029A                     l3624:
  4320                           
  4321                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4322  029A  0021               	movlb	1	; select bank1
  4323  029B  084A               	movf	(efgtoa@g+3)^(0+128),w
  4324  029C  0020               	movlb	0	; select bank0
  4325  029D  00B8               	movwf	___flge@ff1+3
  4326  029E  0021               	movlb	1	; select bank1
  4327  029F  0849               	movf	(efgtoa@g+2)^(0+128),w
  4328  02A0  0020               	movlb	0	; select bank0
  4329  02A1  00B7               	movwf	___flge@ff1+2
  4330  02A2  0021               	movlb	1	; select bank1
  4331  02A3  0848               	movf	(efgtoa@g+1)^(0+128),w
  4332  02A4  0020               	movlb	0	; select bank0
  4333  02A5  00B6               	movwf	___flge@ff1+1
  4334  02A6  0021               	movlb	1	; select bank1
  4335  02A7  0847               	movf	efgtoa@g^(0+128),w
  4336  02A8  0020               	movlb	0	; select bank0
  4337  02A9  00B5               	movwf	___flge@ff1
  4338  02AA  0021               	movlb	1	; select bank1
  4339  02AB  0852               	movf	(efgtoa@u+3)^(0+128),w
  4340  02AC  0020               	movlb	0	; select bank0
  4341  02AD  00BC               	movwf	___flge@ff2+3
  4342  02AE  0021               	movlb	1	; select bank1
  4343  02AF  0851               	movf	(efgtoa@u+2)^(0+128),w
  4344  02B0  0020               	movlb	0	; select bank0
  4345  02B1  00BB               	movwf	___flge@ff2+2
  4346  02B2  0021               	movlb	1	; select bank1
  4347  02B3  0850               	movf	(efgtoa@u+1)^(0+128),w
  4348  02B4  0020               	movlb	0	; select bank0
  4349  02B5  00BA               	movwf	___flge@ff2+1
  4350  02B6  0021               	movlb	1	; select bank1
  4351  02B7  084F               	movf	efgtoa@u^(0+128),w
  4352  02B8  0020               	movlb	0	; select bank0
  4353  02B9  00B9               	movwf	___flge@ff2
  4354  02BA  3194  2448  3180   	fcall	___flge
  4355  02BD  1C03               	btfss	3,0
  4356  02BE  2AC0               	goto	u4741
  4357  02BF  2AC1               	goto	u4740
  4358  02C0                     u4741:
  4359  02C0  2A79               	goto	l3620
  4360  02C1                     u4740:
  4361  02C1                     l3626:
  4362                           
  4363                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4364  02C1  0020               	movlb	0	; select bank0
  4365  02C2  0845               	movf	efgtoa@c,w
  4366  02C3  00C6               	movwf	??_efgtoa
  4367  02C4  01C7               	clrf	??_efgtoa+1
  4368  02C5  0846               	movf	??_efgtoa,w
  4369  02C6  00F6               	movwf	tolower@c
  4370  02C7  0847               	movf	??_efgtoa+1,w
  4371  02C8  00F7               	movwf	tolower@c+1
  4372  02C9  319E  2654  3180   	fcall	_tolower
  4373  02CC  0876               	movf	?_tolower,w
  4374  02CD  0020               	movlb	0	; select bank0
  4375  02CE  00C8               	movwf	??_efgtoa+2
  4376  02CF  0848               	movf	??_efgtoa+2,w
  4377  02D0  0021               	movlb	1	; select bank1
  4378  02D1  00BC               	movwf	efgtoa@mode^(0+128)
  4379  02D2                     l3628:
  4380                           
  4381                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4382  02D2  083C               	movf	efgtoa@mode^(0+128),w
  4383  02D3  0020               	movlb	0	; select bank0
  4384  02D4  00C6               	movwf	??_efgtoa
  4385  02D5  0846               	movf	??_efgtoa,w
  4386  02D6  0021               	movlb	1	; select bank1
  4387  02D7  00BB               	movwf	efgtoa@nmode^(0+128)
  4388  02D8                     l3630:
  4389                           
  4390                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4391  02D8  3067               	movlw	103
  4392  02D9  063C               	xorwf	efgtoa@mode^(0+128),w
  4393  02DA  1D03               	btfss	3,2
  4394  02DB  2ADD               	goto	u4751
  4395  02DC  2ADE               	goto	u4750
  4396  02DD                     u4751:
  4397  02DD  2B05               	goto	l889
  4398  02DE                     u4750:
  4399  02DE                     l3632:
  4400                           
  4401                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4402  02DE  0020               	movlb	0	; select bank0
  4403  02DF  086C               	movf	_prec,w
  4404  02E0  046D               	iorwf	_prec+1,w
  4405  02E1  1D03               	btfss	3,2
  4406  02E2  2AE4               	goto	u4761
  4407  02E3  2AE5               	goto	u4760
  4408  02E4                     u4761:
  4409  02E4  2AE9               	goto	l890
  4410  02E5                     u4760:
  4411  02E5                     l3634:
  4412                           
  4413                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4414  02E5  3001               	movlw	1
  4415  02E6  00EC               	movwf	_prec
  4416  02E7  3000               	movlw	0
  4417  02E8  00ED               	movwf	_prec+1
  4418  02E9                     l890:	
  4419                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 395:   }
  4420                           
  4421                           
  4422                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4423  02E9  086D               	movf	_prec+1,w
  4424  02EA  3A80               	xorlw	128
  4425  02EB  00C6               	movwf	??_efgtoa
  4426  02EC  3080               	movlw	128
  4427  02ED  0246               	subwf	??_efgtoa,w
  4428  02EE  1D03               	skipz
  4429  02EF  2AF2               	goto	u4775
  4430  02F0  3001               	movlw	1
  4431  02F1  026C               	subwf	_prec,w
  4432  02F2                     u4775:
  4433  02F2  1803               	skipnc
  4434  02F3  2AF5               	goto	u4771
  4435  02F4  2AF6               	goto	u4770
  4436  02F5                     u4771:
  4437  02F5  2AFC               	goto	l3638
  4438  02F6                     u4770:
  4439  02F6                     l3636:
  4440  02F6  3006               	movlw	6
  4441  02F7  0021               	movlb	1	; select bank1
  4442  02F8  00B7               	movwf	efgtoa@p^(0+128)
  4443  02F9  3000               	movlw	0
  4444  02FA  00B8               	movwf	(efgtoa@p^(0+128)+1)
  4445  02FB  2B0B               	goto	l3644
  4446  02FC                     l3638:
  4447  02FC  0020               	movlb	0	; select bank0
  4448  02FD  086D               	movf	_prec+1,w
  4449  02FE  0021               	movlb	1	; select bank1
  4450  02FF  00B8               	movwf	(efgtoa@p+1)^(0+128)
  4451  0300  0020               	movlb	0	; select bank0
  4452  0301  086C               	movf	_prec,w
  4453  0302  0021               	movlb	1	; select bank1
  4454  0303  00B7               	movwf	efgtoa@p^(0+128)
  4455  0304  2B0B               	goto	l3644
  4456  0305                     l889:
  4457                           
  4458                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4459  0305  0020               	movlb	0	; select bank0
  4460  0306  1BED               	btfsc	_prec+1,7
  4461  0307  2B09               	goto	u4781
  4462  0308  2B0A               	goto	u4780
  4463  0309                     u4781:
  4464  0309  2AF6               	goto	l3636
  4465  030A                     u4780:
  4466  030A  2AFC               	goto	l3638
  4467  030B                     l3644:
  4468                           
  4469                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4470  030B  3067               	movlw	103
  4471  030C  063C               	xorwf	efgtoa@mode^(0+128),w
  4472  030D  1D03               	btfss	3,2
  4473  030E  2B10               	goto	u4791
  4474  030F  2B11               	goto	u4790
  4475  0310                     u4791:
  4476  0310  2B49               	goto	l900
  4477  0311                     u4790:
  4478  0311                     l3646:
  4479                           
  4480                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4481  0311  084C               	movf	(efgtoa@e+1)^(0+128),w
  4482  0312  3A80               	xorlw	128
  4483  0313  0020               	movlb	0	; select bank0
  4484  0314  00C6               	movwf	??_efgtoa
  4485  0315  307F               	movlw	127
  4486  0316  0246               	subwf	??_efgtoa,w
  4487  0317  1D03               	skipz
  4488  0318  2B1C               	goto	u4805
  4489  0319  30FC               	movlw	252
  4490  031A  0021               	movlb	1	; select bank1
  4491  031B  024B               	subwf	efgtoa@e^(0+128),w
  4492  031C                     u4805:
  4493  031C  1C03               	skipc
  4494  031D  2B1F               	goto	u4801
  4495  031E  2B20               	goto	u4800
  4496  031F                     u4801:
  4497  031F  2B43               	goto	l3652
  4498  0320                     u4800:
  4499  0320                     l3648:
  4500  0320  0021               	movlb	1	; select bank1
  4501  0321  0837               	movf	efgtoa@p^(0+128),w
  4502  0322  3EFF               	addlw	255
  4503  0323  0020               	movlb	0	; select bank0
  4504  0324  00C6               	movwf	??_efgtoa
  4505  0325  30FF               	movlw	255
  4506  0326  0021               	movlb	1	; select bank1
  4507  0327  3D38               	addwfc	(efgtoa@p+1)^(0+128),w
  4508  0328  0020               	movlb	0	; select bank0
  4509  0329  00C7               	movwf	??_efgtoa+1
  4510  032A  0847               	movf	??_efgtoa+1,w
  4511  032B  3A80               	xorlw	128
  4512  032C  00C8               	movwf	??_efgtoa+2
  4513  032D  0021               	movlb	1	; select bank1
  4514  032E  084C               	movf	(efgtoa@e+1)^(0+128),w
  4515  032F  3A80               	xorlw	128
  4516  0330  0020               	movlb	0	; select bank0
  4517  0331  0248               	subwf	??_efgtoa+2,w
  4518  0332  1D03               	skipz
  4519  0333  2B38               	goto	u4815
  4520  0334  0021               	movlb	1	; select bank1
  4521  0335  084B               	movf	efgtoa@e^(0+128),w
  4522  0336  0020               	movlb	0	; select bank0
  4523  0337  0246               	subwf	??_efgtoa,w
  4524  0338                     u4815:
  4525  0338  1C03               	skipc
  4526  0339  2B3B               	goto	u4811
  4527  033A  2B3C               	goto	u4810
  4528  033B                     u4811:
  4529  033B  2B43               	goto	l3652
  4530  033C                     u4810:
  4531  033C                     l3650:
  4532                           
  4533                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4534  033C  3066               	movlw	102
  4535  033D  0020               	movlb	0	; select bank0
  4536  033E  00C6               	movwf	??_efgtoa
  4537  033F  0846               	movf	??_efgtoa,w
  4538  0340  0021               	movlb	1	; select bank1
  4539  0341  00BB               	movwf	efgtoa@nmode^(0+128)
  4540                           
  4541                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4542  0342  2B49               	goto	l900
  4543  0343                     l3652:
  4544                           
  4545                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4546  0343  3065               	movlw	101
  4547  0344  0020               	movlb	0	; select bank0
  4548  0345  00C6               	movwf	??_efgtoa
  4549  0346  0846               	movf	??_efgtoa,w
  4550  0347  0021               	movlb	1	; select bank1
  4551  0348  00BB               	movwf	efgtoa@nmode^(0+128)
  4552  0349                     l900:	
  4553                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 408:     }
  4554                           
  4555                           
  4556                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4557  0349  0838               	movf	(efgtoa@p+1)^(0+128),w
  4558  034A  00AD               	movwf	(efgtoa@m+1)^(0+128)
  4559  034B  0837               	movf	efgtoa@p^(0+128),w
  4560  034C  00AC               	movwf	efgtoa@m^(0+128)
  4561  034D                     l3654:
  4562                           
  4563                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4564  034D  3067               	movlw	103
  4565  034E  063C               	xorwf	efgtoa@mode^(0+128),w
  4566  034F  1D03               	btfss	3,2
  4567  0350  2B52               	goto	u4821
  4568  0351  2B53               	goto	u4820
  4569  0352                     u4821:
  4570  0352  2B5D               	goto	l3660
  4571  0353                     u4820:
  4572  0353                     l3656:
  4573  0353  3066               	movlw	102
  4574  0354  063B               	xorwf	efgtoa@nmode^(0+128),w
  4575  0355  1D03               	btfss	3,2
  4576  0356  2B58               	goto	u4831
  4577  0357  2B59               	goto	u4830
  4578  0358                     u4831:
  4579  0358  2B61               	goto	l3662
  4580  0359                     u4830:
  4581  0359                     l3658:
  4582  0359  1FCC               	btfss	(efgtoa@e+1)^(0+128),7
  4583  035A  2B5C               	goto	u4841
  4584  035B  2B5D               	goto	u4840
  4585  035C                     u4841:
  4586  035C  2B61               	goto	l3662
  4587  035D                     u4840:
  4588  035D                     l3660:
  4589                           
  4590                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4591  035D  3001               	movlw	1
  4592  035E  07AC               	addwf	efgtoa@m^(0+128),f
  4593  035F  3000               	movlw	0
  4594  0360  3DAD               	addwfc	(efgtoa@m+1)^(0+128),f
  4595  0361                     l3662:
  4596                           
  4597                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4598  0361  3066               	movlw	102
  4599  0362  063B               	xorwf	efgtoa@nmode^(0+128),w
  4600  0363  1D03               	btfss	3,2
  4601  0364  2B66               	goto	u4851
  4602  0365  2B67               	goto	u4850
  4603  0366                     u4851:
  4604  0366  2B7F               	goto	l3674
  4605  0367                     u4850:
  4606  0367                     l3664:
  4607                           
  4608                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4609  0367  1FCC               	btfss	(efgtoa@e+1)^(0+128),7
  4610  0368  2B6A               	goto	u4861
  4611  0369  2B6B               	goto	u4860
  4612  036A                     u4861:
  4613  036A  2B75               	goto	l3670
  4614  036B                     u4860:
  4615  036B                     l3666:
  4616                           
  4617                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4618  036B  303F               	movlw	63
  4619  036C  00D2               	movwf	(efgtoa@u+3)^(0+128)
  4620  036D  3080               	movlw	128
  4621  036E  00D1               	movwf	(efgtoa@u+2)^(0+128)
  4622  036F  3000               	movlw	0
  4623  0370  00D0               	movwf	(efgtoa@u+1)^(0+128)
  4624  0371  3000               	movlw	0
  4625  0372  00CF               	movwf	efgtoa@u^(0+128)
  4626  0373                     l3668:
  4627                           
  4628                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4629  0373  01CB               	clrf	efgtoa@e^(0+128)
  4630  0374  01CC               	clrf	(efgtoa@e+1)^(0+128)
  4631  0375                     l3670:
  4632                           
  4633                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4634  0375  3067               	movlw	103
  4635  0376  063C               	xorwf	efgtoa@mode^(0+128),w
  4636  0377  1903               	btfsc	3,2
  4637  0378  2B7A               	goto	u4871
  4638  0379  2B7B               	goto	u4870
  4639  037A                     u4871:
  4640  037A  2B7F               	goto	l3674
  4641  037B                     u4870:
  4642  037B                     l3672:
  4643                           
  4644                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4645  037B  084B               	movf	efgtoa@e^(0+128),w
  4646  037C  07AC               	addwf	efgtoa@m^(0+128),f
  4647  037D  084C               	movf	(efgtoa@e+1)^(0+128),w
  4648  037E  3DAD               	addwfc	(efgtoa@m+1)^(0+128),f
  4649  037F                     l3674:
  4650                           
  4651                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4652  037F  01C5               	clrf	efgtoa@i^(0+128)
  4653  0380  01C6               	clrf	(efgtoa@i+1)^(0+128)
  4654  0381                     l3676:
  4655                           
  4656                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4657  0381  084A               	movf	(efgtoa@g+3)^(0+128),w
  4658  0382  00C0               	movwf	(efgtoa@h+3)^(0+128)
  4659  0383  0849               	movf	(efgtoa@g+2)^(0+128),w
  4660  0384  00BF               	movwf	(efgtoa@h+2)^(0+128)
  4661  0385  0848               	movf	(efgtoa@g+1)^(0+128),w
  4662  0386  00BE               	movwf	(efgtoa@h+1)^(0+128)
  4663  0387  0847               	movf	efgtoa@g^(0+128),w
  4664  0388  00BD               	movwf	efgtoa@h^(0+128)
  4665  0389                     l3678:
  4666                           
  4667                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4668  0389  0852               	movf	(efgtoa@u+3)^(0+128),w
  4669  038A  00B1               	movwf	(efgtoa@ou+3)^(0+128)
  4670  038B  0851               	movf	(efgtoa@u+2)^(0+128),w
  4671  038C  00B0               	movwf	(efgtoa@ou+2)^(0+128)
  4672  038D  0850               	movf	(efgtoa@u+1)^(0+128),w
  4673  038E  00AF               	movwf	(efgtoa@ou+1)^(0+128)
  4674  038F  084F               	movf	efgtoa@u^(0+128),w
  4675  0390  00AE               	movwf	efgtoa@ou^(0+128)
  4676                           
  4677                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4678  0391  2C40               	goto	l3684
  4679  0392                     l3680:
  4680                           
  4681                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4682  0392  0021               	movlb	1	; select bank1
  4683  0393  0852               	movf	(efgtoa@u+3)^(0+128),w
  4684  0394  00F3               	movwf	___fldiv@a+3
  4685  0395  0851               	movf	(efgtoa@u+2)^(0+128),w
  4686  0396  00F2               	movwf	___fldiv@a+2
  4687  0397  0850               	movf	(efgtoa@u+1)^(0+128),w
  4688  0398  00F1               	movwf	___fldiv@a+1
  4689  0399  084F               	movf	efgtoa@u^(0+128),w
  4690  039A  00F0               	movwf	___fldiv@a
  4691  039B  0840               	movf	(efgtoa@h+3)^(0+128),w
  4692  039C  00F7               	movwf	___fldiv@b+3
  4693  039D  083F               	movf	(efgtoa@h+2)^(0+128),w
  4694  039E  00F6               	movwf	___fldiv@b+2
  4695  039F  083E               	movf	(efgtoa@h+1)^(0+128),w
  4696  03A0  00F5               	movwf	___fldiv@b+1
  4697  03A1  083D               	movf	efgtoa@h^(0+128),w
  4698  03A2  00F4               	movwf	___fldiv@b
  4699  03A3  3196  264C  3180   	fcall	___fldiv
  4700  03A6  0873               	movf	?___fldiv+3,w
  4701  03A7  0020               	movlb	0	; select bank0
  4702  03A8  00B0               	movwf	floorf@x+3
  4703  03A9  0872               	movf	?___fldiv+2,w
  4704  03AA  00AF               	movwf	floorf@x+2
  4705  03AB  0871               	movf	?___fldiv+1,w
  4706  03AC  00AE               	movwf	floorf@x+1
  4707  03AD  0870               	movf	?___fldiv,w
  4708  03AE  00AD               	movwf	floorf@x
  4709  03AF  3188  2004  3180   	fcall	_floorf
  4710  03B2  0020               	movlb	0	; select bank0
  4711  03B3  0830               	movf	?_floorf+3,w
  4712  03B4  0021               	movlb	1	; select bank1
  4713  03B5  00C4               	movwf	(efgtoa@l+3)^(0+128)
  4714  03B6  0020               	movlb	0	; select bank0
  4715  03B7  082F               	movf	?_floorf+2,w
  4716  03B8  0021               	movlb	1	; select bank1
  4717  03B9  00C3               	movwf	(efgtoa@l+2)^(0+128)
  4718  03BA  0020               	movlb	0	; select bank0
  4719  03BB  082E               	movf	?_floorf+1,w
  4720  03BC  0021               	movlb	1	; select bank1
  4721  03BD  00C2               	movwf	(efgtoa@l+1)^(0+128)
  4722  03BE  0020               	movlb	0	; select bank0
  4723  03BF  082D               	movf	?_floorf,w
  4724  03C0  0021               	movlb	1	; select bank1
  4725  03C1  00C1               	movwf	efgtoa@l^(0+128)
  4726                           
  4727                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4728  03C2  0844               	movf	(efgtoa@l+3)^(0+128),w
  4729  03C3  00F3               	movwf	___fltol@f1+3
  4730  03C4  0843               	movf	(efgtoa@l+2)^(0+128),w
  4731  03C5  00F2               	movwf	___fltol@f1+2
  4732  03C6  0842               	movf	(efgtoa@l+1)^(0+128),w
  4733  03C7  00F1               	movwf	___fltol@f1+1
  4734  03C8  0841               	movf	efgtoa@l^(0+128),w
  4735  03C9  00F0               	movwf	___fltol@f1
  4736  03CA  3193  2355  3180   	fcall	___fltol
  4737  03CD  0871               	movf	?___fltol+1,w
  4738  03CE  0021               	movlb	1	; select bank1
  4739  03CF  00B3               	movwf	(efgtoa@d+1)^(0+128)
  4740  03D0  0870               	movf	?___fltol,w
  4741  03D1  00B2               	movwf	efgtoa@d^(0+128)
  4742                           
  4743                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4744  03D2  0844               	movf	(efgtoa@l+3)^(0+128),w
  4745  03D3  0020               	movlb	0	; select bank0
  4746  03D4  00A7               	movwf	___flmul@a+3
  4747  03D5  0021               	movlb	1	; select bank1
  4748  03D6  0843               	movf	(efgtoa@l+2)^(0+128),w
  4749  03D7  0020               	movlb	0	; select bank0
  4750  03D8  00A6               	movwf	___flmul@a+2
  4751  03D9  0021               	movlb	1	; select bank1
  4752  03DA  0842               	movf	(efgtoa@l+1)^(0+128),w
  4753  03DB  0020               	movlb	0	; select bank0
  4754  03DC  00A5               	movwf	___flmul@a+1
  4755  03DD  0021               	movlb	1	; select bank1
  4756  03DE  0841               	movf	efgtoa@l^(0+128),w
  4757  03DF  0020               	movlb	0	; select bank0
  4758  03E0  00A4               	movwf	___flmul@a
  4759  03E1  0021               	movlb	1	; select bank1
  4760  03E2  0852               	movf	(efgtoa@u+3)^(0+128),w
  4761  03E3  0020               	movlb	0	; select bank0
  4762  03E4  00A3               	movwf	___flmul@b+3
  4763  03E5  0021               	movlb	1	; select bank1
  4764  03E6  0851               	movf	(efgtoa@u+2)^(0+128),w
  4765  03E7  0020               	movlb	0	; select bank0
  4766  03E8  00A2               	movwf	___flmul@b+2
  4767  03E9  0021               	movlb	1	; select bank1
  4768  03EA  0850               	movf	(efgtoa@u+1)^(0+128),w
  4769  03EB  0020               	movlb	0	; select bank0
  4770  03EC  00A1               	movwf	___flmul@b+1
  4771  03ED  0021               	movlb	1	; select bank1
  4772  03EE  084F               	movf	efgtoa@u^(0+128),w
  4773  03EF  0020               	movlb	0	; select bank0
  4774  03F0  00A0               	movwf	___flmul@b
  4775  03F1  318B  232E  3180   	fcall	___flmul
  4776  03F4  0020               	movlb	0	; select bank0
  4777  03F5  0823               	movf	?___flmul+3,w
  4778  03F6  00B8               	movwf	___flsub@a+3
  4779  03F7  0822               	movf	?___flmul+2,w
  4780  03F8  00B7               	movwf	___flsub@a+2
  4781  03F9  0821               	movf	?___flmul+1,w
  4782  03FA  00B6               	movwf	___flsub@a+1
  4783  03FB  0820               	movf	?___flmul,w
  4784  03FC  00B5               	movwf	___flsub@a
  4785  03FD  0021               	movlb	1	; select bank1
  4786  03FE  0840               	movf	(efgtoa@h+3)^(0+128),w
  4787  03FF  0020               	movlb	0	; select bank0
  4788  0400  00BC               	movwf	___flsub@b+3
  4789  0401  0021               	movlb	1	; select bank1
  4790  0402  083F               	movf	(efgtoa@h+2)^(0+128),w
  4791  0403  0020               	movlb	0	; select bank0
  4792  0404  00BB               	movwf	___flsub@b+2
  4793  0405  0021               	movlb	1	; select bank1
  4794  0406  083E               	movf	(efgtoa@h+1)^(0+128),w
  4795  0407  0020               	movlb	0	; select bank0
  4796  0408  00BA               	movwf	___flsub@b+1
  4797  0409  0021               	movlb	1	; select bank1
  4798  040A  083D               	movf	efgtoa@h^(0+128),w
  4799  040B  0020               	movlb	0	; select bank0
  4800  040C  00B9               	movwf	___flsub@b
  4801  040D  319E  26ED  3180   	fcall	___flsub
  4802  0410  0020               	movlb	0	; select bank0
  4803  0411  0838               	movf	?___flsub+3,w
  4804  0412  0021               	movlb	1	; select bank1
  4805  0413  00C0               	movwf	(efgtoa@h+3)^(0+128)
  4806  0414  0020               	movlb	0	; select bank0
  4807  0415  0837               	movf	?___flsub+2,w
  4808  0416  0021               	movlb	1	; select bank1
  4809  0417  00BF               	movwf	(efgtoa@h+2)^(0+128)
  4810  0418  0020               	movlb	0	; select bank0
  4811  0419  0836               	movf	?___flsub+1,w
  4812  041A  0021               	movlb	1	; select bank1
  4813  041B  00BE               	movwf	(efgtoa@h+1)^(0+128)
  4814  041C  0020               	movlb	0	; select bank0
  4815  041D  0835               	movf	?___flsub,w
  4816  041E  0021               	movlb	1	; select bank1
  4817  041F  00BD               	movwf	efgtoa@h^(0+128)
  4818                           
  4819                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  4820  0420  3041               	movlw	65
  4821  0421  00F3               	movwf	___fldiv@a+3
  4822  0422  3020               	movlw	32
  4823  0423  00F2               	movwf	___fldiv@a+2
  4824  0424  3000               	movlw	0
  4825  0425  00F1               	movwf	___fldiv@a+1
  4826  0426  3000               	movlw	0
  4827  0427  00F0               	movwf	___fldiv@a
  4828  0428  0852               	movf	(efgtoa@u+3)^(0+128),w
  4829  0429  00F7               	movwf	___fldiv@b+3
  4830  042A  0851               	movf	(efgtoa@u+2)^(0+128),w
  4831  042B  00F6               	movwf	___fldiv@b+2
  4832  042C  0850               	movf	(efgtoa@u+1)^(0+128),w
  4833  042D  00F5               	movwf	___fldiv@b+1
  4834  042E  084F               	movf	efgtoa@u^(0+128),w
  4835  042F  00F4               	movwf	___fldiv@b
  4836  0430  3196  264C  3180   	fcall	___fldiv
  4837  0433  0873               	movf	?___fldiv+3,w
  4838  0434  0021               	movlb	1	; select bank1
  4839  0435  00D2               	movwf	(efgtoa@u+3)^(0+128)
  4840  0436  0872               	movf	?___fldiv+2,w
  4841  0437  00D1               	movwf	(efgtoa@u+2)^(0+128)
  4842  0438  0871               	movf	?___fldiv+1,w
  4843  0439  00D0               	movwf	(efgtoa@u+1)^(0+128)
  4844  043A  0870               	movf	?___fldiv,w
  4845  043B  00CF               	movwf	efgtoa@u^(0+128)
  4846  043C                     l3682:
  4847                           
  4848                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  4849  043C  3001               	movlw	1
  4850  043D  07C5               	addwf	efgtoa@i^(0+128),f
  4851  043E  3000               	movlw	0
  4852  043F  3DC6               	addwfc	(efgtoa@i+1)^(0+128),f
  4853  0440                     l3684:
  4854                           
  4855                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4856  0440  0846               	movf	(efgtoa@i+1)^(0+128),w
  4857  0441  3A80               	xorlw	128
  4858  0442  0020               	movlb	0	; select bank0
  4859  0443  00C6               	movwf	??_efgtoa
  4860  0444  0021               	movlb	1	; select bank1
  4861  0445  082D               	movf	(efgtoa@m+1)^(0+128),w
  4862  0446  3A80               	xorlw	128
  4863  0447  0020               	movlb	0	; select bank0
  4864  0448  0246               	subwf	??_efgtoa,w
  4865  0449  1D03               	skipz
  4866  044A  2C4E               	goto	u4885
  4867  044B  0021               	movlb	1	; select bank1
  4868  044C  082C               	movf	efgtoa@m^(0+128),w
  4869  044D  0245               	subwf	efgtoa@i^(0+128),w
  4870  044E                     u4885:
  4871  044E  1C03               	skipc
  4872  044F  2C51               	goto	u4881
  4873  0450  2C52               	goto	u4880
  4874  0451                     u4881:
  4875  0451  2B92               	goto	l3680
  4876  0452                     u4880:
  4877  0452                     l3686:
  4878                           
  4879                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  4880  0452  3040               	movlw	64
  4881  0453  0020               	movlb	0	; select bank0
  4882  0454  00A3               	movwf	___flmul@b+3
  4883  0455  30A0               	movlw	160
  4884  0456  00A2               	movwf	___flmul@b+2
  4885  0457  3000               	movlw	0
  4886  0458  00A1               	movwf	___flmul@b+1
  4887  0459  3000               	movlw	0
  4888  045A  00A0               	movwf	___flmul@b
  4889  045B  0021               	movlb	1	; select bank1
  4890  045C  0852               	movf	(efgtoa@u+3)^(0+128),w
  4891  045D  0020               	movlb	0	; select bank0
  4892  045E  00A7               	movwf	___flmul@a+3
  4893  045F  0021               	movlb	1	; select bank1
  4894  0460  0851               	movf	(efgtoa@u+2)^(0+128),w
  4895  0461  0020               	movlb	0	; select bank0
  4896  0462  00A6               	movwf	___flmul@a+2
  4897  0463  0021               	movlb	1	; select bank1
  4898  0464  0850               	movf	(efgtoa@u+1)^(0+128),w
  4899  0465  0020               	movlb	0	; select bank0
  4900  0466  00A5               	movwf	___flmul@a+1
  4901  0467  0021               	movlb	1	; select bank1
  4902  0468  084F               	movf	efgtoa@u^(0+128),w
  4903  0469  0020               	movlb	0	; select bank0
  4904  046A  00A4               	movwf	___flmul@a
  4905  046B  318B  232E  3180   	fcall	___flmul
  4906  046E  0020               	movlb	0	; select bank0
  4907  046F  0823               	movf	?___flmul+3,w
  4908  0470  0021               	movlb	1	; select bank1
  4909  0471  00C4               	movwf	(efgtoa@l+3)^(0+128)
  4910  0472  0020               	movlb	0	; select bank0
  4911  0473  0822               	movf	?___flmul+2,w
  4912  0474  0021               	movlb	1	; select bank1
  4913  0475  00C3               	movwf	(efgtoa@l+2)^(0+128)
  4914  0476  0020               	movlb	0	; select bank0
  4915  0477  0821               	movf	?___flmul+1,w
  4916  0478  0021               	movlb	1	; select bank1
  4917  0479  00C2               	movwf	(efgtoa@l+1)^(0+128)
  4918  047A  0020               	movlb	0	; select bank0
  4919  047B  0820               	movf	?___flmul,w
  4920  047C  0021               	movlb	1	; select bank1
  4921  047D  00C1               	movwf	efgtoa@l^(0+128)
  4922                           
  4923                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  4924  047E  0840               	movf	(efgtoa@h+3)^(0+128),w
  4925  047F  0020               	movlb	0	; select bank0
  4926  0480  00B8               	movwf	___flge@ff1+3
  4927  0481  0021               	movlb	1	; select bank1
  4928  0482  083F               	movf	(efgtoa@h+2)^(0+128),w
  4929  0483  0020               	movlb	0	; select bank0
  4930  0484  00B7               	movwf	___flge@ff1+2
  4931  0485  0021               	movlb	1	; select bank1
  4932  0486  083E               	movf	(efgtoa@h+1)^(0+128),w
  4933  0487  0020               	movlb	0	; select bank0
  4934  0488  00B6               	movwf	___flge@ff1+1
  4935  0489  0021               	movlb	1	; select bank1
  4936  048A  083D               	movf	efgtoa@h^(0+128),w
  4937  048B  0020               	movlb	0	; select bank0
  4938  048C  00B5               	movwf	___flge@ff1
  4939  048D  0021               	movlb	1	; select bank1
  4940  048E  0844               	movf	(efgtoa@l+3)^(0+128),w
  4941  048F  0020               	movlb	0	; select bank0
  4942  0490  00BC               	movwf	___flge@ff2+3
  4943  0491  0021               	movlb	1	; select bank1
  4944  0492  0843               	movf	(efgtoa@l+2)^(0+128),w
  4945  0493  0020               	movlb	0	; select bank0
  4946  0494  00BB               	movwf	___flge@ff2+2
  4947  0495  0021               	movlb	1	; select bank1
  4948  0496  0842               	movf	(efgtoa@l+1)^(0+128),w
  4949  0497  0020               	movlb	0	; select bank0
  4950  0498  00BA               	movwf	___flge@ff2+1
  4951  0499  0021               	movlb	1	; select bank1
  4952  049A  0841               	movf	efgtoa@l^(0+128),w
  4953  049B  0020               	movlb	0	; select bank0
  4954  049C  00B9               	movwf	___flge@ff2
  4955  049D  3194  2448  3180   	fcall	___flge
  4956  04A0  1803               	btfsc	3,0
  4957  04A1  2CA3               	goto	u4891
  4958  04A2  2CA4               	goto	u4890
  4959  04A3                     u4891:
  4960  04A3  2CAE               	goto	l3690
  4961  04A4                     u4890:
  4962  04A4                     l3688:
  4963                           
  4964                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  4965  04A4  3000               	movlw	0
  4966  04A5  0021               	movlb	1	; select bank1
  4967  04A6  00C4               	movwf	(efgtoa@l+3)^(0+128)
  4968  04A7  3000               	movlw	0
  4969  04A8  00C3               	movwf	(efgtoa@l+2)^(0+128)
  4970  04A9  3000               	movlw	0
  4971  04AA  00C2               	movwf	(efgtoa@l+1)^(0+128)
  4972  04AB  3000               	movlw	0
  4973  04AC  00C1               	movwf	efgtoa@l^(0+128)
  4974                           
  4975                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  4976  04AD  2CD3               	goto	l3696
  4977  04AE                     l3690:
  4978                           
  4979                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4980  04AE  0021               	movlb	1	; select bank1
  4981  04AF  0840               	movf	(efgtoa@h+3)^(0+128),w
  4982  04B0  00F3               	movwf	___fleq@ff1+3
  4983  04B1  083F               	movf	(efgtoa@h+2)^(0+128),w
  4984  04B2  00F2               	movwf	___fleq@ff1+2
  4985  04B3  083E               	movf	(efgtoa@h+1)^(0+128),w
  4986  04B4  00F1               	movwf	___fleq@ff1+1
  4987  04B5  083D               	movf	efgtoa@h^(0+128),w
  4988  04B6  00F0               	movwf	___fleq@ff1
  4989  04B7  0844               	movf	(efgtoa@l+3)^(0+128),w
  4990  04B8  00F7               	movwf	___fleq@ff2+3
  4991  04B9  0843               	movf	(efgtoa@l+2)^(0+128),w
  4992  04BA  00F6               	movwf	___fleq@ff2+2
  4993  04BB  0842               	movf	(efgtoa@l+1)^(0+128),w
  4994  04BC  00F5               	movwf	___fleq@ff2+1
  4995  04BD  0841               	movf	efgtoa@l^(0+128),w
  4996  04BE  00F4               	movwf	___fleq@ff2
  4997  04BF  3191  2103  3180   	fcall	___fleq
  4998  04C2  1C03               	btfss	3,0
  4999  04C3  2CC5               	goto	u4901
  5000  04C4  2CC6               	goto	u4900
  5001  04C5                     u4901:
  5002  04C5  2CD3               	goto	l3696
  5003  04C6                     u4900:
  5004  04C6                     l3692:
  5005  04C6  0021               	movlb	1	; select bank1
  5006  04C7  1832               	btfsc	efgtoa@d^(0+128),0
  5007  04C8  2CCA               	goto	u4911
  5008  04C9  2CCB               	goto	u4910
  5009  04CA                     u4911:
  5010  04CA  2CD3               	goto	l3696
  5011  04CB                     u4910:
  5012  04CB                     l3694:
  5013                           
  5014                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5015  04CB  3000               	movlw	0
  5016  04CC  00C4               	movwf	(efgtoa@l+3)^(0+128)
  5017  04CD  3000               	movlw	0
  5018  04CE  00C3               	movwf	(efgtoa@l+2)^(0+128)
  5019  04CF  3000               	movlw	0
  5020  04D0  00C2               	movwf	(efgtoa@l+1)^(0+128)
  5021  04D1  3000               	movlw	0
  5022  04D2  00C1               	movwf	efgtoa@l^(0+128)
  5023  04D3                     l3696:
  5024                           
  5025                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5026  04D3  0021               	movlb	1	; select bank1
  5027  04D4  0844               	movf	(efgtoa@l+3)^(0+128),w
  5028  04D5  00F3               	movwf	___fladd@b+3
  5029  04D6  0843               	movf	(efgtoa@l+2)^(0+128),w
  5030  04D7  00F2               	movwf	___fladd@b+2
  5031  04D8  0842               	movf	(efgtoa@l+1)^(0+128),w
  5032  04D9  00F1               	movwf	___fladd@b+1
  5033  04DA  0841               	movf	efgtoa@l^(0+128),w
  5034  04DB  00F0               	movwf	___fladd@b
  5035  04DC  084A               	movf	(efgtoa@g+3)^(0+128),w
  5036  04DD  00F7               	movwf	___fladd@a+3
  5037  04DE  0849               	movf	(efgtoa@g+2)^(0+128),w
  5038  04DF  00F6               	movwf	___fladd@a+2
  5039  04E0  0848               	movf	(efgtoa@g+1)^(0+128),w
  5040  04E1  00F5               	movwf	___fladd@a+1
  5041  04E2  0847               	movf	efgtoa@g^(0+128),w
  5042  04E3  00F4               	movwf	___fladd@a
  5043  04E4  3188  20EF  3180   	fcall	___fladd
  5044  04E7  0873               	movf	?___fladd+3,w
  5045  04E8  0021               	movlb	1	; select bank1
  5046  04E9  00C0               	movwf	(efgtoa@h+3)^(0+128)
  5047  04EA  0872               	movf	?___fladd+2,w
  5048  04EB  00BF               	movwf	(efgtoa@h+2)^(0+128)
  5049  04EC  0871               	movf	?___fladd+1,w
  5050  04ED  00BE               	movwf	(efgtoa@h+1)^(0+128)
  5051  04EE  0870               	movf	?___fladd,w
  5052  04EF  00BD               	movwf	efgtoa@h^(0+128)
  5053  04F0                     l3698:
  5054                           
  5055                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5056  04F0  0840               	movf	(efgtoa@h+3)^(0+128),w
  5057  04F1  0020               	movlb	0	; select bank0
  5058  04F2  00B8               	movwf	___flge@ff1+3
  5059  04F3  0021               	movlb	1	; select bank1
  5060  04F4  083F               	movf	(efgtoa@h+2)^(0+128),w
  5061  04F5  0020               	movlb	0	; select bank0
  5062  04F6  00B7               	movwf	___flge@ff1+2
  5063  04F7  0021               	movlb	1	; select bank1
  5064  04F8  083E               	movf	(efgtoa@h+1)^(0+128),w
  5065  04F9  0020               	movlb	0	; select bank0
  5066  04FA  00B6               	movwf	___flge@ff1+1
  5067  04FB  0021               	movlb	1	; select bank1
  5068  04FC  083D               	movf	efgtoa@h^(0+128),w
  5069  04FD  0020               	movlb	0	; select bank0
  5070  04FE  00B5               	movwf	___flge@ff1
  5071  04FF  3041               	movlw	65
  5072  0500  00A3               	movwf	___flmul@b+3
  5073  0501  3020               	movlw	32
  5074  0502  00A2               	movwf	___flmul@b+2
  5075  0503  3000               	movlw	0
  5076  0504  00A1               	movwf	___flmul@b+1
  5077  0505  3000               	movlw	0
  5078  0506  00A0               	movwf	___flmul@b
  5079  0507  0021               	movlb	1	; select bank1
  5080  0508  0831               	movf	(efgtoa@ou+3)^(0+128),w
  5081  0509  0020               	movlb	0	; select bank0
  5082  050A  00A7               	movwf	___flmul@a+3
  5083  050B  0021               	movlb	1	; select bank1
  5084  050C  0830               	movf	(efgtoa@ou+2)^(0+128),w
  5085  050D  0020               	movlb	0	; select bank0
  5086  050E  00A6               	movwf	___flmul@a+2
  5087  050F  0021               	movlb	1	; select bank1
  5088  0510  082F               	movf	(efgtoa@ou+1)^(0+128),w
  5089  0511  0020               	movlb	0	; select bank0
  5090  0512  00A5               	movwf	___flmul@a+1
  5091  0513  0021               	movlb	1	; select bank1
  5092  0514  082E               	movf	efgtoa@ou^(0+128),w
  5093  0515  0020               	movlb	0	; select bank0
  5094  0516  00A4               	movwf	___flmul@a
  5095  0517  318B  232E  3180   	fcall	___flmul
  5096  051A  0020               	movlb	0	; select bank0
  5097  051B  0823               	movf	?___flmul+3,w
  5098  051C  00BC               	movwf	___flge@ff2+3
  5099  051D  0822               	movf	?___flmul+2,w
  5100  051E  00BB               	movwf	___flge@ff2+2
  5101  051F  0821               	movf	?___flmul+1,w
  5102  0520  00BA               	movwf	___flge@ff2+1
  5103  0521  0820               	movf	?___flmul,w
  5104  0522  00B9               	movwf	___flge@ff2
  5105  0523  3194  2448  3180   	fcall	___flge
  5106  0526  1C03               	btfss	3,0
  5107  0527  2D29               	goto	u4921
  5108  0528  2D2A               	goto	u4920
  5109  0529                     u4921:
  5110  0529  2D65               	goto	l915
  5111  052A                     u4920:
  5112  052A                     l3700:
  5113                           
  5114                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  5115  052A  3001               	movlw	1
  5116  052B  0021               	movlb	1	; select bank1
  5117  052C  07CB               	addwf	efgtoa@e^(0+128),f
  5118  052D  3000               	movlw	0
  5119  052E  3DCC               	addwfc	(efgtoa@e+1)^(0+128),f
  5120  052F                     l3702:
  5121                           
  5122                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5123  052F  3041               	movlw	65
  5124  0530  0020               	movlb	0	; select bank0
  5125  0531  00A3               	movwf	___flmul@b+3
  5126  0532  3020               	movlw	32
  5127  0533  00A2               	movwf	___flmul@b+2
  5128  0534  3000               	movlw	0
  5129  0535  00A1               	movwf	___flmul@b+1
  5130  0536  3000               	movlw	0
  5131  0537  00A0               	movwf	___flmul@b
  5132  0538  0021               	movlb	1	; select bank1
  5133  0539  0831               	movf	(efgtoa@ou+3)^(0+128),w
  5134  053A  0020               	movlb	0	; select bank0
  5135  053B  00A7               	movwf	___flmul@a+3
  5136  053C  0021               	movlb	1	; select bank1
  5137  053D  0830               	movf	(efgtoa@ou+2)^(0+128),w
  5138  053E  0020               	movlb	0	; select bank0
  5139  053F  00A6               	movwf	___flmul@a+2
  5140  0540  0021               	movlb	1	; select bank1
  5141  0541  082F               	movf	(efgtoa@ou+1)^(0+128),w
  5142  0542  0020               	movlb	0	; select bank0
  5143  0543  00A5               	movwf	___flmul@a+1
  5144  0544  0021               	movlb	1	; select bank1
  5145  0545  082E               	movf	efgtoa@ou^(0+128),w
  5146  0546  0020               	movlb	0	; select bank0
  5147  0547  00A4               	movwf	___flmul@a
  5148  0548  318B  232E  3180   	fcall	___flmul
  5149  054B  0020               	movlb	0	; select bank0
  5150  054C  0823               	movf	?___flmul+3,w
  5151  054D  0021               	movlb	1	; select bank1
  5152  054E  00B1               	movwf	(efgtoa@ou+3)^(0+128)
  5153  054F  0020               	movlb	0	; select bank0
  5154  0550  0822               	movf	?___flmul+2,w
  5155  0551  0021               	movlb	1	; select bank1
  5156  0552  00B0               	movwf	(efgtoa@ou+2)^(0+128)
  5157  0553  0020               	movlb	0	; select bank0
  5158  0554  0821               	movf	?___flmul+1,w
  5159  0555  0021               	movlb	1	; select bank1
  5160  0556  00AF               	movwf	(efgtoa@ou+1)^(0+128)
  5161  0557  0020               	movlb	0	; select bank0
  5162  0558  0820               	movf	?___flmul,w
  5163  0559  0021               	movlb	1	; select bank1
  5164  055A  00AE               	movwf	efgtoa@ou^(0+128)
  5165  055B                     l3704:
  5166                           
  5167                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5168  055B  3066               	movlw	102
  5169  055C  063B               	xorwf	efgtoa@nmode^(0+128),w
  5170  055D  1D03               	btfss	3,2
  5171  055E  2D60               	goto	u4931
  5172  055F  2D61               	goto	u4930
  5173  0560                     u4931:
  5174  0560  2D65               	goto	l915
  5175  0561                     u4930:
  5176  0561                     l3706:
  5177                           
  5178                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  5179  0561  3001               	movlw	1
  5180  0562  07AC               	addwf	efgtoa@m^(0+128),f
  5181  0563  3000               	movlw	0
  5182  0564  3DAD               	addwfc	(efgtoa@m+1)^(0+128),f
  5183  0565                     l915:	
  5184                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 460:  }
  5185                           
  5186                           
  5187                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5188  0565  0021               	movlb	1	; select bank1
  5189  0566  0831               	movf	(efgtoa@ou+3)^(0+128),w
  5190  0567  00D2               	movwf	(efgtoa@u+3)^(0+128)
  5191  0568  0830               	movf	(efgtoa@ou+2)^(0+128),w
  5192  0569  00D1               	movwf	(efgtoa@u+2)^(0+128)
  5193  056A  082F               	movf	(efgtoa@ou+1)^(0+128),w
  5194  056B  00D0               	movwf	(efgtoa@u+1)^(0+128)
  5195  056C  082E               	movf	efgtoa@ou^(0+128),w
  5196  056D  00CF               	movwf	efgtoa@u^(0+128)
  5197  056E                     l3708:
  5198                           
  5199                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5200  056E  3065               	movlw	101
  5201  056F  063B               	xorwf	efgtoa@nmode^(0+128),w
  5202  0570  1903               	btfsc	3,2
  5203  0571  2D73               	goto	u4941
  5204  0572  2D74               	goto	u4940
  5205  0573                     u4941:
  5206  0573  2D79               	goto	l3712
  5207  0574                     u4940:
  5208  0574                     l3710:
  5209  0574  084C               	movf	(efgtoa@e+1)^(0+128),w
  5210  0575  00AB               	movwf	(efgtoa@ne+1)^(0+128)
  5211  0576  084B               	movf	efgtoa@e^(0+128),w
  5212  0577  00AA               	movwf	efgtoa@ne^(0+128)
  5213  0578  2D7B               	goto	l920
  5214  0579                     l3712:
  5215  0579  01AA               	clrf	efgtoa@ne^(0+128)
  5216  057A  01AB               	clrf	(efgtoa@ne+1)^(0+128)
  5217  057B                     l920:
  5218                           
  5219                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5220  057B  01A8               	clrf	efgtoa@pp^(0+128)
  5221  057C  01A9               	clrf	(efgtoa@pp+1)^(0+128)
  5222                           
  5223                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5224  057D  01A6               	clrf	efgtoa@t^(0+128)
  5225  057E  01A7               	clrf	(efgtoa@t+1)^(0+128)
  5226                           
  5227                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5228  057F  01C5               	clrf	efgtoa@i^(0+128)
  5229  0580  01C6               	clrf	(efgtoa@i+1)^(0+128)
  5230                           
  5231                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5232  0581  2EA9               	goto	l3762
  5233  0582                     l3714:
  5234                           
  5235                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5236  0582  0021               	movlb	1	; select bank1
  5237  0583  0852               	movf	(efgtoa@u+3)^(0+128),w
  5238  0584  00F3               	movwf	___fldiv@a+3
  5239  0585  0851               	movf	(efgtoa@u+2)^(0+128),w
  5240  0586  00F2               	movwf	___fldiv@a+2
  5241  0587  0850               	movf	(efgtoa@u+1)^(0+128),w
  5242  0588  00F1               	movwf	___fldiv@a+1
  5243  0589  084F               	movf	efgtoa@u^(0+128),w
  5244  058A  00F0               	movwf	___fldiv@a
  5245  058B  0840               	movf	(efgtoa@h+3)^(0+128),w
  5246  058C  00F7               	movwf	___fldiv@b+3
  5247  058D  083F               	movf	(efgtoa@h+2)^(0+128),w
  5248  058E  00F6               	movwf	___fldiv@b+2
  5249  058F  083E               	movf	(efgtoa@h+1)^(0+128),w
  5250  0590  00F5               	movwf	___fldiv@b+1
  5251  0591  083D               	movf	efgtoa@h^(0+128),w
  5252  0592  00F4               	movwf	___fldiv@b
  5253  0593  3196  264C  3180   	fcall	___fldiv
  5254  0596  0873               	movf	?___fldiv+3,w
  5255  0597  0020               	movlb	0	; select bank0
  5256  0598  00B0               	movwf	floorf@x+3
  5257  0599  0872               	movf	?___fldiv+2,w
  5258  059A  00AF               	movwf	floorf@x+2
  5259  059B  0871               	movf	?___fldiv+1,w
  5260  059C  00AE               	movwf	floorf@x+1
  5261  059D  0870               	movf	?___fldiv,w
  5262  059E  00AD               	movwf	floorf@x
  5263  059F  3188  2004  3180   	fcall	_floorf
  5264  05A2  0020               	movlb	0	; select bank0
  5265  05A3  0830               	movf	?_floorf+3,w
  5266  05A4  0021               	movlb	1	; select bank1
  5267  05A5  00C4               	movwf	(efgtoa@l+3)^(0+128)
  5268  05A6  0020               	movlb	0	; select bank0
  5269  05A7  082F               	movf	?_floorf+2,w
  5270  05A8  0021               	movlb	1	; select bank1
  5271  05A9  00C3               	movwf	(efgtoa@l+2)^(0+128)
  5272  05AA  0020               	movlb	0	; select bank0
  5273  05AB  082E               	movf	?_floorf+1,w
  5274  05AC  0021               	movlb	1	; select bank1
  5275  05AD  00C2               	movwf	(efgtoa@l+1)^(0+128)
  5276  05AE  0020               	movlb	0	; select bank0
  5277  05AF  082D               	movf	?_floorf,w
  5278  05B0  0021               	movlb	1	; select bank1
  5279  05B1  00C1               	movwf	efgtoa@l^(0+128)
  5280                           
  5281                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5282  05B2  0844               	movf	(efgtoa@l+3)^(0+128),w
  5283  05B3  00F3               	movwf	___fltol@f1+3
  5284  05B4  0843               	movf	(efgtoa@l+2)^(0+128),w
  5285  05B5  00F2               	movwf	___fltol@f1+2
  5286  05B6  0842               	movf	(efgtoa@l+1)^(0+128),w
  5287  05B7  00F1               	movwf	___fltol@f1+1
  5288  05B8  0841               	movf	efgtoa@l^(0+128),w
  5289  05B9  00F0               	movwf	___fltol@f1
  5290  05BA  3193  2355  3180   	fcall	___fltol
  5291  05BD  0871               	movf	?___fltol+1,w
  5292  05BE  0021               	movlb	1	; select bank1
  5293  05BF  00B3               	movwf	(efgtoa@d+1)^(0+128)
  5294  05C0  0870               	movf	?___fltol,w
  5295  05C1  00B2               	movwf	efgtoa@d^(0+128)
  5296  05C2                     l3716:
  5297                           
  5298                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5299  05C2  0020               	movlb	0	; select bank0
  5300  05C3  1A6E               	btfsc	_flags,4
  5301  05C4  2DC6               	goto	u4951
  5302  05C5  2DC7               	goto	u4950
  5303  05C6                     u4951:
  5304  05C6  2DDD               	goto	l3726
  5305  05C7                     u4950:
  5306  05C7                     l3718:
  5307  05C7  0021               	movlb	1	; select bank1
  5308  05C8  0832               	movf	efgtoa@d^(0+128),w
  5309  05C9  0433               	iorwf	(efgtoa@d+1)^(0+128),w
  5310  05CA  1D03               	btfss	3,2
  5311  05CB  2DCD               	goto	u4961
  5312  05CC  2DCE               	goto	u4960
  5313  05CD                     u4961:
  5314  05CD  2DDD               	goto	l3726
  5315  05CE                     u4960:
  5316  05CE                     l3720:
  5317  05CE  3067               	movlw	103
  5318  05CF  063C               	xorwf	efgtoa@mode^(0+128),w
  5319  05D0  1D03               	btfss	3,2
  5320  05D1  2DD3               	goto	u4971
  5321  05D2  2DD4               	goto	u4970
  5322  05D3                     u4971:
  5323  05D3  2DDD               	goto	l3726
  5324  05D4                     u4970:
  5325  05D4                     l3722:
  5326  05D4  1FAB               	btfss	(efgtoa@ne+1)^(0+128),7
  5327  05D5  2DD7               	goto	u4981
  5328  05D6  2DD8               	goto	u4980
  5329  05D7                     u4981:
  5330  05D7  2DDD               	goto	l3726
  5331  05D8                     u4980:
  5332  05D8                     l3724:
  5333                           
  5334                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5335  05D8  3001               	movlw	1
  5336  05D9  07A6               	addwf	efgtoa@t^(0+128),f
  5337  05DA  3000               	movlw	0
  5338  05DB  3DA7               	addwfc	(efgtoa@t+1)^(0+128),f
  5339                           
  5340                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5341  05DC  2E37               	goto	l3754
  5342  05DD                     l3726:
  5343                           
  5344                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5345  05DD  0021               	movlb	1	; select bank1
  5346  05DE  0828               	movf	efgtoa@pp^(0+128),w
  5347  05DF  0429               	iorwf	(efgtoa@pp+1)^(0+128),w
  5348  05E0  1D03               	btfss	3,2
  5349  05E1  2DE3               	goto	u4991
  5350  05E2  2DE4               	goto	u4990
  5351  05E3                     u4991:
  5352  05E3  2E1B               	goto	l3746
  5353  05E4                     u4990:
  5354  05E4                     l3728:
  5355  05E4  1FAB               	btfss	(efgtoa@ne+1)^(0+128),7
  5356  05E5  2DE7               	goto	u5001
  5357  05E6  2DE8               	goto	u5000
  5358  05E7                     u5001:
  5359  05E7  2E1B               	goto	l3746
  5360  05E8                     u5000:
  5361  05E8                     l3730:
  5362                           
  5363                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5364  05E8  302E               	movlw	46
  5365  05E9  0020               	movlb	0	; select bank0
  5366  05EA  00C6               	movwf	??_efgtoa
  5367  05EB  0021               	movlb	1	; select bank1
  5368  05EC  084D               	movf	efgtoa@n^(0+128),w
  5369  05ED  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5370  05EE  0086               	movwf	6
  5371  05EF  3001               	movlw	1	; select bank3/4
  5372  05F0  0087               	movwf	7
  5373  05F1  0020               	movlb	0	; select bank0
  5374  05F2  0846               	movf	??_efgtoa,w
  5375  05F3  0081               	movwf	1
  5376  05F4                     l3732:
  5377  05F4  3001               	movlw	1
  5378  05F5  0021               	movlb	1	; select bank1
  5379  05F6  07CD               	addwf	efgtoa@n^(0+128),f
  5380  05F7  3000               	movlw	0
  5381  05F8  3DCE               	addwfc	(efgtoa@n+1)^(0+128),f
  5382  05F9                     l3734:
  5383                           
  5384                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5385  05F9  30FF               	movlw	255
  5386  05FA  07B9               	addwf	efgtoa@w^(0+128),f
  5387  05FB  30FF               	movlw	255
  5388  05FC  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5389  05FD                     l3736:
  5390                           
  5391                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5392  05FD  3001               	movlw	1
  5393  05FE  00A8               	movwf	efgtoa@pp^(0+128)
  5394  05FF  3000               	movlw	0
  5395  0600  00A9               	movwf	(efgtoa@pp^(0+128)+1)
  5396  0601  2E1B               	goto	l3746
  5397  0602                     l3738:
  5398                           
  5399                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5400  0602  3030               	movlw	48
  5401  0603  0020               	movlb	0	; select bank0
  5402  0604  00C6               	movwf	??_efgtoa
  5403  0605  0021               	movlb	1	; select bank1
  5404  0606  084D               	movf	efgtoa@n^(0+128),w
  5405  0607  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5406  0608  0086               	movwf	6
  5407  0609  3001               	movlw	1	; select bank3/4
  5408  060A  0087               	movwf	7
  5409  060B  0020               	movlb	0	; select bank0
  5410  060C  0846               	movf	??_efgtoa,w
  5411  060D  0081               	movwf	1
  5412  060E                     l3740:
  5413  060E  3001               	movlw	1
  5414  060F  0021               	movlb	1	; select bank1
  5415  0610  07CD               	addwf	efgtoa@n^(0+128),f
  5416  0611  3000               	movlw	0
  5417  0612  3DCE               	addwfc	(efgtoa@n+1)^(0+128),f
  5418  0613                     l3742:
  5419                           
  5420                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5421  0613  30FF               	movlw	255
  5422  0614  07B9               	addwf	efgtoa@w^(0+128),f
  5423  0615  30FF               	movlw	255
  5424  0616  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5425  0617                     l3744:
  5426                           
  5427                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5428  0617  30FF               	movlw	255
  5429  0618  07A6               	addwf	efgtoa@t^(0+128),f
  5430  0619  30FF               	movlw	255
  5431  061A  3DA7               	addwfc	(efgtoa@t+1)^(0+128),f
  5432  061B                     l3746:
  5433                           
  5434                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5435  061B  0826               	movf	efgtoa@t^(0+128),w
  5436  061C  0427               	iorwf	(efgtoa@t+1)^(0+128),w
  5437  061D  1D03               	btfss	3,2
  5438  061E  2E20               	goto	u5011
  5439  061F  2E21               	goto	u5010
  5440  0620                     u5011:
  5441  0620  2E02               	goto	l3738
  5442  0621                     u5010:
  5443  0621                     l3748:
  5444                           
  5445                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5446  0621  0832               	movf	efgtoa@d^(0+128),w
  5447  0622  3E30               	addlw	48
  5448  0623  0020               	movlb	0	; select bank0
  5449  0624  00C6               	movwf	??_efgtoa
  5450  0625  0021               	movlb	1	; select bank1
  5451  0626  084D               	movf	efgtoa@n^(0+128),w
  5452  0627  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5453  0628  0086               	movwf	6
  5454  0629  3001               	movlw	1	; select bank3/4
  5455  062A  0087               	movwf	7
  5456  062B  0020               	movlb	0	; select bank0
  5457  062C  0846               	movf	??_efgtoa,w
  5458  062D  0081               	movwf	1
  5459  062E                     l3750:
  5460  062E  3001               	movlw	1
  5461  062F  0021               	movlb	1	; select bank1
  5462  0630  07CD               	addwf	efgtoa@n^(0+128),f
  5463  0631  3000               	movlw	0
  5464  0632  3DCE               	addwfc	(efgtoa@n+1)^(0+128),f
  5465  0633                     l3752:
  5466                           
  5467                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5468  0633  30FF               	movlw	255
  5469  0634  07B9               	addwf	efgtoa@w^(0+128),f
  5470  0635  30FF               	movlw	255
  5471  0636  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5472  0637                     l3754:
  5473                           
  5474                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5475  0637  0844               	movf	(efgtoa@l+3)^(0+128),w
  5476  0638  0020               	movlb	0	; select bank0
  5477  0639  00A7               	movwf	___flmul@a+3
  5478  063A  0021               	movlb	1	; select bank1
  5479  063B  0843               	movf	(efgtoa@l+2)^(0+128),w
  5480  063C  0020               	movlb	0	; select bank0
  5481  063D  00A6               	movwf	___flmul@a+2
  5482  063E  0021               	movlb	1	; select bank1
  5483  063F  0842               	movf	(efgtoa@l+1)^(0+128),w
  5484  0640  0020               	movlb	0	; select bank0
  5485  0641  00A5               	movwf	___flmul@a+1
  5486  0642  0021               	movlb	1	; select bank1
  5487  0643  0841               	movf	efgtoa@l^(0+128),w
  5488  0644  0020               	movlb	0	; select bank0
  5489  0645  00A4               	movwf	___flmul@a
  5490  0646  0021               	movlb	1	; select bank1
  5491  0647  0852               	movf	(efgtoa@u+3)^(0+128),w
  5492  0648  0020               	movlb	0	; select bank0
  5493  0649  00A3               	movwf	___flmul@b+3
  5494  064A  0021               	movlb	1	; select bank1
  5495  064B  0851               	movf	(efgtoa@u+2)^(0+128),w
  5496  064C  0020               	movlb	0	; select bank0
  5497  064D  00A2               	movwf	___flmul@b+2
  5498  064E  0021               	movlb	1	; select bank1
  5499  064F  0850               	movf	(efgtoa@u+1)^(0+128),w
  5500  0650  0020               	movlb	0	; select bank0
  5501  0651  00A1               	movwf	___flmul@b+1
  5502  0652  0021               	movlb	1	; select bank1
  5503  0653  084F               	movf	efgtoa@u^(0+128),w
  5504  0654  0020               	movlb	0	; select bank0
  5505  0655  00A0               	movwf	___flmul@b
  5506  0656  318B  232E  3180   	fcall	___flmul
  5507  0659  0020               	movlb	0	; select bank0
  5508  065A  0823               	movf	?___flmul+3,w
  5509  065B  00B8               	movwf	___flsub@a+3
  5510  065C  0822               	movf	?___flmul+2,w
  5511  065D  00B7               	movwf	___flsub@a+2
  5512  065E  0821               	movf	?___flmul+1,w
  5513  065F  00B6               	movwf	___flsub@a+1
  5514  0660  0820               	movf	?___flmul,w
  5515  0661  00B5               	movwf	___flsub@a
  5516  0662  0021               	movlb	1	; select bank1
  5517  0663  0840               	movf	(efgtoa@h+3)^(0+128),w
  5518  0664  0020               	movlb	0	; select bank0
  5519  0665  00BC               	movwf	___flsub@b+3
  5520  0666  0021               	movlb	1	; select bank1
  5521  0667  083F               	movf	(efgtoa@h+2)^(0+128),w
  5522  0668  0020               	movlb	0	; select bank0
  5523  0669  00BB               	movwf	___flsub@b+2
  5524  066A  0021               	movlb	1	; select bank1
  5525  066B  083E               	movf	(efgtoa@h+1)^(0+128),w
  5526  066C  0020               	movlb	0	; select bank0
  5527  066D  00BA               	movwf	___flsub@b+1
  5528  066E  0021               	movlb	1	; select bank1
  5529  066F  083D               	movf	efgtoa@h^(0+128),w
  5530  0670  0020               	movlb	0	; select bank0
  5531  0671  00B9               	movwf	___flsub@b
  5532  0672  319E  26ED  3180   	fcall	___flsub
  5533  0675  0020               	movlb	0	; select bank0
  5534  0676  0838               	movf	?___flsub+3,w
  5535  0677  0021               	movlb	1	; select bank1
  5536  0678  00C0               	movwf	(efgtoa@h+3)^(0+128)
  5537  0679  0020               	movlb	0	; select bank0
  5538  067A  0837               	movf	?___flsub+2,w
  5539  067B  0021               	movlb	1	; select bank1
  5540  067C  00BF               	movwf	(efgtoa@h+2)^(0+128)
  5541  067D  0020               	movlb	0	; select bank0
  5542  067E  0836               	movf	?___flsub+1,w
  5543  067F  0021               	movlb	1	; select bank1
  5544  0680  00BE               	movwf	(efgtoa@h+1)^(0+128)
  5545  0681  0020               	movlb	0	; select bank0
  5546  0682  0835               	movf	?___flsub,w
  5547  0683  0021               	movlb	1	; select bank1
  5548  0684  00BD               	movwf	efgtoa@h^(0+128)
  5549  0685                     l3756:
  5550                           
  5551                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5552  0685  3041               	movlw	65
  5553  0686  00F3               	movwf	___fldiv@a+3
  5554  0687  3020               	movlw	32
  5555  0688  00F2               	movwf	___fldiv@a+2
  5556  0689  3000               	movlw	0
  5557  068A  00F1               	movwf	___fldiv@a+1
  5558  068B  3000               	movlw	0
  5559  068C  00F0               	movwf	___fldiv@a
  5560  068D  0852               	movf	(efgtoa@u+3)^(0+128),w
  5561  068E  00F7               	movwf	___fldiv@b+3
  5562  068F  0851               	movf	(efgtoa@u+2)^(0+128),w
  5563  0690  00F6               	movwf	___fldiv@b+2
  5564  0691  0850               	movf	(efgtoa@u+1)^(0+128),w
  5565  0692  00F5               	movwf	___fldiv@b+1
  5566  0693  084F               	movf	efgtoa@u^(0+128),w
  5567  0694  00F4               	movwf	___fldiv@b
  5568  0695  3196  264C  3180   	fcall	___fldiv
  5569  0698  0873               	movf	?___fldiv+3,w
  5570  0699  0021               	movlb	1	; select bank1
  5571  069A  00D2               	movwf	(efgtoa@u+3)^(0+128)
  5572  069B  0872               	movf	?___fldiv+2,w
  5573  069C  00D1               	movwf	(efgtoa@u+2)^(0+128)
  5574  069D  0871               	movf	?___fldiv+1,w
  5575  069E  00D0               	movwf	(efgtoa@u+1)^(0+128)
  5576  069F  0870               	movf	?___fldiv,w
  5577  06A0  00CF               	movwf	efgtoa@u^(0+128)
  5578  06A1                     l3758:
  5579                           
  5580                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5581  06A1  30FF               	movlw	255
  5582  06A2  07AA               	addwf	efgtoa@ne^(0+128),f
  5583  06A3  30FF               	movlw	255
  5584  06A4  3DAB               	addwfc	(efgtoa@ne+1)^(0+128),f
  5585  06A5                     l3760:
  5586                           
  5587                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5588  06A5  3001               	movlw	1
  5589  06A6  07C5               	addwf	efgtoa@i^(0+128),f
  5590  06A7  3000               	movlw	0
  5591  06A8  3DC6               	addwfc	(efgtoa@i+1)^(0+128),f
  5592  06A9                     l3762:
  5593                           
  5594                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5595  06A9  0846               	movf	(efgtoa@i+1)^(0+128),w
  5596  06AA  3A80               	xorlw	128
  5597  06AB  0020               	movlb	0	; select bank0
  5598  06AC  00C6               	movwf	??_efgtoa
  5599  06AD  0021               	movlb	1	; select bank1
  5600  06AE  082D               	movf	(efgtoa@m+1)^(0+128),w
  5601  06AF  3A80               	xorlw	128
  5602  06B0  0020               	movlb	0	; select bank0
  5603  06B1  0246               	subwf	??_efgtoa,w
  5604  06B2  1D03               	skipz
  5605  06B3  2EB7               	goto	u5025
  5606  06B4  0021               	movlb	1	; select bank1
  5607  06B5  082C               	movf	efgtoa@m^(0+128),w
  5608  06B6  0245               	subwf	efgtoa@i^(0+128),w
  5609  06B7                     u5025:
  5610  06B7  1803               	skipnc
  5611  06B8  2EBA               	goto	u5021
  5612  06B9  2EBB               	goto	u5020
  5613  06BA                     u5021:
  5614  06BA  2ECB               	goto	l3766
  5615  06BB                     u5020:
  5616  06BB                     l3764:
  5617  06BB  0021               	movlb	1	; select bank1
  5618  06BC  084E               	movf	(efgtoa@n+1)^(0+128),w
  5619  06BD  3A80               	xorlw	128
  5620  06BE  0020               	movlb	0	; select bank0
  5621  06BF  00C6               	movwf	??_efgtoa
  5622  06C0  3080               	movlw	128
  5623  06C1  0246               	subwf	??_efgtoa,w
  5624  06C2  1D03               	skipz
  5625  06C3  2EC7               	goto	u5035
  5626  06C4  304B               	movlw	75
  5627  06C5  0021               	movlb	1	; select bank1
  5628  06C6  024D               	subwf	efgtoa@n^(0+128),w
  5629  06C7                     u5035:
  5630  06C7  1C03               	skipc
  5631  06C8  2ECA               	goto	u5031
  5632  06C9  2ECB               	goto	u5030
  5633  06CA                     u5031:
  5634  06CA  2D82               	goto	l3714
  5635  06CB                     u5030:
  5636  06CB                     l3766:
  5637                           
  5638                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5639  06CB  0021               	movlb	1	; select bank1
  5640  06CC  0828               	movf	efgtoa@pp^(0+128),w
  5641  06CD  0429               	iorwf	(efgtoa@pp+1)^(0+128),w
  5642  06CE  1D03               	btfss	3,2
  5643  06CF  2ED1               	goto	u5041
  5644  06D0  2ED2               	goto	u5040
  5645  06D1                     u5041:
  5646  06D1  2EE7               	goto	l3774
  5647  06D2                     u5040:
  5648  06D2                     l3768:
  5649  06D2  0020               	movlb	0	; select bank0
  5650  06D3  1E6E               	btfss	_flags,4
  5651  06D4  2ED6               	goto	u5051
  5652  06D5  2ED7               	goto	u5050
  5653  06D6                     u5051:
  5654  06D6  2EE7               	goto	l3774
  5655  06D7                     u5050:
  5656  06D7                     l3770:
  5657                           
  5658                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5659  06D7  302E               	movlw	46
  5660  06D8  00C6               	movwf	??_efgtoa
  5661  06D9  0021               	movlb	1	; select bank1
  5662  06DA  084D               	movf	efgtoa@n^(0+128),w
  5663  06DB  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5664  06DC  0086               	movwf	6
  5665  06DD  3001               	movlw	1	; select bank3/4
  5666  06DE  0087               	movwf	7
  5667  06DF  0020               	movlb	0	; select bank0
  5668  06E0  0846               	movf	??_efgtoa,w
  5669  06E1  0081               	movwf	1
  5670  06E2                     l3772:
  5671  06E2  3001               	movlw	1
  5672  06E3  0021               	movlb	1	; select bank1
  5673  06E4  07CD               	addwf	efgtoa@n^(0+128),f
  5674  06E5  3000               	movlw	0
  5675  06E6  3DCE               	addwfc	(efgtoa@n+1)^(0+128),f
  5676  06E7                     l3774:
  5677                           
  5678                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5679  06E7  0021               	movlb	1	; select bank1
  5680  06E8  084D               	movf	efgtoa@n^(0+128),w
  5681  06E9  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5682  06EA  0086               	movwf	6
  5683  06EB  3001               	movlw	1	; select bank3/4
  5684  06EC  0087               	movwf	7
  5685  06ED  0181               	clrf	1
  5686  06EE                     l3776:
  5687                           
  5688                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5689  06EE  3065               	movlw	101
  5690  06EF  063B               	xorwf	efgtoa@nmode^(0+128),w
  5691  06F0  1D03               	btfss	3,2
  5692  06F1  2EF3               	goto	u5061
  5693  06F2  2EF4               	goto	u5060
  5694  06F3                     u5061:
  5695  06F3  2FBD               	goto	l3834
  5696  06F4                     u5060:
  5697  06F4                     l3778:
  5698                           
  5699                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5700  06F4  304F               	movlw	79
  5701  06F5  00C5               	movwf	efgtoa@i^(0+128)
  5702  06F6  3000               	movlw	0
  5703  06F7  00C6               	movwf	(efgtoa@i^(0+128)+1)
  5704  06F8                     l3780:
  5705                           
  5706                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5707  06F8  0845               	movf	efgtoa@i^(0+128),w
  5708  06F9  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5709  06FA  0086               	movwf	6
  5710  06FB  3001               	movlw	1	; select bank3/4
  5711  06FC  0087               	movwf	7
  5712  06FD  0181               	clrf	1
  5713  06FE                     l3782:
  5714                           
  5715                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5716  06FE  01B4               	clrf	efgtoa@sign^(0+128)
  5717  06FF  01B5               	clrf	(efgtoa@sign+1)^(0+128)
  5718  0700                     l3784:
  5719                           
  5720                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5721  0700  1FCC               	btfss	(efgtoa@e+1)^(0+128),7
  5722  0701  2F03               	goto	u5071
  5723  0702  2F04               	goto	u5070
  5724  0703                     u5071:
  5725  0703  2F0D               	goto	l3790
  5726  0704                     u5070:
  5727  0704                     l3786:
  5728                           
  5729                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5730  0704  3001               	movlw	1
  5731  0705  00B4               	movwf	efgtoa@sign^(0+128)
  5732  0706  3000               	movlw	0
  5733  0707  00B5               	movwf	(efgtoa@sign^(0+128)+1)
  5734  0708                     l3788:
  5735                           
  5736                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5737  0708  09CB               	comf	efgtoa@e^(0+128),f
  5738  0709  09CC               	comf	(efgtoa@e+1)^(0+128),f
  5739  070A  0ACB               	incf	efgtoa@e^(0+128),f
  5740  070B  1903               	skipnz
  5741  070C  0ACC               	incf	(efgtoa@e+1)^(0+128),f
  5742  070D                     l3790:
  5743                           
  5744                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5745  070D  3002               	movlw	2
  5746  070E  00B7               	movwf	efgtoa@p^(0+128)
  5747  070F  3000               	movlw	0
  5748  0710  00B8               	movwf	(efgtoa@p^(0+128)+1)
  5749                           
  5750                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5751  0711  2F48               	goto	l3802
  5752  0712                     l3792:
  5753                           
  5754                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5755  0712  30FF               	movlw	255
  5756  0713  0021               	movlb	1	; select bank1
  5757  0714  07C5               	addwf	efgtoa@i^(0+128),f
  5758  0715  30FF               	movlw	255
  5759  0716  3DC6               	addwfc	(efgtoa@i+1)^(0+128),f
  5760  0717                     l3794:
  5761                           
  5762                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5763  0717  300A               	movlw	10
  5764  0718  00F0               	movwf	___awmod@divisor
  5765  0719  3000               	movlw	0
  5766  071A  00F1               	movwf	___awmod@divisor+1
  5767  071B  084C               	movf	(efgtoa@e+1)^(0+128),w
  5768  071C  00F3               	movwf	___awmod@dividend+1
  5769  071D  084B               	movf	efgtoa@e^(0+128),w
  5770  071E  00F2               	movwf	___awmod@dividend
  5771  071F  3191  21A2  3180   	fcall	___awmod
  5772  0722  0870               	movf	?___awmod,w
  5773  0723  3E30               	addlw	48
  5774  0724  0020               	movlb	0	; select bank0
  5775  0725  00C6               	movwf	??_efgtoa
  5776  0726  0021               	movlb	1	; select bank1
  5777  0727  0845               	movf	efgtoa@i^(0+128),w
  5778  0728  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5779  0729  0086               	movwf	6
  5780  072A  3001               	movlw	1	; select bank3/4
  5781  072B  0087               	movwf	7
  5782  072C  0020               	movlb	0	; select bank0
  5783  072D  0846               	movf	??_efgtoa,w
  5784  072E  0081               	movwf	1
  5785  072F                     l3796:
  5786                           
  5787                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5788  072F  300A               	movlw	10
  5789  0730  00F0               	movwf	___awdiv@divisor
  5790  0731  3000               	movlw	0
  5791  0732  00F1               	movwf	___awdiv@divisor+1
  5792  0733  0021               	movlb	1	; select bank1
  5793  0734  084C               	movf	(efgtoa@e+1)^(0+128),w
  5794  0735  00F3               	movwf	___awdiv@dividend+1
  5795  0736  084B               	movf	efgtoa@e^(0+128),w
  5796  0737  00F2               	movwf	___awdiv@dividend
  5797  0738  3192  22F6  3180   	fcall	___awdiv
  5798  073B  0871               	movf	?___awdiv+1,w
  5799  073C  0021               	movlb	1	; select bank1
  5800  073D  00CC               	movwf	(efgtoa@e+1)^(0+128)
  5801  073E  0870               	movf	?___awdiv,w
  5802  073F  00CB               	movwf	efgtoa@e^(0+128)
  5803  0740                     l3798:
  5804                           
  5805                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5806  0740  30FF               	movlw	255
  5807  0741  07B7               	addwf	efgtoa@p^(0+128),f
  5808  0742  30FF               	movlw	255
  5809  0743  3DB8               	addwfc	(efgtoa@p+1)^(0+128),f
  5810  0744                     l3800:
  5811                           
  5812                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5813  0744  30FF               	movlw	255
  5814  0745  07B9               	addwf	efgtoa@w^(0+128),f
  5815  0746  30FF               	movlw	255
  5816  0747  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5817  0748                     l3802:
  5818                           
  5819                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5820  0748  084B               	movf	efgtoa@e^(0+128),w
  5821  0749  044C               	iorwf	(efgtoa@e+1)^(0+128),w
  5822  074A  1D03               	btfss	3,2
  5823  074B  2F4D               	goto	u5081
  5824  074C  2F4E               	goto	u5080
  5825  074D                     u5081:
  5826  074D  2F12               	goto	l3792
  5827  074E                     u5080:
  5828  074E                     l3804:
  5829  074E  0838               	movf	(efgtoa@p+1)^(0+128),w
  5830  074F  3A80               	xorlw	128
  5831  0750  0020               	movlb	0	; select bank0
  5832  0751  00C6               	movwf	??_efgtoa
  5833  0752  3080               	movlw	128
  5834  0753  0246               	subwf	??_efgtoa,w
  5835  0754  1D03               	skipz
  5836  0755  2F59               	goto	u5095
  5837  0756  3001               	movlw	1
  5838  0757  0021               	movlb	1	; select bank1
  5839  0758  0237               	subwf	efgtoa@p^(0+128),w
  5840  0759                     u5095:
  5841  0759  1803               	skipnc
  5842  075A  2F5C               	goto	u5091
  5843  075B  2F5D               	goto	u5090
  5844  075C                     u5091:
  5845  075C  2F12               	goto	l3792
  5846  075D                     u5090:
  5847  075D                     l3806:
  5848                           
  5849                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  5850  075D  30FF               	movlw	255
  5851  075E  0021               	movlb	1	; select bank1
  5852  075F  07C5               	addwf	efgtoa@i^(0+128),f
  5853  0760  30FF               	movlw	255
  5854  0761  3DC6               	addwfc	(efgtoa@i+1)^(0+128),f
  5855  0762                     l3808:
  5856                           
  5857                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5858  0762  0834               	movf	efgtoa@sign^(0+128),w
  5859  0763  0435               	iorwf	(efgtoa@sign+1)^(0+128),w
  5860  0764  1D03               	btfss	3,2
  5861  0765  2F67               	goto	u5101
  5862  0766  2F68               	goto	u5100
  5863  0767                     u5101:
  5864  0767  2F6D               	goto	l3812
  5865  0768                     u5100:
  5866  0768                     l3810:
  5867  0768  302B               	movlw	43
  5868  0769  00A2               	movwf	_efgtoa$934^(0+128)
  5869  076A  3000               	movlw	0
  5870  076B  00A3               	movwf	(_efgtoa$934^(0+128)+1)
  5871  076C  2F71               	goto	l3814
  5872  076D                     l3812:
  5873  076D  302D               	movlw	45
  5874  076E  00A2               	movwf	_efgtoa$934^(0+128)
  5875  076F  3000               	movlw	0
  5876  0770  00A3               	movwf	(_efgtoa$934^(0+128)+1)
  5877  0771                     l3814:
  5878  0771  0822               	movf	_efgtoa$934^(0+128),w
  5879  0772  0020               	movlb	0	; select bank0
  5880  0773  00C6               	movwf	??_efgtoa
  5881  0774  0021               	movlb	1	; select bank1
  5882  0775  0845               	movf	efgtoa@i^(0+128),w
  5883  0776  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5884  0777  0086               	movwf	6
  5885  0778  3001               	movlw	1	; select bank3/4
  5886  0779  0087               	movwf	7
  5887  077A  0020               	movlb	0	; select bank0
  5888  077B  0846               	movf	??_efgtoa,w
  5889  077C  0081               	movwf	1
  5890  077D                     l3816:
  5891                           
  5892                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  5893  077D  30FF               	movlw	255
  5894  077E  0021               	movlb	1	; select bank1
  5895  077F  07B9               	addwf	efgtoa@w^(0+128),f
  5896  0780  30FF               	movlw	255
  5897  0781  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5898  0782                     l3818:
  5899                           
  5900                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  5901  0782  30FF               	movlw	255
  5902  0783  07C5               	addwf	efgtoa@i^(0+128),f
  5903  0784  30FF               	movlw	255
  5904  0785  3DC6               	addwfc	(efgtoa@i+1)^(0+128),f
  5905  0786                     l3822:	
  5906                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 && isupper((int)c), ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5907                           
  5908  0786  0020               	movlb	0	; select bank0
  5909  0787  0845               	movf	efgtoa@c,w
  5910  0788  3EBF               	addlw	191
  5911  0789  00C6               	movwf	??_efgtoa
  5912  078A  30FF               	movlw	255
  5913  078B  1803               	skipnc
  5914  078C  3000               	movlw	0
  5915  078D  00C7               	movwf	??_efgtoa+1
  5916  078E  3000               	movlw	0
  5917  078F  0247               	subwf	??_efgtoa+1,w
  5918  0790  301A               	movlw	26
  5919  0791  1903               	skipnz
  5920  0792  0246               	subwf	??_efgtoa,w
  5921  0793  1C03               	skipc
  5922  0794  2F96               	goto	u5111
  5923  0795  2F97               	goto	u5110
  5924  0796                     u5111:
  5925  0796  2F9D               	goto	l3826
  5926  0797                     u5110:
  5927  0797                     l3824:
  5928  0797  3065               	movlw	101
  5929  0798  0021               	movlb	1	; select bank1
  5930  0799  00A4               	movwf	_efgtoa$935^(0+128)
  5931  079A  3000               	movlw	0
  5932  079B  00A5               	movwf	(_efgtoa$935^(0+128)+1)
  5933  079C  2FA2               	goto	l3828
  5934  079D                     l3826:
  5935  079D  3045               	movlw	69
  5936  079E  0021               	movlb	1	; select bank1
  5937  079F  00A4               	movwf	_efgtoa$935^(0+128)
  5938  07A0  3000               	movlw	0
  5939  07A1  00A5               	movwf	(_efgtoa$935^(0+128)+1)
  5940  07A2                     l3828:
  5941  07A2  0824               	movf	_efgtoa$935^(0+128),w
  5942  07A3  0020               	movlb	0	; select bank0
  5943  07A4  00C6               	movwf	??_efgtoa
  5944  07A5  0021               	movlb	1	; select bank1
  5945  07A6  0845               	movf	efgtoa@i^(0+128),w
  5946  07A7  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5947  07A8  0086               	movwf	6
  5948  07A9  3001               	movlw	1	; select bank3/4
  5949  07AA  0087               	movwf	7
  5950  07AB  0020               	movlb	0	; select bank0
  5951  07AC  0846               	movf	??_efgtoa,w
  5952  07AD  0081               	movwf	1
  5953  07AE                     l3830:
  5954                           
  5955                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  5956  07AE  30FF               	movlw	255
  5957  07AF  0021               	movlb	1	; select bank1
  5958  07B0  07B9               	addwf	efgtoa@w^(0+128),f
  5959  07B1  30FF               	movlw	255
  5960  07B2  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5961  07B3                     l3832:
  5962                           
  5963                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5964  07B3  0845               	movf	efgtoa@i^(0+128),w
  5965  07B4  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5966  07B5  00F0               	movwf	strcpy@src
  5967  07B6  3001               	movlw	1
  5968  07B7  00F1               	movwf	strcpy@src+1
  5969  07B8  084D               	movf	efgtoa@n^(0+128),w
  5970  07B9  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5971  07BA  319F  274F  3180   	fcall	_strcpy
  5972  07BD                     l3834:
  5973                           
  5974                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  5975  07BD  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  5976  07BE  0020               	movlb	0	; select bank0
  5977  07BF  00C6               	movwf	??_efgtoa
  5978  07C0  0846               	movf	??_efgtoa,w
  5979  07C1  00A4               	movwf	pad@buf
  5980  07C2  0021               	movlb	1	; select bank1
  5981  07C3  083A               	movf	(efgtoa@w+1)^(0+128),w
  5982  07C4  0020               	movlb	0	; select bank0
  5983  07C5  00A6               	movwf	pad@p+1
  5984  07C6  0021               	movlb	1	; select bank1
  5985  07C7  0839               	movf	efgtoa@w^(0+128),w
  5986  07C8  0020               	movlb	0	; select bank0
  5987  07C9  00A5               	movwf	pad@p
  5988  07CA  0021               	movlb	1	; select bank1
  5989  07CB  0836               	movf	efgtoa@fp^(0+128),w
  5990  07CC  3192  2248  3180   	fcall	_pad
  5991  07CF  0020               	movlb	0	; select bank0
  5992  07D0  0825               	movf	?_pad+1,w
  5993  07D1  00C2               	movwf	?_efgtoa+1
  5994  07D2  0824               	movf	?_pad,w
  5995  07D3  00C1               	movwf	?_efgtoa
  5996  07D4                     l876:
  5997  07D4  0008               	return
  5998  07D5                     __end_of_efgtoa:
  5999                           
  6000                           	psect	text6
  6001  1E54                     __ptext6:	
  6002 ;; *************** function _tolower *****************
  6003 ;; Defined at:
  6004 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;  c               2    6[COMMON] int 
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;		None
  6009 ;; Return value:  Size  Location     Type
  6010 ;;                  2    6[COMMON] int 
  6011 ;; Registers used:
  6012 ;;		wreg, status,2, status,0
  6013 ;; Tracked objects:
  6014 ;;		On entry : 0/0
  6015 ;;		On exit  : 0/0
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6018 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6020 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6021 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6022 ;;Total ram usage:        4 bytes
  6023 ;; Hardware stack levels used: 1
  6024 ;; Hardware stack levels required when called: 1
  6025 ;; This function calls:
  6026 ;;		_isupper
  6027 ;; This function is called by:
  6028 ;;		_efgtoa
  6029 ;;		_vfpfcnvrt
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033  1E54                     _tolower:	
  6034                           ;psect for function _tolower
  6035                           
  6036  1E54                     l3464:	
  6037                           ;incstack = 0
  6038                           ; Regs used in _tolower: [wreg+status,2+status,0]
  6039                           
  6040  1E54                     l3468:
  6041  1E54  0876               	movf	tolower@c,w
  6042  1E55  3EBF               	addlw	191
  6043  1E56  00F8               	movwf	??_tolower
  6044  1E57  30FF               	movlw	255
  6045  1E58  3D77               	addwfc	tolower@c+1,w
  6046  1E59  00F9               	movwf	??_tolower+1
  6047  1E5A  3000               	movlw	0
  6048  1E5B  0279               	subwf	??_tolower+1,w
  6049  1E5C  301A               	movlw	26
  6050  1E5D  1903               	skipnz
  6051  1E5E  0278               	subwf	??_tolower,w
  6052  1E5F  1803               	skipnc
  6053  1E60  2E62               	goto	u4441
  6054  1E61  2E63               	goto	u4440
  6055  1E62                     u4441:
  6056  1E62  2E6A               	goto	l1100
  6057  1E63                     u4440:
  6058  1E63                     l3470:
  6059  1E63  3020               	movlw	32
  6060  1E64  0476               	iorwf	tolower@c,w
  6061  1E65  00F6               	movwf	?_tolower
  6062  1E66  3000               	movlw	0
  6063  1E67  0477               	iorwf	tolower@c+1,w
  6064  1E68  00F7               	movwf	?_tolower+1
  6065  1E69  2E6A               	goto	l1103
  6066  1E6A                     l1100:
  6067  1E6A                     l1103:
  6068  1E6A  0008               	return
  6069  1E6B                     __end_of_tolower:
  6070                           
  6071                           	psect	text7
  6072  1E83                     __ptext7:	
  6073 ;; *************** function _isupper *****************
  6074 ;; Defined at:
  6075 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;  c               2    0[COMMON] int 
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;		None
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  2    0[COMMON] int 
  6082 ;; Registers used:
  6083 ;;		wreg, status,2, status,0
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6089 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6091 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6092 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6093 ;;Total ram usage:        6 bytes
  6094 ;; Hardware stack levels used: 1
  6095 ;; This function calls:
  6096 ;;		Nothing
  6097 ;; This function is called by:
  6098 ;;		_efgtoa
  6099 ;;		_vfpfcnvrt
  6100 ;;		_tolower
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104  1E83                     _isupper:	
  6105                           ;psect for function _isupper
  6106                           
  6107  1E83                     l2952:	
  6108                           ;incstack = 0
  6109                           ; Regs used in _isupper: [wreg+status,2+status,0]
  6110                           
  6111  1E83  0870               	movf	isupper@c,w
  6112  1E84  3EBF               	addlw	191
  6113  1E85  00F2               	movwf	??_isupper
  6114  1E86  30FF               	movlw	255
  6115  1E87  3D71               	addwfc	isupper@c+1,w
  6116  1E88  00F3               	movwf	??_isupper+1
  6117  1E89  3000               	movlw	0
  6118  1E8A  0273               	subwf	??_isupper+1,w
  6119  1E8B  301A               	movlw	26
  6120  1E8C  1903               	skipnz
  6121  1E8D  0272               	subwf	??_isupper,w
  6122  1E8E  1C03               	skipc
  6123  1E8F  2E91               	goto	u3321
  6124  1E90  2E93               	goto	u3320
  6125  1E91                     u3321:
  6126  1E91  3001               	movlw	1
  6127  1E92  2E94               	goto	u3330
  6128  1E93                     u3320:
  6129  1E93  3000               	movlw	0
  6130  1E94                     u3330:
  6131  1E94  00F4               	movwf	??_isupper+2
  6132  1E95  01F5               	clrf	??_isupper+3
  6133  1E96  0874               	movf	??_isupper+2,w
  6134  1E97  00F0               	movwf	?_isupper
  6135  1E98  0875               	movf	??_isupper+3,w
  6136  1E99  00F1               	movwf	?_isupper+1
  6137  1E9A                     l1048:
  6138  1E9A  0008               	return
  6139  1E9B                     __end_of_isupper:
  6140                           
  6141                           	psect	text8
  6142  1F4F                     __ptext8:	
  6143 ;; *************** function _strcpy *****************
  6144 ;; Defined at:
  6145 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;  dest            1    wreg     PTR unsigned char 
  6148 ;;		 -> dbuf(80), 
  6149 ;;  src             2    0[COMMON] PTR const unsigned char 
  6150 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  6151 ;;		 -> dbuf(80), 
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;  dest            1    7[COMMON] PTR unsigned char 
  6154 ;;		 -> dbuf(80), 
  6155 ;;  s               2    4[COMMON] PTR const unsigned char 
  6156 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  6157 ;;		 -> dbuf(80), 
  6158 ;;  d               1    6[COMMON] PTR unsigned char 
  6159 ;;		 -> dbuf(80), 
  6160 ;; Return value:  Size  Location     Type
  6161 ;;                  1    wreg      PTR unsigned char 
  6162 ;; Registers used:
  6163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6164 ;; Tracked objects:
  6165 ;;		On entry : 0/0
  6166 ;;		On exit  : 0/0
  6167 ;;		Unchanged: 0/0
  6168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6170 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6171 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6172 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6173 ;;Total ram usage:        8 bytes
  6174 ;; Hardware stack levels used: 1
  6175 ;; This function calls:
  6176 ;;		Nothing
  6177 ;; This function is called by:
  6178 ;;		_efgtoa
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182  1F4F                     _strcpy:	
  6183                           ;psect for function _strcpy
  6184                           
  6185                           
  6186                           ;incstack = 0
  6187                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  6188                           ;strcpy@dest stored from wreg
  6189  1F4F  00F7               	movwf	strcpy@dest
  6190  1F50                     l3460:
  6191  1F50  0871               	movf	strcpy@src+1,w
  6192  1F51  00F5               	movwf	strcpy@s+1
  6193  1F52  0870               	movf	strcpy@src,w
  6194  1F53  00F4               	movwf	strcpy@s
  6195  1F54  0877               	movf	strcpy@dest,w
  6196  1F55  00F2               	movwf	??_strcpy
  6197  1F56  0872               	movf	??_strcpy,w
  6198  1F57  00F6               	movwf	strcpy@d
  6199  1F58                     l3462:
  6200  1F58  0876               	movf	strcpy@d,w
  6201  1F59  0086               	movwf	6
  6202  1F5A  3001               	movlw	1	; select bank2/3
  6203  1F5B  0087               	movwf	7
  6204  1F5C  0AF6               	incf	strcpy@d,f
  6205  1F5D  0875               	movf	strcpy@s+1,w
  6206  1F5E  00F3               	movwf	??_strcpy+1
  6207  1F5F  0874               	movf	strcpy@s,w
  6208  1F60  00F2               	movwf	??_strcpy
  6209  1F61  0AF4               	incf	strcpy@s,f
  6210  1F62  1903               	skipnz
  6211  1F63  0AF5               	incf	strcpy@s+1,f
  6212  1F64  0872               	movf	??_strcpy,w
  6213  1F65  0084               	movwf	4
  6214  1F66  0873               	movf	??_strcpy+1,w
  6215  1F67  0085               	movwf	5
  6216  1F68  0800               	movf	0,w	;code access
  6217  1F69  3FC0               	movwi [0]fsr1
  6218  1F6A  0889               	movf	9,f
  6219  1F6B  1D03               	btfss	3,2
  6220  1F6C  2F6E               	goto	u4431
  6221  1F6D  2F6F               	goto	u4430
  6222  1F6E                     u4431:
  6223  1F6E  2F58               	goto	l3462
  6224  1F6F                     u4430:
  6225  1F6F                     l1080:
  6226  1F6F  0008               	return
  6227  1F70                     __end_of_strcpy:
  6228                           
  6229                           	psect	text9
  6230  1248                     __ptext9:	
  6231 ;; *************** function _pad *****************
  6232 ;; Defined at:
  6233 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  6234 ;; Parameters:    Size  Location     Type
  6235 ;;  fp              1    wreg     PTR struct _IO_FILE
  6236 ;;		 -> sprintf@f(10), 
  6237 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  6238 ;;		 -> dbuf(80), 
  6239 ;;  p               2    5[BANK0 ] int 
  6240 ;; Auto vars:     Size  Location     Type
  6241 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  6242 ;;		 -> sprintf@f(10), 
  6243 ;;  w               2    9[BANK0 ] int 
  6244 ;;  i               2    7[BANK0 ] int 
  6245 ;; Return value:  Size  Location     Type
  6246 ;;                  2    4[BANK0 ] int 
  6247 ;; Registers used:
  6248 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6249 ;; Tracked objects:
  6250 ;;		On entry : 0/0
  6251 ;;		On exit  : 0/0
  6252 ;;		Unchanged: 0/0
  6253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6254 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6255 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6256 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6257 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6258 ;;Total ram usage:        9 bytes
  6259 ;; Hardware stack levels used: 1
  6260 ;; Hardware stack levels required when called: 3
  6261 ;; This function calls:
  6262 ;;		_fputc
  6263 ;;		_fputs
  6264 ;;		_strlen
  6265 ;; This function is called by:
  6266 ;;		_efgtoa
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270  1248                     _pad:	
  6271                           ;psect for function _pad
  6272                           
  6273                           
  6274                           ;incstack = 0
  6275                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6276                           ;pad@fp stored from wreg
  6277  1248  0020               	movlb	0	; select bank0
  6278  1249  00AB               	movwf	pad@fp
  6279  124A                     l3414:
  6280                           
  6281                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6282  124A  1C6E               	btfss	_flags,0
  6283  124B  2A4D               	goto	u4311
  6284  124C  2A4E               	goto	u4310
  6285  124D                     u4311:
  6286  124D  2A56               	goto	l3418
  6287  124E                     u4310:
  6288  124E                     l3416:
  6289                           
  6290                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6291  124E  082B               	movf	pad@fp,w
  6292  124F  00FC               	movwf	??_pad
  6293  1250  087C               	movf	??_pad,w
  6294  1251  00F8               	movwf	fputs@fp
  6295  1252  0824               	movf	pad@buf,w
  6296  1253  319F  27D7  3192   	fcall	_fputs
  6297  1256                     l3418:
  6298                           
  6299                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6300  1256  0020               	movlb	0	; select bank0
  6301  1257  1BA6               	btfsc	pad@p+1,7
  6302  1258  2A5A               	goto	u4321
  6303  1259  2A5B               	goto	u4320
  6304  125A                     u4321:
  6305  125A  2A60               	goto	l3422
  6306  125B                     u4320:
  6307  125B                     l3420:
  6308  125B  0826               	movf	pad@p+1,w
  6309  125C  00AA               	movwf	pad@w+1
  6310  125D  0825               	movf	pad@p,w
  6311  125E  00A9               	movwf	pad@w
  6312  125F  2A62               	goto	l855
  6313  1260                     l3422:
  6314  1260  01A9               	clrf	pad@w
  6315  1261  01AA               	clrf	pad@w+1
  6316  1262                     l855:
  6317                           
  6318                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6319  1262  01A7               	clrf	pad@i
  6320  1263  01A8               	clrf	pad@i+1
  6321                           
  6322                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6323  1264  2A76               	goto	l3428
  6324  1265                     l3424:
  6325                           
  6326                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6327  1265  3020               	movlw	32
  6328  1266  00F0               	movwf	fputc@c
  6329  1267  3000               	movlw	0
  6330  1268  00F1               	movwf	fputc@c+1
  6331  1269  0020               	movlb	0	; select bank0
  6332  126A  082B               	movf	pad@fp,w
  6333  126B  00FC               	movwf	??_pad
  6334  126C  087C               	movf	??_pad,w
  6335  126D  00F2               	movwf	fputc@fp
  6336  126E  3191  21F5  3192   	fcall	_fputc
  6337  1271                     l3426:
  6338                           
  6339                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6340  1271  3001               	movlw	1
  6341  1272  0020               	movlb	0	; select bank0
  6342  1273  07A7               	addwf	pad@i,f
  6343  1274  3000               	movlw	0
  6344  1275  3DA8               	addwfc	pad@i+1,f
  6345  1276                     l3428:
  6346                           
  6347                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6348  1276  0828               	movf	pad@i+1,w
  6349  1277  3A80               	xorlw	128
  6350  1278  00FC               	movwf	??_pad
  6351  1279  082A               	movf	pad@w+1,w
  6352  127A  3A80               	xorlw	128
  6353  127B  027C               	subwf	??_pad,w
  6354  127C  1D03               	skipz
  6355  127D  2A80               	goto	u4335
  6356  127E  0829               	movf	pad@w,w
  6357  127F  0227               	subwf	pad@i,w
  6358  1280                     u4335:
  6359  1280  1C03               	skipc
  6360  1281  2A83               	goto	u4331
  6361  1282  2A84               	goto	u4330
  6362  1283                     u4331:
  6363  1283  2A65               	goto	l3424
  6364  1284                     u4330:
  6365  1284                     l858:
  6366                           
  6367                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6368  1284  0020               	movlb	0	; select bank0
  6369  1285  186E               	btfsc	_flags,0
  6370  1286  2A88               	goto	u4341
  6371  1287  2A89               	goto	u4340
  6372  1288                     u4341:
  6373  1288  2A91               	goto	l3432
  6374  1289                     u4340:
  6375  1289                     l3430:
  6376                           
  6377                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6378  1289  082B               	movf	pad@fp,w
  6379  128A  00FC               	movwf	??_pad
  6380  128B  087C               	movf	??_pad,w
  6381  128C  00F8               	movwf	fputs@fp
  6382  128D  0824               	movf	pad@buf,w
  6383  128E  319F  27D7  3192   	fcall	_fputs
  6384  1291                     l3432:
  6385                           
  6386                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6387  1291  0020               	movlb	0	; select bank0
  6388  1292  0824               	movf	pad@buf,w
  6389  1293  319E  26B4  3192   	fcall	_strlen
  6390  1296  0020               	movlb	0	; select bank0
  6391  1297  0829               	movf	pad@w,w
  6392  1298  0770               	addwf	?_strlen,w
  6393  1299  00A4               	movwf	?_pad
  6394  129A  082A               	movf	pad@w+1,w
  6395  129B  3D71               	addwfc	?_strlen+1,w
  6396  129C  00A5               	movwf	?_pad+1
  6397  129D                     l860:
  6398  129D  0008               	return
  6399  129E                     __end_of_pad:
  6400                           
  6401                           	psect	text10
  6402  1EB4                     __ptext10:	
  6403 ;; *************** function _strlen *****************
  6404 ;; Defined at:
  6405 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;  s               1    wreg     PTR const unsigned char 
  6408 ;;		 -> dbuf(80), 
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;  s               1    4[COMMON] PTR const unsigned char 
  6411 ;;		 -> dbuf(80), 
  6412 ;;  a               1    3[COMMON] PTR const unsigned char 
  6413 ;;		 -> dbuf(80), 
  6414 ;; Return value:  Size  Location     Type
  6415 ;;                  2    0[COMMON] unsigned int 
  6416 ;; Registers used:
  6417 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/0
  6420 ;;		On exit  : 0/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6423 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6424 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6425 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6426 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6427 ;;Total ram usage:        5 bytes
  6428 ;; Hardware stack levels used: 1
  6429 ;; This function calls:
  6430 ;;		Nothing
  6431 ;; This function is called by:
  6432 ;;		_pad
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436  1EB4                     _strlen:	
  6437                           ;psect for function _strlen
  6438                           
  6439                           
  6440                           ;incstack = 0
  6441                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6442                           ;strlen@s stored from wreg
  6443  1EB4  00F4               	movwf	strlen@s
  6444  1EB5                     l2942:
  6445  1EB5  0874               	movf	strlen@s,w
  6446  1EB6  00F2               	movwf	??_strlen
  6447  1EB7  0872               	movf	??_strlen,w
  6448  1EB8  00F3               	movwf	strlen@a
  6449  1EB9  2EBE               	goto	l2946
  6450  1EBA                     l2944:
  6451  1EBA  3001               	movlw	1
  6452  1EBB  00F2               	movwf	??_strlen
  6453  1EBC  0872               	movf	??_strlen,w
  6454  1EBD  07F4               	addwf	strlen@s,f
  6455  1EBE                     l2946:
  6456  1EBE  0874               	movf	strlen@s,w
  6457  1EBF  0086               	movwf	6
  6458  1EC0  3001               	movlw	1	; select bank2/3
  6459  1EC1  0087               	movwf	7
  6460  1EC2  0801               	movf	1,w
  6461  1EC3  1D03               	btfss	3,2
  6462  1EC4  2EC6               	goto	u3311
  6463  1EC5  2EC7               	goto	u3310
  6464  1EC6                     u3311:
  6465  1EC6  2EBA               	goto	l2944
  6466  1EC7                     u3310:
  6467  1EC7                     l2948:
  6468  1EC7  0873               	movf	strlen@a,w
  6469  1EC8  0274               	subwf	strlen@s,w
  6470  1EC9  00F0               	movwf	?_strlen
  6471  1ECA  01F1               	clrf	?_strlen+1
  6472  1ECB  1BF0               	btfsc	?_strlen,7
  6473  1ECC  03F1               	decf	?_strlen+1,f
  6474  1ECD                     l1086:
  6475  1ECD  0008               	return
  6476  1ECE                     __end_of_strlen:
  6477                           
  6478                           	psect	text11
  6479  1FD7                     __ptext11:	
  6480 ;; *************** function _fputs *****************
  6481 ;; Defined at:
  6482 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;  s               1    wreg     PTR const unsigned char 
  6485 ;;		 -> dbuf(80), 
  6486 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  6487 ;;		 -> sprintf@f(10), 
  6488 ;; Auto vars:     Size  Location     Type
  6489 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  6490 ;;		 -> dbuf(80), 
  6491 ;;  i               2    1[BANK0 ] int 
  6492 ;;  c               1    0[BANK0 ] unsigned char 
  6493 ;; Return value:  Size  Location     Type
  6494 ;;                  2    8[COMMON] int 
  6495 ;; Registers used:
  6496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6497 ;; Tracked objects:
  6498 ;;		On entry : 0/0
  6499 ;;		On exit  : 0/0
  6500 ;;		Unchanged: 0/0
  6501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6502 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6503 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6504 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6505 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6506 ;;Total ram usage:        8 bytes
  6507 ;; Hardware stack levels used: 1
  6508 ;; Hardware stack levels required when called: 2
  6509 ;; This function calls:
  6510 ;;		_fputc
  6511 ;; This function is called by:
  6512 ;;		_pad
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516  1FD7                     _fputs:	
  6517                           ;psect for function _fputs
  6518                           
  6519                           
  6520                           ;incstack = 0
  6521                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6522                           ;fputs@s stored from wreg
  6523  1FD7  0020               	movlb	0	; select bank0
  6524  1FD8  00A3               	movwf	fputs@s
  6525  1FD9                     l2934:
  6526  1FD9  01A1               	clrf	fputs@i
  6527  1FDA  01A2               	clrf	fputs@i+1
  6528  1FDB  2FEF               	goto	l2940
  6529  1FDC                     l2936:
  6530  1FDC  0820               	movf	fputs@c,w
  6531  1FDD  00F9               	movwf	??_fputs
  6532  1FDE  01FA               	clrf	??_fputs+1
  6533  1FDF  0879               	movf	??_fputs,w
  6534  1FE0  00F0               	movwf	fputc@c
  6535  1FE1  087A               	movf	??_fputs+1,w
  6536  1FE2  00F1               	movwf	fputc@c+1
  6537  1FE3  0878               	movf	fputs@fp,w
  6538  1FE4  00FB               	movwf	??_fputs+2
  6539  1FE5  087B               	movf	??_fputs+2,w
  6540  1FE6  00F2               	movwf	fputc@fp
  6541  1FE7  3191  21F5  319F   	fcall	_fputc
  6542  1FEA                     l2938:
  6543  1FEA  3001               	movlw	1
  6544  1FEB  0020               	movlb	0	; select bank0
  6545  1FEC  07A1               	addwf	fputs@i,f
  6546  1FED  3000               	movlw	0
  6547  1FEE  3DA2               	addwfc	fputs@i+1,f
  6548  1FEF                     l2940:
  6549  1FEF  0821               	movf	fputs@i,w
  6550  1FF0  0723               	addwf	fputs@s,w
  6551  1FF1  00F9               	movwf	??_fputs
  6552  1FF2  0879               	movf	??_fputs,w
  6553  1FF3  0086               	movwf	6
  6554  1FF4  3001               	movlw	1	; select bank2/3
  6555  1FF5  0087               	movwf	7
  6556  1FF6  0801               	movf	1,w
  6557  1FF7  00FA               	movwf	??_fputs+1
  6558  1FF8  087A               	movf	??_fputs+1,w
  6559  1FF9  00A0               	movwf	fputs@c
  6560  1FFA  0820               	movf	fputs@c,w
  6561  1FFB  1D03               	btfss	3,2
  6562  1FFC  2FFE               	goto	u3301
  6563  1FFD  2FFF               	goto	u3300
  6564  1FFE                     u3301:
  6565  1FFE  2FDC               	goto	l2936
  6566  1FFF                     u3300:
  6567  1FFF                     l1071:
  6568  1FFF  0008               	return
  6569  2000                     __end_of_fputs:
  6570                           
  6571                           	psect	text12
  6572  11F5                     __ptext12:	
  6573 ;; *************** function _fputc *****************
  6574 ;; Defined at:
  6575 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;  c               2    0[COMMON] int 
  6578 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  6579 ;;		 -> sprintf@f(10), 
  6580 ;; Auto vars:     Size  Location     Type
  6581 ;;		None
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  2    0[COMMON] int 
  6584 ;; Registers used:
  6585 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6591 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6593 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6594 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6595 ;;Total ram usage:        8 bytes
  6596 ;; Hardware stack levels used: 1
  6597 ;; Hardware stack levels required when called: 1
  6598 ;; This function calls:
  6599 ;;		_putch
  6600 ;; This function is called by:
  6601 ;;		_pad
  6602 ;;		_vfpfcnvrt
  6603 ;;		_fputs
  6604 ;; This function uses a non-reentrant model
  6605 ;;
  6606                           
  6607  11F5                     _fputc:	
  6608                           ;psect for function _fputc
  6609                           
  6610  11F5                     l2710:	
  6611                           ;incstack = 0
  6612                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6613                           
  6614  11F5  0872               	movf	fputc@fp,w
  6615  11F6  1903               	btfsc	3,2
  6616  11F7  29F9               	goto	u2801
  6617  11F8  29FA               	goto	u2800
  6618  11F9                     u2801:
  6619  11F9  29FF               	goto	l2714
  6620  11FA                     u2800:
  6621  11FA                     l2712:
  6622  11FA  0872               	movf	fputc@fp,w
  6623  11FB  1D03               	btfss	3,2
  6624  11FC  29FE               	goto	u2811
  6625  11FD  29FF               	goto	u2810
  6626  11FE                     u2811:
  6627  11FE  2A04               	goto	l2716
  6628  11FF                     u2810:
  6629  11FF                     l2714:
  6630  11FF  0870               	movf	fputc@c,w
  6631  1200  3190  2001  3191   	fcall	_putch
  6632  1203  2A47               	goto	l1063
  6633  1204                     l2716:
  6634  1204  0872               	movf	fputc@fp,w
  6635  1205  3E08               	addlw	8
  6636  1206  0086               	movwf	6
  6637  1207  0187               	clrf	7
  6638  1208  0016               	moviw fsr1++
  6639  1209  0401               	iorwf	1,w
  6640  120A  1903               	btfsc	3,2
  6641  120B  2A0D               	goto	u2821
  6642  120C  2A0E               	goto	u2820
  6643  120D                     u2821:
  6644  120D  2A2C               	goto	l2720
  6645  120E                     u2820:
  6646  120E                     l2718:
  6647  120E  0872               	movf	fputc@fp,w
  6648  120F  3E08               	addlw	8
  6649  1210  0086               	movwf	6
  6650  1211  0187               	clrf	7
  6651  1212  3F40               	moviw [0]fsr1
  6652  1213  00F3               	movwf	??_fputc
  6653  1214  3F41               	moviw [1]fsr1
  6654  1215  00F4               	movwf	??_fputc+1
  6655  1216  0872               	movf	fputc@fp,w
  6656  1217  3E02               	addlw	2
  6657  1218  0086               	movwf	6
  6658  1219  0187               	clrf	7
  6659  121A  3F40               	moviw [0]fsr1
  6660  121B  00F5               	movwf	??_fputc+2
  6661  121C  3F41               	moviw [1]fsr1
  6662  121D  00F6               	movwf	??_fputc+3
  6663  121E  0876               	movf	??_fputc+3,w
  6664  121F  3A80               	xorlw	128
  6665  1220  00F7               	movwf	??_fputc+4
  6666  1221  0874               	movf	??_fputc+1,w
  6667  1222  3A80               	xorlw	128
  6668  1223  0277               	subwf	??_fputc+4,w
  6669  1224  1D03               	skipz
  6670  1225  2A28               	goto	u2835
  6671  1226  0873               	movf	??_fputc,w
  6672  1227  0275               	subwf	??_fputc+2,w
  6673  1228                     u2835:
  6674  1228  1803               	skipnc
  6675  1229  2A2B               	goto	u2831
  6676  122A  2A2C               	goto	u2830
  6677  122B                     u2831:
  6678  122B  2A47               	goto	l1063
  6679  122C                     u2830:
  6680  122C                     l2720:
  6681  122C  0870               	movf	fputc@c,w
  6682  122D  00F3               	movwf	??_fputc
  6683  122E  0872               	movf	fputc@fp,w
  6684  122F  0086               	movwf	6
  6685  1230  0187               	clrf	7
  6686  1231  0872               	movf	fputc@fp,w
  6687  1232  3E02               	addlw	2
  6688  1233  0084               	movwf	4
  6689  1234  0185               	clrf	5
  6690  1235  0800               	movf	0,w
  6691  1236  0701               	addwf	1,w
  6692  1237  00F4               	movwf	??_fputc+1
  6693  1238  0874               	movf	??_fputc+1,w
  6694  1239  0086               	movwf	6
  6695  123A  3001               	movlw	1	; select bank2/3
  6696  123B  0087               	movwf	7
  6697  123C  0873               	movf	??_fputc,w
  6698  123D  0081               	movwf	1
  6699  123E                     l2722:
  6700  123E  0872               	movf	fputc@fp,w
  6701  123F  3E02               	addlw	2
  6702  1240  0086               	movwf	6
  6703  1241  0187               	clrf	7
  6704  1242  3001               	movlw	1
  6705  1243  0781               	addwf	1,f
  6706  1244  3141               	addfsr 1,1
  6707  1245  1803               	skipnc
  6708  1246  0A81               	incf	1,f
  6709  1247                     l1063:
  6710  1247  0008               	return
  6711  1248                     __end_of_fputc:
  6712                           
  6713                           	psect	text13
  6714  1001                     __ptext13:	
  6715 ;; *************** function _putch *****************
  6716 ;; Defined at:
  6717 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;  c               1    wreg     unsigned char 
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;  c               1    0[COMMON] unsigned char 
  6722 ;; Return value:  Size  Location     Type
  6723 ;;                  1    wreg      void 
  6724 ;; Registers used:
  6725 ;;		wreg
  6726 ;; Tracked objects:
  6727 ;;		On entry : 0/0
  6728 ;;		On exit  : 0/0
  6729 ;;		Unchanged: 0/0
  6730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6735 ;;Total ram usage:        0 bytes
  6736 ;; Hardware stack levels used: 1
  6737 ;; This function calls:
  6738 ;;		Nothing
  6739 ;; This function is called by:
  6740 ;;		_fputc
  6741 ;; This function uses a non-reentrant model
  6742 ;;
  6743                           
  6744  1001                     _putch:	
  6745                           ;psect for function _putch
  6746                           
  6747  1001                     l1074:	
  6748                           ;incstack = 0
  6749                           ; Regs used in _putch: [wreg]
  6750                           
  6751  1001  0008               	return
  6752  1002                     __end_of_putch:
  6753                           
  6754                           	psect	text14
  6755  0804                     __ptext14:	
  6756 ;; *************** function _floorf *****************
  6757 ;; Defined at:
  6758 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  6759 ;; Parameters:    Size  Location     Type
  6760 ;;  x               4   13[BANK0 ] float 
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;  u               4   29[BANK0 ] struct .
  6763 ;;  m               4   23[BANK0 ] unsigned long 
  6764 ;;  e               2   27[BANK0 ] int 
  6765 ;; Return value:  Size  Location     Type
  6766 ;;                  4   13[BANK0 ] float 
  6767 ;; Registers used:
  6768 ;;		wreg, status,2, status,0
  6769 ;; Tracked objects:
  6770 ;;		On entry : 0/0
  6771 ;;		On exit  : 0/0
  6772 ;;		Unchanged: 0/0
  6773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6774 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6775 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6776 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6777 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6778 ;;Total ram usage:       20 bytes
  6779 ;; Hardware stack levels used: 1
  6780 ;; This function calls:
  6781 ;;		Nothing
  6782 ;; This function is called by:
  6783 ;;		_efgtoa
  6784 ;; This function uses a non-reentrant model
  6785 ;;
  6786                           
  6787  0804                     _floorf:	
  6788                           ;psect for function _floorf
  6789                           
  6790  0804                     l3474:	
  6791                           ;incstack = 0
  6792                           ; Regs used in _floorf: [wreg+status,2+status,0]
  6793                           
  6794  0804  0022               	movlb	2	; select bank2
  6795  0805  0837               	movf	(floorf@F526+3)^(0+256),w
  6796  0806  0020               	movlb	0	; select bank0
  6797  0807  00C0               	movwf	floorf@u+3
  6798  0808  0022               	movlb	2	; select bank2
  6799  0809  0836               	movf	(floorf@F526+2)^(0+256),w
  6800  080A  0020               	movlb	0	; select bank0
  6801  080B  00BF               	movwf	floorf@u+2
  6802  080C  0022               	movlb	2	; select bank2
  6803  080D  0835               	movf	(floorf@F526+1)^(0+256),w
  6804  080E  0020               	movlb	0	; select bank0
  6805  080F  00BE               	movwf	floorf@u+1
  6806  0810  0022               	movlb	2	; select bank2
  6807  0811  0834               	movf	floorf@F526^(0+256),w
  6808  0812  0020               	movlb	0	; select bank0
  6809  0813  00BD               	movwf	floorf@u
  6810  0814  0830               	movf	floorf@x+3,w
  6811  0815  00C0               	movwf	floorf@u+3
  6812  0816  082F               	movf	floorf@x+2,w
  6813  0817  00BF               	movwf	floorf@u+2
  6814  0818  082E               	movf	floorf@x+1,w
  6815  0819  00BE               	movwf	floorf@u+1
  6816  081A  082D               	movf	floorf@x,w
  6817  081B  00BD               	movwf	floorf@u
  6818  081C                     l3476:
  6819  081C  083D               	movf	floorf@u,w
  6820  081D  00B1               	movwf	??_floorf
  6821  081E  083E               	movf	floorf@u+1,w
  6822  081F  00B2               	movwf	??_floorf+1
  6823  0820  083F               	movf	floorf@u+2,w
  6824  0821  00B3               	movwf	??_floorf+2
  6825  0822  0840               	movf	floorf@u+3,w
  6826  0823  00B4               	movwf	??_floorf+3
  6827  0824  3017               	movlw	23
  6828  0825                     u4455:
  6829  0825  36B4               	lsrf	??_floorf+3,f
  6830  0826  0CB3               	rrf	??_floorf+2,f
  6831  0827  0CB2               	rrf	??_floorf+1,f
  6832  0828  0CB1               	rrf	??_floorf,f
  6833  0829                     u4450:
  6834  0829  0B89               	decfsz	9,f
  6835  082A  2825               	goto	u4455
  6836  082B  30FF               	movlw	255
  6837  082C  0531               	andwf	??_floorf,w
  6838  082D  00B5               	movwf	??_floorf+4
  6839  082E  3000               	movlw	0
  6840  082F  0532               	andwf	??_floorf+1,w
  6841  0830  00B6               	movwf	??_floorf+5
  6842  0831  0835               	movf	??_floorf+4,w
  6843  0832  3E81               	addlw	129
  6844  0833  00BB               	movwf	floorf@e
  6845  0834  30FF               	movlw	255
  6846  0835  3D36               	addwfc	??_floorf+5,w
  6847  0836  00BC               	movwf	floorf@e+1
  6848  0837                     l3478:
  6849  0837  083C               	movf	floorf@e+1,w
  6850  0838  3A80               	xorlw	128
  6851  0839  00B1               	movwf	??_floorf
  6852  083A  3080               	movlw	128
  6853  083B  0231               	subwf	??_floorf,w
  6854  083C  1D03               	skipz
  6855  083D  2840               	goto	u4465
  6856  083E  3017               	movlw	23
  6857  083F  023B               	subwf	floorf@e,w
  6858  0840                     u4465:
  6859  0840  1C03               	skipc
  6860  0841  2843               	goto	u4461
  6861  0842  2844               	goto	u4460
  6862  0843                     u4461:
  6863  0843  2845               	goto	l1023
  6864  0844                     u4460:
  6865  0844                     l3480:
  6866  0844  28EE               	goto	l1024
  6867  0845                     l1023:
  6868  0845  0020               	movlb	0	; select bank0
  6869  0846  1BBC               	btfsc	floorf@e+1,7
  6870  0847  2849               	goto	u4471
  6871  0848  284A               	goto	u4470
  6872  0849                     u4471:
  6873  0849  28A7               	goto	l3494
  6874  084A                     u4470:
  6875  084A                     l3482:
  6876  084A  30FF               	movlw	255
  6877  084B  00B1               	movwf	??_floorf
  6878  084C  30FF               	movlw	255
  6879  084D  00B2               	movwf	??_floorf+1
  6880  084E  307F               	movlw	127
  6881  084F  00B3               	movwf	??_floorf+2
  6882  0850  3000               	movlw	0
  6883  0851  00B4               	movwf	??_floorf+3
  6884  0852  0A3B               	incf	floorf@e,w
  6885  0853  2858               	goto	u4480
  6886  0854                     u4485:
  6887  0854  37B4               	asrf	??_floorf+3,f
  6888  0855  0CB3               	rrf	??_floorf+2,f
  6889  0856  0CB2               	rrf	??_floorf+1,f
  6890  0857  0CB1               	rrf	??_floorf,f
  6891  0858                     u4480:
  6892  0858  0B89               	decfsz	9,f
  6893  0859  2854               	goto	u4485
  6894  085A  0834               	movf	??_floorf+3,w
  6895  085B  00BA               	movwf	floorf@m+3
  6896  085C  0833               	movf	??_floorf+2,w
  6897  085D  00B9               	movwf	floorf@m+2
  6898  085E  0832               	movf	??_floorf+1,w
  6899  085F  00B8               	movwf	floorf@m+1
  6900  0860  0831               	movf	??_floorf,w
  6901  0861  00B7               	movwf	floorf@m
  6902  0862                     l3484:
  6903  0862  083D               	movf	floorf@u,w
  6904  0863  0537               	andwf	floorf@m,w
  6905  0864  00B1               	movwf	??_floorf
  6906  0865  083E               	movf	floorf@u+1,w
  6907  0866  0538               	andwf	floorf@m+1,w
  6908  0867  00B2               	movwf	??_floorf+1
  6909  0868  083F               	movf	floorf@u+2,w
  6910  0869  0539               	andwf	floorf@m+2,w
  6911  086A  00B3               	movwf	??_floorf+2
  6912  086B  0840               	movf	floorf@u+3,w
  6913  086C  053A               	andwf	floorf@m+3,w
  6914  086D  00B4               	movwf	??_floorf+3
  6915  086E  0834               	movf	??_floorf+3,w
  6916  086F  0433               	iorwf	??_floorf+2,w
  6917  0870  0432               	iorwf	??_floorf+1,w
  6918  0871  0431               	iorwf	??_floorf,w
  6919  0872  1D03               	skipz
  6920  0873  2875               	goto	u4491
  6921  0874  2876               	goto	u4490
  6922  0875                     u4491:
  6923  0875  2877               	goto	l3488
  6924  0876                     u4490:
  6925  0876  2844               	goto	l3480
  6926  0877                     l3488:
  6927  0877  083D               	movf	floorf@u,w
  6928  0878  00B1               	movwf	??_floorf
  6929  0879  083E               	movf	floorf@u+1,w
  6930  087A  00B2               	movwf	??_floorf+1
  6931  087B  083F               	movf	floorf@u+2,w
  6932  087C  00B3               	movwf	??_floorf+2
  6933  087D  0840               	movf	floorf@u+3,w
  6934  087E  00B4               	movwf	??_floorf+3
  6935  087F  301F               	movlw	31
  6936  0880                     u4505:
  6937  0880  36B4               	lsrf	??_floorf+3,f
  6938  0881  0CB3               	rrf	??_floorf+2,f
  6939  0882  0CB2               	rrf	??_floorf+1,f
  6940  0883  0CB1               	rrf	??_floorf,f
  6941  0884                     u4500:
  6942  0884  0B89               	decfsz	9,f
  6943  0885  2880               	goto	u4505
  6944  0886  0834               	movf	??_floorf+3,w
  6945  0887  0433               	iorwf	??_floorf+2,w
  6946  0888  0432               	iorwf	??_floorf+1,w
  6947  0889  0431               	iorwf	??_floorf,w
  6948  088A  1903               	skipnz
  6949  088B  288D               	goto	u4511
  6950  088C  288E               	goto	u4510
  6951  088D                     u4511:
  6952  088D  2896               	goto	l3492
  6953  088E                     u4510:
  6954  088E                     l3490:
  6955  088E  0837               	movf	floorf@m,w
  6956  088F  07BD               	addwf	floorf@u,f
  6957  0890  0838               	movf	floorf@m+1,w
  6958  0891  3DBE               	addwfc	floorf@u+1,f
  6959  0892  0839               	movf	floorf@m+2,w
  6960  0893  3DBF               	addwfc	floorf@u+2,f
  6961  0894  083A               	movf	floorf@m+3,w
  6962  0895  3DC0               	addwfc	floorf@u+3,f
  6963  0896                     l3492:
  6964  0896  0937               	comf	floorf@m,w
  6965  0897  00B1               	movwf	??_floorf
  6966  0898  0938               	comf	floorf@m+1,w
  6967  0899  00B2               	movwf	??_floorf+1
  6968  089A  0939               	comf	floorf@m+2,w
  6969  089B  00B3               	movwf	??_floorf+2
  6970  089C  093A               	comf	floorf@m+3,w
  6971  089D  00B4               	movwf	??_floorf+3
  6972  089E  0831               	movf	??_floorf,w
  6973  089F  05BD               	andwf	floorf@u,f
  6974  08A0  0832               	movf	??_floorf+1,w
  6975  08A1  05BE               	andwf	floorf@u+1,f
  6976  08A2  0833               	movf	??_floorf+2,w
  6977  08A3  05BF               	andwf	floorf@u+2,f
  6978  08A4  0834               	movf	??_floorf+3,w
  6979  08A5  05C0               	andwf	floorf@u+3,f
  6980  08A6  28E6               	goto	l1028
  6981  08A7                     l3494:
  6982  08A7  083D               	movf	floorf@u,w
  6983  08A8  00B1               	movwf	??_floorf
  6984  08A9  083E               	movf	floorf@u+1,w
  6985  08AA  00B2               	movwf	??_floorf+1
  6986  08AB  083F               	movf	floorf@u+2,w
  6987  08AC  00B3               	movwf	??_floorf+2
  6988  08AD  0840               	movf	floorf@u+3,w
  6989  08AE  00B4               	movwf	??_floorf+3
  6990  08AF  301F               	movlw	31
  6991  08B0                     u4525:
  6992  08B0  36B4               	lsrf	??_floorf+3,f
  6993  08B1  0CB3               	rrf	??_floorf+2,f
  6994  08B2  0CB2               	rrf	??_floorf+1,f
  6995  08B3  0CB1               	rrf	??_floorf,f
  6996  08B4                     u4520:
  6997  08B4  0B89               	decfsz	9,f
  6998  08B5  28B0               	goto	u4525
  6999  08B6  0834               	movf	??_floorf+3,w
  7000  08B7  0433               	iorwf	??_floorf+2,w
  7001  08B8  0432               	iorwf	??_floorf+1,w
  7002  08B9  0431               	iorwf	??_floorf,w
  7003  08BA  1D03               	skipz
  7004  08BB  28BD               	goto	u4531
  7005  08BC  28BE               	goto	u4530
  7006  08BD                     u4531:
  7007  08BD  28C7               	goto	l3498
  7008  08BE                     u4530:
  7009  08BE                     l3496:
  7010  08BE  3000               	movlw	0
  7011  08BF  00C0               	movwf	floorf@u+3
  7012  08C0  3000               	movlw	0
  7013  08C1  00BF               	movwf	floorf@u+2
  7014  08C2  3000               	movlw	0
  7015  08C3  00BE               	movwf	floorf@u+1
  7016  08C4  3000               	movlw	0
  7017  08C5  00BD               	movwf	floorf@u
  7018  08C6  28E6               	goto	l1028
  7019  08C7                     l3498:
  7020  08C7  083D               	movf	floorf@u,w
  7021  08C8  00B1               	movwf	??_floorf
  7022  08C9  083E               	movf	floorf@u+1,w
  7023  08CA  00B2               	movwf	??_floorf+1
  7024  08CB  083F               	movf	floorf@u+2,w
  7025  08CC  00B3               	movwf	??_floorf+2
  7026  08CD  0840               	movf	floorf@u+3,w
  7027  08CE  00B4               	movwf	??_floorf+3
  7028  08CF  3001               	movlw	1
  7029  08D0                     u4545:
  7030  08D0  35B1               	lslf	??_floorf,f
  7031  08D1  0DB2               	rlf	??_floorf+1,f
  7032  08D2  0DB3               	rlf	??_floorf+2,f
  7033  08D3  0DB4               	rlf	??_floorf+3,f
  7034  08D4                     u4540:
  7035  08D4  0B89               	decfsz	9,f
  7036  08D5  28D0               	goto	u4545
  7037  08D6  0834               	movf	??_floorf+3,w
  7038  08D7  0433               	iorwf	??_floorf+2,w
  7039  08D8  0432               	iorwf	??_floorf+1,w
  7040  08D9  0431               	iorwf	??_floorf,w
  7041  08DA  1903               	skipnz
  7042  08DB  28DD               	goto	u4551
  7043  08DC  28DE               	goto	u4550
  7044  08DD                     u4551:
  7045  08DD  28E6               	goto	l1028
  7046  08DE                     u4550:
  7047  08DE                     l3500:
  7048  08DE  30BF               	movlw	191
  7049  08DF  00C0               	movwf	floorf@u+3
  7050  08E0  3080               	movlw	128
  7051  08E1  00BF               	movwf	floorf@u+2
  7052  08E2  3000               	movlw	0
  7053  08E3  00BE               	movwf	floorf@u+1
  7054  08E4  3000               	movlw	0
  7055  08E5  00BD               	movwf	floorf@u
  7056  08E6                     l1028:
  7057  08E6  0840               	movf	floorf@u+3,w
  7058  08E7  00B0               	movwf	?_floorf+3
  7059  08E8  083F               	movf	floorf@u+2,w
  7060  08E9  00AF               	movwf	?_floorf+2
  7061  08EA  083E               	movf	floorf@u+1,w
  7062  08EB  00AE               	movwf	?_floorf+1
  7063  08EC  083D               	movf	floorf@u,w
  7064  08ED  00AD               	movwf	?_floorf
  7065  08EE                     l1024:
  7066  08EE  0008               	return
  7067  08EF                     __end_of_floorf:
  7068                           
  7069                           	psect	text15
  7070  13C9                     __ptext15:	
  7071 ;; *************** function ___fpclassifyf *****************
  7072 ;; Defined at:
  7073 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  7074 ;; Parameters:    Size  Location     Type
  7075 ;;  x               4    0[COMMON] float 
  7076 ;; Auto vars:     Size  Location     Type
  7077 ;;  u               4    2[BANK0 ] struct .
  7078 ;;  e               2    0[BANK0 ] int 
  7079 ;; Return value:  Size  Location     Type
  7080 ;;                  2    0[COMMON] int 
  7081 ;; Registers used:
  7082 ;;		wreg, status,2, status,0
  7083 ;; Tracked objects:
  7084 ;;		On entry : 0/0
  7085 ;;		On exit  : 0/0
  7086 ;;		Unchanged: 0/0
  7087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7088 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7089 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7090 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7091 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7092 ;;Total ram usage:       16 bytes
  7093 ;; Hardware stack levels used: 1
  7094 ;; This function calls:
  7095 ;;		Nothing
  7096 ;; This function is called by:
  7097 ;;		_efgtoa
  7098 ;; This function uses a non-reentrant model
  7099 ;;
  7100                           
  7101  13C9                     ___fpclassifyf:	
  7102                           ;psect for function ___fpclassifyf
  7103                           
  7104  13C9                     l3436:	
  7105                           ;incstack = 0
  7106                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  7107                           
  7108  13C9  0021               	movlb	1	; select bank1
  7109  13CA  0862               	movf	(___fpclassifyf@F465+3)^(0+128),w
  7110  13CB  0020               	movlb	0	; select bank0
  7111  13CC  00A5               	movwf	___fpclassifyf@u+3
  7112  13CD  0021               	movlb	1	; select bank1
  7113  13CE  0861               	movf	(___fpclassifyf@F465+2)^(0+128),w
  7114  13CF  0020               	movlb	0	; select bank0
  7115  13D0  00A4               	movwf	___fpclassifyf@u+2
  7116  13D1  0021               	movlb	1	; select bank1
  7117  13D2  0860               	movf	(___fpclassifyf@F465+1)^(0+128),w
  7118  13D3  0020               	movlb	0	; select bank0
  7119  13D4  00A3               	movwf	___fpclassifyf@u+1
  7120  13D5  0021               	movlb	1	; select bank1
  7121  13D6  085F               	movf	___fpclassifyf@F465^(0+128),w
  7122  13D7  0020               	movlb	0	; select bank0
  7123  13D8  00A2               	movwf	___fpclassifyf@u
  7124  13D9  0873               	movf	___fpclassifyf@x+3,w
  7125  13DA  00A5               	movwf	___fpclassifyf@u+3
  7126  13DB  0872               	movf	___fpclassifyf@x+2,w
  7127  13DC  00A4               	movwf	___fpclassifyf@u+2
  7128  13DD  0871               	movf	___fpclassifyf@x+1,w
  7129  13DE  00A3               	movwf	___fpclassifyf@u+1
  7130  13DF  0870               	movf	___fpclassifyf@x,w
  7131  13E0  00A2               	movwf	___fpclassifyf@u
  7132  13E1                     l3438:
  7133  13E1  0822               	movf	___fpclassifyf@u,w
  7134  13E2  00F4               	movwf	??___fpclassifyf
  7135  13E3  0823               	movf	___fpclassifyf@u+1,w
  7136  13E4  00F5               	movwf	??___fpclassifyf+1
  7137  13E5  0824               	movf	___fpclassifyf@u+2,w
  7138  13E6  00F6               	movwf	??___fpclassifyf+2
  7139  13E7  0825               	movf	___fpclassifyf@u+3,w
  7140  13E8  00F7               	movwf	??___fpclassifyf+3
  7141  13E9  3017               	movlw	23
  7142  13EA                     u4355:
  7143  13EA  36F7               	lsrf	??___fpclassifyf+3,f
  7144  13EB  0CF6               	rrf	??___fpclassifyf+2,f
  7145  13EC  0CF5               	rrf	??___fpclassifyf+1,f
  7146  13ED  0CF4               	rrf	??___fpclassifyf,f
  7147  13EE                     u4350:
  7148  13EE  0B89               	decfsz	9,f
  7149  13EF  2BEA               	goto	u4355
  7150  13F0  30FF               	movlw	255
  7151  13F1  0574               	andwf	??___fpclassifyf,w
  7152  13F2  00A0               	movwf	___fpclassifyf@e
  7153  13F3  3000               	movlw	0
  7154  13F4  0575               	andwf	??___fpclassifyf+1,w
  7155  13F5  00A1               	movwf	___fpclassifyf@e+1
  7156  13F6                     l3440:
  7157  13F6  0820               	movf	___fpclassifyf@e,w
  7158  13F7  0421               	iorwf	___fpclassifyf@e+1,w
  7159  13F8  1D03               	btfss	3,2
  7160  13F9  2BFB               	goto	u4361
  7161  13FA  2BFC               	goto	u4360
  7162  13FB                     u4361:
  7163  13FB  2C1D               	goto	l3450
  7164  13FC                     u4360:
  7165  13FC                     l3442:
  7166  13FC  0822               	movf	___fpclassifyf@u,w
  7167  13FD  00F4               	movwf	??___fpclassifyf
  7168  13FE  0823               	movf	___fpclassifyf@u+1,w
  7169  13FF  00F5               	movwf	??___fpclassifyf+1
  7170  1400  0824               	movf	___fpclassifyf@u+2,w
  7171  1401  00F6               	movwf	??___fpclassifyf+2
  7172  1402  0825               	movf	___fpclassifyf@u+3,w
  7173  1403  00F7               	movwf	??___fpclassifyf+3
  7174  1404  3001               	movlw	1
  7175  1405                     u4375:
  7176  1405  35F4               	lslf	??___fpclassifyf,f
  7177  1406  0DF5               	rlf	??___fpclassifyf+1,f
  7178  1407  0DF6               	rlf	??___fpclassifyf+2,f
  7179  1408  0DF7               	rlf	??___fpclassifyf+3,f
  7180  1409                     u4370:
  7181  1409  0B89               	decfsz	9,f
  7182  140A  2C05               	goto	u4375
  7183  140B  0877               	movf	??___fpclassifyf+3,w
  7184  140C  0476               	iorwf	??___fpclassifyf+2,w
  7185  140D  0475               	iorwf	??___fpclassifyf+1,w
  7186  140E  0474               	iorwf	??___fpclassifyf,w
  7187  140F  1D03               	skipz
  7188  1410  2C12               	goto	u4381
  7189  1411  2C13               	goto	u4380
  7190  1412                     u4381:
  7191  1412  2C18               	goto	l3446
  7192  1413                     u4380:
  7193  1413                     l3444:
  7194  1413  3002               	movlw	2
  7195  1414  00F0               	movwf	?___fpclassifyf
  7196  1415  3000               	movlw	0
  7197  1416  00F1               	movwf	?___fpclassifyf+1
  7198  1417  2C47               	goto	l992
  7199  1418                     l3446:
  7200  1418  3003               	movlw	3
  7201  1419  00F0               	movwf	?___fpclassifyf
  7202  141A  3000               	movlw	0
  7203  141B  00F1               	movwf	?___fpclassifyf+1
  7204  141C  2C47               	goto	l992
  7205  141D                     l3450:
  7206  141D  0A20               	incf	___fpclassifyf@e,w
  7207  141E  0421               	iorwf	___fpclassifyf@e+1,w
  7208  141F  1D03               	btfss	3,2
  7209  1420  2C22               	goto	u4391
  7210  1421  2C23               	goto	u4390
  7211  1422                     u4391:
  7212  1422  2C43               	goto	l3456
  7213  1423                     u4390:
  7214  1423                     l3452:
  7215  1423  0822               	movf	___fpclassifyf@u,w
  7216  1424  00F4               	movwf	??___fpclassifyf
  7217  1425  0823               	movf	___fpclassifyf@u+1,w
  7218  1426  00F5               	movwf	??___fpclassifyf+1
  7219  1427  0824               	movf	___fpclassifyf@u+2,w
  7220  1428  00F6               	movwf	??___fpclassifyf+2
  7221  1429  0825               	movf	___fpclassifyf@u+3,w
  7222  142A  00F7               	movwf	??___fpclassifyf+3
  7223  142B  3009               	movlw	9
  7224  142C                     u4405:
  7225  142C  35F4               	lslf	??___fpclassifyf,f
  7226  142D  0DF5               	rlf	??___fpclassifyf+1,f
  7227  142E  0DF6               	rlf	??___fpclassifyf+2,f
  7228  142F  0DF7               	rlf	??___fpclassifyf+3,f
  7229  1430                     u4400:
  7230  1430  0B89               	decfsz	9,f
  7231  1431  2C2C               	goto	u4405
  7232  1432  0877               	movf	??___fpclassifyf+3,w
  7233  1433  0476               	iorwf	??___fpclassifyf+2,w
  7234  1434  0475               	iorwf	??___fpclassifyf+1,w
  7235  1435  0474               	iorwf	??___fpclassifyf,w
  7236  1436  1903               	skipnz
  7237  1437  2C39               	goto	u4411
  7238  1438  2C3B               	goto	u4410
  7239  1439                     u4411:
  7240  1439  3001               	movlw	1
  7241  143A  2C3C               	goto	u4420
  7242  143B                     u4410:
  7243  143B  3000               	movlw	0
  7244  143C                     u4420:
  7245  143C  00F8               	movwf	??___fpclassifyf+4
  7246  143D  01F9               	clrf	??___fpclassifyf+5
  7247  143E  0878               	movf	??___fpclassifyf+4,w
  7248  143F  00F0               	movwf	?___fpclassifyf
  7249  1440  0879               	movf	??___fpclassifyf+5,w
  7250  1441  00F1               	movwf	?___fpclassifyf+1
  7251  1442  2C47               	goto	l992
  7252  1443                     l3456:
  7253  1443  3004               	movlw	4
  7254  1444  00F0               	movwf	?___fpclassifyf
  7255  1445  3000               	movlw	0
  7256  1446  00F1               	movwf	?___fpclassifyf+1
  7257  1447                     l992:
  7258  1447  0008               	return
  7259  1448                     __end_of___fpclassifyf:
  7260                           
  7261                           	psect	text16
  7262  1355                     __ptext16:	
  7263 ;; *************** function ___fltol *****************
  7264 ;; Defined at:
  7265 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  7266 ;; Parameters:    Size  Location     Type
  7267 ;;  f1              4    0[COMMON] int 
  7268 ;; Auto vars:     Size  Location     Type
  7269 ;;  exp1            1   10[COMMON] unsigned char 
  7270 ;;  sign1           1    9[COMMON] unsigned char 
  7271 ;; Return value:  Size  Location     Type
  7272 ;;                  4    0[COMMON] long 
  7273 ;; Registers used:
  7274 ;;		wreg, status,2, status,0
  7275 ;; Tracked objects:
  7276 ;;		On entry : 0/0
  7277 ;;		On exit  : 0/0
  7278 ;;		Unchanged: 0/0
  7279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7280 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7281 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7282 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7283 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7284 ;;Total ram usage:       11 bytes
  7285 ;; Hardware stack levels used: 1
  7286 ;; This function calls:
  7287 ;;		Nothing
  7288 ;; This function is called by:
  7289 ;;		_efgtoa
  7290 ;; This function uses a non-reentrant model
  7291 ;;
  7292                           
  7293  1355                     ___fltol:	
  7294                           ;psect for function ___fltol
  7295                           
  7296  1355                     l3092:	
  7297                           ;incstack = 0
  7298                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7299                           
  7300  1355  1003               	clrc
  7301  1356  0D72               	rlf	___fltol@f1+2,w
  7302  1357  0D73               	rlf	___fltol@f1+3,w
  7303  1358  00F4               	movwf	??___fltol
  7304  1359  0874               	movf	??___fltol,w
  7305  135A  00FA               	movwf	___fltol@exp1
  7306  135B  087A               	movf	___fltol@exp1,w
  7307  135C  1D03               	btfss	3,2
  7308  135D  2B5F               	goto	u3661
  7309  135E  2B60               	goto	u3660
  7310  135F                     u3661:
  7311  135F  2B69               	goto	l3098
  7312  1360                     u3660:
  7313  1360                     l3094:
  7314  1360  3000               	movlw	0
  7315  1361  00F3               	movwf	?___fltol+3
  7316  1362  3000               	movlw	0
  7317  1363  00F2               	movwf	?___fltol+2
  7318  1364  3000               	movlw	0
  7319  1365  00F1               	movwf	?___fltol+1
  7320  1366  3000               	movlw	0
  7321  1367  00F0               	movwf	?___fltol
  7322  1368  2BC8               	goto	l545
  7323  1369                     l3098:
  7324  1369  0870               	movf	___fltol@f1,w
  7325  136A  00F4               	movwf	??___fltol
  7326  136B  0871               	movf	___fltol@f1+1,w
  7327  136C  00F5               	movwf	??___fltol+1
  7328  136D  0872               	movf	___fltol@f1+2,w
  7329  136E  00F6               	movwf	??___fltol+2
  7330  136F  0873               	movf	___fltol@f1+3,w
  7331  1370  00F7               	movwf	??___fltol+3
  7332  1371  301F               	movlw	31
  7333  1372                     u3675:
  7334  1372  36F7               	lsrf	??___fltol+3,f
  7335  1373  0CF6               	rrf	??___fltol+2,f
  7336  1374  0CF5               	rrf	??___fltol+1,f
  7337  1375  0CF4               	rrf	??___fltol,f
  7338  1376                     u3670:
  7339  1376  0B89               	decfsz	9,f
  7340  1377  2B72               	goto	u3675
  7341  1378  0874               	movf	??___fltol,w
  7342  1379  00F8               	movwf	??___fltol+4
  7343  137A  0878               	movf	??___fltol+4,w
  7344  137B  00F9               	movwf	___fltol@sign1
  7345  137C                     l3100:
  7346  137C  17F2               	bsf	___fltol@f1+2,7
  7347  137D                     l3102:
  7348  137D  30FF               	movlw	255
  7349  137E  05F0               	andwf	___fltol@f1,f
  7350  137F  30FF               	movlw	255
  7351  1380  05F1               	andwf	___fltol@f1+1,f
  7352  1381  30FF               	movlw	255
  7353  1382  05F2               	andwf	___fltol@f1+2,f
  7354  1383  3000               	movlw	0
  7355  1384  05F3               	andwf	___fltol@f1+3,f
  7356  1385                     l3104:
  7357  1385  3096               	movlw	150
  7358  1386  02FA               	subwf	___fltol@exp1,f
  7359  1387                     l3106:
  7360  1387  1FFA               	btfss	___fltol@exp1,7
  7361  1388  2B8A               	goto	u3681
  7362  1389  2B8B               	goto	u3680
  7363  138A                     u3681:
  7364  138A  2BA3               	goto	l3116
  7365  138B                     u3680:
  7366  138B                     l3108:
  7367  138B  087A               	movf	___fltol@exp1,w
  7368  138C  3A80               	xorlw	128
  7369  138D  3E97               	addlw	151
  7370  138E  1803               	skipnc
  7371  138F  2B91               	goto	u3691
  7372  1390  2B92               	goto	u3690
  7373  1391                     u3691:
  7374  1391  2B93               	goto	l3114
  7375  1392                     u3690:
  7376  1392  2B60               	goto	l3094
  7377  1393                     l3114:
  7378  1393  3001               	movlw	1
  7379  1394                     u3705:
  7380  1394  36F3               	lsrf	___fltol@f1+3,f
  7381  1395  0CF2               	rrf	___fltol@f1+2,f
  7382  1396  0CF1               	rrf	___fltol@f1+1,f
  7383  1397  0CF0               	rrf	___fltol@f1,f
  7384  1398  0B89               	decfsz	9,f
  7385  1399  2B94               	goto	u3705
  7386  139A  3001               	movlw	1
  7387  139B  00F4               	movwf	??___fltol
  7388  139C  0874               	movf	??___fltol,w
  7389  139D  07FA               	addwf	___fltol@exp1,f
  7390  139E  1D03               	btfss	3,2
  7391  139F  2BA1               	goto	u3711
  7392  13A0  2BA2               	goto	u3710
  7393  13A1                     u3711:
  7394  13A1  2B93               	goto	l3114
  7395  13A2                     u3710:
  7396  13A2  2BB8               	goto	l3124
  7397  13A3                     l3116:
  7398  13A3  3020               	movlw	32
  7399  13A4  027A               	subwf	___fltol@exp1,w
  7400  13A5  1C03               	skipc
  7401  13A6  2BA8               	goto	u3721
  7402  13A7  2BA9               	goto	u3720
  7403  13A8                     u3721:
  7404  13A8  2BB3               	goto	l552
  7405  13A9                     u3720:
  7406  13A9  2B60               	goto	l3094
  7407  13AA                     l3122:
  7408  13AA  3001               	movlw	1
  7409  13AB                     u3735:
  7410  13AB  35F0               	lslf	___fltol@f1,f
  7411  13AC  0DF1               	rlf	___fltol@f1+1,f
  7412  13AD  0DF2               	rlf	___fltol@f1+2,f
  7413  13AE  0DF3               	rlf	___fltol@f1+3,f
  7414  13AF  0B89               	decfsz	9,f
  7415  13B0  2BAB               	goto	u3735
  7416  13B1  3001               	movlw	1
  7417  13B2  02FA               	subwf	___fltol@exp1,f
  7418  13B3                     l552:
  7419  13B3  087A               	movf	___fltol@exp1,w
  7420  13B4  1D03               	btfss	3,2
  7421  13B5  2BB7               	goto	u3741
  7422  13B6  2BB8               	goto	u3740
  7423  13B7                     u3741:
  7424  13B7  2BAA               	goto	l3122
  7425  13B8                     u3740:
  7426  13B8                     l3124:
  7427  13B8  0879               	movf	___fltol@sign1,w
  7428  13B9  1903               	btfsc	3,2
  7429  13BA  2BBC               	goto	u3751
  7430  13BB  2BBD               	goto	u3750
  7431  13BC                     u3751:
  7432  13BC  2BC8               	goto	l555
  7433  13BD                     u3750:
  7434  13BD                     l3126:
  7435  13BD  09F0               	comf	___fltol@f1,f
  7436  13BE  09F1               	comf	___fltol@f1+1,f
  7437  13BF  09F2               	comf	___fltol@f1+2,f
  7438  13C0  09F3               	comf	___fltol@f1+3,f
  7439  13C1  0AF0               	incf	___fltol@f1,f
  7440  13C2  1903               	skipnz
  7441  13C3  0AF1               	incf	___fltol@f1+1,f
  7442  13C4  1903               	skipnz
  7443  13C5  0AF2               	incf	___fltol@f1+2,f
  7444  13C6  1903               	skipnz
  7445  13C7  0AF3               	incf	___fltol@f1+3,f
  7446  13C8                     l555:
  7447  13C8                     l545:
  7448  13C8  0008               	return
  7449  13C9                     __end_of___fltol:
  7450                           
  7451                           	psect	text17
  7452  1EED                     __ptext17:	
  7453 ;; *************** function ___flsub *****************
  7454 ;; Defined at:
  7455 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;  a               4   21[BANK0 ] long 
  7458 ;;  b               4   25[BANK0 ] long 
  7459 ;; Auto vars:     Size  Location     Type
  7460 ;;		None
  7461 ;; Return value:  Size  Location     Type
  7462 ;;                  4   21[BANK0 ] long 
  7463 ;; Registers used:
  7464 ;;		wreg, status,2, status,0, pclath, cstack
  7465 ;; Tracked objects:
  7466 ;;		On entry : 0/0
  7467 ;;		On exit  : 0/0
  7468 ;;		Unchanged: 0/0
  7469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7470 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7473 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7474 ;;Total ram usage:        8 bytes
  7475 ;; Hardware stack levels used: 1
  7476 ;; Hardware stack levels required when called: 1
  7477 ;; This function calls:
  7478 ;;		___fladd
  7479 ;; This function is called by:
  7480 ;;		_efgtoa
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484  1EED                     ___flsub:	
  7485                           ;psect for function ___flsub
  7486                           
  7487  1EED                     l3128:	
  7488                           ;incstack = 0
  7489                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  7490                           
  7491  1EED  3080               	movlw	128
  7492  1EEE  0020               	movlb	0	; select bank0
  7493  1EEF  06B8               	xorwf	___flsub@a+3,f
  7494  1EF0                     l3130:
  7495  1EF0  083C               	movf	___flsub@b+3,w
  7496  1EF1  00F3               	movwf	___fladd@b+3
  7497  1EF2  083B               	movf	___flsub@b+2,w
  7498  1EF3  00F2               	movwf	___fladd@b+2
  7499  1EF4  083A               	movf	___flsub@b+1,w
  7500  1EF5  00F1               	movwf	___fladd@b+1
  7501  1EF6  0839               	movf	___flsub@b,w
  7502  1EF7  00F0               	movwf	___fladd@b
  7503  1EF8  0838               	movf	___flsub@a+3,w
  7504  1EF9  00F7               	movwf	___fladd@a+3
  7505  1EFA  0837               	movf	___flsub@a+2,w
  7506  1EFB  00F6               	movwf	___fladd@a+2
  7507  1EFC  0836               	movf	___flsub@a+1,w
  7508  1EFD  00F5               	movwf	___fladd@a+1
  7509  1EFE  0835               	movf	___flsub@a,w
  7510  1EFF  00F4               	movwf	___fladd@a
  7511  1F00  3188  20EF  319E   	fcall	___fladd
  7512  1F03  0873               	movf	?___fladd+3,w
  7513  1F04  0020               	movlb	0	; select bank0
  7514  1F05  00B8               	movwf	?___flsub+3
  7515  1F06  0872               	movf	?___fladd+2,w
  7516  1F07  00B7               	movwf	?___flsub+2
  7517  1F08  0871               	movf	?___fladd+1,w
  7518  1F09  00B6               	movwf	?___flsub+1
  7519  1F0A  0870               	movf	?___fladd,w
  7520  1F0B  00B5               	movwf	?___flsub
  7521  1F0C                     l698:
  7522  1F0C  0008               	return
  7523  1F0D                     __end_of___flsub:
  7524                           
  7525                           	psect	text18
  7526  08EF                     __ptext18:	
  7527 ;; *************** function ___fladd *****************
  7528 ;; Defined at:
  7529 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  7530 ;; Parameters:    Size  Location     Type
  7531 ;;  b               4    0[COMMON] long 
  7532 ;;  a               4    4[COMMON] long 
  7533 ;; Auto vars:     Size  Location     Type
  7534 ;;  grs             1   11[COMMON] unsigned char 
  7535 ;;  bexp            1   10[COMMON] unsigned char 
  7536 ;;  aexp            1    9[COMMON] unsigned char 
  7537 ;;  signs           1    8[COMMON] unsigned char 
  7538 ;; Return value:  Size  Location     Type
  7539 ;;                  4    0[COMMON] unsigned char 
  7540 ;; Registers used:
  7541 ;;		wreg, status,2, status,0
  7542 ;; Tracked objects:
  7543 ;;		On entry : 0/0
  7544 ;;		On exit  : 0/0
  7545 ;;		Unchanged: 0/0
  7546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7547 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7548 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7549 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7550 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7551 ;;Total ram usage:       20 bytes
  7552 ;; Hardware stack levels used: 1
  7553 ;; This function calls:
  7554 ;;		Nothing
  7555 ;; This function is called by:
  7556 ;;		___flsub
  7557 ;;		_efgtoa
  7558 ;; This function uses a non-reentrant model
  7559 ;;
  7560                           
  7561  08EF                     ___fladd:	
  7562                           ;psect for function ___fladd
  7563                           
  7564  08EF                     l2726:	
  7565                           ;incstack = 0
  7566                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  7567                           
  7568  08EF  0873               	movf	___fladd@b+3,w
  7569  08F0  3980               	andlw	128
  7570  08F1  0020               	movlb	0	; select bank0
  7571  08F2  00A0               	movwf	??___fladd
  7572  08F3  0820               	movf	??___fladd,w
  7573  08F4  00F8               	movwf	___fladd@signs
  7574  08F5                     l2728:
  7575  08F5  3573               	lslf	___fladd@b+3,w
  7576  08F6  00A0               	movwf	??___fladd
  7577  08F7  0820               	movf	??___fladd,w
  7578  08F8  00FA               	movwf	___fladd@bexp
  7579  08F9                     l2730:
  7580  08F9  1FF2               	btfss	___fladd@b+2,7
  7581  08FA  28FC               	goto	u2841
  7582  08FB  28FD               	goto	u2840
  7583  08FC                     u2841:
  7584  08FC  28FE               	goto	l2734
  7585  08FD                     u2840:
  7586  08FD                     l2732:
  7587  08FD  147A               	bsf	___fladd@bexp,0
  7588  08FE                     l2734:
  7589  08FE  087A               	movf	___fladd@bexp,w
  7590  08FF  1903               	btfsc	3,2
  7591  0900  2902               	goto	u2851
  7592  0901  2903               	goto	u2850
  7593  0902                     u2851:
  7594  0902  2913               	goto	l2744
  7595  0903                     u2850:
  7596  0903                     l2736:
  7597  0903  0A7A               	incf	___fladd@bexp,w
  7598  0904  1D03               	btfss	3,2
  7599  0905  2907               	goto	u2861
  7600  0906  2908               	goto	u2860
  7601  0907                     u2861:
  7602  0907  2910               	goto	l2740
  7603  0908                     u2860:
  7604  0908                     l2738:
  7605  0908  3000               	movlw	0
  7606  0909  00F3               	movwf	___fladd@b+3
  7607  090A  3000               	movlw	0
  7608  090B  00F2               	movwf	___fladd@b+2
  7609  090C  3000               	movlw	0
  7610  090D  00F1               	movwf	___fladd@b+1
  7611  090E  3000               	movlw	0
  7612  090F  00F0               	movwf	___fladd@b
  7613  0910                     l2740:
  7614  0910  17F2               	bsf	___fladd@b+2,7
  7615  0911                     l2742:
  7616  0911  01F3               	clrf	___fladd@b+3
  7617  0912  291B               	goto	l2746
  7618  0913                     l2744:
  7619  0913  3000               	movlw	0
  7620  0914  00F3               	movwf	___fladd@b+3
  7621  0915  3000               	movlw	0
  7622  0916  00F2               	movwf	___fladd@b+2
  7623  0917  3000               	movlw	0
  7624  0918  00F1               	movwf	___fladd@b+1
  7625  0919  3000               	movlw	0
  7626  091A  00F0               	movwf	___fladd@b
  7627  091B                     l2746:
  7628  091B  0877               	movf	___fladd@a+3,w
  7629  091C  3980               	andlw	128
  7630  091D  00A0               	movwf	??___fladd
  7631  091E  0820               	movf	??___fladd,w
  7632  091F  00F9               	movwf	___fladd@aexp
  7633  0920                     l2748:
  7634  0920  0879               	movf	___fladd@aexp,w
  7635  0921  0678               	xorwf	___fladd@signs,w
  7636  0922  1903               	skipnz
  7637  0923  2925               	goto	u2871
  7638  0924  2926               	goto	u2870
  7639  0925                     u2871:
  7640  0925  2927               	goto	l2752
  7641  0926                     u2870:
  7642  0926                     l2750:
  7643  0926  1778               	bsf	___fladd@signs,6
  7644  0927                     l2752:
  7645  0927  3577               	lslf	___fladd@a+3,w
  7646  0928  00A0               	movwf	??___fladd
  7647  0929  0820               	movf	??___fladd,w
  7648  092A  00F9               	movwf	___fladd@aexp
  7649  092B                     l2754:
  7650  092B  1FF6               	btfss	___fladd@a+2,7
  7651  092C  292E               	goto	u2881
  7652  092D  292F               	goto	u2880
  7653  092E                     u2881:
  7654  092E  2930               	goto	l2758
  7655  092F                     u2880:
  7656  092F                     l2756:
  7657  092F  1479               	bsf	___fladd@aexp,0
  7658  0930                     l2758:
  7659  0930  0879               	movf	___fladd@aexp,w
  7660  0931  1903               	btfsc	3,2
  7661  0932  2934               	goto	u2891
  7662  0933  2935               	goto	u2890
  7663  0934                     u2891:
  7664  0934  2945               	goto	l2768
  7665  0935                     u2890:
  7666  0935                     l2760:
  7667  0935  0A79               	incf	___fladd@aexp,w
  7668  0936  1D03               	btfss	3,2
  7669  0937  2939               	goto	u2901
  7670  0938  293A               	goto	u2900
  7671  0939                     u2901:
  7672  0939  2942               	goto	l2764
  7673  093A                     u2900:
  7674  093A                     l2762:
  7675  093A  3000               	movlw	0
  7676  093B  00F7               	movwf	___fladd@a+3
  7677  093C  3000               	movlw	0
  7678  093D  00F6               	movwf	___fladd@a+2
  7679  093E  3000               	movlw	0
  7680  093F  00F5               	movwf	___fladd@a+1
  7681  0940  3000               	movlw	0
  7682  0941  00F4               	movwf	___fladd@a
  7683  0942                     l2764:
  7684  0942  17F6               	bsf	___fladd@a+2,7
  7685  0943                     l2766:
  7686  0943  01F7               	clrf	___fladd@a+3
  7687  0944  294D               	goto	l652
  7688  0945                     l2768:
  7689  0945  3000               	movlw	0
  7690  0946  00F7               	movwf	___fladd@a+3
  7691  0947  3000               	movlw	0
  7692  0948  00F6               	movwf	___fladd@a+2
  7693  0949  3000               	movlw	0
  7694  094A  00F5               	movwf	___fladd@a+1
  7695  094B  3000               	movlw	0
  7696  094C  00F4               	movwf	___fladd@a
  7697  094D                     l652:
  7698  094D  087A               	movf	___fladd@bexp,w
  7699  094E  0279               	subwf	___fladd@aexp,w
  7700  094F  1803               	skipnc
  7701  0950  2952               	goto	u2911
  7702  0951  2953               	goto	u2910
  7703  0952                     u2911:
  7704  0952  2997               	goto	l2804
  7705  0953                     u2910:
  7706  0953                     l2770:
  7707  0953  1F78               	btfss	___fladd@signs,6
  7708  0954  2956               	goto	u2921
  7709  0955  2957               	goto	u2920
  7710  0956                     u2921:
  7711  0956  295B               	goto	l2774
  7712  0957                     u2920:
  7713  0957                     l2772:
  7714  0957  3080               	movlw	128
  7715  0958  00A0               	movwf	??___fladd
  7716  0959  0820               	movf	??___fladd,w
  7717  095A  06F8               	xorwf	___fladd@signs,f
  7718  095B                     l2774:
  7719  095B  087A               	movf	___fladd@bexp,w
  7720  095C  00A0               	movwf	??___fladd
  7721  095D  0820               	movf	??___fladd,w
  7722  095E  00FB               	movwf	___fladd@grs
  7723  095F                     l2776:
  7724  095F  0879               	movf	___fladd@aexp,w
  7725  0960  00A0               	movwf	??___fladd
  7726  0961  0820               	movf	??___fladd,w
  7727  0962  00FA               	movwf	___fladd@bexp
  7728  0963                     l2778:
  7729  0963  087B               	movf	___fladd@grs,w
  7730  0964  00A0               	movwf	??___fladd
  7731  0965  0820               	movf	??___fladd,w
  7732  0966  00F9               	movwf	___fladd@aexp
  7733  0967                     l2780:
  7734  0967  0870               	movf	___fladd@b,w
  7735  0968  00A0               	movwf	??___fladd
  7736  0969  0820               	movf	??___fladd,w
  7737  096A  00FB               	movwf	___fladd@grs
  7738  096B                     l2782:
  7739  096B  0874               	movf	___fladd@a,w
  7740  096C  00A0               	movwf	??___fladd
  7741  096D  0820               	movf	??___fladd,w
  7742  096E  00F0               	movwf	___fladd@b
  7743  096F                     l2784:
  7744  096F  087B               	movf	___fladd@grs,w
  7745  0970  00A0               	movwf	??___fladd
  7746  0971  0820               	movf	??___fladd,w
  7747  0972  00F4               	movwf	___fladd@a
  7748  0973                     l2786:
  7749  0973  0871               	movf	___fladd@b+1,w
  7750  0974  00A0               	movwf	??___fladd
  7751  0975  0820               	movf	??___fladd,w
  7752  0976  00FB               	movwf	___fladd@grs
  7753  0977                     l2788:
  7754  0977  0875               	movf	___fladd@a+1,w
  7755  0978  00A0               	movwf	??___fladd
  7756  0979  0820               	movf	??___fladd,w
  7757  097A  00F1               	movwf	___fladd@b+1
  7758  097B                     l2790:
  7759  097B  087B               	movf	___fladd@grs,w
  7760  097C  00A0               	movwf	??___fladd
  7761  097D  0820               	movf	??___fladd,w
  7762  097E  00F5               	movwf	___fladd@a+1
  7763  097F                     l2792:
  7764  097F  0872               	movf	___fladd@b+2,w
  7765  0980  00A0               	movwf	??___fladd
  7766  0981  0820               	movf	??___fladd,w
  7767  0982  00FB               	movwf	___fladd@grs
  7768  0983                     l2794:
  7769  0983  0876               	movf	___fladd@a+2,w
  7770  0984  00A0               	movwf	??___fladd
  7771  0985  0820               	movf	??___fladd,w
  7772  0986  00F2               	movwf	___fladd@b+2
  7773  0987                     l2796:
  7774  0987  087B               	movf	___fladd@grs,w
  7775  0988  00A0               	movwf	??___fladd
  7776  0989  0820               	movf	??___fladd,w
  7777  098A  00F6               	movwf	___fladd@a+2
  7778  098B                     l2798:
  7779  098B  0873               	movf	___fladd@b+3,w
  7780  098C  00A0               	movwf	??___fladd
  7781  098D  0820               	movf	??___fladd,w
  7782  098E  00FB               	movwf	___fladd@grs
  7783  098F                     l2800:
  7784  098F  0877               	movf	___fladd@a+3,w
  7785  0990  00A0               	movwf	??___fladd
  7786  0991  0820               	movf	??___fladd,w
  7787  0992  00F3               	movwf	___fladd@b+3
  7788  0993                     l2802:
  7789  0993  087B               	movf	___fladd@grs,w
  7790  0994  00A0               	movwf	??___fladd
  7791  0995  0820               	movf	??___fladd,w
  7792  0996  00F7               	movwf	___fladd@a+3
  7793  0997                     l2804:
  7794  0997  01FB               	clrf	___fladd@grs
  7795  0998                     l2806:
  7796  0998  0879               	movf	___fladd@aexp,w
  7797  0999  00A0               	movwf	??___fladd
  7798  099A  01A1               	clrf	??___fladd+1
  7799  099B  0821               	movf	??___fladd+1,w
  7800  099C  00A3               	movwf	??___fladd+3
  7801  099D  087A               	movf	___fladd@bexp,w
  7802  099E  0220               	subwf	??___fladd,w
  7803  099F  00A2               	movwf	??___fladd+2
  7804  09A0  1C03               	skipc
  7805  09A1  03A3               	decf	??___fladd+3,f
  7806  09A2  0823               	movf	??___fladd+3,w
  7807  09A3  3A80               	xorlw	128
  7808  09A4  00A4               	movwf	??___fladd+4
  7809  09A5  3080               	movlw	128
  7810  09A6  0224               	subwf	??___fladd+4,w
  7811  09A7  1D03               	skipz
  7812  09A8  29AB               	goto	u2935
  7813  09A9  301A               	movlw	26
  7814  09AA  0222               	subwf	??___fladd+2,w
  7815  09AB                     u2935:
  7816  09AB  1C03               	skipc
  7817  09AC  29AE               	goto	u2931
  7818  09AD  29AF               	goto	u2930
  7819  09AE                     u2931:
  7820  09AE  29E9               	goto	l2822
  7821  09AF                     u2930:
  7822  09AF                     l2808:
  7823  09AF  0873               	movf	___fladd@b+3,w
  7824  09B0  0472               	iorwf	___fladd@b+2,w
  7825  09B1  0471               	iorwf	___fladd@b+1,w
  7826  09B2  0470               	iorwf	___fladd@b,w
  7827  09B3  1D03               	skipz
  7828  09B4  29B6               	goto	u2941
  7829  09B5  29B8               	goto	u2940
  7830  09B6                     u2941:
  7831  09B6  3001               	movlw	1
  7832  09B7  29B9               	goto	u2950
  7833  09B8                     u2940:
  7834  09B8  3000               	movlw	0
  7835  09B9                     u2950:
  7836  09B9  0020               	movlb	0	; select bank0
  7837  09BA  00A0               	movwf	??___fladd
  7838  09BB  0820               	movf	??___fladd,w
  7839  09BC  00FB               	movwf	___fladd@grs
  7840  09BD  3000               	movlw	0
  7841  09BE  00F3               	movwf	___fladd@b+3
  7842  09BF  3000               	movlw	0
  7843  09C0  00F2               	movwf	___fladd@b+2
  7844  09C1  3000               	movlw	0
  7845  09C2  00F1               	movwf	___fladd@b+1
  7846  09C3  3000               	movlw	0
  7847  09C4  00F0               	movwf	___fladd@b
  7848  09C5  0879               	movf	___fladd@aexp,w
  7849  09C6  00A0               	movwf	??___fladd
  7850  09C7  0820               	movf	??___fladd,w
  7851  09C8  00FA               	movwf	___fladd@bexp
  7852  09C9  29EF               	goto	l656
  7853  09CA                     l658:
  7854  09CA  1C7B               	btfss	___fladd@grs,0
  7855  09CB  29CD               	goto	u2961
  7856  09CC  29CE               	goto	u2960
  7857  09CD                     u2961:
  7858  09CD  29D5               	goto	l2812
  7859  09CE                     u2960:
  7860  09CE                     l2810:
  7861  09CE  367B               	lsrf	___fladd@grs,w
  7862  09CF  3801               	iorlw	1
  7863  09D0  0020               	movlb	0	; select bank0
  7864  09D1  00A0               	movwf	??___fladd
  7865  09D2  0820               	movf	??___fladd,w
  7866  09D3  00FB               	movwf	___fladd@grs
  7867  09D4  29D7               	goto	l2814
  7868  09D5                     l2812:
  7869  09D5  1003               	clrc
  7870  09D6  0CFB               	rrf	___fladd@grs,f
  7871  09D7                     l2814:
  7872  09D7  1C70               	btfss	___fladd@b,0
  7873  09D8  29DA               	goto	u2971
  7874  09D9  29DB               	goto	u2970
  7875  09DA                     u2971:
  7876  09DA  29DC               	goto	l2818
  7877  09DB                     u2970:
  7878  09DB                     l2816:
  7879  09DB  17FB               	bsf	___fladd@grs,7
  7880  09DC                     l2818:
  7881  09DC  3001               	movlw	1
  7882  09DD  0020               	movlb	0	; select bank0
  7883  09DE  00A0               	movwf	??___fladd
  7884  09DF                     u2985:
  7885  09DF  37F3               	asrf	___fladd@b+3,f
  7886  09E0  0CF2               	rrf	___fladd@b+2,f
  7887  09E1  0CF1               	rrf	___fladd@b+1,f
  7888  09E2  0CF0               	rrf	___fladd@b,f
  7889  09E3  0BA0               	decfsz	??___fladd& (0+127),f
  7890  09E4  29DF               	goto	u2985
  7891  09E5                     l2820:
  7892  09E5  3001               	movlw	1
  7893  09E6  00A0               	movwf	??___fladd
  7894  09E7  0820               	movf	??___fladd,w
  7895  09E8  07FA               	addwf	___fladd@bexp,f
  7896  09E9                     l2822:
  7897  09E9  0879               	movf	___fladd@aexp,w
  7898  09EA  027A               	subwf	___fladd@bexp,w
  7899  09EB  1C03               	skipc
  7900  09EC  29EE               	goto	u2991
  7901  09ED  29EF               	goto	u2990
  7902  09EE                     u2991:
  7903  09EE  29CA               	goto	l658
  7904  09EF                     u2990:
  7905  09EF                     l656:
  7906  09EF  1B78               	btfsc	___fladd@signs,6
  7907  09F0  29F2               	goto	u3001
  7908  09F1  29F3               	goto	u3000
  7909  09F2                     u3001:
  7910  09F2  2A2D               	goto	l2848
  7911  09F3                     u3000:
  7912  09F3                     l2824:
  7913  09F3  087A               	movf	___fladd@bexp,w
  7914  09F4  1D03               	btfss	3,2
  7915  09F5  29F7               	goto	u3011
  7916  09F6  29F8               	goto	u3010
  7917  09F7                     u3011:
  7918  09F7  2A01               	goto	l2830
  7919  09F8                     u3010:
  7920  09F8                     l2826:
  7921  09F8  3000               	movlw	0
  7922  09F9  00F3               	movwf	?___fladd+3
  7923  09FA  3000               	movlw	0
  7924  09FB  00F2               	movwf	?___fladd+2
  7925  09FC  3000               	movlw	0
  7926  09FD  00F1               	movwf	?___fladd+1
  7927  09FE  3000               	movlw	0
  7928  09FF  00F0               	movwf	?___fladd
  7929  0A00  2B2D               	goto	l665
  7930  0A01                     l2830:
  7931  0A01  0874               	movf	___fladd@a,w
  7932  0A02  07F0               	addwf	___fladd@b,f
  7933  0A03  0875               	movf	___fladd@a+1,w
  7934  0A04  3DF1               	addwfc	___fladd@b+1,f
  7935  0A05  0876               	movf	___fladd@a+2,w
  7936  0A06  3DF2               	addwfc	___fladd@b+2,f
  7937  0A07  0877               	movf	___fladd@a+3,w
  7938  0A08  3DF3               	addwfc	___fladd@b+3,f
  7939  0A09                     l2832:
  7940  0A09  1C73               	btfss	___fladd@b+3,0
  7941  0A0A  2A0C               	goto	u3021
  7942  0A0B  2A0D               	goto	u3020
  7943  0A0C                     u3021:
  7944  0A0C  2ABA               	goto	l2882
  7945  0A0D                     u3020:
  7946  0A0D                     l2834:
  7947  0A0D  1C7B               	btfss	___fladd@grs,0
  7948  0A0E  2A10               	goto	u3031
  7949  0A0F  2A11               	goto	u3030
  7950  0A10                     u3031:
  7951  0A10  2A18               	goto	l2838
  7952  0A11                     u3030:
  7953  0A11                     l2836:
  7954  0A11  367B               	lsrf	___fladd@grs,w
  7955  0A12  3801               	iorlw	1
  7956  0A13  0020               	movlb	0	; select bank0
  7957  0A14  00A0               	movwf	??___fladd
  7958  0A15  0820               	movf	??___fladd,w
  7959  0A16  00FB               	movwf	___fladd@grs
  7960  0A17  2A1A               	goto	l2840
  7961  0A18                     l2838:
  7962  0A18  1003               	clrc
  7963  0A19  0CFB               	rrf	___fladd@grs,f
  7964  0A1A                     l2840:
  7965  0A1A  1C70               	btfss	___fladd@b,0
  7966  0A1B  2A1D               	goto	u3041
  7967  0A1C  2A1E               	goto	u3040
  7968  0A1D                     u3041:
  7969  0A1D  2A1F               	goto	l2844
  7970  0A1E                     u3040:
  7971  0A1E                     l2842:
  7972  0A1E  17FB               	bsf	___fladd@grs,7
  7973  0A1F                     l2844:
  7974  0A1F  3001               	movlw	1
  7975  0A20  0020               	movlb	0	; select bank0
  7976  0A21  00A0               	movwf	??___fladd
  7977  0A22                     u3055:
  7978  0A22  37F3               	asrf	___fladd@b+3,f
  7979  0A23  0CF2               	rrf	___fladd@b+2,f
  7980  0A24  0CF1               	rrf	___fladd@b+1,f
  7981  0A25  0CF0               	rrf	___fladd@b,f
  7982  0A26  0BA0               	decfsz	??___fladd& (0+127),f
  7983  0A27  2A22               	goto	u3055
  7984  0A28                     l2846:
  7985  0A28  3001               	movlw	1
  7986  0A29  00A0               	movwf	??___fladd
  7987  0A2A  0820               	movf	??___fladd,w
  7988  0A2B  07FA               	addwf	___fladd@bexp,f
  7989  0A2C  2ABA               	goto	l2882
  7990  0A2D                     l2848:
  7991  0A2D  0873               	movf	___fladd@b+3,w
  7992  0A2E  3A80               	xorlw	128
  7993  0A2F  0020               	movlb	0	; select bank0
  7994  0A30  00A0               	movwf	??___fladd
  7995  0A31  0877               	movf	___fladd@a+3,w
  7996  0A32  3A80               	xorlw	128
  7997  0A33  0220               	subwf	??___fladd,w
  7998  0A34  1D03               	skipz
  7999  0A35  2A40               	goto	u3063
  8000  0A36  0876               	movf	___fladd@a+2,w
  8001  0A37  0272               	subwf	___fladd@b+2,w
  8002  0A38  1D03               	skipz
  8003  0A39  2A40               	goto	u3063
  8004  0A3A  0875               	movf	___fladd@a+1,w
  8005  0A3B  0271               	subwf	___fladd@b+1,w
  8006  0A3C  1D03               	skipz
  8007  0A3D  2A40               	goto	u3063
  8008  0A3E  0874               	movf	___fladd@a,w
  8009  0A3F  0270               	subwf	___fladd@b,w
  8010  0A40                     u3063:
  8011  0A40  1803               	skipnc
  8012  0A41  2A43               	goto	u3061
  8013  0A42  2A44               	goto	u3060
  8014  0A43                     u3061:
  8015  0A43  2A7C               	goto	l2858
  8016  0A44                     u3060:
  8017  0A44                     l2850:
  8018  0A44  30FF               	movlw	255
  8019  0A45  00A0               	movwf	??___fladd
  8020  0A46  30FF               	movlw	255
  8021  0A47  00A1               	movwf	??___fladd+1
  8022  0A48  30FF               	movlw	255
  8023  0A49  00A2               	movwf	??___fladd+2
  8024  0A4A  30FF               	movlw	255
  8025  0A4B  00A3               	movwf	??___fladd+3
  8026  0A4C  0870               	movf	___fladd@b,w
  8027  0A4D  0274               	subwf	___fladd@a,w
  8028  0A4E  00A4               	movwf	??___fladd+4
  8029  0A4F  0871               	movf	___fladd@b+1,w
  8030  0A50  3B75               	subwfb	___fladd@a+1,w
  8031  0A51  00A5               	movwf	??___fladd+5
  8032  0A52  0872               	movf	___fladd@b+2,w
  8033  0A53  3B76               	subwfb	___fladd@a+2,w
  8034  0A54  00A6               	movwf	??___fladd+6
  8035  0A55  0873               	movf	___fladd@b+3,w
  8036  0A56  3B77               	subwfb	___fladd@a+3,w
  8037  0A57  00A7               	movwf	??___fladd+7
  8038  0A58  0824               	movf	??___fladd+4,w
  8039  0A59  07A0               	addwf	??___fladd,f
  8040  0A5A  0825               	movf	??___fladd+5,w
  8041  0A5B  3DA1               	addwfc	??___fladd+1,f
  8042  0A5C  0826               	movf	??___fladd+6,w
  8043  0A5D  3DA2               	addwfc	??___fladd+2,f
  8044  0A5E  0827               	movf	??___fladd+7,w
  8045  0A5F  3DA3               	addwfc	??___fladd+3,f
  8046  0A60  0823               	movf	??___fladd+3,w
  8047  0A61  00F3               	movwf	___fladd@b+3
  8048  0A62  0822               	movf	??___fladd+2,w
  8049  0A63  00F2               	movwf	___fladd@b+2
  8050  0A64  0821               	movf	??___fladd+1,w
  8051  0A65  00F1               	movwf	___fladd@b+1
  8052  0A66  0820               	movf	??___fladd,w
  8053  0A67  00F0               	movwf	___fladd@b
  8054  0A68                     l2852:
  8055  0A68  3080               	movlw	128
  8056  0A69  00A0               	movwf	??___fladd
  8057  0A6A  0820               	movf	??___fladd,w
  8058  0A6B  06F8               	xorwf	___fladd@signs,f
  8059  0A6C  09FB               	comf	___fladd@grs,f
  8060  0A6D  0AFB               	incf	___fladd@grs,f
  8061  0A6E                     l2854:
  8062  0A6E  087B               	movf	___fladd@grs,w
  8063  0A6F  1D03               	btfss	3,2
  8064  0A70  2A72               	goto	u3071
  8065  0A71  2A73               	goto	u3070
  8066  0A72                     u3071:
  8067  0A72  2A84               	goto	l673
  8068  0A73                     u3070:
  8069  0A73                     l2856:
  8070  0A73  3001               	movlw	1
  8071  0A74  07F0               	addwf	___fladd@b,f
  8072  0A75  3000               	movlw	0
  8073  0A76  3DF1               	addwfc	___fladd@b+1,f
  8074  0A77  3000               	movlw	0
  8075  0A78  3DF2               	addwfc	___fladd@b+2,f
  8076  0A79  3000               	movlw	0
  8077  0A7A  3DF3               	addwfc	___fladd@b+3,f
  8078  0A7B  2A84               	goto	l673
  8079  0A7C                     l2858:
  8080  0A7C  0874               	movf	___fladd@a,w
  8081  0A7D  02F0               	subwf	___fladd@b,f
  8082  0A7E  0875               	movf	___fladd@a+1,w
  8083  0A7F  3BF1               	subwfb	___fladd@b+1,f
  8084  0A80  0876               	movf	___fladd@a+2,w
  8085  0A81  3BF2               	subwfb	___fladd@b+2,f
  8086  0A82  0877               	movf	___fladd@a+3,w
  8087  0A83  3BF3               	subwfb	___fladd@b+3,f
  8088  0A84                     l673:
  8089  0A84  0873               	movf	___fladd@b+3,w
  8090  0A85  0472               	iorwf	___fladd@b+2,w
  8091  0A86  0471               	iorwf	___fladd@b+1,w
  8092  0A87  0470               	iorwf	___fladd@b,w
  8093  0A88  1D03               	skipz
  8094  0A89  2A8B               	goto	u3081
  8095  0A8A  2A8C               	goto	u3080
  8096  0A8B                     u3081:
  8097  0A8B  2AB6               	goto	l2880
  8098  0A8C                     u3080:
  8099  0A8C                     l2860:
  8100  0A8C  087B               	movf	___fladd@grs,w
  8101  0A8D  1D03               	btfss	3,2
  8102  0A8E  2A90               	goto	u3091
  8103  0A8F  2A91               	goto	u3090
  8104  0A90                     u3091:
  8105  0A90  2AB6               	goto	l2880
  8106  0A91                     u3090:
  8107  0A91                     l2862:
  8108  0A91  3000               	movlw	0
  8109  0A92  00F3               	movwf	?___fladd+3
  8110  0A93  3000               	movlw	0
  8111  0A94  00F2               	movwf	?___fladd+2
  8112  0A95  3000               	movlw	0
  8113  0A96  00F1               	movwf	?___fladd+1
  8114  0A97  3000               	movlw	0
  8115  0A98  00F0               	movwf	?___fladd
  8116  0A99  2B2D               	goto	l665
  8117  0A9A                     l2866:
  8118  0A9A  3001               	movlw	1
  8119  0A9B                     u3105:
  8120  0A9B  35F0               	lslf	___fladd@b,f
  8121  0A9C  0DF1               	rlf	___fladd@b+1,f
  8122  0A9D  0DF2               	rlf	___fladd@b+2,f
  8123  0A9E  0DF3               	rlf	___fladd@b+3,f
  8124  0A9F  0B89               	decfsz	9,f
  8125  0AA0  2A9B               	goto	u3105
  8126  0AA1                     l2868:
  8127  0AA1  1FFB               	btfss	___fladd@grs,7
  8128  0AA2  2AA4               	goto	u3111
  8129  0AA3  2AA5               	goto	u3110
  8130  0AA4                     u3111:
  8131  0AA4  2AA6               	goto	l677
  8132  0AA5                     u3110:
  8133  0AA5                     l2870:
  8134  0AA5  1470               	bsf	___fladd@b,0
  8135  0AA6                     l677:
  8136  0AA6  1C7B               	btfss	___fladd@grs,0
  8137  0AA7  2AA9               	goto	u3121
  8138  0AA8  2AAA               	goto	u3120
  8139  0AA9                     u3121:
  8140  0AA9  2AAD               	goto	l2874
  8141  0AAA                     u3120:
  8142  0AAA                     l2872:
  8143  0AAA  1403               	setc
  8144  0AAB  0DFB               	rlf	___fladd@grs,f
  8145  0AAC  2AAF               	goto	l2876
  8146  0AAD                     l2874:
  8147  0AAD  1003               	clrc
  8148  0AAE  0DFB               	rlf	___fladd@grs,f
  8149  0AAF                     l2876:
  8150  0AAF  087A               	movf	___fladd@bexp,w
  8151  0AB0  1903               	btfsc	3,2
  8152  0AB1  2AB3               	goto	u3131
  8153  0AB2  2AB4               	goto	u3130
  8154  0AB3                     u3131:
  8155  0AB3  2AB6               	goto	l2880
  8156  0AB4                     u3130:
  8157  0AB4                     l2878:
  8158  0AB4  3001               	movlw	1
  8159  0AB5  02FA               	subwf	___fladd@bexp,f
  8160  0AB6                     l2880:
  8161  0AB6  1FF2               	btfss	___fladd@b+2,7
  8162  0AB7  2AB9               	goto	u3141
  8163  0AB8  2ABA               	goto	u3140
  8164  0AB9                     u3141:
  8165  0AB9  2A9A               	goto	l2866
  8166  0ABA                     u3140:
  8167  0ABA                     l2882:
  8168  0ABA  01F9               	clrf	___fladd@aexp
  8169  0ABB                     l2884:
  8170  0ABB  1FFB               	btfss	___fladd@grs,7
  8171  0ABC  2ABE               	goto	u3151
  8172  0ABD  2ABF               	goto	u3150
  8173  0ABE                     u3151:
  8174  0ABE  2ACD               	goto	l2892
  8175  0ABF                     u3150:
  8176  0ABF                     l2886:
  8177  0ABF  087B               	movf	___fladd@grs,w
  8178  0AC0  397F               	andlw	127
  8179  0AC1  1903               	btfsc	3,2
  8180  0AC2  2AC4               	goto	u3161
  8181  0AC3  2AC5               	goto	u3160
  8182  0AC4                     u3161:
  8183  0AC4  2AC8               	goto	l683
  8184  0AC5                     u3160:
  8185  0AC5                     l2888:
  8186  0AC5  01F9               	clrf	___fladd@aexp
  8187  0AC6  0AF9               	incf	___fladd@aexp,f
  8188  0AC7  2ACD               	goto	l2892
  8189  0AC8                     l683:
  8190  0AC8  1C70               	btfss	___fladd@b,0
  8191  0AC9  2ACB               	goto	u3171
  8192  0ACA  2ACC               	goto	u3170
  8193  0ACB                     u3171:
  8194  0ACB  2ACD               	goto	l2892
  8195  0ACC                     u3170:
  8196  0ACC  2AC5               	goto	l2888
  8197  0ACD                     l2892:
  8198  0ACD  0879               	movf	___fladd@aexp,w
  8199  0ACE  1903               	btfsc	3,2
  8200  0ACF  2AD1               	goto	u3181
  8201  0AD0  2AD2               	goto	u3180
  8202  0AD1                     u3181:
  8203  0AD1  2B00               	goto	l686
  8204  0AD2                     u3180:
  8205  0AD2                     l2894:
  8206  0AD2  3001               	movlw	1
  8207  0AD3  07F0               	addwf	___fladd@b,f
  8208  0AD4  3000               	movlw	0
  8209  0AD5  3DF1               	addwfc	___fladd@b+1,f
  8210  0AD6  3000               	movlw	0
  8211  0AD7  3DF2               	addwfc	___fladd@b+2,f
  8212  0AD8  3000               	movlw	0
  8213  0AD9  3DF3               	addwfc	___fladd@b+3,f
  8214  0ADA                     l2896:
  8215  0ADA  1C73               	btfss	___fladd@b+3,0
  8216  0ADB  2ADD               	goto	u3191
  8217  0ADC  2ADE               	goto	u3190
  8218  0ADD                     u3191:
  8219  0ADD  2B00               	goto	l686
  8220  0ADE                     u3190:
  8221  0ADE                     l2898:
  8222  0ADE  0870               	movf	___fladd@b,w
  8223  0ADF  0020               	movlb	0	; select bank0
  8224  0AE0  00A0               	movwf	??___fladd
  8225  0AE1  0871               	movf	___fladd@b+1,w
  8226  0AE2  00A1               	movwf	??___fladd+1
  8227  0AE3  0872               	movf	___fladd@b+2,w
  8228  0AE4  00A2               	movwf	??___fladd+2
  8229  0AE5  0873               	movf	___fladd@b+3,w
  8230  0AE6  00A3               	movwf	??___fladd+3
  8231  0AE7  3001               	movlw	1
  8232  0AE8  00A4               	movwf	??___fladd+4
  8233  0AE9                     u3205:
  8234  0AE9  37A3               	asrf	??___fladd+3,f
  8235  0AEA  0CA2               	rrf	??___fladd+2,f
  8236  0AEB  0CA1               	rrf	??___fladd+1,f
  8237  0AEC  0CA0               	rrf	??___fladd,f
  8238  0AED                     u3200:
  8239  0AED  0BA4               	decfsz	??___fladd+4,f
  8240  0AEE  2AE9               	goto	u3205
  8241  0AEF  0823               	movf	??___fladd+3,w
  8242  0AF0  00F3               	movwf	___fladd@b+3
  8243  0AF1  0822               	movf	??___fladd+2,w
  8244  0AF2  00F2               	movwf	___fladd@b+2
  8245  0AF3  0821               	movf	??___fladd+1,w
  8246  0AF4  00F1               	movwf	___fladd@b+1
  8247  0AF5  0820               	movf	??___fladd,w
  8248  0AF6  00F0               	movwf	___fladd@b
  8249  0AF7  0A7A               	incf	___fladd@bexp,w
  8250  0AF8  1903               	btfsc	3,2
  8251  0AF9  2AFB               	goto	u3211
  8252  0AFA  2AFC               	goto	u3210
  8253  0AFB                     u3211:
  8254  0AFB  2B00               	goto	l686
  8255  0AFC                     u3210:
  8256  0AFC                     l2900:
  8257  0AFC  3001               	movlw	1
  8258  0AFD  00A0               	movwf	??___fladd
  8259  0AFE  0820               	movf	??___fladd,w
  8260  0AFF  07FA               	addwf	___fladd@bexp,f
  8261  0B00                     l686:
  8262  0B00  0A7A               	incf	___fladd@bexp,w
  8263  0B01  1903               	btfsc	3,2
  8264  0B02  2B04               	goto	u3221
  8265  0B03  2B05               	goto	u3220
  8266  0B04                     u3221:
  8267  0B04  2B0A               	goto	l2904
  8268  0B05                     u3220:
  8269  0B05                     l2902:
  8270  0B05  087A               	movf	___fladd@bexp,w
  8271  0B06  1D03               	btfss	3,2
  8272  0B07  2B09               	goto	u3231
  8273  0B08  2B0A               	goto	u3230
  8274  0B09                     u3231:
  8275  0B09  2B18               	goto	l2910
  8276  0B0A                     u3230:
  8277  0B0A                     l2904:
  8278  0B0A  3000               	movlw	0
  8279  0B0B  00F3               	movwf	___fladd@b+3
  8280  0B0C  3000               	movlw	0
  8281  0B0D  00F2               	movwf	___fladd@b+2
  8282  0B0E  3000               	movlw	0
  8283  0B0F  00F1               	movwf	___fladd@b+1
  8284  0B10  3000               	movlw	0
  8285  0B11  00F0               	movwf	___fladd@b
  8286  0B12                     l2906:
  8287  0B12  087A               	movf	___fladd@bexp,w
  8288  0B13  1D03               	btfss	3,2
  8289  0B14  2B16               	goto	u3241
  8290  0B15  2B17               	goto	u3240
  8291  0B16                     u3241:
  8292  0B16  2B18               	goto	l2910
  8293  0B17                     u3240:
  8294  0B17                     l2908:
  8295  0B17  01F8               	clrf	___fladd@signs
  8296  0B18                     l2910:
  8297  0B18  1C7A               	btfss	___fladd@bexp,0
  8298  0B19  2B1B               	goto	u3251
  8299  0B1A  2B1C               	goto	u3250
  8300  0B1B                     u3251:
  8301  0B1B  2B1E               	goto	l2914
  8302  0B1C                     u3250:
  8303  0B1C                     l2912:
  8304  0B1C  17F2               	bsf	___fladd@b+2,7
  8305  0B1D  2B23               	goto	l694
  8306  0B1E                     l2914:
  8307  0B1E  307F               	movlw	127
  8308  0B1F  0020               	movlb	0	; select bank0
  8309  0B20  00A0               	movwf	??___fladd
  8310  0B21  0820               	movf	??___fladd,w
  8311  0B22  05F2               	andwf	___fladd@b+2,f
  8312  0B23                     l694:
  8313  0B23  367A               	lsrf	___fladd@bexp,w
  8314  0B24  0020               	movlb	0	; select bank0
  8315  0B25  00A0               	movwf	??___fladd
  8316  0B26  0820               	movf	??___fladd,w
  8317  0B27  00F3               	movwf	___fladd@b+3
  8318  0B28                     l2916:
  8319  0B28  1FF8               	btfss	___fladd@signs,7
  8320  0B29  2B2B               	goto	u3261
  8321  0B2A  2B2C               	goto	u3260
  8322  0B2B                     u3261:
  8323  0B2B  2B2D               	goto	l695
  8324  0B2C                     u3260:
  8325  0B2C                     l2918:
  8326  0B2C  17F3               	bsf	___fladd@b+3,7
  8327  0B2D                     l695:
  8328  0B2D                     l665:
  8329  0B2D  0008               	return
  8330  0B2E                     __end_of___fladd:
  8331                           
  8332                           	psect	text19
  8333  1E29                     __ptext19:	
  8334 ;; *************** function ___flneg *****************
  8335 ;; Defined at:
  8336 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  8337 ;; Parameters:    Size  Location     Type
  8338 ;;  f1              4    0[COMMON] unsigned char 
  8339 ;; Auto vars:     Size  Location     Type
  8340 ;;		None
  8341 ;; Return value:  Size  Location     Type
  8342 ;;                  4    0[COMMON] unsigned char 
  8343 ;; Registers used:
  8344 ;;		wreg
  8345 ;; Tracked objects:
  8346 ;;		On entry : 0/0
  8347 ;;		On exit  : 0/0
  8348 ;;		Unchanged: 0/0
  8349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8350 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8353 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8354 ;;Total ram usage:        4 bytes
  8355 ;; Hardware stack levels used: 1
  8356 ;; This function calls:
  8357 ;;		Nothing
  8358 ;; This function is called by:
  8359 ;;		_efgtoa
  8360 ;; This function uses a non-reentrant model
  8361 ;;
  8362                           
  8363  1E29                     ___flneg:	
  8364                           ;psect for function ___flneg
  8365                           
  8366  1E29                     l3084:	
  8367                           ;incstack = 0
  8368                           ; Regs used in ___flneg: [wreg]
  8369                           
  8370  1E29  0873               	movf	___flneg@f1+3,w
  8371  1E2A  0472               	iorwf	___flneg@f1+2,w
  8372  1E2B  0471               	iorwf	___flneg@f1+1,w
  8373  1E2C  0470               	iorwf	___flneg@f1,w
  8374  1E2D  1903               	skipnz
  8375  1E2E  2E30               	goto	u3651
  8376  1E2F  2E31               	goto	u3650
  8377  1E30                     u3651:
  8378  1E30  2E33               	goto	l3088
  8379  1E31                     u3650:
  8380  1E31                     l3086:
  8381  1E31  3080               	movlw	128
  8382  1E32  06F3               	xorwf	___flneg@f1+3,f
  8383  1E33                     l3088:
  8384  1E33                     l541:
  8385  1E33  0008               	return
  8386  1E34                     __end_of___flneg:
  8387                           
  8388                           	psect	text20
  8389  0B2E                     __ptext20:	
  8390 ;; *************** function ___flmul *****************
  8391 ;; Defined at:
  8392 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  8393 ;; Parameters:    Size  Location     Type
  8394 ;;  b               4    0[BANK0 ] unsigned char 
  8395 ;;  a               4    4[BANK0 ] unsigned char 
  8396 ;; Auto vars:     Size  Location     Type
  8397 ;;  prod            4   15[BANK0 ] struct .
  8398 ;;  grs             4    9[BANK0 ] unsigned long 
  8399 ;;  temp            2   19[BANK0 ] struct .
  8400 ;;  bexp            1   14[BANK0 ] unsigned char 
  8401 ;;  aexp            1   13[BANK0 ] unsigned char 
  8402 ;;  sign            1    8[BANK0 ] unsigned char 
  8403 ;; Return value:  Size  Location     Type
  8404 ;;                  4    0[BANK0 ] unsigned char 
  8405 ;; Registers used:
  8406 ;;		wreg, status,2, status,0, pclath, cstack
  8407 ;; Tracked objects:
  8408 ;;		On entry : 0/0
  8409 ;;		On exit  : 0/0
  8410 ;;		Unchanged: 0/0
  8411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8412 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8413 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8414 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8415 ;;      Totals:         5      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8416 ;;Total ram usage:       26 bytes
  8417 ;; Hardware stack levels used: 1
  8418 ;; Hardware stack levels required when called: 1
  8419 ;; This function calls:
  8420 ;;		__Umul8_16
  8421 ;; This function is called by:
  8422 ;;		_main
  8423 ;;		_efgtoa
  8424 ;; This function uses a non-reentrant model
  8425 ;;
  8426                           
  8427  0B2E                     ___flmul:	
  8428                           ;psect for function ___flmul
  8429                           
  8430  0B2E                     l3274:	
  8431                           ;incstack = 0
  8432                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8433                           
  8434  0B2E  0020               	movlb	0	; select bank0
  8435  0B2F  0823               	movf	___flmul@b+3,w
  8436  0B30  3980               	andlw	128
  8437  0B31  00F9               	movwf	??___flmul
  8438  0B32  0879               	movf	??___flmul,w
  8439  0B33  00A8               	movwf	___flmul@sign
  8440  0B34                     l3276:
  8441  0B34  3523               	lslf	___flmul@b+3,w
  8442  0B35  00F9               	movwf	??___flmul
  8443  0B36  0879               	movf	??___flmul,w
  8444  0B37  00AE               	movwf	___flmul@bexp
  8445  0B38                     l3278:
  8446  0B38  1FA2               	btfss	___flmul@b+2,7
  8447  0B39  2B3B               	goto	u4051
  8448  0B3A  2B3C               	goto	u4050
  8449  0B3B                     u4051:
  8450  0B3B  2B3D               	goto	l3282
  8451  0B3C                     u4050:
  8452  0B3C                     l3280:
  8453  0B3C  142E               	bsf	___flmul@bexp,0
  8454  0B3D                     l3282:
  8455  0B3D  082E               	movf	___flmul@bexp,w
  8456  0B3E  1903               	btfsc	3,2
  8457  0B3F  2B41               	goto	u4061
  8458  0B40  2B42               	goto	u4060
  8459  0B41                     u4061:
  8460  0B41  2B51               	goto	l3290
  8461  0B42                     u4060:
  8462  0B42                     l3284:
  8463  0B42  0A2E               	incf	___flmul@bexp,w
  8464  0B43  1D03               	btfss	3,2
  8465  0B44  2B46               	goto	u4071
  8466  0B45  2B47               	goto	u4070
  8467  0B46                     u4071:
  8468  0B46  2B4F               	goto	l3288
  8469  0B47                     u4070:
  8470  0B47                     l3286:
  8471  0B47  3000               	movlw	0
  8472  0B48  00A3               	movwf	___flmul@b+3
  8473  0B49  3000               	movlw	0
  8474  0B4A  00A2               	movwf	___flmul@b+2
  8475  0B4B  3000               	movlw	0
  8476  0B4C  00A1               	movwf	___flmul@b+1
  8477  0B4D  3000               	movlw	0
  8478  0B4E  00A0               	movwf	___flmul@b
  8479  0B4F                     l3288:
  8480  0B4F  17A2               	bsf	___flmul@b+2,7
  8481  0B50  2B59               	goto	l3292
  8482  0B51                     l3290:
  8483  0B51  3000               	movlw	0
  8484  0B52  00A3               	movwf	___flmul@b+3
  8485  0B53  3000               	movlw	0
  8486  0B54  00A2               	movwf	___flmul@b+2
  8487  0B55  3000               	movlw	0
  8488  0B56  00A1               	movwf	___flmul@b+1
  8489  0B57  3000               	movlw	0
  8490  0B58  00A0               	movwf	___flmul@b
  8491  0B59                     l3292:
  8492  0B59  0827               	movf	___flmul@a+3,w
  8493  0B5A  3980               	andlw	128
  8494  0B5B  00F9               	movwf	??___flmul
  8495  0B5C  0879               	movf	??___flmul,w
  8496  0B5D  06A8               	xorwf	___flmul@sign,f
  8497  0B5E                     l3294:
  8498  0B5E  3527               	lslf	___flmul@a+3,w
  8499  0B5F  00F9               	movwf	??___flmul
  8500  0B60  0879               	movf	??___flmul,w
  8501  0B61  00AD               	movwf	___flmul@aexp
  8502  0B62                     l3296:
  8503  0B62  1FA6               	btfss	___flmul@a+2,7
  8504  0B63  2B65               	goto	u4081
  8505  0B64  2B66               	goto	u4080
  8506  0B65                     u4081:
  8507  0B65  2B67               	goto	l3300
  8508  0B66                     u4080:
  8509  0B66                     l3298:
  8510  0B66  142D               	bsf	___flmul@aexp,0
  8511  0B67                     l3300:
  8512  0B67  082D               	movf	___flmul@aexp,w
  8513  0B68  1903               	btfsc	3,2
  8514  0B69  2B6B               	goto	u4091
  8515  0B6A  2B6C               	goto	u4090
  8516  0B6B                     u4091:
  8517  0B6B  2B7B               	goto	l3308
  8518  0B6C                     u4090:
  8519  0B6C                     l3302:
  8520  0B6C  0A2D               	incf	___flmul@aexp,w
  8521  0B6D  1D03               	btfss	3,2
  8522  0B6E  2B70               	goto	u4101
  8523  0B6F  2B71               	goto	u4100
  8524  0B70                     u4101:
  8525  0B70  2B79               	goto	l3306
  8526  0B71                     u4100:
  8527  0B71                     l3304:
  8528  0B71  3000               	movlw	0
  8529  0B72  00A7               	movwf	___flmul@a+3
  8530  0B73  3000               	movlw	0
  8531  0B74  00A6               	movwf	___flmul@a+2
  8532  0B75  3000               	movlw	0
  8533  0B76  00A5               	movwf	___flmul@a+1
  8534  0B77  3000               	movlw	0
  8535  0B78  00A4               	movwf	___flmul@a
  8536  0B79                     l3306:
  8537  0B79  17A6               	bsf	___flmul@a+2,7
  8538  0B7A  2B83               	goto	l3310
  8539  0B7B                     l3308:
  8540  0B7B  3000               	movlw	0
  8541  0B7C  00A7               	movwf	___flmul@a+3
  8542  0B7D  3000               	movlw	0
  8543  0B7E  00A6               	movwf	___flmul@a+2
  8544  0B7F  3000               	movlw	0
  8545  0B80  00A5               	movwf	___flmul@a+1
  8546  0B81  3000               	movlw	0
  8547  0B82  00A4               	movwf	___flmul@a
  8548  0B83                     l3310:
  8549  0B83  082D               	movf	___flmul@aexp,w
  8550  0B84  1903               	btfsc	3,2
  8551  0B85  2B87               	goto	u4111
  8552  0B86  2B88               	goto	u4110
  8553  0B87                     u4111:
  8554  0B87  2B8D               	goto	l3314
  8555  0B88                     u4110:
  8556  0B88                     l3312:
  8557  0B88  082E               	movf	___flmul@bexp,w
  8558  0B89  1D03               	btfss	3,2
  8559  0B8A  2B8C               	goto	u4121
  8560  0B8B  2B8D               	goto	u4120
  8561  0B8C                     u4121:
  8562  0B8C  2B96               	goto	l3318
  8563  0B8D                     u4120:
  8564  0B8D                     l3314:
  8565  0B8D  3000               	movlw	0
  8566  0B8E  00A3               	movwf	?___flmul+3
  8567  0B8F  3000               	movlw	0
  8568  0B90  00A2               	movwf	?___flmul+2
  8569  0B91  3000               	movlw	0
  8570  0B92  00A1               	movwf	?___flmul+1
  8571  0B93  3000               	movlw	0
  8572  0B94  00A0               	movwf	?___flmul
  8573  0B95  2D84               	goto	l748
  8574  0B96                     l3318:
  8575  0B96  0820               	movf	___flmul@b,w
  8576  0B97  00F9               	movwf	??___flmul
  8577  0B98  0879               	movf	??___flmul,w
  8578  0B99  00F0               	movwf	__Umul8_16@multiplicand
  8579  0B9A  0826               	movf	___flmul@a+2,w
  8580  0B9B  319F  27B4  318B   	fcall	__Umul8_16
  8581  0B9E  0871               	movf	?__Umul8_16+1,w
  8582  0B9F  0020               	movlb	0	; select bank0
  8583  0BA0  00B4               	movwf	___flmul@temp+1
  8584  0BA1  0870               	movf	?__Umul8_16,w
  8585  0BA2  00B3               	movwf	___flmul@temp
  8586  0BA3                     l3320:
  8587  0BA3  0833               	movf	___flmul@temp,w
  8588  0BA4  00F9               	movwf	??___flmul
  8589  0BA5  01FA               	clrf	??___flmul+1
  8590  0BA6  01FB               	clrf	??___flmul+2
  8591  0BA7  01FC               	clrf	??___flmul+3
  8592  0BA8  087C               	movf	??___flmul+3,w
  8593  0BA9  00AC               	movwf	___flmul@grs+3
  8594  0BAA  087B               	movf	??___flmul+2,w
  8595  0BAB  00AB               	movwf	___flmul@grs+2
  8596  0BAC  087A               	movf	??___flmul+1,w
  8597  0BAD  00AA               	movwf	___flmul@grs+1
  8598  0BAE  0879               	movf	??___flmul,w
  8599  0BAF  00A9               	movwf	___flmul@grs
  8600  0BB0                     l3322:
  8601  0BB0  0834               	movf	___flmul@temp+1,w
  8602  0BB1  00F9               	movwf	??___flmul
  8603  0BB2  01FA               	clrf	??___flmul+1
  8604  0BB3  01FB               	clrf	??___flmul+2
  8605  0BB4  01FC               	clrf	??___flmul+3
  8606  0BB5  087C               	movf	??___flmul+3,w
  8607  0BB6  00B2               	movwf	___flmul@prod+3
  8608  0BB7  087B               	movf	??___flmul+2,w
  8609  0BB8  00B1               	movwf	___flmul@prod+2
  8610  0BB9  087A               	movf	??___flmul+1,w
  8611  0BBA  00B0               	movwf	___flmul@prod+1
  8612  0BBB  0879               	movf	??___flmul,w
  8613  0BBC  00AF               	movwf	___flmul@prod
  8614  0BBD  0821               	movf	___flmul@b+1,w
  8615  0BBE  00F9               	movwf	??___flmul
  8616  0BBF  0879               	movf	??___flmul,w
  8617  0BC0  00F0               	movwf	__Umul8_16@multiplicand
  8618  0BC1  0825               	movf	___flmul@a+1,w
  8619  0BC2  319F  27B4  318B   	fcall	__Umul8_16
  8620  0BC5  0871               	movf	?__Umul8_16+1,w
  8621  0BC6  0020               	movlb	0	; select bank0
  8622  0BC7  00B4               	movwf	___flmul@temp+1
  8623  0BC8  0870               	movf	?__Umul8_16,w
  8624  0BC9  00B3               	movwf	___flmul@temp
  8625  0BCA                     l3324:
  8626  0BCA  0833               	movf	___flmul@temp,w
  8627  0BCB  00F9               	movwf	??___flmul
  8628  0BCC  01FA               	clrf	??___flmul+1
  8629  0BCD  01FB               	clrf	??___flmul+2
  8630  0BCE  01FC               	clrf	??___flmul+3
  8631  0BCF  0879               	movf	??___flmul,w
  8632  0BD0  07A9               	addwf	___flmul@grs,f
  8633  0BD1  087A               	movf	??___flmul+1,w
  8634  0BD2  3DAA               	addwfc	___flmul@grs+1,f
  8635  0BD3  087B               	movf	??___flmul+2,w
  8636  0BD4  3DAB               	addwfc	___flmul@grs+2,f
  8637  0BD5  087C               	movf	??___flmul+3,w
  8638  0BD6  3DAC               	addwfc	___flmul@grs+3,f
  8639  0BD7                     l3326:
  8640  0BD7  0834               	movf	___flmul@temp+1,w
  8641  0BD8  00F9               	movwf	??___flmul
  8642  0BD9  01FA               	clrf	??___flmul+1
  8643  0BDA  01FB               	clrf	??___flmul+2
  8644  0BDB  01FC               	clrf	??___flmul+3
  8645  0BDC  0879               	movf	??___flmul,w
  8646  0BDD  07AF               	addwf	___flmul@prod,f
  8647  0BDE  087A               	movf	??___flmul+1,w
  8648  0BDF  3DB0               	addwfc	___flmul@prod+1,f
  8649  0BE0  087B               	movf	??___flmul+2,w
  8650  0BE1  3DB1               	addwfc	___flmul@prod+2,f
  8651  0BE2  087C               	movf	??___flmul+3,w
  8652  0BE3  3DB2               	addwfc	___flmul@prod+3,f
  8653  0BE4  0822               	movf	___flmul@b+2,w
  8654  0BE5  00F9               	movwf	??___flmul
  8655  0BE6  0879               	movf	??___flmul,w
  8656  0BE7  00F0               	movwf	__Umul8_16@multiplicand
  8657  0BE8  0824               	movf	___flmul@a,w
  8658  0BE9  319F  27B4  318B   	fcall	__Umul8_16
  8659  0BEC  0871               	movf	?__Umul8_16+1,w
  8660  0BED  0020               	movlb	0	; select bank0
  8661  0BEE  00B4               	movwf	___flmul@temp+1
  8662  0BEF  0870               	movf	?__Umul8_16,w
  8663  0BF0  00B3               	movwf	___flmul@temp
  8664  0BF1                     l3328:
  8665  0BF1  0833               	movf	___flmul@temp,w
  8666  0BF2  00F9               	movwf	??___flmul
  8667  0BF3  01FA               	clrf	??___flmul+1
  8668  0BF4  01FB               	clrf	??___flmul+2
  8669  0BF5  01FC               	clrf	??___flmul+3
  8670  0BF6  0879               	movf	??___flmul,w
  8671  0BF7  07A9               	addwf	___flmul@grs,f
  8672  0BF8  087A               	movf	??___flmul+1,w
  8673  0BF9  3DAA               	addwfc	___flmul@grs+1,f
  8674  0BFA  087B               	movf	??___flmul+2,w
  8675  0BFB  3DAB               	addwfc	___flmul@grs+2,f
  8676  0BFC  087C               	movf	??___flmul+3,w
  8677  0BFD  3DAC               	addwfc	___flmul@grs+3,f
  8678  0BFE                     l3330:
  8679  0BFE  0834               	movf	___flmul@temp+1,w
  8680  0BFF  00F9               	movwf	??___flmul
  8681  0C00  01FA               	clrf	??___flmul+1
  8682  0C01  01FB               	clrf	??___flmul+2
  8683  0C02  01FC               	clrf	??___flmul+3
  8684  0C03  0879               	movf	??___flmul,w
  8685  0C04  07AF               	addwf	___flmul@prod,f
  8686  0C05  087A               	movf	??___flmul+1,w
  8687  0C06  3DB0               	addwfc	___flmul@prod+1,f
  8688  0C07  087B               	movf	??___flmul+2,w
  8689  0C08  3DB1               	addwfc	___flmul@prod+2,f
  8690  0C09  087C               	movf	??___flmul+3,w
  8691  0C0A  3DB2               	addwfc	___flmul@prod+3,f
  8692  0C0B                     l3332:
  8693  0C0B  3008               	movlw	8
  8694  0C0C                     u4135:
  8695  0C0C  35A9               	lslf	___flmul@grs,f
  8696  0C0D  0DAA               	rlf	___flmul@grs+1,f
  8697  0C0E  0DAB               	rlf	___flmul@grs+2,f
  8698  0C0F  0DAC               	rlf	___flmul@grs+3,f
  8699  0C10  0B89               	decfsz	9,f
  8700  0C11  2C0C               	goto	u4135
  8701  0C12                     l3334:
  8702  0C12  0821               	movf	___flmul@b+1,w
  8703  0C13  00F9               	movwf	??___flmul
  8704  0C14  0879               	movf	??___flmul,w
  8705  0C15  00F0               	movwf	__Umul8_16@multiplicand
  8706  0C16  0824               	movf	___flmul@a,w
  8707  0C17  319F  27B4  318B   	fcall	__Umul8_16
  8708  0C1A  0871               	movf	?__Umul8_16+1,w
  8709  0C1B  0020               	movlb	0	; select bank0
  8710  0C1C  00B4               	movwf	___flmul@temp+1
  8711  0C1D  0870               	movf	?__Umul8_16,w
  8712  0C1E  00B3               	movwf	___flmul@temp
  8713  0C1F                     l3336:
  8714  0C1F  0833               	movf	___flmul@temp,w
  8715  0C20  07A9               	addwf	___flmul@grs,f
  8716  0C21  0834               	movf	___flmul@temp+1,w
  8717  0C22  3DAA               	addwfc	___flmul@grs+1,f
  8718  0C23  3000               	movlw	0
  8719  0C24  3DAB               	addwfc	___flmul@grs+2,f
  8720  0C25  3DAC               	addwfc	___flmul@grs+3,f
  8721  0C26                     l3338:
  8722  0C26  0820               	movf	___flmul@b,w
  8723  0C27  00F9               	movwf	??___flmul
  8724  0C28  0879               	movf	??___flmul,w
  8725  0C29  00F0               	movwf	__Umul8_16@multiplicand
  8726  0C2A  0825               	movf	___flmul@a+1,w
  8727  0C2B  319F  27B4  318B   	fcall	__Umul8_16
  8728  0C2E  0871               	movf	?__Umul8_16+1,w
  8729  0C2F  0020               	movlb	0	; select bank0
  8730  0C30  00B4               	movwf	___flmul@temp+1
  8731  0C31  0870               	movf	?__Umul8_16,w
  8732  0C32  00B3               	movwf	___flmul@temp
  8733  0C33                     l3340:
  8734  0C33  0833               	movf	___flmul@temp,w
  8735  0C34  07A9               	addwf	___flmul@grs,f
  8736  0C35  0834               	movf	___flmul@temp+1,w
  8737  0C36  3DAA               	addwfc	___flmul@grs+1,f
  8738  0C37  3000               	movlw	0
  8739  0C38  3DAB               	addwfc	___flmul@grs+2,f
  8740  0C39  3DAC               	addwfc	___flmul@grs+3,f
  8741  0C3A                     l3342:
  8742  0C3A  3008               	movlw	8
  8743  0C3B                     u4145:
  8744  0C3B  35A9               	lslf	___flmul@grs,f
  8745  0C3C  0DAA               	rlf	___flmul@grs+1,f
  8746  0C3D  0DAB               	rlf	___flmul@grs+2,f
  8747  0C3E  0DAC               	rlf	___flmul@grs+3,f
  8748  0C3F  0B89               	decfsz	9,f
  8749  0C40  2C3B               	goto	u4145
  8750  0C41  0820               	movf	___flmul@b,w
  8751  0C42  00F9               	movwf	??___flmul
  8752  0C43  0879               	movf	??___flmul,w
  8753  0C44  00F0               	movwf	__Umul8_16@multiplicand
  8754  0C45  0824               	movf	___flmul@a,w
  8755  0C46  319F  27B4  318B   	fcall	__Umul8_16
  8756  0C49  0871               	movf	?__Umul8_16+1,w
  8757  0C4A  0020               	movlb	0	; select bank0
  8758  0C4B  00B4               	movwf	___flmul@temp+1
  8759  0C4C  0870               	movf	?__Umul8_16,w
  8760  0C4D  00B3               	movwf	___flmul@temp
  8761  0C4E                     l3344:
  8762  0C4E  0833               	movf	___flmul@temp,w
  8763  0C4F  07A9               	addwf	___flmul@grs,f
  8764  0C50  0834               	movf	___flmul@temp+1,w
  8765  0C51  3DAA               	addwfc	___flmul@grs+1,f
  8766  0C52  3000               	movlw	0
  8767  0C53  3DAB               	addwfc	___flmul@grs+2,f
  8768  0C54  3DAC               	addwfc	___flmul@grs+3,f
  8769  0C55                     l3346:
  8770  0C55  0821               	movf	___flmul@b+1,w
  8771  0C56  00F9               	movwf	??___flmul
  8772  0C57  0879               	movf	??___flmul,w
  8773  0C58  00F0               	movwf	__Umul8_16@multiplicand
  8774  0C59  0826               	movf	___flmul@a+2,w
  8775  0C5A  319F  27B4  318B   	fcall	__Umul8_16
  8776  0C5D  0871               	movf	?__Umul8_16+1,w
  8777  0C5E  0020               	movlb	0	; select bank0
  8778  0C5F  00B4               	movwf	___flmul@temp+1
  8779  0C60  0870               	movf	?__Umul8_16,w
  8780  0C61  00B3               	movwf	___flmul@temp
  8781  0C62  0833               	movf	___flmul@temp,w
  8782  0C63  07AF               	addwf	___flmul@prod,f
  8783  0C64  0834               	movf	___flmul@temp+1,w
  8784  0C65  3DB0               	addwfc	___flmul@prod+1,f
  8785  0C66  3000               	movlw	0
  8786  0C67  3DB1               	addwfc	___flmul@prod+2,f
  8787  0C68  3DB2               	addwfc	___flmul@prod+3,f
  8788  0C69                     l3348:
  8789  0C69  0822               	movf	___flmul@b+2,w
  8790  0C6A  00F9               	movwf	??___flmul
  8791  0C6B  0879               	movf	??___flmul,w
  8792  0C6C  00F0               	movwf	__Umul8_16@multiplicand
  8793  0C6D  0825               	movf	___flmul@a+1,w
  8794  0C6E  319F  27B4  318B   	fcall	__Umul8_16
  8795  0C71  0871               	movf	?__Umul8_16+1,w
  8796  0C72  0020               	movlb	0	; select bank0
  8797  0C73  00B4               	movwf	___flmul@temp+1
  8798  0C74  0870               	movf	?__Umul8_16,w
  8799  0C75  00B3               	movwf	___flmul@temp
  8800  0C76                     l3350:
  8801  0C76  0833               	movf	___flmul@temp,w
  8802  0C77  07AF               	addwf	___flmul@prod,f
  8803  0C78  0834               	movf	___flmul@temp+1,w
  8804  0C79  3DB0               	addwfc	___flmul@prod+1,f
  8805  0C7A  3000               	movlw	0
  8806  0C7B  3DB1               	addwfc	___flmul@prod+2,f
  8807  0C7C  3DB2               	addwfc	___flmul@prod+3,f
  8808  0C7D  0822               	movf	___flmul@b+2,w
  8809  0C7E  00F9               	movwf	??___flmul
  8810  0C7F  0879               	movf	??___flmul,w
  8811  0C80  00F0               	movwf	__Umul8_16@multiplicand
  8812  0C81  0826               	movf	___flmul@a+2,w
  8813  0C82  319F  27B4  318B   	fcall	__Umul8_16
  8814  0C85  0871               	movf	?__Umul8_16+1,w
  8815  0C86  0020               	movlb	0	; select bank0
  8816  0C87  00B4               	movwf	___flmul@temp+1
  8817  0C88  0870               	movf	?__Umul8_16,w
  8818  0C89  00B3               	movwf	___flmul@temp
  8819  0C8A                     l3352:
  8820  0C8A  0833               	movf	___flmul@temp,w
  8821  0C8B  00F9               	movwf	??___flmul
  8822  0C8C  0834               	movf	___flmul@temp+1,w
  8823  0C8D  00FA               	movwf	??___flmul+1
  8824  0C8E  01FB               	clrf	??___flmul+2
  8825  0C8F  01FC               	clrf	??___flmul+3
  8826  0C90  3008               	movlw	8
  8827  0C91                     u4155:
  8828  0C91  35F9               	lslf	??___flmul,f
  8829  0C92  0DFA               	rlf	??___flmul+1,f
  8830  0C93  0DFB               	rlf	??___flmul+2,f
  8831  0C94  0DFC               	rlf	??___flmul+3,f
  8832  0C95                     u4150:
  8833  0C95  0B89               	decfsz	9,f
  8834  0C96  2C91               	goto	u4155
  8835  0C97  0879               	movf	??___flmul,w
  8836  0C98  07AF               	addwf	___flmul@prod,f
  8837  0C99  087A               	movf	??___flmul+1,w
  8838  0C9A  3DB0               	addwfc	___flmul@prod+1,f
  8839  0C9B  087B               	movf	??___flmul+2,w
  8840  0C9C  3DB1               	addwfc	___flmul@prod+2,f
  8841  0C9D  087C               	movf	??___flmul+3,w
  8842  0C9E  3DB2               	addwfc	___flmul@prod+3,f
  8843  0C9F                     l3354:
  8844  0C9F  0829               	movf	___flmul@grs,w
  8845  0CA0  00F9               	movwf	??___flmul
  8846  0CA1  082A               	movf	___flmul@grs+1,w
  8847  0CA2  00FA               	movwf	??___flmul+1
  8848  0CA3  082B               	movf	___flmul@grs+2,w
  8849  0CA4  00FB               	movwf	??___flmul+2
  8850  0CA5  082C               	movf	___flmul@grs+3,w
  8851  0CA6  00FC               	movwf	??___flmul+3
  8852  0CA7  3018               	movlw	24
  8853  0CA8                     u4165:
  8854  0CA8  36FC               	lsrf	??___flmul+3,f
  8855  0CA9  0CFB               	rrf	??___flmul+2,f
  8856  0CAA  0CFA               	rrf	??___flmul+1,f
  8857  0CAB  0CF9               	rrf	??___flmul,f
  8858  0CAC                     u4160:
  8859  0CAC  0B89               	decfsz	9,f
  8860  0CAD  2CA8               	goto	u4165
  8861  0CAE  0879               	movf	??___flmul,w
  8862  0CAF  07AF               	addwf	___flmul@prod,f
  8863  0CB0  087A               	movf	??___flmul+1,w
  8864  0CB1  3DB0               	addwfc	___flmul@prod+1,f
  8865  0CB2  087B               	movf	??___flmul+2,w
  8866  0CB3  3DB1               	addwfc	___flmul@prod+2,f
  8867  0CB4  087C               	movf	??___flmul+3,w
  8868  0CB5  3DB2               	addwfc	___flmul@prod+3,f
  8869  0CB6                     l3356:
  8870  0CB6  3008               	movlw	8
  8871  0CB7                     u4175:
  8872  0CB7  35A9               	lslf	___flmul@grs,f
  8873  0CB8  0DAA               	rlf	___flmul@grs+1,f
  8874  0CB9  0DAB               	rlf	___flmul@grs+2,f
  8875  0CBA  0DAC               	rlf	___flmul@grs+3,f
  8876  0CBB  0B89               	decfsz	9,f
  8877  0CBC  2CB7               	goto	u4175
  8878  0CBD                     l3358:
  8879  0CBD  082E               	movf	___flmul@bexp,w
  8880  0CBE  072D               	addwf	___flmul@aexp,w
  8881  0CBF  00F9               	movwf	??___flmul
  8882  0CC0  01FA               	clrf	??___flmul+1
  8883  0CC1  0DFA               	rlf	??___flmul+1,f
  8884  0CC2  0879               	movf	??___flmul,w
  8885  0CC3  3E82               	addlw	130
  8886  0CC4  00B3               	movwf	___flmul@temp
  8887  0CC5  30FF               	movlw	255
  8888  0CC6  3D7A               	addwfc	??___flmul+1,w
  8889  0CC7  00B4               	movwf	___flmul@temp+1
  8890  0CC8  2CE0               	goto	l3370
  8891  0CC9                     l3360:
  8892  0CC9  3001               	movlw	1
  8893  0CCA                     u4185:
  8894  0CCA  35AF               	lslf	___flmul@prod,f
  8895  0CCB  0DB0               	rlf	___flmul@prod+1,f
  8896  0CCC  0DB1               	rlf	___flmul@prod+2,f
  8897  0CCD  0DB2               	rlf	___flmul@prod+3,f
  8898  0CCE  0B89               	decfsz	9,f
  8899  0CCF  2CCA               	goto	u4185
  8900  0CD0                     l3362:
  8901  0CD0  1FAC               	btfss	___flmul@grs+3,7
  8902  0CD1  2CD3               	goto	u4191
  8903  0CD2  2CD4               	goto	u4190
  8904  0CD3                     u4191:
  8905  0CD3  2CD5               	goto	l3366
  8906  0CD4                     u4190:
  8907  0CD4                     l3364:
  8908  0CD4  142F               	bsf	___flmul@prod,0
  8909  0CD5                     l3366:
  8910  0CD5  3001               	movlw	1
  8911  0CD6                     u4205:
  8912  0CD6  35A9               	lslf	___flmul@grs,f
  8913  0CD7  0DAA               	rlf	___flmul@grs+1,f
  8914  0CD8  0DAB               	rlf	___flmul@grs+2,f
  8915  0CD9  0DAC               	rlf	___flmul@grs+3,f
  8916  0CDA  0B89               	decfsz	9,f
  8917  0CDB  2CD6               	goto	u4205
  8918  0CDC                     l3368:
  8919  0CDC  30FF               	movlw	255
  8920  0CDD  07B3               	addwf	___flmul@temp,f
  8921  0CDE  30FF               	movlw	255
  8922  0CDF  3DB4               	addwfc	___flmul@temp+1,f
  8923  0CE0                     l3370:
  8924  0CE0  1FB1               	btfss	___flmul@prod+2,7
  8925  0CE1  2CE3               	goto	u4211
  8926  0CE2  2CE4               	goto	u4210
  8927  0CE3                     u4211:
  8928  0CE3  2CC9               	goto	l3360
  8929  0CE4                     u4210:
  8930  0CE4                     l3372:
  8931  0CE4  01AD               	clrf	___flmul@aexp
  8932  0CE5                     l3374:
  8933  0CE5  1FAC               	btfss	___flmul@grs+3,7
  8934  0CE6  2CE8               	goto	u4221
  8935  0CE7  2CE9               	goto	u4220
  8936  0CE8                     u4221:
  8937  0CE8  2D05               	goto	l3382
  8938  0CE9                     u4220:
  8939  0CE9                     l3376:
  8940  0CE9  30FF               	movlw	255
  8941  0CEA  0529               	andwf	___flmul@grs,w
  8942  0CEB  00F9               	movwf	??___flmul
  8943  0CEC  30FF               	movlw	255
  8944  0CED  052A               	andwf	___flmul@grs+1,w
  8945  0CEE  00FA               	movwf	??___flmul+1
  8946  0CEF  30FF               	movlw	255
  8947  0CF0  052B               	andwf	___flmul@grs+2,w
  8948  0CF1  00FB               	movwf	??___flmul+2
  8949  0CF2  307F               	movlw	127
  8950  0CF3  052C               	andwf	___flmul@grs+3,w
  8951  0CF4  00FC               	movwf	??___flmul+3
  8952  0CF5  087C               	movf	??___flmul+3,w
  8953  0CF6  047B               	iorwf	??___flmul+2,w
  8954  0CF7  047A               	iorwf	??___flmul+1,w
  8955  0CF8  0479               	iorwf	??___flmul,w
  8956  0CF9  1903               	skipnz
  8957  0CFA  2CFC               	goto	u4231
  8958  0CFB  2CFD               	goto	u4230
  8959  0CFC                     u4231:
  8960  0CFC  2D00               	goto	l754
  8961  0CFD                     u4230:
  8962  0CFD                     l3378:
  8963  0CFD  01AD               	clrf	___flmul@aexp
  8964  0CFE  0AAD               	incf	___flmul@aexp,f
  8965  0CFF  2D05               	goto	l3382
  8966  0D00                     l754:
  8967  0D00  1C2F               	btfss	___flmul@prod,0
  8968  0D01  2D03               	goto	u4241
  8969  0D02  2D04               	goto	u4240
  8970  0D03                     u4241:
  8971  0D03  2D05               	goto	l3382
  8972  0D04                     u4240:
  8973  0D04  2CFD               	goto	l3378
  8974  0D05                     l3382:
  8975  0D05  082D               	movf	___flmul@aexp,w
  8976  0D06  1903               	btfsc	3,2
  8977  0D07  2D09               	goto	u4251
  8978  0D08  2D0A               	goto	u4250
  8979  0D09                     u4251:
  8980  0D09  2D32               	goto	l3392
  8981  0D0A                     u4250:
  8982  0D0A                     l3384:
  8983  0D0A  3001               	movlw	1
  8984  0D0B  07AF               	addwf	___flmul@prod,f
  8985  0D0C  3000               	movlw	0
  8986  0D0D  3DB0               	addwfc	___flmul@prod+1,f
  8987  0D0E  3000               	movlw	0
  8988  0D0F  3DB1               	addwfc	___flmul@prod+2,f
  8989  0D10  3000               	movlw	0
  8990  0D11  3DB2               	addwfc	___flmul@prod+3,f
  8991  0D12                     l3386:
  8992  0D12  1C32               	btfss	___flmul@prod+3,0
  8993  0D13  2D15               	goto	u4261
  8994  0D14  2D16               	goto	u4260
  8995  0D15                     u4261:
  8996  0D15  2D32               	goto	l3392
  8997  0D16                     u4260:
  8998  0D16                     l3388:
  8999  0D16  082F               	movf	___flmul@prod,w
  9000  0D17  00F9               	movwf	??___flmul
  9001  0D18  0830               	movf	___flmul@prod+1,w
  9002  0D19  00FA               	movwf	??___flmul+1
  9003  0D1A  0831               	movf	___flmul@prod+2,w
  9004  0D1B  00FB               	movwf	??___flmul+2
  9005  0D1C  0832               	movf	___flmul@prod+3,w
  9006  0D1D  00FC               	movwf	??___flmul+3
  9007  0D1E  3001               	movlw	1
  9008  0D1F  00FD               	movwf	??___flmul+4
  9009  0D20                     u4275:
  9010  0D20  37FC               	asrf	??___flmul+3,f
  9011  0D21  0CFB               	rrf	??___flmul+2,f
  9012  0D22  0CFA               	rrf	??___flmul+1,f
  9013  0D23  0CF9               	rrf	??___flmul,f
  9014  0D24                     u4270:
  9015  0D24  0BFD               	decfsz	??___flmul+4,f
  9016  0D25  2D20               	goto	u4275
  9017  0D26  087C               	movf	??___flmul+3,w
  9018  0D27  00B2               	movwf	___flmul@prod+3
  9019  0D28  087B               	movf	??___flmul+2,w
  9020  0D29  00B1               	movwf	___flmul@prod+2
  9021  0D2A  087A               	movf	??___flmul+1,w
  9022  0D2B  00B0               	movwf	___flmul@prod+1
  9023  0D2C  0879               	movf	??___flmul,w
  9024  0D2D  00AF               	movwf	___flmul@prod
  9025  0D2E                     l3390:
  9026  0D2E  3001               	movlw	1
  9027  0D2F  07B3               	addwf	___flmul@temp,f
  9028  0D30  3000               	movlw	0
  9029  0D31  3DB4               	addwfc	___flmul@temp+1,f
  9030  0D32                     l3392:
  9031  0D32  0834               	movf	___flmul@temp+1,w
  9032  0D33  3A80               	xorlw	128
  9033  0D34  00F9               	movwf	??___flmul
  9034  0D35  3080               	movlw	128
  9035  0D36  0279               	subwf	??___flmul,w
  9036  0D37  1D03               	skipz
  9037  0D38  2D3B               	goto	u4285
  9038  0D39  30FF               	movlw	255
  9039  0D3A  0233               	subwf	___flmul@temp,w
  9040  0D3B                     u4285:
  9041  0D3B  1C03               	skipc
  9042  0D3C  2D3E               	goto	u4281
  9043  0D3D  2D3F               	goto	u4280
  9044  0D3E                     u4281:
  9045  0D3E  2D49               	goto	l3396
  9046  0D3F                     u4280:
  9047  0D3F                     l3394:
  9048  0D3F  307F               	movlw	127
  9049  0D40  0020               	movlb	0	; select bank0
  9050  0D41  00B2               	movwf	___flmul@prod+3
  9051  0D42  3080               	movlw	128
  9052  0D43  00B1               	movwf	___flmul@prod+2
  9053  0D44  3000               	movlw	0
  9054  0D45  00B0               	movwf	___flmul@prod+1
  9055  0D46  3000               	movlw	0
  9056  0D47  00AF               	movwf	___flmul@prod
  9057  0D48  2D78               	goto	l760
  9058  0D49                     l3396:
  9059  0D49  0020               	movlb	0	; select bank0
  9060  0D4A  0834               	movf	___flmul@temp+1,w
  9061  0D4B  3A80               	xorlw	128
  9062  0D4C  00F9               	movwf	??___flmul
  9063  0D4D  3080               	movlw	128
  9064  0D4E  0279               	subwf	??___flmul,w
  9065  0D4F  1D03               	skipz
  9066  0D50  2D53               	goto	u4295
  9067  0D51  3001               	movlw	1
  9068  0D52  0233               	subwf	___flmul@temp,w
  9069  0D53                     u4295:
  9070  0D53  1803               	skipnc
  9071  0D54  2D56               	goto	u4291
  9072  0D55  2D57               	goto	u4290
  9073  0D56                     u4291:
  9074  0D56  2D62               	goto	l3402
  9075  0D57                     u4290:
  9076  0D57                     l3398:
  9077  0D57  3000               	movlw	0
  9078  0D58  0020               	movlb	0	; select bank0
  9079  0D59  00B2               	movwf	___flmul@prod+3
  9080  0D5A  3000               	movlw	0
  9081  0D5B  00B1               	movwf	___flmul@prod+2
  9082  0D5C  3000               	movlw	0
  9083  0D5D  00B0               	movwf	___flmul@prod+1
  9084  0D5E  3000               	movlw	0
  9085  0D5F  00AF               	movwf	___flmul@prod
  9086  0D60                     l3400:
  9087  0D60  01A8               	clrf	___flmul@sign
  9088  0D61  2D78               	goto	l760
  9089  0D62                     l3402:
  9090  0D62  0020               	movlb	0	; select bank0
  9091  0D63  0833               	movf	___flmul@temp,w
  9092  0D64  00F9               	movwf	??___flmul
  9093  0D65  0879               	movf	??___flmul,w
  9094  0D66  00AE               	movwf	___flmul@bexp
  9095  0D67  30FF               	movlw	255
  9096  0D68  05AF               	andwf	___flmul@prod,f
  9097  0D69  30FF               	movlw	255
  9098  0D6A  05B0               	andwf	___flmul@prod+1,f
  9099  0D6B  307F               	movlw	127
  9100  0D6C  05B1               	andwf	___flmul@prod+2,f
  9101  0D6D  3000               	movlw	0
  9102  0D6E  05B2               	andwf	___flmul@prod+3,f
  9103  0D6F                     l3404:
  9104  0D6F  1C2E               	btfss	___flmul@bexp,0
  9105  0D70  2D72               	goto	u4301
  9106  0D71  2D73               	goto	u4300
  9107  0D72                     u4301:
  9108  0D72  2D74               	goto	l3408
  9109  0D73                     u4300:
  9110  0D73                     l3406:
  9111  0D73  17B1               	bsf	___flmul@prod+2,7
  9112  0D74                     l3408:
  9113  0D74  362E               	lsrf	___flmul@bexp,w
  9114  0D75  00F9               	movwf	??___flmul
  9115  0D76  0879               	movf	??___flmul,w
  9116  0D77  00B2               	movwf	___flmul@prod+3
  9117  0D78                     l760:
  9118  0D78  0828               	movf	___flmul@sign,w
  9119  0D79  00F9               	movwf	??___flmul
  9120  0D7A  0879               	movf	??___flmul,w
  9121  0D7B  04B2               	iorwf	___flmul@prod+3,f
  9122  0D7C                     l3410:
  9123  0D7C  0832               	movf	___flmul@prod+3,w
  9124  0D7D  00A3               	movwf	?___flmul+3
  9125  0D7E  0831               	movf	___flmul@prod+2,w
  9126  0D7F  00A2               	movwf	?___flmul+2
  9127  0D80  0830               	movf	___flmul@prod+1,w
  9128  0D81  00A1               	movwf	?___flmul+1
  9129  0D82  082F               	movf	___flmul@prod,w
  9130  0D83  00A0               	movwf	?___flmul
  9131  0D84                     l748:
  9132  0D84  0008               	return
  9133  0D85                     __end_of___flmul:
  9134                           
  9135                           	psect	text21
  9136  1FB4                     __ptext21:	
  9137 ;; *************** function __Umul8_16 *****************
  9138 ;; Defined at:
  9139 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul8_16.c"
  9140 ;; Parameters:    Size  Location     Type
  9141 ;;  multiplier      1    wreg     unsigned char 
  9142 ;;  multiplicand    1    0[COMMON] unsigned char 
  9143 ;; Auto vars:     Size  Location     Type
  9144 ;;  multiplier      1    8[COMMON] unsigned char 
  9145 ;;  word_mpld       2    6[COMMON] unsigned int 
  9146 ;;  product         2    4[COMMON] unsigned int 
  9147 ;; Return value:  Size  Location     Type
  9148 ;;                  2    0[COMMON] unsigned int 
  9149 ;; Registers used:
  9150 ;;		wreg, status,2, status,0
  9151 ;; Tracked objects:
  9152 ;;		On entry : 0/0
  9153 ;;		On exit  : 0/0
  9154 ;;		Unchanged: 0/0
  9155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9156 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9157 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9158 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9159 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9160 ;;Total ram usage:        9 bytes
  9161 ;; Hardware stack levels used: 1
  9162 ;; This function calls:
  9163 ;;		Nothing
  9164 ;; This function is called by:
  9165 ;;		___flmul
  9166 ;; This function uses a non-reentrant model
  9167 ;;
  9168                           
  9169  1FB4                     __Umul8_16:	
  9170                           ;psect for function __Umul8_16
  9171                           
  9172                           
  9173                           ;incstack = 0
  9174                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9175                           ;__Umul8_16@multiplier stored from wreg
  9176  1FB4  00F8               	movwf	__Umul8_16@multiplier
  9177  1FB5                     l2920:
  9178  1FB5  01F4               	clrf	__Umul8_16@product
  9179  1FB6  01F5               	clrf	__Umul8_16@product+1
  9180  1FB7                     l2922:
  9181  1FB7  0870               	movf	__Umul8_16@multiplicand,w
  9182  1FB8  00F2               	movwf	??__Umul8_16
  9183  1FB9  01F3               	clrf	??__Umul8_16+1
  9184  1FBA  0872               	movf	??__Umul8_16,w
  9185  1FBB  00F6               	movwf	__Umul8_16@word_mpld
  9186  1FBC  0873               	movf	??__Umul8_16+1,w
  9187  1FBD  00F7               	movwf	__Umul8_16@word_mpld+1
  9188  1FBE                     l2924:
  9189  1FBE  1C78               	btfss	__Umul8_16@multiplier,0
  9190  1FBF  2FC1               	goto	u3271
  9191  1FC0  2FC2               	goto	u3270
  9192  1FC1                     u3271:
  9193  1FC1  2FC6               	goto	l767
  9194  1FC2                     u3270:
  9195  1FC2                     l2926:
  9196  1FC2  0876               	movf	__Umul8_16@word_mpld,w
  9197  1FC3  07F4               	addwf	__Umul8_16@product,f
  9198  1FC4  0877               	movf	__Umul8_16@word_mpld+1,w
  9199  1FC5  3DF5               	addwfc	__Umul8_16@product+1,f
  9200  1FC6                     l767:
  9201  1FC6  3001               	movlw	1
  9202  1FC7                     u3285:
  9203  1FC7  35F6               	lslf	__Umul8_16@word_mpld,f
  9204  1FC8  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9205  1FC9  0B89               	decfsz	9,f
  9206  1FCA  2FC7               	goto	u3285
  9207  1FCB  1003               	clrc
  9208  1FCC  0CF8               	rrf	__Umul8_16@multiplier,f
  9209  1FCD                     l2928:
  9210  1FCD  0878               	movf	__Umul8_16@multiplier,w
  9211  1FCE  1D03               	btfss	3,2
  9212  1FCF  2FD1               	goto	u3291
  9213  1FD0  2FD2               	goto	u3290
  9214  1FD1                     u3291:
  9215  1FD1  2FBE               	goto	l2924
  9216  1FD2                     u3290:
  9217  1FD2                     l2930:
  9218  1FD2  0875               	movf	__Umul8_16@product+1,w
  9219  1FD3  00F1               	movwf	?__Umul8_16+1
  9220  1FD4  0874               	movf	__Umul8_16@product,w
  9221  1FD5  00F0               	movwf	?__Umul8_16
  9222  1FD6                     l769:
  9223  1FD6  0008               	return
  9224  1FD7                     __end_of__Umul8_16:
  9225                           
  9226                           	psect	text22
  9227  1448                     __ptext22:	
  9228 ;; *************** function ___flge *****************
  9229 ;; Defined at:
  9230 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  9231 ;; Parameters:    Size  Location     Type
  9232 ;;  ff1             4   21[BANK0 ] unsigned int 
  9233 ;;  ff2             4   25[BANK0 ] unsigned int 
  9234 ;; Auto vars:     Size  Location     Type
  9235 ;;		None
  9236 ;; Return value:  Size  Location     Type
  9237 ;;		None               void
  9238 ;; Registers used:
  9239 ;;		wreg, status,2, status,0
  9240 ;; Tracked objects:
  9241 ;;		On entry : 0/0
  9242 ;;		On exit  : 0/0
  9243 ;;		Unchanged: 0/0
  9244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9245 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9247 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9248 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9249 ;;Total ram usage:       12 bytes
  9250 ;; Hardware stack levels used: 1
  9251 ;; This function calls:
  9252 ;;		Nothing
  9253 ;; This function is called by:
  9254 ;;		_efgtoa
  9255 ;; This function uses a non-reentrant model
  9256 ;;
  9257                           
  9258  1448                     ___flge:	
  9259                           ;psect for function ___flge
  9260                           
  9261  1448                     l3064:	
  9262                           ;incstack = 0
  9263                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9264                           
  9265  1448  3000               	movlw	0
  9266  1449  0020               	movlb	0	; select bank0
  9267  144A  0535               	andwf	___flge@ff1,w
  9268  144B  00BD               	movwf	??___flge
  9269  144C  3000               	movlw	0
  9270  144D  0536               	andwf	___flge@ff1+1,w
  9271  144E  00BE               	movwf	??___flge+1
  9272  144F  3080               	movlw	128
  9273  1450  0537               	andwf	___flge@ff1+2,w
  9274  1451  00BF               	movwf	??___flge+2
  9275  1452  307F               	movlw	127
  9276  1453  0538               	andwf	___flge@ff1+3,w
  9277  1454  00C0               	movwf	??___flge+3
  9278  1455  0840               	movf	??___flge+3,w
  9279  1456  043F               	iorwf	??___flge+2,w
  9280  1457  043E               	iorwf	??___flge+1,w
  9281  1458  043D               	iorwf	??___flge,w
  9282  1459  1D03               	skipz
  9283  145A  2C5C               	goto	u3601
  9284  145B  2C5D               	goto	u3600
  9285  145C                     u3601:
  9286  145C  2C65               	goto	l529
  9287  145D                     u3600:
  9288  145D                     l3066:
  9289  145D  3000               	movlw	0
  9290  145E  00B8               	movwf	___flge@ff1+3
  9291  145F  3000               	movlw	0
  9292  1460  00B7               	movwf	___flge@ff1+2
  9293  1461  3000               	movlw	0
  9294  1462  00B6               	movwf	___flge@ff1+1
  9295  1463  3000               	movlw	0
  9296  1464  00B5               	movwf	___flge@ff1
  9297  1465                     l529:
  9298  1465  3000               	movlw	0
  9299  1466  0539               	andwf	___flge@ff2,w
  9300  1467  00BD               	movwf	??___flge
  9301  1468  3000               	movlw	0
  9302  1469  053A               	andwf	___flge@ff2+1,w
  9303  146A  00BE               	movwf	??___flge+1
  9304  146B  3080               	movlw	128
  9305  146C  053B               	andwf	___flge@ff2+2,w
  9306  146D  00BF               	movwf	??___flge+2
  9307  146E  307F               	movlw	127
  9308  146F  053C               	andwf	___flge@ff2+3,w
  9309  1470  00C0               	movwf	??___flge+3
  9310  1471  0840               	movf	??___flge+3,w
  9311  1472  043F               	iorwf	??___flge+2,w
  9312  1473  043E               	iorwf	??___flge+1,w
  9313  1474  043D               	iorwf	??___flge,w
  9314  1475  1D03               	skipz
  9315  1476  2C78               	goto	u3611
  9316  1477  2C79               	goto	u3610
  9317  1478                     u3611:
  9318  1478  2C81               	goto	l3070
  9319  1479                     u3610:
  9320  1479                     l3068:
  9321  1479  3000               	movlw	0
  9322  147A  00BC               	movwf	___flge@ff2+3
  9323  147B  3000               	movlw	0
  9324  147C  00BB               	movwf	___flge@ff2+2
  9325  147D  3000               	movlw	0
  9326  147E  00BA               	movwf	___flge@ff2+1
  9327  147F  3000               	movlw	0
  9328  1480  00B9               	movwf	___flge@ff2
  9329  1481                     l3070:
  9330  1481  1FB8               	btfss	___flge@ff1+3,7
  9331  1482  2C84               	goto	u3621
  9332  1483  2C85               	goto	u3620
  9333  1484                     u3621:
  9334  1484  2C9D               	goto	l3074
  9335  1485                     u3620:
  9336  1485                     l3072:
  9337  1485  3000               	movlw	0
  9338  1486  00BD               	movwf	??___flge
  9339  1487  3000               	movlw	0
  9340  1488  00BE               	movwf	??___flge+1
  9341  1489  3000               	movlw	0
  9342  148A  00BF               	movwf	??___flge+2
  9343  148B  3080               	movlw	128
  9344  148C  00C0               	movwf	??___flge+3
  9345  148D  0835               	movf	___flge@ff1,w
  9346  148E  02BD               	subwf	??___flge,f
  9347  148F  0836               	movf	___flge@ff1+1,w
  9348  1490  3BBE               	subwfb	??___flge+1,f
  9349  1491  0837               	movf	___flge@ff1+2,w
  9350  1492  3BBF               	subwfb	??___flge+2,f
  9351  1493  0838               	movf	___flge@ff1+3,w
  9352  1494  3BC0               	subwfb	??___flge+3,f
  9353  1495  0840               	movf	??___flge+3,w
  9354  1496  00B8               	movwf	___flge@ff1+3
  9355  1497  083F               	movf	??___flge+2,w
  9356  1498  00B7               	movwf	___flge@ff1+2
  9357  1499  083E               	movf	??___flge+1,w
  9358  149A  00B6               	movwf	___flge@ff1+1
  9359  149B  083D               	movf	??___flge,w
  9360  149C  00B5               	movwf	___flge@ff1
  9361  149D                     l3074:
  9362  149D  1FBC               	btfss	___flge@ff2+3,7
  9363  149E  2CA0               	goto	u3631
  9364  149F  2CA1               	goto	u3630
  9365  14A0                     u3631:
  9366  14A0  2CB9               	goto	l532
  9367  14A1                     u3630:
  9368  14A1                     l3076:
  9369  14A1  3000               	movlw	0
  9370  14A2  00BD               	movwf	??___flge
  9371  14A3  3000               	movlw	0
  9372  14A4  00BE               	movwf	??___flge+1
  9373  14A5  3000               	movlw	0
  9374  14A6  00BF               	movwf	??___flge+2
  9375  14A7  3080               	movlw	128
  9376  14A8  00C0               	movwf	??___flge+3
  9377  14A9  0839               	movf	___flge@ff2,w
  9378  14AA  02BD               	subwf	??___flge,f
  9379  14AB  083A               	movf	___flge@ff2+1,w
  9380  14AC  3BBE               	subwfb	??___flge+1,f
  9381  14AD  083B               	movf	___flge@ff2+2,w
  9382  14AE  3BBF               	subwfb	??___flge+2,f
  9383  14AF  083C               	movf	___flge@ff2+3,w
  9384  14B0  3BC0               	subwfb	??___flge+3,f
  9385  14B1  0840               	movf	??___flge+3,w
  9386  14B2  00BC               	movwf	___flge@ff2+3
  9387  14B3  083F               	movf	??___flge+2,w
  9388  14B4  00BB               	movwf	___flge@ff2+2
  9389  14B5  083E               	movf	??___flge+1,w
  9390  14B6  00BA               	movwf	___flge@ff2+1
  9391  14B7  083D               	movf	??___flge,w
  9392  14B8  00B9               	movwf	___flge@ff2
  9393  14B9                     l532:
  9394  14B9  3080               	movlw	128
  9395  14BA  06B8               	xorwf	___flge@ff1+3,f
  9396  14BB  3080               	movlw	128
  9397  14BC  06BC               	xorwf	___flge@ff2+3,f
  9398  14BD  083C               	movf	___flge@ff2+3,w
  9399  14BE  0238               	subwf	___flge@ff1+3,w
  9400  14BF  1D03               	skipz
  9401  14C0  2CCB               	goto	u3645
  9402  14C1  083B               	movf	___flge@ff2+2,w
  9403  14C2  0237               	subwf	___flge@ff1+2,w
  9404  14C3  1D03               	skipz
  9405  14C4  2CCB               	goto	u3645
  9406  14C5  083A               	movf	___flge@ff2+1,w
  9407  14C6  0236               	subwf	___flge@ff1+1,w
  9408  14C7  1D03               	skipz
  9409  14C8  2CCB               	goto	u3645
  9410  14C9  0839               	movf	___flge@ff2,w
  9411  14CA  0235               	subwf	___flge@ff1,w
  9412  14CB                     u3645:
  9413  14CB  1803               	skipnc
  9414  14CC  2CCE               	goto	u3641
  9415  14CD  2CCF               	goto	u3640
  9416  14CE                     u3641:
  9417  14CE  2CD1               	goto	l3080
  9418  14CF                     u3640:
  9419  14CF                     l3078:
  9420  14CF  1003               	clrc
  9421  14D0  2CD2               	goto	l537
  9422  14D1                     l3080:
  9423  14D1  1403               	setc
  9424  14D2                     l537:
  9425  14D2  0008               	return
  9426  14D3                     __end_of___flge:
  9427                           
  9428                           	psect	text23
  9429  1103                     __ptext23:	
  9430 ;; *************** function ___fleq *****************
  9431 ;; Defined at:
  9432 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  9433 ;; Parameters:    Size  Location     Type
  9434 ;;  ff1             4    0[COMMON] unsigned int 
  9435 ;;  ff2             4    4[COMMON] unsigned int 
  9436 ;; Auto vars:     Size  Location     Type
  9437 ;;		None
  9438 ;; Return value:  Size  Location     Type
  9439 ;;		None               void
  9440 ;; Registers used:
  9441 ;;		wreg, status,2, status,0
  9442 ;; Tracked objects:
  9443 ;;		On entry : 0/0
  9444 ;;		On exit  : 0/0
  9445 ;;		Unchanged: 0/0
  9446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9447 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9449 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9450 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9451 ;;Total ram usage:       12 bytes
  9452 ;; Hardware stack levels used: 1
  9453 ;; This function calls:
  9454 ;;		Nothing
  9455 ;; This function is called by:
  9456 ;;		_efgtoa
  9457 ;; This function uses a non-reentrant model
  9458 ;;
  9459                           
  9460  1103                     ___fleq:	
  9461                           ;psect for function ___fleq
  9462                           
  9463  1103                     l3052:	
  9464                           ;incstack = 0
  9465                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9466                           
  9467  1103  3000               	movlw	0
  9468  1104  0570               	andwf	___fleq@ff1,w
  9469  1105  00F8               	movwf	??___fleq
  9470  1106  3000               	movlw	0
  9471  1107  0571               	andwf	___fleq@ff1+1,w
  9472  1108  00F9               	movwf	??___fleq+1
  9473  1109  3080               	movlw	128
  9474  110A  0572               	andwf	___fleq@ff1+2,w
  9475  110B  00FA               	movwf	??___fleq+2
  9476  110C  307F               	movlw	127
  9477  110D  0573               	andwf	___fleq@ff1+3,w
  9478  110E  00FB               	movwf	??___fleq+3
  9479  110F  087B               	movf	??___fleq+3,w
  9480  1110  047A               	iorwf	??___fleq+2,w
  9481  1111  0479               	iorwf	??___fleq+1,w
  9482  1112  0478               	iorwf	??___fleq,w
  9483  1113  1D03               	skipz
  9484  1114  2916               	goto	u3571
  9485  1115  2917               	goto	u3570
  9486  1116                     u3571:
  9487  1116  291F               	goto	l520
  9488  1117                     u3570:
  9489  1117                     l3054:
  9490  1117  3000               	movlw	0
  9491  1118  00F3               	movwf	___fleq@ff1+3
  9492  1119  3000               	movlw	0
  9493  111A  00F2               	movwf	___fleq@ff1+2
  9494  111B  3000               	movlw	0
  9495  111C  00F1               	movwf	___fleq@ff1+1
  9496  111D  3000               	movlw	0
  9497  111E  00F0               	movwf	___fleq@ff1
  9498  111F                     l520:
  9499  111F  3000               	movlw	0
  9500  1120  0574               	andwf	___fleq@ff2,w
  9501  1121  00F8               	movwf	??___fleq
  9502  1122  3000               	movlw	0
  9503  1123  0575               	andwf	___fleq@ff2+1,w
  9504  1124  00F9               	movwf	??___fleq+1
  9505  1125  3080               	movlw	128
  9506  1126  0576               	andwf	___fleq@ff2+2,w
  9507  1127  00FA               	movwf	??___fleq+2
  9508  1128  307F               	movlw	127
  9509  1129  0577               	andwf	___fleq@ff2+3,w
  9510  112A  00FB               	movwf	??___fleq+3
  9511  112B  087B               	movf	??___fleq+3,w
  9512  112C  047A               	iorwf	??___fleq+2,w
  9513  112D  0479               	iorwf	??___fleq+1,w
  9514  112E  0478               	iorwf	??___fleq,w
  9515  112F  1D03               	skipz
  9516  1130  2932               	goto	u3581
  9517  1131  2933               	goto	u3580
  9518  1132                     u3581:
  9519  1132  293B               	goto	l521
  9520  1133                     u3580:
  9521  1133                     l3056:
  9522  1133  3000               	movlw	0
  9523  1134  00F7               	movwf	___fleq@ff2+3
  9524  1135  3000               	movlw	0
  9525  1136  00F6               	movwf	___fleq@ff2+2
  9526  1137  3000               	movlw	0
  9527  1138  00F5               	movwf	___fleq@ff2+1
  9528  1139  3000               	movlw	0
  9529  113A  00F4               	movwf	___fleq@ff2
  9530  113B                     l521:
  9531  113B  0877               	movf	___fleq@ff2+3,w
  9532  113C  0673               	xorwf	___fleq@ff1+3,w
  9533  113D  1D03               	skipz
  9534  113E  2949               	goto	u3595
  9535  113F  0876               	movf	___fleq@ff2+2,w
  9536  1140  0672               	xorwf	___fleq@ff1+2,w
  9537  1141  1D03               	skipz
  9538  1142  2949               	goto	u3595
  9539  1143  0875               	movf	___fleq@ff2+1,w
  9540  1144  0671               	xorwf	___fleq@ff1+1,w
  9541  1145  1D03               	skipz
  9542  1146  2949               	goto	u3595
  9543  1147  0874               	movf	___fleq@ff2,w
  9544  1148  0670               	xorwf	___fleq@ff1,w
  9545  1149                     u3595:
  9546  1149  1903               	skipnz
  9547  114A  294C               	goto	u3591
  9548  114B  294D               	goto	u3590
  9549  114C                     u3591:
  9550  114C  294F               	goto	l3060
  9551  114D                     u3590:
  9552  114D                     l3058:
  9553  114D  1003               	clrc
  9554  114E  2950               	goto	l526
  9555  114F                     l3060:
  9556  114F  1403               	setc
  9557  1150                     l526:
  9558  1150  0008               	return
  9559  1151                     __end_of___fleq:
  9560                           
  9561                           	psect	text24
  9562  164C                     __ptext24:	
  9563 ;; *************** function ___fldiv *****************
  9564 ;; Defined at:
  9565 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  9566 ;; Parameters:    Size  Location     Type
  9567 ;;  a               4    0[COMMON] unsigned int 
  9568 ;;  b               4    4[COMMON] unsigned int 
  9569 ;; Auto vars:     Size  Location     Type
  9570 ;;  grs             4    7[BANK0 ] unsigned long 
  9571 ;;  rem             4    0[BANK0 ] unsigned long 
  9572 ;;  new_exp         2    5[BANK0 ] int 
  9573 ;;  aexp            1   12[BANK0 ] unsigned char 
  9574 ;;  bexp            1   11[BANK0 ] unsigned char 
  9575 ;;  sign            1    4[BANK0 ] unsigned char 
  9576 ;; Return value:  Size  Location     Type
  9577 ;;                  4    0[COMMON] unsigned char 
  9578 ;; Registers used:
  9579 ;;		wreg, status,2, status,0
  9580 ;; Tracked objects:
  9581 ;;		On entry : 0/0
  9582 ;;		On exit  : 0/0
  9583 ;;		Unchanged: 0/0
  9584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9585 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9586 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9587 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9588 ;;      Totals:        13      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9589 ;;Total ram usage:       26 bytes
  9590 ;; Hardware stack levels used: 1
  9591 ;; This function calls:
  9592 ;;		Nothing
  9593 ;; This function is called by:
  9594 ;;		_efgtoa
  9595 ;; This function uses a non-reentrant model
  9596 ;;
  9597                           
  9598  164C                     ___fldiv:	
  9599                           ;psect for function ___fldiv
  9600                           
  9601  164C                     l3134:	
  9602                           ;incstack = 0
  9603                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  9604                           
  9605  164C  0877               	movf	___fldiv@b+3,w
  9606  164D  3980               	andlw	128
  9607  164E  00F8               	movwf	??___fldiv
  9608  164F  0878               	movf	??___fldiv,w
  9609  1650  0020               	movlb	0	; select bank0
  9610  1651  00A4               	movwf	___fldiv@sign
  9611  1652                     l3136:
  9612  1652  3577               	lslf	___fldiv@b+3,w
  9613  1653  00F8               	movwf	??___fldiv
  9614  1654  0878               	movf	??___fldiv,w
  9615  1655  00AB               	movwf	___fldiv@bexp
  9616  1656                     l3138:
  9617  1656  1FF6               	btfss	___fldiv@b+2,7
  9618  1657  2E59               	goto	u3761
  9619  1658  2E5A               	goto	u3760
  9620  1659                     u3761:
  9621  1659  2E5B               	goto	l3142
  9622  165A                     u3760:
  9623  165A                     l3140:
  9624  165A  142B               	bsf	___fldiv@bexp,0
  9625  165B                     l3142:
  9626  165B  082B               	movf	___fldiv@bexp,w
  9627  165C  1903               	btfsc	3,2
  9628  165D  2E5F               	goto	u3771
  9629  165E  2E60               	goto	u3770
  9630  165F                     u3771:
  9631  165F  2E70               	goto	l3152
  9632  1660                     u3770:
  9633  1660                     l3144:
  9634  1660  0A2B               	incf	___fldiv@bexp,w
  9635  1661  1D03               	btfss	3,2
  9636  1662  2E64               	goto	u3781
  9637  1663  2E65               	goto	u3780
  9638  1664                     u3781:
  9639  1664  2E6D               	goto	l3148
  9640  1665                     u3780:
  9641  1665                     l3146:
  9642  1665  3000               	movlw	0
  9643  1666  00F7               	movwf	___fldiv@b+3
  9644  1667  3000               	movlw	0
  9645  1668  00F6               	movwf	___fldiv@b+2
  9646  1669  3000               	movlw	0
  9647  166A  00F5               	movwf	___fldiv@b+1
  9648  166B  3000               	movlw	0
  9649  166C  00F4               	movwf	___fldiv@b
  9650  166D                     l3148:
  9651  166D  17F6               	bsf	___fldiv@b+2,7
  9652  166E                     l3150:
  9653  166E  01F7               	clrf	___fldiv@b+3
  9654  166F  2E78               	goto	l3154
  9655  1670                     l3152:
  9656  1670  3000               	movlw	0
  9657  1671  00F7               	movwf	___fldiv@b+3
  9658  1672  3000               	movlw	0
  9659  1673  00F6               	movwf	___fldiv@b+2
  9660  1674  3000               	movlw	0
  9661  1675  00F5               	movwf	___fldiv@b+1
  9662  1676  3000               	movlw	0
  9663  1677  00F4               	movwf	___fldiv@b
  9664  1678                     l3154:
  9665  1678  0873               	movf	___fldiv@a+3,w
  9666  1679  3980               	andlw	128
  9667  167A  00F8               	movwf	??___fldiv
  9668  167B  0878               	movf	??___fldiv,w
  9669  167C  06A4               	xorwf	___fldiv@sign,f
  9670  167D                     l3156:
  9671  167D  3573               	lslf	___fldiv@a+3,w
  9672  167E  00F8               	movwf	??___fldiv
  9673  167F  0878               	movf	??___fldiv,w
  9674  1680  00AC               	movwf	___fldiv@aexp
  9675  1681                     l3158:
  9676  1681  1FF2               	btfss	___fldiv@a+2,7
  9677  1682  2E84               	goto	u3791
  9678  1683  2E85               	goto	u3790
  9679  1684                     u3791:
  9680  1684  2E86               	goto	l3162
  9681  1685                     u3790:
  9682  1685                     l3160:
  9683  1685  142C               	bsf	___fldiv@aexp,0
  9684  1686                     l3162:
  9685  1686  082C               	movf	___fldiv@aexp,w
  9686  1687  1903               	btfsc	3,2
  9687  1688  2E8A               	goto	u3801
  9688  1689  2E8B               	goto	u3800
  9689  168A                     u3801:
  9690  168A  2E9B               	goto	l3172
  9691  168B                     u3800:
  9692  168B                     l3164:
  9693  168B  0A2C               	incf	___fldiv@aexp,w
  9694  168C  1D03               	btfss	3,2
  9695  168D  2E8F               	goto	u3811
  9696  168E  2E90               	goto	u3810
  9697  168F                     u3811:
  9698  168F  2E98               	goto	l3168
  9699  1690                     u3810:
  9700  1690                     l3166:
  9701  1690  3000               	movlw	0
  9702  1691  00F3               	movwf	___fldiv@a+3
  9703  1692  3000               	movlw	0
  9704  1693  00F2               	movwf	___fldiv@a+2
  9705  1694  3000               	movlw	0
  9706  1695  00F1               	movwf	___fldiv@a+1
  9707  1696  3000               	movlw	0
  9708  1697  00F0               	movwf	___fldiv@a
  9709  1698                     l3168:
  9710  1698  17F2               	bsf	___fldiv@a+2,7
  9711  1699                     l3170:
  9712  1699  01F3               	clrf	___fldiv@a+3
  9713  169A  2EA3               	goto	l708
  9714  169B                     l3172:
  9715  169B  3000               	movlw	0
  9716  169C  00F3               	movwf	___fldiv@a+3
  9717  169D  3000               	movlw	0
  9718  169E  00F2               	movwf	___fldiv@a+2
  9719  169F  3000               	movlw	0
  9720  16A0  00F1               	movwf	___fldiv@a+1
  9721  16A1  3000               	movlw	0
  9722  16A2  00F0               	movwf	___fldiv@a
  9723  16A3                     l708:
  9724  16A3  0873               	movf	___fldiv@a+3,w
  9725  16A4  0472               	iorwf	___fldiv@a+2,w
  9726  16A5  0471               	iorwf	___fldiv@a+1,w
  9727  16A6  0470               	iorwf	___fldiv@a,w
  9728  16A7  1D03               	skipz
  9729  16A8  2EAA               	goto	u3821
  9730  16A9  2EAB               	goto	u3820
  9731  16AA                     u3821:
  9732  16AA  2EC4               	goto	l3182
  9733  16AB                     u3820:
  9734  16AB                     l3174:
  9735  16AB  3000               	movlw	0
  9736  16AC  00F7               	movwf	___fldiv@b+3
  9737  16AD  3000               	movlw	0
  9738  16AE  00F6               	movwf	___fldiv@b+2
  9739  16AF  3000               	movlw	0
  9740  16B0  00F5               	movwf	___fldiv@b+1
  9741  16B1  3000               	movlw	0
  9742  16B2  00F4               	movwf	___fldiv@b
  9743  16B3  3080               	movlw	128
  9744  16B4  04F6               	iorwf	___fldiv@b+2,f
  9745  16B5  307F               	movlw	127
  9746  16B6  04F7               	iorwf	___fldiv@b+3,f
  9747  16B7                     l3176:
  9748  16B7  0824               	movf	___fldiv@sign,w
  9749  16B8  00F8               	movwf	??___fldiv
  9750  16B9  0878               	movf	??___fldiv,w
  9751  16BA  04F7               	iorwf	___fldiv@b+3,f
  9752  16BB                     l3178:
  9753  16BB  0877               	movf	___fldiv@b+3,w
  9754  16BC  00F3               	movwf	?___fldiv+3
  9755  16BD  0876               	movf	___fldiv@b+2,w
  9756  16BE  00F2               	movwf	?___fldiv+2
  9757  16BF  0875               	movf	___fldiv@b+1,w
  9758  16C0  00F1               	movwf	?___fldiv+1
  9759  16C1  0874               	movf	___fldiv@b,w
  9760  16C2  00F0               	movwf	?___fldiv
  9761  16C3  2FFF               	goto	l710
  9762  16C4                     l3182:
  9763  16C4  082B               	movf	___fldiv@bexp,w
  9764  16C5  1D03               	btfss	3,2
  9765  16C6  2EC8               	goto	u3831
  9766  16C7  2EC9               	goto	u3830
  9767  16C8                     u3831:
  9768  16C8  2ED2               	goto	l3188
  9769  16C9                     u3830:
  9770  16C9                     l3184:
  9771  16C9  3000               	movlw	0
  9772  16CA  00F3               	movwf	?___fldiv+3
  9773  16CB  3000               	movlw	0
  9774  16CC  00F2               	movwf	?___fldiv+2
  9775  16CD  3000               	movlw	0
  9776  16CE  00F1               	movwf	?___fldiv+1
  9777  16CF  3000               	movlw	0
  9778  16D0  00F0               	movwf	?___fldiv
  9779  16D1  2FFF               	goto	l710
  9780  16D2                     l3188:
  9781  16D2  082B               	movf	___fldiv@bexp,w
  9782  16D3  00F8               	movwf	??___fldiv
  9783  16D4  01F9               	clrf	??___fldiv+1
  9784  16D5  0879               	movf	??___fldiv+1,w
  9785  16D6  00FB               	movwf	??___fldiv+3
  9786  16D7  082C               	movf	___fldiv@aexp,w
  9787  16D8  0278               	subwf	??___fldiv,w
  9788  16D9  00FA               	movwf	??___fldiv+2
  9789  16DA  1C03               	skipc
  9790  16DB  03FB               	decf	??___fldiv+3,f
  9791  16DC  087A               	movf	??___fldiv+2,w
  9792  16DD  3E7F               	addlw	127
  9793  16DE  00A5               	movwf	___fldiv@new_exp
  9794  16DF  3000               	movlw	0
  9795  16E0  3D7B               	addwfc	??___fldiv+3,w
  9796  16E1  00A6               	movwf	___fldiv@new_exp+1
  9797  16E2                     l3190:
  9798  16E2  0877               	movf	___fldiv@b+3,w
  9799  16E3  00A3               	movwf	___fldiv@rem+3
  9800  16E4  0876               	movf	___fldiv@b+2,w
  9801  16E5  00A2               	movwf	___fldiv@rem+2
  9802  16E6  0875               	movf	___fldiv@b+1,w
  9803  16E7  00A1               	movwf	___fldiv@rem+1
  9804  16E8  0874               	movf	___fldiv@b,w
  9805  16E9  00A0               	movwf	___fldiv@rem
  9806  16EA                     l3192:
  9807  16EA  3000               	movlw	0
  9808  16EB  00F7               	movwf	___fldiv@b+3
  9809  16EC  3000               	movlw	0
  9810  16ED  00F6               	movwf	___fldiv@b+2
  9811  16EE  3000               	movlw	0
  9812  16EF  00F5               	movwf	___fldiv@b+1
  9813  16F0  3000               	movlw	0
  9814  16F1  00F4               	movwf	___fldiv@b
  9815  16F2                     l3194:
  9816  16F2  3000               	movlw	0
  9817  16F3  00AA               	movwf	___fldiv@grs+3
  9818  16F4  3000               	movlw	0
  9819  16F5  00A9               	movwf	___fldiv@grs+2
  9820  16F6  3000               	movlw	0
  9821  16F7  00A8               	movwf	___fldiv@grs+1
  9822  16F8  3000               	movlw	0
  9823  16F9  00A7               	movwf	___fldiv@grs
  9824  16FA                     l3196:
  9825  16FA  01AC               	clrf	___fldiv@aexp
  9826  16FB  2F3A               	goto	l3216
  9827  16FC                     l3198:
  9828  16FC  082C               	movf	___fldiv@aexp,w
  9829  16FD  1903               	btfsc	3,2
  9830  16FE  2F00               	goto	u3841
  9831  16FF  2F01               	goto	u3840
  9832  1700                     u3841:
  9833  1700  2F1B               	goto	l3208
  9834  1701                     u3840:
  9835  1701                     l3200:
  9836  1701  3001               	movlw	1
  9837  1702                     u3855:
  9838  1702  35A0               	lslf	___fldiv@rem,f
  9839  1703  0DA1               	rlf	___fldiv@rem+1,f
  9840  1704  0DA2               	rlf	___fldiv@rem+2,f
  9841  1705  0DA3               	rlf	___fldiv@rem+3,f
  9842  1706  0B89               	decfsz	9,f
  9843  1707  2F02               	goto	u3855
  9844  1708  3001               	movlw	1
  9845  1709                     u3865:
  9846  1709  35F4               	lslf	___fldiv@b,f
  9847  170A  0DF5               	rlf	___fldiv@b+1,f
  9848  170B  0DF6               	rlf	___fldiv@b+2,f
  9849  170C  0DF7               	rlf	___fldiv@b+3,f
  9850  170D  0B89               	decfsz	9,f
  9851  170E  2F09               	goto	u3865
  9852  170F                     l3202:
  9853  170F  1FAA               	btfss	___fldiv@grs+3,7
  9854  1710  2F12               	goto	u3871
  9855  1711  2F13               	goto	u3870
  9856  1712                     u3871:
  9857  1712  2F14               	goto	l3206
  9858  1713                     u3870:
  9859  1713                     l3204:
  9860  1713  1474               	bsf	___fldiv@b,0
  9861  1714                     l3206:
  9862  1714  3001               	movlw	1
  9863  1715                     u3885:
  9864  1715  35A7               	lslf	___fldiv@grs,f
  9865  1716  0DA8               	rlf	___fldiv@grs+1,f
  9866  1717  0DA9               	rlf	___fldiv@grs+2,f
  9867  1718  0DAA               	rlf	___fldiv@grs+3,f
  9868  1719  0B89               	decfsz	9,f
  9869  171A  2F15               	goto	u3885
  9870  171B                     l3208:
  9871  171B  0873               	movf	___fldiv@a+3,w
  9872  171C  0223               	subwf	___fldiv@rem+3,w
  9873  171D  1D03               	skipz
  9874  171E  2F29               	goto	u3895
  9875  171F  0872               	movf	___fldiv@a+2,w
  9876  1720  0222               	subwf	___fldiv@rem+2,w
  9877  1721  1D03               	skipz
  9878  1722  2F29               	goto	u3895
  9879  1723  0871               	movf	___fldiv@a+1,w
  9880  1724  0221               	subwf	___fldiv@rem+1,w
  9881  1725  1D03               	skipz
  9882  1726  2F29               	goto	u3895
  9883  1727  0870               	movf	___fldiv@a,w
  9884  1728  0220               	subwf	___fldiv@rem,w
  9885  1729                     u3895:
  9886  1729  1C03               	skipc
  9887  172A  2F2C               	goto	u3891
  9888  172B  2F2D               	goto	u3890
  9889  172C                     u3891:
  9890  172C  2F36               	goto	l3214
  9891  172D                     u3890:
  9892  172D                     l3210:
  9893  172D  172A               	bsf	___fldiv@grs+3,6
  9894  172E                     l3212:
  9895  172E  0870               	movf	___fldiv@a,w
  9896  172F  02A0               	subwf	___fldiv@rem,f
  9897  1730  0871               	movf	___fldiv@a+1,w
  9898  1731  3BA1               	subwfb	___fldiv@rem+1,f
  9899  1732  0872               	movf	___fldiv@a+2,w
  9900  1733  3BA2               	subwfb	___fldiv@rem+2,f
  9901  1734  0873               	movf	___fldiv@a+3,w
  9902  1735  3BA3               	subwfb	___fldiv@rem+3,f
  9903  1736                     l3214:
  9904  1736  3001               	movlw	1
  9905  1737  00F8               	movwf	??___fldiv
  9906  1738  0878               	movf	??___fldiv,w
  9907  1739  07AC               	addwf	___fldiv@aexp,f
  9908  173A                     l3216:
  9909  173A  301A               	movlw	26
  9910  173B  022C               	subwf	___fldiv@aexp,w
  9911  173C  1C03               	skipc
  9912  173D  2F3F               	goto	u3901
  9913  173E  2F40               	goto	u3900
  9914  173F                     u3901:
  9915  173F  2EFC               	goto	l3198
  9916  1740                     u3900:
  9917  1740                     l3218:
  9918  1740  0823               	movf	___fldiv@rem+3,w
  9919  1741  0422               	iorwf	___fldiv@rem+2,w
  9920  1742  0421               	iorwf	___fldiv@rem+1,w
  9921  1743  0420               	iorwf	___fldiv@rem,w
  9922  1744  1903               	skipnz
  9923  1745  2F47               	goto	u3911
  9924  1746  2F48               	goto	u3910
  9925  1747                     u3911:
  9926  1747  2F61               	goto	l3232
  9927  1748                     u3910:
  9928  1748                     l3220:
  9929  1748  1427               	bsf	___fldiv@grs,0
  9930  1749  2F61               	goto	l3232
  9931  174A                     l3222:
  9932  174A  3001               	movlw	1
  9933  174B                     u3925:
  9934  174B  35F4               	lslf	___fldiv@b,f
  9935  174C  0DF5               	rlf	___fldiv@b+1,f
  9936  174D  0DF6               	rlf	___fldiv@b+2,f
  9937  174E  0DF7               	rlf	___fldiv@b+3,f
  9938  174F  0B89               	decfsz	9,f
  9939  1750  2F4B               	goto	u3925
  9940  1751                     l3224:
  9941  1751  1FAA               	btfss	___fldiv@grs+3,7
  9942  1752  2F54               	goto	u3931
  9943  1753  2F55               	goto	u3930
  9944  1754                     u3931:
  9945  1754  2F56               	goto	l3228
  9946  1755                     u3930:
  9947  1755                     l3226:
  9948  1755  1474               	bsf	___fldiv@b,0
  9949  1756                     l3228:
  9950  1756  3001               	movlw	1
  9951  1757                     u3945:
  9952  1757  35A7               	lslf	___fldiv@grs,f
  9953  1758  0DA8               	rlf	___fldiv@grs+1,f
  9954  1759  0DA9               	rlf	___fldiv@grs+2,f
  9955  175A  0DAA               	rlf	___fldiv@grs+3,f
  9956  175B  0B89               	decfsz	9,f
  9957  175C  2F57               	goto	u3945
  9958  175D                     l3230:
  9959  175D  30FF               	movlw	255
  9960  175E  07A5               	addwf	___fldiv@new_exp,f
  9961  175F  30FF               	movlw	255
  9962  1760  3DA6               	addwfc	___fldiv@new_exp+1,f
  9963  1761                     l3232:
  9964  1761  1FF6               	btfss	___fldiv@b+2,7
  9965  1762  2F64               	goto	u3951
  9966  1763  2F65               	goto	u3950
  9967  1764                     u3951:
  9968  1764  2F4A               	goto	l3222
  9969  1765                     u3950:
  9970  1765                     l3234:
  9971  1765  01AC               	clrf	___fldiv@aexp
  9972  1766                     l3236:
  9973  1766  1FAA               	btfss	___fldiv@grs+3,7
  9974  1767  2F69               	goto	u3961
  9975  1768  2F6A               	goto	u3960
  9976  1769                     u3961:
  9977  1769  2F86               	goto	l3244
  9978  176A                     u3960:
  9979  176A                     l3238:
  9980  176A  30FF               	movlw	255
  9981  176B  0527               	andwf	___fldiv@grs,w
  9982  176C  00F8               	movwf	??___fldiv
  9983  176D  30FF               	movlw	255
  9984  176E  0528               	andwf	___fldiv@grs+1,w
  9985  176F  00F9               	movwf	??___fldiv+1
  9986  1770  30FF               	movlw	255
  9987  1771  0529               	andwf	___fldiv@grs+2,w
  9988  1772  00FA               	movwf	??___fldiv+2
  9989  1773  307F               	movlw	127
  9990  1774  052A               	andwf	___fldiv@grs+3,w
  9991  1775  00FB               	movwf	??___fldiv+3
  9992  1776  087B               	movf	??___fldiv+3,w
  9993  1777  047A               	iorwf	??___fldiv+2,w
  9994  1778  0479               	iorwf	??___fldiv+1,w
  9995  1779  0478               	iorwf	??___fldiv,w
  9996  177A  1903               	skipnz
  9997  177B  2F7D               	goto	u3971
  9998  177C  2F7E               	goto	u3970
  9999  177D                     u3971:
 10000  177D  2F81               	goto	l724
 10001  177E                     u3970:
 10002  177E                     l3240:
 10003  177E  01AC               	clrf	___fldiv@aexp
 10004  177F  0AAC               	incf	___fldiv@aexp,f
 10005  1780  2F86               	goto	l3244
 10006  1781                     l724:
 10007  1781  1C74               	btfss	___fldiv@b,0
 10008  1782  2F84               	goto	u3981
 10009  1783  2F85               	goto	u3980
 10010  1784                     u3981:
 10011  1784  2F86               	goto	l3244
 10012  1785                     u3980:
 10013  1785  2F7E               	goto	l3240
 10014  1786                     l3244:
 10015  1786  082C               	movf	___fldiv@aexp,w
 10016  1787  1903               	btfsc	3,2
 10017  1788  2F8A               	goto	u3991
 10018  1789  2F8B               	goto	u3990
 10019  178A                     u3991:
 10020  178A  2FB3               	goto	l3254
 10021  178B                     u3990:
 10022  178B                     l3246:
 10023  178B  3001               	movlw	1
 10024  178C  07F4               	addwf	___fldiv@b,f
 10025  178D  3000               	movlw	0
 10026  178E  3DF5               	addwfc	___fldiv@b+1,f
 10027  178F  3000               	movlw	0
 10028  1790  3DF6               	addwfc	___fldiv@b+2,f
 10029  1791  3000               	movlw	0
 10030  1792  3DF7               	addwfc	___fldiv@b+3,f
 10031  1793                     l3248:
 10032  1793  1C77               	btfss	___fldiv@b+3,0
 10033  1794  2F96               	goto	u4001
 10034  1795  2F97               	goto	u4000
 10035  1796                     u4001:
 10036  1796  2FB3               	goto	l3254
 10037  1797                     u4000:
 10038  1797                     l3250:
 10039  1797  0874               	movf	___fldiv@b,w
 10040  1798  00F8               	movwf	??___fldiv
 10041  1799  0875               	movf	___fldiv@b+1,w
 10042  179A  00F9               	movwf	??___fldiv+1
 10043  179B  0876               	movf	___fldiv@b+2,w
 10044  179C  00FA               	movwf	??___fldiv+2
 10045  179D  0877               	movf	___fldiv@b+3,w
 10046  179E  00FB               	movwf	??___fldiv+3
 10047  179F  3001               	movlw	1
 10048  17A0  00FC               	movwf	??___fldiv+4
 10049  17A1                     u4015:
 10050  17A1  37FB               	asrf	??___fldiv+3,f
 10051  17A2  0CFA               	rrf	??___fldiv+2,f
 10052  17A3  0CF9               	rrf	??___fldiv+1,f
 10053  17A4  0CF8               	rrf	??___fldiv,f
 10054  17A5                     u4010:
 10055  17A5  0BFC               	decfsz	??___fldiv+4,f
 10056  17A6  2FA1               	goto	u4015
 10057  17A7  087B               	movf	??___fldiv+3,w
 10058  17A8  00F7               	movwf	___fldiv@b+3
 10059  17A9  087A               	movf	??___fldiv+2,w
 10060  17AA  00F6               	movwf	___fldiv@b+2
 10061  17AB  0879               	movf	??___fldiv+1,w
 10062  17AC  00F5               	movwf	___fldiv@b+1
 10063  17AD  0878               	movf	??___fldiv,w
 10064  17AE  00F4               	movwf	___fldiv@b
 10065  17AF                     l3252:
 10066  17AF  3001               	movlw	1
 10067  17B0  07A5               	addwf	___fldiv@new_exp,f
 10068  17B1  3000               	movlw	0
 10069  17B2  3DA6               	addwfc	___fldiv@new_exp+1,f
 10070  17B3                     l3254:
 10071  17B3  0826               	movf	___fldiv@new_exp+1,w
 10072  17B4  3A80               	xorlw	128
 10073  17B5  00F8               	movwf	??___fldiv
 10074  17B6  3080               	movlw	128
 10075  17B7  0278               	subwf	??___fldiv,w
 10076  17B8  1D03               	skipz
 10077  17B9  2FBC               	goto	u4025
 10078  17BA  30FF               	movlw	255
 10079  17BB  0225               	subwf	___fldiv@new_exp,w
 10080  17BC                     u4025:
 10081  17BC  1C03               	skipc
 10082  17BD  2FBF               	goto	u4021
 10083  17BE  2FC0               	goto	u4020
 10084  17BF                     u4021:
 10085  17BF  2FCD               	goto	l729
 10086  17C0                     u4020:
 10087  17C0                     l3256:
 10088  17C0  30FF               	movlw	255
 10089  17C1  0020               	movlb	0	; select bank0
 10090  17C2  00A5               	movwf	___fldiv@new_exp
 10091  17C3  3000               	movlw	0
 10092  17C4  00A6               	movwf	___fldiv@new_exp+1
 10093  17C5  3000               	movlw	0
 10094  17C6  00F7               	movwf	___fldiv@b+3
 10095  17C7  3000               	movlw	0
 10096  17C8  00F6               	movwf	___fldiv@b+2
 10097  17C9  3000               	movlw	0
 10098  17CA  00F5               	movwf	___fldiv@b+1
 10099  17CB  3000               	movlw	0
 10100  17CC  00F4               	movwf	___fldiv@b
 10101  17CD                     l729:
 10102  17CD  0020               	movlb	0	; select bank0
 10103  17CE  0826               	movf	___fldiv@new_exp+1,w
 10104  17CF  3A80               	xorlw	128
 10105  17D0  00F8               	movwf	??___fldiv
 10106  17D1  3080               	movlw	128
 10107  17D2  0278               	subwf	??___fldiv,w
 10108  17D3  1D03               	skipz
 10109  17D4  2FD7               	goto	u4035
 10110  17D5  3001               	movlw	1
 10111  17D6  0225               	subwf	___fldiv@new_exp,w
 10112  17D7                     u4035:
 10113  17D7  1803               	skipnc
 10114  17D8  2FDA               	goto	u4031
 10115  17D9  2FDB               	goto	u4030
 10116  17DA                     u4031:
 10117  17DA  2FE7               	goto	l730
 10118  17DB                     u4030:
 10119  17DB                     l3258:
 10120  17DB  0020               	movlb	0	; select bank0
 10121  17DC  01A5               	clrf	___fldiv@new_exp
 10122  17DD  01A6               	clrf	___fldiv@new_exp+1
 10123  17DE                     l3260:
 10124  17DE  3000               	movlw	0
 10125  17DF  00F7               	movwf	___fldiv@b+3
 10126  17E0  3000               	movlw	0
 10127  17E1  00F6               	movwf	___fldiv@b+2
 10128  17E2  3000               	movlw	0
 10129  17E3  00F5               	movwf	___fldiv@b+1
 10130  17E4  3000               	movlw	0
 10131  17E5  00F4               	movwf	___fldiv@b
 10132  17E6                     l3262:
 10133  17E6  01A4               	clrf	___fldiv@sign
 10134  17E7                     l730:
 10135  17E7  0020               	movlb	0	; select bank0
 10136  17E8  0825               	movf	___fldiv@new_exp,w
 10137  17E9  00F8               	movwf	??___fldiv
 10138  17EA  0878               	movf	??___fldiv,w
 10139  17EB  00AB               	movwf	___fldiv@bexp
 10140  17EC                     l3264:
 10141  17EC  1C2B               	btfss	___fldiv@bexp,0
 10142  17ED  2FEF               	goto	u4041
 10143  17EE  2FF0               	goto	u4040
 10144  17EF                     u4041:
 10145  17EF  2FF2               	goto	l3268
 10146  17F0                     u4040:
 10147  17F0                     l3266:
 10148  17F0  17F6               	bsf	___fldiv@b+2,7
 10149  17F1  2FF6               	goto	l732
 10150  17F2                     l3268:
 10151  17F2  307F               	movlw	127
 10152  17F3  00F8               	movwf	??___fldiv
 10153  17F4  0878               	movf	??___fldiv,w
 10154  17F5  05F6               	andwf	___fldiv@b+2,f
 10155  17F6                     l732:
 10156  17F6  362B               	lsrf	___fldiv@bexp,w
 10157  17F7  00F8               	movwf	??___fldiv
 10158  17F8  0878               	movf	??___fldiv,w
 10159  17F9  00F7               	movwf	___fldiv@b+3
 10160  17FA  0824               	movf	___fldiv@sign,w
 10161  17FB  00F8               	movwf	??___fldiv
 10162  17FC  0878               	movf	??___fldiv,w
 10163  17FD  04F7               	iorwf	___fldiv@b+3,f
 10164  17FE  2EBB               	goto	l3178
 10165  17FF                     l710:
 10166  17FF  0008               	return
 10167  1800                     __end_of___fldiv:
 10168                           
 10169                           	psect	text25
 10170  11A2                     __ptext25:	
 10171 ;; *************** function ___awmod *****************
 10172 ;; Defined at:
 10173 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
 10174 ;; Parameters:    Size  Location     Type
 10175 ;;  divisor         2    0[COMMON] int 
 10176 ;;  dividend        2    2[COMMON] int 
 10177 ;; Auto vars:     Size  Location     Type
 10178 ;;  sign            1    6[COMMON] unsigned char 
 10179 ;;  counter         1    5[COMMON] unsigned char 
 10180 ;; Return value:  Size  Location     Type
 10181 ;;                  2    0[COMMON] int 
 10182 ;; Registers used:
 10183 ;;		wreg, status,2, status,0
 10184 ;; Tracked objects:
 10185 ;;		On entry : 0/0
 10186 ;;		On exit  : 0/0
 10187 ;;		Unchanged: 0/0
 10188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10189 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10190 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10191 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10192 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10193 ;;Total ram usage:        7 bytes
 10194 ;; Hardware stack levels used: 1
 10195 ;; This function calls:
 10196 ;;		Nothing
 10197 ;; This function is called by:
 10198 ;;		_efgtoa
 10199 ;; This function uses a non-reentrant model
 10200 ;;
 10201                           
 10202  11A2                     ___awmod:	
 10203                           ;psect for function ___awmod
 10204                           
 10205  11A2                     l3014:	
 10206                           ;incstack = 0
 10207                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10208                           
 10209  11A2  01F6               	clrf	___awmod@sign
 10210  11A3                     l3016:
 10211  11A3  1FF3               	btfss	___awmod@dividend+1,7
 10212  11A4  29A6               	goto	u3481
 10213  11A5  29A7               	goto	u3480
 10214  11A6                     u3481:
 10215  11A6  29AE               	goto	l3022
 10216  11A7                     u3480:
 10217  11A7                     l3018:
 10218  11A7  09F2               	comf	___awmod@dividend,f
 10219  11A8  09F3               	comf	___awmod@dividend+1,f
 10220  11A9  0AF2               	incf	___awmod@dividend,f
 10221  11AA  1903               	skipnz
 10222  11AB  0AF3               	incf	___awmod@dividend+1,f
 10223  11AC                     l3020:
 10224  11AC  01F6               	clrf	___awmod@sign
 10225  11AD  0AF6               	incf	___awmod@sign,f
 10226  11AE                     l3022:
 10227  11AE  1FF1               	btfss	___awmod@divisor+1,7
 10228  11AF  29B1               	goto	u3491
 10229  11B0  29B2               	goto	u3490
 10230  11B1                     u3491:
 10231  11B1  29B7               	goto	l3026
 10232  11B2                     u3490:
 10233  11B2                     l3024:
 10234  11B2  09F0               	comf	___awmod@divisor,f
 10235  11B3  09F1               	comf	___awmod@divisor+1,f
 10236  11B4  0AF0               	incf	___awmod@divisor,f
 10237  11B5  1903               	skipnz
 10238  11B6  0AF1               	incf	___awmod@divisor+1,f
 10239  11B7                     l3026:
 10240  11B7  0870               	movf	___awmod@divisor,w
 10241  11B8  0471               	iorwf	___awmod@divisor+1,w
 10242  11B9  1903               	btfsc	3,2
 10243  11BA  29BC               	goto	u3501
 10244  11BB  29BD               	goto	u3500
 10245  11BC                     u3501:
 10246  11BC  29E6               	goto	l3044
 10247  11BD                     u3500:
 10248  11BD                     l3028:
 10249  11BD  01F5               	clrf	___awmod@counter
 10250  11BE  0AF5               	incf	___awmod@counter,f
 10251  11BF  29C9               	goto	l3034
 10252  11C0                     l3030:
 10253  11C0  3001               	movlw	1
 10254  11C1                     u3515:
 10255  11C1  35F0               	lslf	___awmod@divisor,f
 10256  11C2  0DF1               	rlf	___awmod@divisor+1,f
 10257  11C3  0B89               	decfsz	9,f
 10258  11C4  29C1               	goto	u3515
 10259  11C5                     l3032:
 10260  11C5  3001               	movlw	1
 10261  11C6  00F4               	movwf	??___awmod
 10262  11C7  0874               	movf	??___awmod,w
 10263  11C8  07F5               	addwf	___awmod@counter,f
 10264  11C9                     l3034:
 10265  11C9  1FF1               	btfss	___awmod@divisor+1,7
 10266  11CA  29CC               	goto	u3521
 10267  11CB  29CD               	goto	u3520
 10268  11CC                     u3521:
 10269  11CC  29C0               	goto	l3030
 10270  11CD                     u3520:
 10271  11CD                     l3036:
 10272  11CD  0871               	movf	___awmod@divisor+1,w
 10273  11CE  0273               	subwf	___awmod@dividend+1,w
 10274  11CF  1D03               	skipz
 10275  11D0  29D3               	goto	u3535
 10276  11D1  0870               	movf	___awmod@divisor,w
 10277  11D2  0272               	subwf	___awmod@dividend,w
 10278  11D3                     u3535:
 10279  11D3  1C03               	skipc
 10280  11D4  29D6               	goto	u3531
 10281  11D5  29D7               	goto	u3530
 10282  11D6                     u3531:
 10283  11D6  29DB               	goto	l3040
 10284  11D7                     u3530:
 10285  11D7                     l3038:
 10286  11D7  0870               	movf	___awmod@divisor,w
 10287  11D8  02F2               	subwf	___awmod@dividend,f
 10288  11D9  0871               	movf	___awmod@divisor+1,w
 10289  11DA  3BF3               	subwfb	___awmod@dividend+1,f
 10290  11DB                     l3040:
 10291  11DB  3001               	movlw	1
 10292  11DC                     u3545:
 10293  11DC  36F1               	lsrf	___awmod@divisor+1,f
 10294  11DD  0CF0               	rrf	___awmod@divisor,f
 10295  11DE  0B89               	decfsz	9,f
 10296  11DF  29DC               	goto	u3545
 10297  11E0                     l3042:
 10298  11E0  3001               	movlw	1
 10299  11E1  02F5               	subwf	___awmod@counter,f
 10300  11E2  1D03               	btfss	3,2
 10301  11E3  29E5               	goto	u3551
 10302  11E4  29E6               	goto	u3550
 10303  11E5                     u3551:
 10304  11E5  29CD               	goto	l3036
 10305  11E6                     u3550:
 10306  11E6                     l3044:
 10307  11E6  0876               	movf	___awmod@sign,w
 10308  11E7  1903               	btfsc	3,2
 10309  11E8  29EA               	goto	u3561
 10310  11E9  29EB               	goto	u3560
 10311  11EA                     u3561:
 10312  11EA  29F0               	goto	l3048
 10313  11EB                     u3560:
 10314  11EB                     l3046:
 10315  11EB  09F2               	comf	___awmod@dividend,f
 10316  11EC  09F3               	comf	___awmod@dividend+1,f
 10317  11ED  0AF2               	incf	___awmod@dividend,f
 10318  11EE  1903               	skipnz
 10319  11EF  0AF3               	incf	___awmod@dividend+1,f
 10320  11F0                     l3048:
 10321  11F0  0873               	movf	___awmod@dividend+1,w
 10322  11F1  00F1               	movwf	?___awmod+1
 10323  11F2  0872               	movf	___awmod@dividend,w
 10324  11F3  00F0               	movwf	?___awmod
 10325  11F4                     l517:
 10326  11F4  0008               	return
 10327  11F5                     __end_of___awmod:
 10328                           
 10329                           	psect	text26
 10330  12F6                     __ptext26:	
 10331 ;; *************** function ___awdiv *****************
 10332 ;; Defined at:
 10333 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
 10334 ;; Parameters:    Size  Location     Type
 10335 ;;  divisor         2    0[COMMON] int 
 10336 ;;  dividend        2    2[COMMON] int 
 10337 ;; Auto vars:     Size  Location     Type
 10338 ;;  quotient        2    7[COMMON] int 
 10339 ;;  sign            1    6[COMMON] unsigned char 
 10340 ;;  counter         1    5[COMMON] unsigned char 
 10341 ;; Return value:  Size  Location     Type
 10342 ;;                  2    0[COMMON] int 
 10343 ;; Registers used:
 10344 ;;		wreg, status,2, status,0
 10345 ;; Tracked objects:
 10346 ;;		On entry : 0/0
 10347 ;;		On exit  : 0/0
 10348 ;;		Unchanged: 0/0
 10349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10350 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10351 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10352 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10353 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10354 ;;Total ram usage:        9 bytes
 10355 ;; Hardware stack levels used: 1
 10356 ;; This function calls:
 10357 ;;		Nothing
 10358 ;; This function is called by:
 10359 ;;		_efgtoa
 10360 ;; This function uses a non-reentrant model
 10361 ;;
 10362                           
 10363  12F6                     ___awdiv:	
 10364                           ;psect for function ___awdiv
 10365                           
 10366  12F6                     l2970:	
 10367                           ;incstack = 0
 10368                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10369                           
 10370  12F6  01F6               	clrf	___awdiv@sign
 10371  12F7                     l2972:
 10372  12F7  1FF1               	btfss	___awdiv@divisor+1,7
 10373  12F8  2AFA               	goto	u3381
 10374  12F9  2AFB               	goto	u3380
 10375  12FA                     u3381:
 10376  12FA  2B02               	goto	l2978
 10377  12FB                     u3380:
 10378  12FB                     l2974:
 10379  12FB  09F0               	comf	___awdiv@divisor,f
 10380  12FC  09F1               	comf	___awdiv@divisor+1,f
 10381  12FD  0AF0               	incf	___awdiv@divisor,f
 10382  12FE  1903               	skipnz
 10383  12FF  0AF1               	incf	___awdiv@divisor+1,f
 10384  1300                     l2976:
 10385  1300  01F6               	clrf	___awdiv@sign
 10386  1301  0AF6               	incf	___awdiv@sign,f
 10387  1302                     l2978:
 10388  1302  1FF3               	btfss	___awdiv@dividend+1,7
 10389  1303  2B05               	goto	u3391
 10390  1304  2B06               	goto	u3390
 10391  1305                     u3391:
 10392  1305  2B0F               	goto	l2984
 10393  1306                     u3390:
 10394  1306                     l2980:
 10395  1306  09F2               	comf	___awdiv@dividend,f
 10396  1307  09F3               	comf	___awdiv@dividend+1,f
 10397  1308  0AF2               	incf	___awdiv@dividend,f
 10398  1309  1903               	skipnz
 10399  130A  0AF3               	incf	___awdiv@dividend+1,f
 10400  130B                     l2982:
 10401  130B  3001               	movlw	1
 10402  130C  00F4               	movwf	??___awdiv
 10403  130D  0874               	movf	??___awdiv,w
 10404  130E  06F6               	xorwf	___awdiv@sign,f
 10405  130F                     l2984:
 10406  130F  01F7               	clrf	___awdiv@quotient
 10407  1310  01F8               	clrf	___awdiv@quotient+1
 10408  1311                     l2986:
 10409  1311  0870               	movf	___awdiv@divisor,w
 10410  1312  0471               	iorwf	___awdiv@divisor+1,w
 10411  1313  1903               	btfsc	3,2
 10412  1314  2B16               	goto	u3401
 10413  1315  2B17               	goto	u3400
 10414  1316                     u3401:
 10415  1316  2B46               	goto	l3006
 10416  1317                     u3400:
 10417  1317                     l2988:
 10418  1317  01F5               	clrf	___awdiv@counter
 10419  1318  0AF5               	incf	___awdiv@counter,f
 10420  1319  2B23               	goto	l2994
 10421  131A                     l2990:
 10422  131A  3001               	movlw	1
 10423  131B                     u3415:
 10424  131B  35F0               	lslf	___awdiv@divisor,f
 10425  131C  0DF1               	rlf	___awdiv@divisor+1,f
 10426  131D  0B89               	decfsz	9,f
 10427  131E  2B1B               	goto	u3415
 10428  131F                     l2992:
 10429  131F  3001               	movlw	1
 10430  1320  00F4               	movwf	??___awdiv
 10431  1321  0874               	movf	??___awdiv,w
 10432  1322  07F5               	addwf	___awdiv@counter,f
 10433  1323                     l2994:
 10434  1323  1FF1               	btfss	___awdiv@divisor+1,7
 10435  1324  2B26               	goto	u3421
 10436  1325  2B27               	goto	u3420
 10437  1326                     u3421:
 10438  1326  2B1A               	goto	l2990
 10439  1327                     u3420:
 10440  1327                     l2996:
 10441  1327  3001               	movlw	1
 10442  1328                     u3435:
 10443  1328  35F7               	lslf	___awdiv@quotient,f
 10444  1329  0DF8               	rlf	___awdiv@quotient+1,f
 10445  132A  0B89               	decfsz	9,f
 10446  132B  2B28               	goto	u3435
 10447  132C  0871               	movf	___awdiv@divisor+1,w
 10448  132D  0273               	subwf	___awdiv@dividend+1,w
 10449  132E  1D03               	skipz
 10450  132F  2B32               	goto	u3445
 10451  1330  0870               	movf	___awdiv@divisor,w
 10452  1331  0272               	subwf	___awdiv@dividend,w
 10453  1332                     u3445:
 10454  1332  1C03               	skipc
 10455  1333  2B35               	goto	u3441
 10456  1334  2B36               	goto	u3440
 10457  1335                     u3441:
 10458  1335  2B3B               	goto	l3002
 10459  1336                     u3440:
 10460  1336                     l2998:
 10461  1336  0870               	movf	___awdiv@divisor,w
 10462  1337  02F2               	subwf	___awdiv@dividend,f
 10463  1338  0871               	movf	___awdiv@divisor+1,w
 10464  1339  3BF3               	subwfb	___awdiv@dividend+1,f
 10465  133A                     l3000:
 10466  133A  1477               	bsf	___awdiv@quotient,0
 10467  133B                     l3002:
 10468  133B  3001               	movlw	1
 10469  133C                     u3455:
 10470  133C  36F1               	lsrf	___awdiv@divisor+1,f
 10471  133D  0CF0               	rrf	___awdiv@divisor,f
 10472  133E  0B89               	decfsz	9,f
 10473  133F  2B3C               	goto	u3455
 10474  1340                     l3004:
 10475  1340  3001               	movlw	1
 10476  1341  02F5               	subwf	___awdiv@counter,f
 10477  1342  1D03               	btfss	3,2
 10478  1343  2B45               	goto	u3461
 10479  1344  2B46               	goto	u3460
 10480  1345                     u3461:
 10481  1345  2B27               	goto	l2996
 10482  1346                     u3460:
 10483  1346                     l3006:
 10484  1346  0876               	movf	___awdiv@sign,w
 10485  1347  1903               	btfsc	3,2
 10486  1348  2B4A               	goto	u3471
 10487  1349  2B4B               	goto	u3470
 10488  134A                     u3471:
 10489  134A  2B50               	goto	l3010
 10490  134B                     u3470:
 10491  134B                     l3008:
 10492  134B  09F7               	comf	___awdiv@quotient,f
 10493  134C  09F8               	comf	___awdiv@quotient+1,f
 10494  134D  0AF7               	incf	___awdiv@quotient,f
 10495  134E  1903               	skipnz
 10496  134F  0AF8               	incf	___awdiv@quotient+1,f
 10497  1350                     l3010:
 10498  1350  0878               	movf	___awdiv@quotient+1,w
 10499  1351  00F1               	movwf	?___awdiv+1
 10500  1352  0877               	movf	___awdiv@quotient,w
 10501  1353  00F0               	movwf	?___awdiv
 10502  1354                     l504:
 10503  1354  0008               	return
 10504  1355                     __end_of___awdiv:
 10505                           
 10506                           	psect	text27
 10507  14D3                     __ptext27:	
 10508 ;; *************** function _atoi *****************
 10509 ;; Defined at:
 10510 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
 10511 ;; Parameters:    Size  Location     Type
 10512 ;;  s               2    6[COMMON] PTR const unsigned char 
 10513 ;;		 -> STR_1(12), 
 10514 ;; Auto vars:     Size  Location     Type
 10515 ;;  n               2    2[BANK0 ] int 
 10516 ;;  neg             2    0[BANK0 ] int 
 10517 ;; Return value:  Size  Location     Type
 10518 ;;                  2    6[COMMON] int 
 10519 ;; Registers used:
 10520 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10521 ;; Tracked objects:
 10522 ;;		On entry : 0/0
 10523 ;;		On exit  : 0/0
 10524 ;;		Unchanged: 0/0
 10525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10527 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10528 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10529 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10530 ;;Total ram usage:        9 bytes
 10531 ;; Hardware stack levels used: 1
 10532 ;; Hardware stack levels required when called: 1
 10533 ;; This function calls:
 10534 ;;		___wmul
 10535 ;;		_isdigit
 10536 ;;		_isspace
 10537 ;; This function is called by:
 10538 ;;		_vfpfcnvrt
 10539 ;; This function uses a non-reentrant model
 10540 ;;
 10541                           
 10542  14D3                     _atoi:	
 10543                           ;psect for function _atoi
 10544                           
 10545  14D3                     l3838:	
 10546                           ;incstack = 0
 10547                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10548                           
 10549  14D3  0020               	movlb	0	; select bank0
 10550  14D4  01A2               	clrf	atoi@n
 10551  14D5  01A3               	clrf	atoi@n+1
 10552  14D6  01A0               	clrf	atoi@neg
 10553  14D7  01A1               	clrf	atoi@neg+1
 10554  14D8  2CDD               	goto	l3844
 10555  14D9                     l3840:
 10556  14D9  3001               	movlw	1
 10557  14DA  07F6               	addwf	atoi@s,f
 10558  14DB  3000               	movlw	0
 10559  14DC  3DF7               	addwfc	atoi@s+1,f
 10560  14DD                     l3844:
 10561  14DD  0876               	movf	atoi@s,w
 10562  14DE  0084               	movwf	4
 10563  14DF  0877               	movf	atoi@s+1,w
 10564  14E0  0085               	movwf	5
 10565  14E1  0012               	moviw fsr0++
 10566  14E2  3A20               	xorlw	32
 10567  14E3  1903               	btfsc	3,2
 10568  14E4  2CE6               	goto	u5121
 10569  14E5  2CE7               	goto	u5120
 10570  14E6                     u5121:
 10571  14E6  2CD9               	goto	l3840
 10572  14E7                     u5120:
 10573  14E7                     l3846:
 10574  14E7  0876               	movf	atoi@s,w
 10575  14E8  0084               	movwf	4
 10576  14E9  0877               	movf	atoi@s+1,w
 10577  14EA  0085               	movwf	5
 10578  14EB  0800               	movf	0,w	;code access
 10579  14EC  3EF7               	addlw	247
 10580  14ED  00F8               	movwf	??_atoi
 10581  14EE  30FF               	movlw	255
 10582  14EF  1803               	skipnc
 10583  14F0  3000               	movlw	0
 10584  14F1  00F9               	movwf	??_atoi+1
 10585  14F2  3000               	movlw	0
 10586  14F3  0279               	subwf	??_atoi+1,w
 10587  14F4  3005               	movlw	5
 10588  14F5  1903               	skipnz
 10589  14F6  0278               	subwf	??_atoi,w
 10590  14F7  1C03               	skipc
 10591  14F8  2CFA               	goto	u5131
 10592  14F9  2CFB               	goto	u5130
 10593  14FA                     u5131:
 10594  14FA  2CD9               	goto	l3840
 10595  14FB                     u5130:
 10596  14FB  2D06               	goto	l3850
 10597  14FC                     l3848:
 10598  14FC  3001               	movlw	1
 10599  14FD  0020               	movlb	0	; select bank0
 10600  14FE  00A0               	movwf	atoi@neg
 10601  14FF  3000               	movlw	0
 10602  1500  00A1               	movwf	atoi@neg+1
 10603  1501                     l1007:
 10604  1501  3001               	movlw	1
 10605  1502  07F6               	addwf	atoi@s,f
 10606  1503  3000               	movlw	0
 10607  1504  3DF7               	addwfc	atoi@s+1,f
 10608  1505  2D3B               	goto	l3858
 10609  1506                     l3850:
 10610  1506  0876               	movf	atoi@s,w
 10611  1507  0084               	movwf	4
 10612  1508  0877               	movf	atoi@s+1,w
 10613  1509  0085               	movwf	5
 10614  150A  0800               	movf	0,w	;code access
 10615  150B  00F8               	movwf	??_atoi
 10616  150C  01F9               	clrf	??_atoi+1
 10617                           
 10618                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10619                           ; Switch size 1, requested type "simple"
 10620                           ; Number of cases is 1, Range of values is 0 to 0
 10621                           ; switch strategies available:
 10622                           ; Name         Instructions Cycles
 10623                           ; simple_byte            4     3 (average)
 10624                           ; direct_byte            8     6 (fixed)
 10625                           ; jumptable            260     6 (fixed)
 10626                           ;	Chosen strategy is simple_byte
 10627  150D  0879               	movf	??_atoi+1,w
 10628  150E  3A00               	xorlw	0	; case 0
 10629  150F  1903               	skipnz
 10630  1510  2D12               	goto	l4296
 10631  1511  2D3B               	goto	l3858
 10632  1512                     l4296:
 10633                           
 10634                           ; Switch size 1, requested type "simple"
 10635                           ; Number of cases is 2, Range of values is 43 to 45
 10636                           ; switch strategies available:
 10637                           ; Name         Instructions Cycles
 10638                           ; simple_byte            7     4 (average)
 10639                           ; direct_byte           15     9 (fixed)
 10640                           ; jumptable            263     9 (fixed)
 10641                           ;	Chosen strategy is simple_byte
 10642  1512  0878               	movf	??_atoi,w
 10643  1513  3A2B               	xorlw	43	; case 43
 10644  1514  1903               	skipnz
 10645  1515  2D01               	goto	l1007
 10646  1516  3A06               	xorlw	6	; case 45
 10647  1517  1903               	skipnz
 10648  1518  2CFC               	goto	l3848
 10649  1519  2D3B               	goto	l3858
 10650  151A                     l3852:
 10651  151A  0876               	movf	atoi@s,w
 10652  151B  0084               	movwf	4
 10653  151C  0877               	movf	atoi@s+1,w
 10654  151D  0085               	movwf	5
 10655  151E  0800               	movf	0,w	;code access
 10656  151F  00F8               	movwf	??_atoi
 10657  1520  0020               	movlb	0	; select bank0
 10658  1521  0823               	movf	atoi@n+1,w
 10659  1522  00F1               	movwf	___wmul@multiplier+1
 10660  1523  0822               	movf	atoi@n,w
 10661  1524  00F0               	movwf	___wmul@multiplier
 10662  1525  300A               	movlw	10
 10663  1526  00F2               	movwf	___wmul@multiplicand
 10664  1527  3000               	movlw	0
 10665  1528  00F3               	movwf	___wmul@multiplicand+1
 10666  1529  319E  26CE  3194   	fcall	___wmul
 10667  152C  0871               	movf	?___wmul+1,w
 10668  152D  00FA               	movwf	??_atoi+2
 10669  152E  0878               	movf	??_atoi,w
 10670  152F  0270               	subwf	?___wmul,w
 10671  1530  00F9               	movwf	??_atoi+1
 10672  1531  1C03               	skipc
 10673  1532  03FA               	decf	??_atoi+2,f
 10674  1533  0879               	movf	??_atoi+1,w
 10675  1534  3E30               	addlw	48
 10676  1535  0020               	movlb	0	; select bank0
 10677  1536  00A2               	movwf	atoi@n
 10678  1537  3000               	movlw	0
 10679  1538  3D7A               	addwfc	??_atoi+2,w
 10680  1539  00A3               	movwf	atoi@n+1
 10681  153A  2D01               	goto	l1007
 10682  153B                     l3858:
 10683  153B  0876               	movf	atoi@s,w
 10684  153C  0084               	movwf	4
 10685  153D  0877               	movf	atoi@s+1,w
 10686  153E  0085               	movwf	5
 10687  153F  0800               	movf	0,w	;code access
 10688  1540  3ED0               	addlw	208
 10689  1541  00F8               	movwf	??_atoi
 10690  1542  30FF               	movlw	255
 10691  1543  1803               	skipnc
 10692  1544  3000               	movlw	0
 10693  1545  00F9               	movwf	??_atoi+1
 10694  1546  3000               	movlw	0
 10695  1547  0279               	subwf	??_atoi+1,w
 10696  1548  300A               	movlw	10
 10697  1549  1903               	skipnz
 10698  154A  0278               	subwf	??_atoi,w
 10699  154B  1C03               	skipc
 10700  154C  2D4E               	goto	u5141
 10701  154D  2D4F               	goto	u5140
 10702  154E                     u5141:
 10703  154E  2D1A               	goto	l3852
 10704  154F                     u5140:
 10705  154F                     l3860:
 10706  154F  0020               	movlb	0	; select bank0
 10707  1550  0820               	movf	atoi@neg,w
 10708  1551  0421               	iorwf	atoi@neg+1,w
 10709  1552  1D03               	btfss	3,2
 10710  1553  2D55               	goto	u5151
 10711  1554  2D56               	goto	u5150
 10712  1555                     u5151:
 10713  1555  2D62               	goto	l3864
 10714  1556                     u5150:
 10715  1556                     l3862:
 10716  1556  0922               	comf	atoi@n,w
 10717  1557  00F8               	movwf	??_atoi
 10718  1558  0923               	comf	atoi@n+1,w
 10719  1559  00F9               	movwf	??_atoi+1
 10720  155A  0AF8               	incf	??_atoi,f
 10721  155B  1903               	skipnz
 10722  155C  0AF9               	incf	??_atoi+1,f
 10723  155D  0878               	movf	??_atoi,w
 10724  155E  00F6               	movwf	?_atoi
 10725  155F  0879               	movf	??_atoi+1,w
 10726  1560  00F7               	movwf	?_atoi+1
 10727  1561  2D66               	goto	l1018
 10728  1562                     l3864:
 10729  1562  0823               	movf	atoi@n+1,w
 10730  1563  00F7               	movwf	?_atoi+1
 10731  1564  0822               	movf	atoi@n,w
 10732  1565  00F6               	movwf	?_atoi
 10733  1566                     l1018:
 10734  1566  0008               	return
 10735  1567                     __end_of_atoi:
 10736                           
 10737                           	psect	text28
 10738  1F2E                     __ptext28:	
 10739 ;; *************** function _isspace *****************
 10740 ;; Defined at:
 10741 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
 10742 ;; Parameters:    Size  Location     Type
 10743 ;;  c               2    0[COMMON] int 
 10744 ;; Auto vars:     Size  Location     Type
 10745 ;;		None
 10746 ;; Return value:  Size  Location     Type
 10747 ;;                  2    0[COMMON] int 
 10748 ;; Registers used:
 10749 ;;		wreg, status,2, status,0
 10750 ;; Tracked objects:
 10751 ;;		On entry : 0/0
 10752 ;;		On exit  : 0/0
 10753 ;;		Unchanged: 0/0
 10754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10755 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10756 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10757 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10758 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10759 ;;Total ram usage:        5 bytes
 10760 ;; Hardware stack levels used: 1
 10761 ;; This function calls:
 10762 ;;		Nothing
 10763 ;; This function is called by:
 10764 ;;		_atoi
 10765 ;; This function uses a non-reentrant model
 10766 ;;
 10767                           
 10768  1F2E                     _isspace:	
 10769                           ;psect for function _isspace
 10770                           
 10771  1F2E                     l3508:	
 10772                           ;incstack = 0
 10773                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10774                           
 10775  1F2E  01F4               	clrf	_isspace$1013
 10776  1F2F  0AF4               	incf	_isspace$1013,f
 10777  1F30                     l3510:
 10778  1F30  3020               	movlw	32
 10779  1F31  0670               	xorwf	isspace@c,w
 10780  1F32  0471               	iorwf	isspace@c+1,w
 10781  1F33  1903               	btfsc	3,2
 10782  1F34  2F36               	goto	u4581
 10783  1F35  2F37               	goto	u4580
 10784  1F36                     u4581:
 10785  1F36  2F47               	goto	l3516
 10786  1F37                     u4580:
 10787  1F37                     l3512:
 10788  1F37  0870               	movf	isspace@c,w
 10789  1F38  3EF7               	addlw	247
 10790  1F39  00F2               	movwf	??_isspace
 10791  1F3A  30FF               	movlw	255
 10792  1F3B  3D71               	addwfc	isspace@c+1,w
 10793  1F3C  00F3               	movwf	??_isspace+1
 10794  1F3D  3000               	movlw	0
 10795  1F3E  0273               	subwf	??_isspace+1,w
 10796  1F3F  3005               	movlw	5
 10797  1F40  1903               	skipnz
 10798  1F41  0272               	subwf	??_isspace,w
 10799  1F42  1C03               	skipc
 10800  1F43  2F45               	goto	u4591
 10801  1F44  2F46               	goto	u4590
 10802  1F45                     u4591:
 10803  1F45  2F47               	goto	l3516
 10804  1F46                     u4590:
 10805  1F46                     l3514:
 10806  1F46  01F4               	clrf	_isspace$1013
 10807  1F47                     l3516:
 10808  1F47  0874               	movf	_isspace$1013,w
 10809  1F48  00F2               	movwf	??_isspace
 10810  1F49  01F3               	clrf	??_isspace+1
 10811  1F4A  0872               	movf	??_isspace,w
 10812  1F4B  00F0               	movwf	?_isspace
 10813  1F4C  0873               	movf	??_isspace+1,w
 10814  1F4D  00F1               	movwf	?_isspace+1
 10815  1F4E                     l1042:
 10816  1F4E  0008               	return
 10817  1F4F                     __end_of_isspace:
 10818                           
 10819                           	psect	text29
 10820  1E6B                     __ptext29:	
 10821 ;; *************** function _isdigit *****************
 10822 ;; Defined at:
 10823 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
 10824 ;; Parameters:    Size  Location     Type
 10825 ;;  c               2    0[COMMON] int 
 10826 ;; Auto vars:     Size  Location     Type
 10827 ;;		None
 10828 ;; Return value:  Size  Location     Type
 10829 ;;                  2    0[COMMON] int 
 10830 ;; Registers used:
 10831 ;;		wreg, status,2, status,0
 10832 ;; Tracked objects:
 10833 ;;		On entry : 0/0
 10834 ;;		On exit  : 0/0
 10835 ;;		Unchanged: 0/0
 10836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10839 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10840 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10841 ;;Total ram usage:        6 bytes
 10842 ;; Hardware stack levels used: 1
 10843 ;; This function calls:
 10844 ;;		Nothing
 10845 ;; This function is called by:
 10846 ;;		_vfpfcnvrt
 10847 ;;		_atoi
 10848 ;; This function uses a non-reentrant model
 10849 ;;
 10850                           
 10851  1E6B                     _isdigit:	
 10852                           ;psect for function _isdigit
 10853                           
 10854  1E6B                     l3504:	
 10855                           ;incstack = 0
 10856                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10857                           
 10858  1E6B  0870               	movf	isdigit@c,w
 10859  1E6C  3ED0               	addlw	208
 10860  1E6D  00F2               	movwf	??_isdigit
 10861  1E6E  30FF               	movlw	255
 10862  1E6F  3D71               	addwfc	isdigit@c+1,w
 10863  1E70  00F3               	movwf	??_isdigit+1
 10864  1E71  3000               	movlw	0
 10865  1E72  0273               	subwf	??_isdigit+1,w
 10866  1E73  300A               	movlw	10
 10867  1E74  1903               	skipnz
 10868  1E75  0272               	subwf	??_isdigit,w
 10869  1E76  1C03               	skipc
 10870  1E77  2E79               	goto	u4561
 10871  1E78  2E7B               	goto	u4560
 10872  1E79                     u4561:
 10873  1E79  3001               	movlw	1
 10874  1E7A  2E7C               	goto	u4570
 10875  1E7B                     u4560:
 10876  1E7B  3000               	movlw	0
 10877  1E7C                     u4570:
 10878  1E7C  00F4               	movwf	??_isdigit+2
 10879  1E7D  01F5               	clrf	??_isdigit+3
 10880  1E7E  0874               	movf	??_isdigit+2,w
 10881  1E7F  00F0               	movwf	?_isdigit
 10882  1E80  0875               	movf	??_isdigit+3,w
 10883  1E81  00F1               	movwf	?_isdigit+1
 10884  1E82                     l1034:
 10885  1E82  0008               	return
 10886  1E83                     __end_of_isdigit:
 10887                           
 10888                           	psect	text30
 10889  1ECE                     __ptext30:	
 10890 ;; *************** function ___wmul *****************
 10891 ;; Defined at:
 10892 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 10893 ;; Parameters:    Size  Location     Type
 10894 ;;  multiplier      2    0[COMMON] unsigned int 
 10895 ;;  multiplicand    2    2[COMMON] unsigned int 
 10896 ;; Auto vars:     Size  Location     Type
 10897 ;;  product         2    4[COMMON] unsigned int 
 10898 ;; Return value:  Size  Location     Type
 10899 ;;                  2    0[COMMON] unsigned int 
 10900 ;; Registers used:
 10901 ;;		wreg, status,2, status,0
 10902 ;; Tracked objects:
 10903 ;;		On entry : 0/0
 10904 ;;		On exit  : 0/0
 10905 ;;		Unchanged: 0/0
 10906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10907 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10908 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10910 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10911 ;;Total ram usage:        6 bytes
 10912 ;; Hardware stack levels used: 1
 10913 ;; This function calls:
 10914 ;;		Nothing
 10915 ;; This function is called by:
 10916 ;;		_atoi
 10917 ;; This function uses a non-reentrant model
 10918 ;;
 10919                           
 10920  1ECE                     ___wmul:	
 10921                           ;psect for function ___wmul
 10922                           
 10923  1ECE                     l2956:	
 10924                           ;incstack = 0
 10925                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10926                           
 10927  1ECE  01F4               	clrf	___wmul@product
 10928  1ECF  01F5               	clrf	___wmul@product+1
 10929  1ED0                     l2958:
 10930  1ED0  1C70               	btfss	___wmul@multiplier,0
 10931  1ED1  2ED3               	goto	u3341
 10932  1ED2  2ED4               	goto	u3340
 10933  1ED3                     u3341:
 10934  1ED3  2ED8               	goto	l351
 10935  1ED4                     u3340:
 10936  1ED4                     l2960:
 10937  1ED4  0872               	movf	___wmul@multiplicand,w
 10938  1ED5  07F4               	addwf	___wmul@product,f
 10939  1ED6  0873               	movf	___wmul@multiplicand+1,w
 10940  1ED7  3DF5               	addwfc	___wmul@product+1,f
 10941  1ED8                     l351:
 10942  1ED8  3001               	movlw	1
 10943  1ED9                     u3355:
 10944  1ED9  35F2               	lslf	___wmul@multiplicand,f
 10945  1EDA  0DF3               	rlf	___wmul@multiplicand+1,f
 10946  1EDB  0B89               	decfsz	9,f
 10947  1EDC  2ED9               	goto	u3355
 10948  1EDD                     l2962:
 10949  1EDD  3001               	movlw	1
 10950  1EDE                     u3365:
 10951  1EDE  36F1               	lsrf	___wmul@multiplier+1,f
 10952  1EDF  0CF0               	rrf	___wmul@multiplier,f
 10953  1EE0  0B89               	decfsz	9,f
 10954  1EE1  2EDE               	goto	u3365
 10955  1EE2                     l2964:
 10956  1EE2  0870               	movf	___wmul@multiplier,w
 10957  1EE3  0471               	iorwf	___wmul@multiplier+1,w
 10958  1EE4  1D03               	btfss	3,2
 10959  1EE5  2EE7               	goto	u3371
 10960  1EE6  2EE8               	goto	u3370
 10961  1EE7                     u3371:
 10962  1EE7  2ED0               	goto	l2958
 10963  1EE8                     u3370:
 10964  1EE8                     l2966:
 10965  1EE8  0875               	movf	___wmul@product+1,w
 10966  1EE9  00F1               	movwf	?___wmul+1
 10967  1EEA  0874               	movf	___wmul@product,w
 10968  1EEB  00F0               	movwf	?___wmul
 10969  1EEC                     l353:
 10970  1EEC  0008               	return
 10971  1EED                     __end_of___wmul:
 10972                           
 10973                           	psect	text31
 10974  0017                     __ptext31:	
 10975 ;; *************** function ___xxtofl *****************
 10976 ;; Defined at:
 10977 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
 10978 ;; Parameters:    Size  Location     Type
 10979 ;;  sign            1    wreg     unsigned char 
 10980 ;;  val             4    4[COMMON] long 
 10981 ;; Auto vars:     Size  Location     Type
 10982 ;;  sign            1    0[BANK0 ] unsigned char 
 10983 ;;  arg             4    2[BANK0 ] unsigned long 
 10984 ;;  exp             1    1[BANK0 ] unsigned char 
 10985 ;; Return value:  Size  Location     Type
 10986 ;;                  4    4[COMMON] unsigned char 
 10987 ;; Registers used:
 10988 ;;		wreg, status,2, status,0
 10989 ;; Tracked objects:
 10990 ;;		On entry : 0/0
 10991 ;;		On exit  : 0/0
 10992 ;;		Unchanged: 0/0
 10993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10994 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10995 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10996 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10997 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10998 ;;Total ram usage:       14 bytes
 10999 ;; Hardware stack levels used: 1
 11000 ;; This function calls:
 11001 ;;		Nothing
 11002 ;; This function is called by:
 11003 ;;		_main
 11004 ;; This function uses a non-reentrant model
 11005 ;;
 11006                           
 11007  0017                     ___xxtofl:	
 11008                           ;psect for function ___xxtofl
 11009                           
 11010                           
 11011                           ;incstack = 0
 11012                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 11013                           ;___xxtofl@sign stored from wreg
 11014  0017  0020               	movlb	0	; select bank0
 11015  0018  00A0               	movwf	___xxtofl@sign
 11016  0019                     l4184:
 11017  0019  0820               	movf	___xxtofl@sign,w
 11018  001A  1903               	btfsc	3,2
 11019  001B  281D               	goto	u5441
 11020  001C  281E               	goto	u5440
 11021  001D                     u5441:
 11022  001D  2832               	goto	l4190
 11023  001E                     u5440:
 11024  001E                     l4186:
 11025  001E  1FF7               	btfss	___xxtofl@val+3,7
 11026  001F  2821               	goto	u5451
 11027  0020  2822               	goto	u5450
 11028  0021                     u5451:
 11029  0021  2832               	goto	l4190
 11030  0022                     u5450:
 11031  0022                     l4188:
 11032  0022  0974               	comf	___xxtofl@val,w
 11033  0023  00A2               	movwf	___xxtofl@arg
 11034  0024  0975               	comf	___xxtofl@val+1,w
 11035  0025  00A3               	movwf	___xxtofl@arg+1
 11036  0026  0976               	comf	___xxtofl@val+2,w
 11037  0027  00A4               	movwf	___xxtofl@arg+2
 11038  0028  0977               	comf	___xxtofl@val+3,w
 11039  0029  00A5               	movwf	___xxtofl@arg+3
 11040  002A  0AA2               	incf	___xxtofl@arg,f
 11041  002B  1903               	skipnz
 11042  002C  0AA3               	incf	___xxtofl@arg+1,f
 11043  002D  1903               	skipnz
 11044  002E  0AA4               	incf	___xxtofl@arg+2,f
 11045  002F  1903               	skipnz
 11046  0030  0AA5               	incf	___xxtofl@arg+3,f
 11047  0031  283A               	goto	l792
 11048  0032                     l4190:
 11049  0032  0877               	movf	___xxtofl@val+3,w
 11050  0033  00A5               	movwf	___xxtofl@arg+3
 11051  0034  0876               	movf	___xxtofl@val+2,w
 11052  0035  00A4               	movwf	___xxtofl@arg+2
 11053  0036  0875               	movf	___xxtofl@val+1,w
 11054  0037  00A3               	movwf	___xxtofl@arg+1
 11055  0038  0874               	movf	___xxtofl@val,w
 11056  0039  00A2               	movwf	___xxtofl@arg
 11057  003A                     l792:
 11058  003A  0877               	movf	___xxtofl@val+3,w
 11059  003B  0476               	iorwf	___xxtofl@val+2,w
 11060  003C  0475               	iorwf	___xxtofl@val+1,w
 11061  003D  0474               	iorwf	___xxtofl@val,w
 11062  003E  1D03               	skipz
 11063  003F  2841               	goto	u5461
 11064  0040  2842               	goto	u5460
 11065  0041                     u5461:
 11066  0041  284B               	goto	l4196
 11067  0042                     u5460:
 11068  0042                     l4192:
 11069  0042  3000               	movlw	0
 11070  0043  00F7               	movwf	?___xxtofl+3
 11071  0044  3000               	movlw	0
 11072  0045  00F6               	movwf	?___xxtofl+2
 11073  0046  3000               	movlw	0
 11074  0047  00F5               	movwf	?___xxtofl+1
 11075  0048  3000               	movlw	0
 11076  0049  00F4               	movwf	?___xxtofl
 11077  004A  28C3               	goto	l794
 11078  004B                     l4196:
 11079  004B  3096               	movlw	150
 11080  004C  00F8               	movwf	??___xxtofl
 11081  004D  0878               	movf	??___xxtofl,w
 11082  004E  00A1               	movwf	___xxtofl@exp
 11083  004F  285B               	goto	l4200
 11084  0050                     l4198:
 11085  0050  3001               	movlw	1
 11086  0051  00F8               	movwf	??___xxtofl
 11087  0052  0878               	movf	??___xxtofl,w
 11088  0053  07A1               	addwf	___xxtofl@exp,f
 11089  0054  3001               	movlw	1
 11090  0055                     u5475:
 11091  0055  36A5               	lsrf	___xxtofl@arg+3,f
 11092  0056  0CA4               	rrf	___xxtofl@arg+2,f
 11093  0057  0CA3               	rrf	___xxtofl@arg+1,f
 11094  0058  0CA2               	rrf	___xxtofl@arg,f
 11095  0059  0B89               	decfsz	9,f
 11096  005A  2855               	goto	u5475
 11097  005B                     l4200:
 11098  005B  30FE               	movlw	254
 11099  005C  0525               	andwf	___xxtofl@arg+3,w
 11100  005D  1D03               	btfss	3,2
 11101  005E  2860               	goto	u5481
 11102  005F  2861               	goto	u5480
 11103  0060                     u5481:
 11104  0060  2850               	goto	l4198
 11105  0061                     u5480:
 11106  0061  2875               	goto	l798
 11107  0062                     l4202:
 11108  0062  3001               	movlw	1
 11109  0063  00F8               	movwf	??___xxtofl
 11110  0064  0878               	movf	??___xxtofl,w
 11111  0065  07A1               	addwf	___xxtofl@exp,f
 11112  0066                     l4204:
 11113  0066  3001               	movlw	1
 11114  0067  07A2               	addwf	___xxtofl@arg,f
 11115  0068  3000               	movlw	0
 11116  0069  3DA3               	addwfc	___xxtofl@arg+1,f
 11117  006A  3000               	movlw	0
 11118  006B  3DA4               	addwfc	___xxtofl@arg+2,f
 11119  006C  3000               	movlw	0
 11120  006D  3DA5               	addwfc	___xxtofl@arg+3,f
 11121  006E                     l4206:
 11122  006E  3001               	movlw	1
 11123  006F                     u5495:
 11124  006F  36A5               	lsrf	___xxtofl@arg+3,f
 11125  0070  0CA4               	rrf	___xxtofl@arg+2,f
 11126  0071  0CA3               	rrf	___xxtofl@arg+1,f
 11127  0072  0CA2               	rrf	___xxtofl@arg,f
 11128  0073  0B89               	decfsz	9,f
 11129  0074  286F               	goto	u5495
 11130  0075                     l798:
 11131  0075  30FF               	movlw	255
 11132  0076  0525               	andwf	___xxtofl@arg+3,w
 11133  0077  1D03               	btfss	3,2
 11134  0078  287A               	goto	u5501
 11135  0079  287B               	goto	u5500
 11136  007A                     u5501:
 11137  007A  2862               	goto	l4202
 11138  007B                     u5500:
 11139  007B  2885               	goto	l4210
 11140  007C                     l4208:
 11141  007C  3001               	movlw	1
 11142  007D  02A1               	subwf	___xxtofl@exp,f
 11143  007E  3001               	movlw	1
 11144  007F                     u5515:
 11145  007F  35A2               	lslf	___xxtofl@arg,f
 11146  0080  0DA3               	rlf	___xxtofl@arg+1,f
 11147  0081  0DA4               	rlf	___xxtofl@arg+2,f
 11148  0082  0DA5               	rlf	___xxtofl@arg+3,f
 11149  0083  0B89               	decfsz	9,f
 11150  0084  287F               	goto	u5515
 11151  0085                     l4210:
 11152  0085  1BA4               	btfsc	___xxtofl@arg+2,7
 11153  0086  2888               	goto	u5521
 11154  0087  2889               	goto	u5520
 11155  0088                     u5521:
 11156  0088  288F               	goto	l805
 11157  0089                     u5520:
 11158  0089                     l4212:
 11159  0089  3002               	movlw	2
 11160  008A  0221               	subwf	___xxtofl@exp,w
 11161  008B  1803               	skipnc
 11162  008C  288E               	goto	u5531
 11163  008D  288F               	goto	u5530
 11164  008E                     u5531:
 11165  008E  287C               	goto	l4208
 11166  008F                     u5530:
 11167  008F                     l805:
 11168  008F  1821               	btfsc	___xxtofl@exp,0
 11169  0090  2892               	goto	u5541
 11170  0091  2893               	goto	u5540
 11171  0092                     u5541:
 11172  0092  289B               	goto	l806
 11173  0093                     u5540:
 11174  0093                     l4214:
 11175  0093  30FF               	movlw	255
 11176  0094  05A2               	andwf	___xxtofl@arg,f
 11177  0095  30FF               	movlw	255
 11178  0096  05A3               	andwf	___xxtofl@arg+1,f
 11179  0097  307F               	movlw	127
 11180  0098  05A4               	andwf	___xxtofl@arg+2,f
 11181  0099  30FF               	movlw	255
 11182  009A  05A5               	andwf	___xxtofl@arg+3,f
 11183  009B                     l806:
 11184  009B  1003               	clrc
 11185  009C  0CA1               	rrf	___xxtofl@exp,f
 11186  009D                     l4216:
 11187  009D  0821               	movf	___xxtofl@exp,w
 11188  009E  00F8               	movwf	??___xxtofl
 11189  009F  01F9               	clrf	??___xxtofl+1
 11190  00A0  01FA               	clrf	??___xxtofl+2
 11191  00A1  01FB               	clrf	??___xxtofl+3
 11192  00A2  3018               	movlw	24
 11193  00A3                     u5555:
 11194  00A3  35F8               	lslf	??___xxtofl,f
 11195  00A4  0DF9               	rlf	??___xxtofl+1,f
 11196  00A5  0DFA               	rlf	??___xxtofl+2,f
 11197  00A6  0DFB               	rlf	??___xxtofl+3,f
 11198  00A7                     u5550:
 11199  00A7  0B89               	decfsz	9,f
 11200  00A8  28A3               	goto	u5555
 11201  00A9  0878               	movf	??___xxtofl,w
 11202  00AA  04A2               	iorwf	___xxtofl@arg,f
 11203  00AB  0879               	movf	??___xxtofl+1,w
 11204  00AC  04A3               	iorwf	___xxtofl@arg+1,f
 11205  00AD  087A               	movf	??___xxtofl+2,w
 11206  00AE  04A4               	iorwf	___xxtofl@arg+2,f
 11207  00AF  087B               	movf	??___xxtofl+3,w
 11208  00B0  04A5               	iorwf	___xxtofl@arg+3,f
 11209  00B1                     l4218:
 11210  00B1  0820               	movf	___xxtofl@sign,w
 11211  00B2  1903               	btfsc	3,2
 11212  00B3  28B5               	goto	u5561
 11213  00B4  28B6               	goto	u5560
 11214  00B5                     u5561:
 11215  00B5  28BB               	goto	l4224
 11216  00B6                     u5560:
 11217  00B6                     l4220:
 11218  00B6  1FF7               	btfss	___xxtofl@val+3,7
 11219  00B7  28B9               	goto	u5571
 11220  00B8  28BA               	goto	u5570
 11221  00B9                     u5571:
 11222  00B9  28BB               	goto	l4224
 11223  00BA                     u5570:
 11224  00BA                     l4222:
 11225  00BA  17A5               	bsf	___xxtofl@arg+3,7
 11226  00BB                     l4224:
 11227  00BB  0825               	movf	___xxtofl@arg+3,w
 11228  00BC  00F7               	movwf	?___xxtofl+3
 11229  00BD  0824               	movf	___xxtofl@arg+2,w
 11230  00BE  00F6               	movwf	?___xxtofl+2
 11231  00BF  0823               	movf	___xxtofl@arg+1,w
 11232  00C0  00F5               	movwf	?___xxtofl+1
 11233  00C1  0822               	movf	___xxtofl@arg,w
 11234  00C2  00F4               	movwf	?___xxtofl
 11235  00C3                     l794:
 11236  00C3  0008               	return
 11237  00C4                     __end_of___xxtofl:
 11238                           
 11239                           	psect	text32
 11240  000A                     __ptext32:	
 11241 ;; *************** function _SYSTEM_Initialize *****************
 11242 ;; Defined at:
 11243 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11244 ;; Parameters:    Size  Location     Type
 11245 ;;		None
 11246 ;; Auto vars:     Size  Location     Type
 11247 ;;		None
 11248 ;; Return value:  Size  Location     Type
 11249 ;;                  1    wreg      void 
 11250 ;; Registers used:
 11251 ;;		wreg, status,2, status,0, pclath, cstack
 11252 ;; Tracked objects:
 11253 ;;		On entry : 0/0
 11254 ;;		On exit  : 0/0
 11255 ;;		Unchanged: 0/0
 11256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11261 ;;Total ram usage:        0 bytes
 11262 ;; Hardware stack levels used: 1
 11263 ;; Hardware stack levels required when called: 1
 11264 ;; This function calls:
 11265 ;;		_ADC_Initialize
 11266 ;;		_OSCILLATOR_Initialize
 11267 ;;		_PIN_MANAGER_Initialize
 11268 ;;		_WDT_Initialize
 11269 ;; This function is called by:
 11270 ;;		_main
 11271 ;; This function uses a non-reentrant model
 11272 ;;
 11273                           
 11274  000A                     _SYSTEM_Initialize:	
 11275                           ;psect for function _SYSTEM_Initialize
 11276                           
 11277  000A                     l4122:	
 11278                           ;incstack = 0
 11279                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11280                           
 11281                           
 11282                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 11283  000A  319F  2792  3180   	fcall	_PIN_MANAGER_Initialize
 11284                           
 11285                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 11286  000D  319E  2634  3180   	fcall	_OSCILLATOR_Initialize
 11287                           
 11288                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
 11289  0010  3188  2000  3180   	fcall	_WDT_Initialize
 11290                           
 11291                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
 11292  0013  319E  2621  3180   	fcall	_ADC_Initialize
 11293  0016                     l21:
 11294  0016  0008               	return
 11295  0017                     __end_of_SYSTEM_Initialize:
 11296                           
 11297                           	psect	text33
 11298  0800                     __ptext33:	
 11299 ;; *************** function _WDT_Initialize *****************
 11300 ;; Defined at:
 11301 ;;		line 73 in file "mcc_generated_files/mcc.c"
 11302 ;; Parameters:    Size  Location     Type
 11303 ;;		None
 11304 ;; Auto vars:     Size  Location     Type
 11305 ;;		None
 11306 ;; Return value:  Size  Location     Type
 11307 ;;                  1    wreg      void 
 11308 ;; Registers used:
 11309 ;;		wreg
 11310 ;; Tracked objects:
 11311 ;;		On entry : 0/0
 11312 ;;		On exit  : 0/0
 11313 ;;		Unchanged: 0/0
 11314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11319 ;;Total ram usage:        0 bytes
 11320 ;; Hardware stack levels used: 1
 11321 ;; This function calls:
 11322 ;;		Nothing
 11323 ;; This function is called by:
 11324 ;;		_SYSTEM_Initialize
 11325 ;; This function uses a non-reentrant model
 11326 ;;
 11327                           
 11328  0800                     _WDT_Initialize:	
 11329                           ;psect for function _WDT_Initialize
 11330                           
 11331  0800                     l4074:	
 11332                           ;incstack = 0
 11333                           ; Regs used in _WDT_Initialize: [wreg]
 11334                           
 11335                           
 11336                           ;mcc_generated_files/mcc.c: 76:     WDTCON = 0x16;
 11337  0800  3016               	movlw	22
 11338  0801  0021               	movlb	1	; select bank1
 11339  0802  0097               	movwf	23	;volatile
 11340  0803                     l30:
 11341  0803  0008               	return
 11342  0804                     __end_of_WDT_Initialize:
 11343                           
 11344                           	psect	text34
 11345  1F92                     __ptext34:	
 11346 ;; *************** function _PIN_MANAGER_Initialize *****************
 11347 ;; Defined at:
 11348 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 11349 ;; Parameters:    Size  Location     Type
 11350 ;;		None
 11351 ;; Auto vars:     Size  Location     Type
 11352 ;;		None
 11353 ;; Return value:  Size  Location     Type
 11354 ;;                  1    wreg      void 
 11355 ;; Registers used:
 11356 ;;		wreg, status,2
 11357 ;; Tracked objects:
 11358 ;;		On entry : 0/0
 11359 ;;		On exit  : 0/0
 11360 ;;		Unchanged: 0/0
 11361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11366 ;;Total ram usage:        0 bytes
 11367 ;; Hardware stack levels used: 1
 11368 ;; This function calls:
 11369 ;;		Nothing
 11370 ;; This function is called by:
 11371 ;;		_SYSTEM_Initialize
 11372 ;; This function uses a non-reentrant model
 11373 ;;
 11374                           
 11375  1F92                     _PIN_MANAGER_Initialize:	
 11376                           ;psect for function _PIN_MANAGER_Initialize
 11377                           
 11378  1F92                     l4040:	
 11379                           ;incstack = 0
 11380                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11381                           
 11382                           
 11383                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 11384  1F92  0022               	movlb	2	; select bank2
 11385  1F93  0190               	clrf	16	;volatile
 11386                           
 11387                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 11388  1F94  018F               	clrf	15	;volatile
 11389                           
 11390                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 11391  1F95  018C               	clrf	12	;volatile
 11392                           
 11393                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 11394  1F96  018D               	clrf	13	;volatile
 11395                           
 11396                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 11397  1F97  018E               	clrf	14	;volatile
 11398  1F98                     l4042:
 11399                           
 11400                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x0F;
 11401  1F98  300F               	movlw	15
 11402  1F99  0021               	movlb	1	; select bank1
 11403  1F9A  0090               	movwf	16	;volatile
 11404  1F9B                     l4044:
 11405                           
 11406                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
 11407  1F9B  30FF               	movlw	255
 11408  1F9C  008C               	movwf	12	;volatile
 11409  1F9D                     l4046:
 11410                           
 11411                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 11412  1F9D  30FF               	movlw	255
 11413  1F9E  008D               	movwf	13	;volatile
 11414  1F9F                     l4048:
 11415                           
 11416                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 11417  1F9F  30FF               	movlw	255
 11418  1FA0  008E               	movwf	14	;volatile
 11419  1FA1                     l4050:
 11420                           
 11421                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 11422  1FA1  30FF               	movlw	255
 11423  1FA2  008F               	movwf	15	;volatile
 11424  1FA3                     l4052:
 11425                           
 11426                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 11427  1FA3  30FF               	movlw	255
 11428  1FA4  0023               	movlb	3	; select bank3
 11429  1FA5  008F               	movwf	15	;volatile
 11430  1FA6                     l4054:
 11431                           
 11432                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0x3F;
 11433  1FA6  303F               	movlw	63
 11434  1FA7  008D               	movwf	13	;volatile
 11435  1FA8                     l4056:
 11436                           
 11437                           ;mcc_generated_files/pin_manager.c: 80:     ANSELE = 0x07;
 11438  1FA8  3007               	movlw	7
 11439  1FA9  0090               	movwf	16	;volatile
 11440  1FAA                     l4058:
 11441                           
 11442                           ;mcc_generated_files/pin_manager.c: 81:     ANSELA = 0x3F;
 11443  1FAA  303F               	movlw	63
 11444  1FAB  008C               	movwf	12	;volatile
 11445  1FAC                     l4060:
 11446                           
 11447                           ;mcc_generated_files/pin_manager.c: 86:     WPUE = 0x00;
 11448  1FAC  0024               	movlb	4	; select bank4
 11449  1FAD  0190               	clrf	16	;volatile
 11450  1FAE                     l4062:
 11451                           
 11452                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
 11453  1FAE  018D               	clrf	13	;volatile
 11454  1FAF                     l4064:
 11455                           
 11456                           ;mcc_generated_files/pin_manager.c: 88:     OPTION_REGbits.nWPUEN = 1;
 11457  1FAF  0021               	movlb	1	; select bank1
 11458  1FB0  1795               	bsf	21,7	;volatile
 11459  1FB1                     l4066:
 11460                           
 11461                           ;mcc_generated_files/pin_manager.c: 94:     APFCON = 0x00;
 11462  1FB1  0022               	movlb	2	; select bank2
 11463  1FB2  019D               	clrf	29	;volatile
 11464  1FB3                     l69:
 11465  1FB3  0008               	return
 11466  1FB4                     __end_of_PIN_MANAGER_Initialize:
 11467                           
 11468                           	psect	text35
 11469  1E34                     __ptext35:	
 11470 ;; *************** function _OSCILLATOR_Initialize *****************
 11471 ;; Defined at:
 11472 ;;		line 59 in file "mcc_generated_files/mcc.c"
 11473 ;; Parameters:    Size  Location     Type
 11474 ;;		None
 11475 ;; Auto vars:     Size  Location     Type
 11476 ;;		None
 11477 ;; Return value:  Size  Location     Type
 11478 ;;                  1    wreg      void 
 11479 ;; Registers used:
 11480 ;;		wreg, status,2
 11481 ;; Tracked objects:
 11482 ;;		On entry : 0/0
 11483 ;;		On exit  : 0/0
 11484 ;;		Unchanged: 0/0
 11485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11490 ;;Total ram usage:        0 bytes
 11491 ;; Hardware stack levels used: 1
 11492 ;; This function calls:
 11493 ;;		Nothing
 11494 ;; This function is called by:
 11495 ;;		_SYSTEM_Initialize
 11496 ;; This function uses a non-reentrant model
 11497 ;;
 11498                           
 11499  1E34                     _OSCILLATOR_Initialize:	
 11500                           ;psect for function _OSCILLATOR_Initialize
 11501                           
 11502  1E34                     l4068:	
 11503                           ;incstack = 0
 11504                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11505                           
 11506                           
 11507                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x70;
 11508  1E34  3070               	movlw	112
 11509  1E35  0021               	movlb	1	; select bank1
 11510  1E36  0099               	movwf	25	;volatile
 11511  1E37                     l4070:
 11512                           
 11513                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
 11514  1E37  0198               	clrf	24	;volatile
 11515  1E38                     l4072:
 11516                           
 11517                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
 11518  1E38  0022               	movlb	2	; select bank2
 11519  1E39  0196               	clrf	22	;volatile
 11520  1E3A                     l24:	
 11521                           ;mcc_generated_files/mcc.c: 69:     {;mcc_generated_files/mcc.c: 70:     }
 11522                           
 11523                           
 11524                           ;mcc_generated_files/mcc.c: 68:     while(PLLR == 0)
 11525  1E3A  0021               	movlb	1	; select bank1
 11526  1E3B  1F1A               	btfss	26,6	;volatile
 11527  1E3C  2E3E               	goto	u5391
 11528  1E3D  2E3F               	goto	u5390
 11529  1E3E                     u5391:
 11530  1E3E  2E3A               	goto	l24
 11531  1E3F                     u5390:
 11532  1E3F                     l27:
 11533  1E3F  0008               	return
 11534  1E40                     __end_of_OSCILLATOR_Initialize:
 11535                           
 11536                           	psect	text36
 11537  1E21                     __ptext36:	
 11538 ;; *************** function _ADC_Initialize *****************
 11539 ;; Defined at:
 11540 ;;		line 67 in file "mcc_generated_files/adc.c"
 11541 ;; Parameters:    Size  Location     Type
 11542 ;;		None
 11543 ;; Auto vars:     Size  Location     Type
 11544 ;;		None
 11545 ;; Return value:  Size  Location     Type
 11546 ;;                  1    wreg      void 
 11547 ;; Registers used:
 11548 ;;		wreg, status,2
 11549 ;; Tracked objects:
 11550 ;;		On entry : 0/0
 11551 ;;		On exit  : 0/0
 11552 ;;		Unchanged: 0/0
 11553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11558 ;;Total ram usage:        0 bytes
 11559 ;; Hardware stack levels used: 1
 11560 ;; This function calls:
 11561 ;;		Nothing
 11562 ;; This function is called by:
 11563 ;;		_SYSTEM_Initialize
 11564 ;; This function uses a non-reentrant model
 11565 ;;
 11566                           
 11567  1E21                     _ADC_Initialize:	
 11568                           ;psect for function _ADC_Initialize
 11569                           
 11570  1E21                     l4076:	
 11571                           ;incstack = 0
 11572                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 11573                           
 11574                           
 11575                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xE0;
 11576  1E21  30E0               	movlw	224
 11577  1E22  0021               	movlb	1	; select bank1
 11578  1E23  009E               	movwf	30	;volatile
 11579  1E24                     l4078:
 11580                           
 11581                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
 11582  1E24  019B               	clrf	27	;volatile
 11583  1E25                     l4080:
 11584                           
 11585                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
 11586  1E25  019C               	clrf	28	;volatile
 11587                           
 11588                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
 11589  1E26  3001               	movlw	1
 11590  1E27  009D               	movwf	29	;volatile
 11591  1E28                     l89:
 11592  1E28  0008               	return
 11593  1E29                     __end_of_ADC_Initialize:
 11594                           
 11595                           	psect	text37
 11596  1F70                     __ptext37:	
 11597 ;; *************** function _LCD_Write_Text *****************
 11598 ;; Defined at:
 11599 ;;		line 104 in file "LCD_LIB.c"
 11600 ;; Parameters:    Size  Location     Type
 11601 ;;  fila            1    wreg     unsigned char 
 11602 ;;  col             1   12[COMMON] unsigned char 
 11603 ;;  text            1   13[COMMON] PTR unsigned char 
 11604 ;;		 -> strText(20), 
 11605 ;; Auto vars:     Size  Location     Type
 11606 ;;  fila            1    1[BANK0 ] unsigned char 
 11607 ;; Return value:  Size  Location     Type
 11608 ;;                  1    wreg      void 
 11609 ;; Registers used:
 11610 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11611 ;; Tracked objects:
 11612 ;;		On entry : 0/0
 11613 ;;		On exit  : 0/0
 11614 ;;		Unchanged: 0/0
 11615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11617 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11618 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11619 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11620 ;;Total ram usage:        4 bytes
 11621 ;; Hardware stack levels used: 1
 11622 ;; Hardware stack levels required when called: 3
 11623 ;; This function calls:
 11624 ;;		_LCD_Set_Cursor
 11625 ;;		_LCD_Write_Cp
 11626 ;; This function is called by:
 11627 ;;		_main
 11628 ;; This function uses a non-reentrant model
 11629 ;;
 11630                           
 11631  1F70                     _LCD_Write_Text:	
 11632                           ;psect for function _LCD_Write_Text
 11633                           
 11634                           
 11635                           ;incstack = 0
 11636                           ; Regs used in _LCD_Write_Text: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11637                           ;LCD_Write_Text@fila stored from wreg
 11638  1F70  0020               	movlb	0	; select bank0
 11639  1F71  00A1               	movwf	LCD_Write_Text@fila
 11640  1F72                     l4176:
 11641                           
 11642                           ;LCD_LIB.c: 105:     LCD_Set_Cursor(fila, col);
 11643  1F72  087C               	movf	LCD_Write_Text@col,w
 11644  1F73  00A0               	movwf	??_LCD_Write_Text
 11645  1F74  0820               	movf	??_LCD_Write_Text,w
 11646  1F75  00F7               	movwf	LCD_Set_Cursor@col
 11647  1F76  0821               	movf	LCD_Write_Text@fila,w
 11648  1F77  3190  20CE  319F   	fcall	_LCD_Set_Cursor
 11649                           
 11650                           ;LCD_LIB.c: 106:     while(*text){
 11651  1F7A  2F88               	goto	l4182
 11652  1F7B                     l4178:
 11653                           
 11654                           ;LCD_LIB.c: 107:         LCD_Write_Cp(*text);
 11655  1F7B  087D               	movf	LCD_Write_Text@text,w
 11656  1F7C  0086               	movwf	6
 11657  1F7D  3001               	movlw	1	; select bank2/3
 11658  1F7E  0087               	movwf	7
 11659  1F7F  0801               	movf	1,w
 11660  1F80  319E  269B  319F   	fcall	_LCD_Write_Cp
 11661  1F83                     l4180:
 11662                           
 11663                           ;LCD_LIB.c: 108:         text++;
 11664  1F83  3001               	movlw	1
 11665  1F84  0020               	movlb	0	; select bank0
 11666  1F85  00A0               	movwf	??_LCD_Write_Text
 11667  1F86  0820               	movf	??_LCD_Write_Text,w
 11668  1F87  07FD               	addwf	LCD_Write_Text@text,f
 11669  1F88                     l4182:
 11670                           
 11671                           ;LCD_LIB.c: 106:     while(*text){
 11672  1F88  087D               	movf	LCD_Write_Text@text,w
 11673  1F89  0086               	movwf	6
 11674  1F8A  3001               	movlw	1	; select bank2/3
 11675  1F8B  0087               	movwf	7
 11676  1F8C  0801               	movf	1,w
 11677  1F8D  1D03               	btfss	3,2
 11678  1F8E  2F90               	goto	u5431
 11679  1F8F  2F91               	goto	u5430
 11680  1F90                     u5431:
 11681  1F90  2F7B               	goto	l4178
 11682  1F91                     u5430:
 11683  1F91                     l201:
 11684  1F91  0008               	return
 11685  1F92                     __end_of_LCD_Write_Text:
 11686                           
 11687                           	psect	text38
 11688  1E9B                     __ptext38:	
 11689 ;; *************** function _LCD_Write_Cp *****************
 11690 ;; Defined at:
 11691 ;;		line 72 in file "LCD_LIB.c"
 11692 ;; Parameters:    Size  Location     Type
 11693 ;;  letra           1    wreg     unsigned char 
 11694 ;; Auto vars:     Size  Location     Type
 11695 ;;  letra           1    6[COMMON] unsigned char 
 11696 ;;  NibbleL         1    5[COMMON] unsigned char 
 11697 ;;  NibbleH         1    4[COMMON] unsigned char 
 11698 ;; Return value:  Size  Location     Type
 11699 ;;                  1    wreg      void 
 11700 ;; Registers used:
 11701 ;;		wreg, status,2, status,0, pclath, cstack
 11702 ;; Tracked objects:
 11703 ;;		On entry : 0/0
 11704 ;;		On exit  : 0/0
 11705 ;;		Unchanged: 0/0
 11706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11708 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11709 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11710 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11711 ;;Total ram usage:        5 bytes
 11712 ;; Hardware stack levels used: 1
 11713 ;; Hardware stack levels required when called: 1
 11714 ;; This function calls:
 11715 ;;		_Load_Data
 11716 ;; This function is called by:
 11717 ;;		_LCD_Write_Text
 11718 ;;		_LCD_Write_Text_Cp
 11719 ;;		_LCD_Write
 11720 ;; This function uses a non-reentrant model
 11721 ;;
 11722                           
 11723  1E9B                     _LCD_Write_Cp:	
 11724                           ;psect for function _LCD_Write_Cp
 11725                           
 11726                           
 11727                           ;incstack = 0
 11728                           ; Regs used in _LCD_Write_Cp: [wreg+status,2+status,0+pclath+cstack]
 11729                           ;LCD_Write_Cp@letra stored from wreg
 11730  1E9B  00F6               	movwf	LCD_Write_Cp@letra
 11731  1E9C                     l4082:
 11732                           
 11733                           ;LCD_LIB.c: 73:     char NibbleH, NibbleL;;LCD_LIB.c: 74:     NibbleH = letra>>4;
 11734  1E9C  0876               	movf	LCD_Write_Cp@letra,w
 11735  1E9D  00F2               	movwf	??_LCD_Write_Cp
 11736  1E9E  3004               	movlw	4
 11737  1E9F                     u5405:
 11738  1E9F  36F2               	lsrf	??_LCD_Write_Cp,f
 11739  1EA0  0B89               	decfsz	9,f
 11740  1EA1  2E9F               	goto	u5405
 11741  1EA2  0872               	movf	??_LCD_Write_Cp,w
 11742  1EA3  00F3               	movwf	??_LCD_Write_Cp+1
 11743  1EA4  0873               	movf	??_LCD_Write_Cp+1,w
 11744  1EA5  00F4               	movwf	LCD_Write_Cp@NibbleH
 11745  1EA6                     l4084:
 11746                           
 11747                           ;LCD_LIB.c: 75:     NibbleL = letra & 0x0F;
 11748  1EA6  0876               	movf	LCD_Write_Cp@letra,w
 11749  1EA7  390F               	andlw	15
 11750  1EA8  00F2               	movwf	??_LCD_Write_Cp
 11751  1EA9  0872               	movf	??_LCD_Write_Cp,w
 11752  1EAA  00F5               	movwf	LCD_Write_Cp@NibbleL
 11753  1EAB                     l4086:
 11754                           
 11755                           ;LCD_LIB.c: 76:     Load_Data(NibbleH);
 11756  1EAB  0874               	movf	LCD_Write_Cp@NibbleH,w
 11757  1EAC  3190  2072  319E   	fcall	_Load_Data
 11758  1EAF                     l4088:
 11759                           
 11760                           ;LCD_LIB.c: 77:     Load_Data(NibbleL);
 11761  1EAF  0875               	movf	LCD_Write_Cp@NibbleL,w
 11762  1EB0  3190  2072  319E   	fcall	_Load_Data
 11763  1EB3                     l177:
 11764  1EB3  0008               	return
 11765  1EB4                     __end_of_LCD_Write_Cp:
 11766                           
 11767                           	psect	text39
 11768  1072                     __ptext39:	
 11769 ;; *************** function _Load_Data *****************
 11770 ;; Defined at:
 11771 ;;		line 20 in file "LCD_LIB.c"
 11772 ;; Parameters:    Size  Location     Type
 11773 ;;  data            1    wreg     unsigned char 
 11774 ;; Auto vars:     Size  Location     Type
 11775 ;;  data            1    1[COMMON] unsigned char 
 11776 ;; Return value:  Size  Location     Type
 11777 ;;                  1    wreg      void 
 11778 ;; Registers used:
 11779 ;;		wreg
 11780 ;; Tracked objects:
 11781 ;;		On entry : 0/0
 11782 ;;		On exit  : 0/0
 11783 ;;		Unchanged: 0/0
 11784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11786 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11787 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11788 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11789 ;;Total ram usage:        2 bytes
 11790 ;; Hardware stack levels used: 1
 11791 ;; This function calls:
 11792 ;;		Nothing
 11793 ;; This function is called by:
 11794 ;;		_LCD_Write_Cp
 11795 ;; This function uses a non-reentrant model
 11796 ;;
 11797                           
 11798  1072                     _Load_Data:	
 11799                           ;psect for function _Load_Data
 11800                           
 11801                           
 11802                           ;incstack = 0
 11803                           ; Regs used in _Load_Data: [wreg]
 11804                           ;Load_Data@data stored from wreg
 11805  1072  00F1               	movwf	Load_Data@data
 11806  1073                     l3908:
 11807                           
 11808                           ;LCD_LIB.c: 21:     LATDbits.LATD0 = 1;
 11809  1073  0022               	movlb	2	; select bank2
 11810  1074  140F               	bsf	15,0	;volatile
 11811  1075                     l3910:
 11812                           
 11813                           ;LCD_LIB.c: 23:     if( (data & 1) == 0 ) LATDbits.LATD4 = 0; else LATDbits.LATD4 = 1;
 11814  1075  1871               	btfsc	Load_Data@data,0
 11815  1076  2878               	goto	u5221
 11816  1077  2879               	goto	u5220
 11817  1078                     u5221:
 11818  1078  287B               	goto	l160
 11819  1079                     u5220:
 11820  1079                     l3912:
 11821  1079  120F               	bcf	15,4	;volatile
 11822  107A  287C               	goto	l3914
 11823  107B                     l160:
 11824  107B  160F               	bsf	15,4	;volatile
 11825  107C                     l3914:
 11826                           
 11827                           ;LCD_LIB.c: 24:     if( (data & 2) == 0 ) LATDbits.LATD5 = 0; else LATDbits.LATD5 = 1;
 11828  107C  18F1               	btfsc	Load_Data@data,1
 11829  107D  287F               	goto	u5231
 11830  107E  2880               	goto	u5230
 11831  107F                     u5231:
 11832  107F  2882               	goto	l162
 11833  1080                     u5230:
 11834  1080                     l3916:
 11835  1080  128F               	bcf	15,5	;volatile
 11836  1081  2883               	goto	l3918
 11837  1082                     l162:
 11838  1082  168F               	bsf	15,5	;volatile
 11839  1083                     l3918:
 11840                           
 11841                           ;LCD_LIB.c: 25:     if( (data & 4) == 0 ) LATDbits.LATD6 = 0; else LATDbits.LATD6 = 1;
 11842  1083  1971               	btfsc	Load_Data@data,2
 11843  1084  2886               	goto	u5241
 11844  1085  2887               	goto	u5240
 11845  1086                     u5241:
 11846  1086  2889               	goto	l164
 11847  1087                     u5240:
 11848  1087                     l3920:
 11849  1087  130F               	bcf	15,6	;volatile
 11850  1088  288A               	goto	l3922
 11851  1089                     l164:
 11852  1089  170F               	bsf	15,6	;volatile
 11853  108A                     l3922:
 11854                           
 11855                           ;LCD_LIB.c: 26:     if( (data & 8) == 0 ) LATDbits.LATD7 = 0; else LATDbits.LATD7 = 1;
 11856  108A  19F1               	btfsc	Load_Data@data,3
 11857  108B  288D               	goto	u5251
 11858  108C  288E               	goto	u5250
 11859  108D                     u5251:
 11860  108D  2890               	goto	l166
 11861  108E                     u5250:
 11862  108E                     l3924:
 11863  108E  138F               	bcf	15,7	;volatile
 11864  108F  2891               	goto	l167
 11865  1090                     l166:
 11866  1090  178F               	bsf	15,7	;volatile
 11867  1091                     l167:
 11868                           
 11869                           ;LCD_LIB.c: 28:     LATDbits.LATD1 = 0;
 11870  1091  108F               	bcf	15,1	;volatile
 11871                           
 11872                           ;LCD_LIB.c: 29:     LATDbits.LATD1 = 1;
 11873  1092  148F               	bsf	15,1	;volatile
 11874                           
 11875                           ;LCD_LIB.c: 30:     LATDbits.LATD1 = 0;
 11876  1093  108F               	bcf	15,1	;volatile
 11877  1094                     l3926:
 11878                           
 11879                           ;LCD_LIB.c: 32:     _delay((unsigned long)((300)*(32000000/4000000.0)));
 11880  1094  3004               	movlw	4
 11881  1095  00F0               	movwf	??_Load_Data
 11882  1096  301C               	movlw	28
 11883  1097                     u5637:
 11884  1097  0B89               	decfsz	9,f
 11885  1098  2897               	goto	u5637
 11886  1099  0BF0               	decfsz	??_Load_Data,f
 11887  109A  2897               	goto	u5637
 11888  109B  3200               	nop2
 11889  109C                     l168:
 11890  109C  0008               	return
 11891  109D                     __end_of_Load_Data:
 11892                           
 11893                           	psect	text40
 11894  10CE                     __ptext40:	
 11895 ;; *************** function _LCD_Set_Cursor *****************
 11896 ;; Defined at:
 11897 ;;		line 90 in file "LCD_LIB.c"
 11898 ;; Parameters:    Size  Location     Type
 11899 ;;  fila            1    wreg     unsigned char 
 11900 ;;  col             1    7[COMMON] unsigned char 
 11901 ;; Auto vars:     Size  Location     Type
 11902 ;;  fila            1   10[COMMON] unsigned char 
 11903 ;;  pos             1   11[COMMON] unsigned char 
 11904 ;; Return value:  Size  Location     Type
 11905 ;;                  1    wreg      void 
 11906 ;; Registers used:
 11907 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11908 ;; Tracked objects:
 11909 ;;		On entry : 0/0
 11910 ;;		On exit  : 0/0
 11911 ;;		Unchanged: 0/0
 11912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11913 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11914 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11915 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11916 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11917 ;;Total ram usage:        5 bytes
 11918 ;; Hardware stack levels used: 1
 11919 ;; Hardware stack levels required when called: 2
 11920 ;; This function calls:
 11921 ;;		_LCD_Cmd
 11922 ;; This function is called by:
 11923 ;;		_LCD_Write_Text
 11924 ;;		_LCD_Write
 11925 ;; This function uses a non-reentrant model
 11926 ;;
 11927                           
 11928  10CE                     _LCD_Set_Cursor:	
 11929                           ;psect for function _LCD_Set_Cursor
 11930                           
 11931                           
 11932                           ;incstack = 0
 11933                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11934                           ;LCD_Set_Cursor@fila stored from wreg
 11935  10CE  00FA               	movwf	LCD_Set_Cursor@fila
 11936  10CF                     l4090:
 11937                           
 11938                           ;LCD_LIB.c: 91:     char pos;;LCD_LIB.c: 92:     switch(fila){
 11939  10CF  28E8               	goto	l4102
 11940  10D0                     l4092:
 11941  10D0  0877               	movf	LCD_Set_Cursor@col,w
 11942  10D1  3E7F               	addlw	127
 11943  10D2  00F8               	movwf	??_LCD_Set_Cursor
 11944  10D3  0878               	movf	??_LCD_Set_Cursor,w
 11945  10D4  00FB               	movwf	LCD_Set_Cursor@pos
 11946  10D5  28FE               	goto	l4104
 11947  10D6                     l4094:
 11948  10D6  0877               	movf	LCD_Set_Cursor@col,w
 11949  10D7  3EBF               	addlw	191
 11950  10D8  00F8               	movwf	??_LCD_Set_Cursor
 11951  10D9  0878               	movf	??_LCD_Set_Cursor,w
 11952  10DA  00FB               	movwf	LCD_Set_Cursor@pos
 11953  10DB  28FE               	goto	l4104
 11954  10DC                     l4096:
 11955  10DC  0877               	movf	LCD_Set_Cursor@col,w
 11956  10DD  3E93               	addlw	147
 11957  10DE  00F8               	movwf	??_LCD_Set_Cursor
 11958  10DF  0878               	movf	??_LCD_Set_Cursor,w
 11959  10E0  00FB               	movwf	LCD_Set_Cursor@pos
 11960  10E1  28FE               	goto	l4104
 11961  10E2                     l4098:
 11962  10E2  0877               	movf	LCD_Set_Cursor@col,w
 11963  10E3  3ED3               	addlw	211
 11964  10E4  00F8               	movwf	??_LCD_Set_Cursor
 11965  10E5  0878               	movf	??_LCD_Set_Cursor,w
 11966  10E6  00FB               	movwf	LCD_Set_Cursor@pos
 11967  10E7  28FE               	goto	l4104
 11968  10E8                     l4102:
 11969  10E8  087A               	movf	LCD_Set_Cursor@fila,w
 11970  10E9  00F8               	movwf	??_LCD_Set_Cursor
 11971  10EA  01F9               	clrf	??_LCD_Set_Cursor+1
 11972                           
 11973                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11974                           ; Switch size 1, requested type "simple"
 11975                           ; Number of cases is 1, Range of values is 0 to 0
 11976                           ; switch strategies available:
 11977                           ; Name         Instructions Cycles
 11978                           ; simple_byte            4     3 (average)
 11979                           ; direct_byte            8     6 (fixed)
 11980                           ; jumptable            260     6 (fixed)
 11981                           ;	Chosen strategy is simple_byte
 11982  10EB  0879               	movf	??_LCD_Set_Cursor+1,w
 11983  10EC  3A00               	xorlw	0	; case 0
 11984  10ED  1903               	skipnz
 11985  10EE  28F0               	goto	l4298
 11986  10EF  28FE               	goto	l4104
 11987  10F0                     l4298:
 11988                           
 11989                           ; Switch size 1, requested type "simple"
 11990                           ; Number of cases is 4, Range of values is 1 to 4
 11991                           ; switch strategies available:
 11992                           ; Name         Instructions Cycles
 11993                           ; simple_byte           13     7 (average)
 11994                           ; direct_byte           17     9 (fixed)
 11995                           ; jumptable            263     9 (fixed)
 11996                           ;	Chosen strategy is simple_byte
 11997  10F0  0878               	movf	??_LCD_Set_Cursor,w
 11998  10F1  3A01               	xorlw	1	; case 1
 11999  10F2  1903               	skipnz
 12000  10F3  28D0               	goto	l4092
 12001  10F4  3A03               	xorlw	3	; case 2
 12002  10F5  1903               	skipnz
 12003  10F6  28D6               	goto	l4094
 12004  10F7  3A01               	xorlw	1	; case 3
 12005  10F8  1903               	skipnz
 12006  10F9  28DC               	goto	l4096
 12007  10FA  3A07               	xorlw	7	; case 4
 12008  10FB  1903               	skipnz
 12009  10FC  28E2               	goto	l4098
 12010  10FD  28FE               	goto	l4104
 12011  10FE                     l4104:
 12012                           
 12013                           ;LCD_LIB.c: 98:     LCD_Cmd(pos);
 12014  10FE  087B               	movf	LCD_Set_Cursor@pos,w
 12015  10FF  319F  270D  3190   	fcall	_LCD_Cmd
 12016  1102                     l192:
 12017  1102  0008               	return
 12018  1103                     __end_of_LCD_Set_Cursor:
 12019                           
 12020                           	psect	text41
 12021  1F0D                     __ptext41:	
 12022 ;; *************** function _LCD_Cmd *****************
 12023 ;; Defined at:
 12024 ;;		line 64 in file "LCD_LIB.c"
 12025 ;; Parameters:    Size  Location     Type
 12026 ;;  cmd             1    wreg     unsigned char 
 12027 ;; Auto vars:     Size  Location     Type
 12028 ;;  cmd             1    6[COMMON] unsigned char 
 12029 ;;  NibbleL         1    5[COMMON] unsigned char 
 12030 ;;  NibbleH         1    4[COMMON] unsigned char 
 12031 ;; Return value:  Size  Location     Type
 12032 ;;                  1    wreg      void 
 12033 ;; Registers used:
 12034 ;;		wreg, status,2, status,0, pclath, cstack
 12035 ;; Tracked objects:
 12036 ;;		On entry : 0/0
 12037 ;;		On exit  : 0/0
 12038 ;;		Unchanged: 0/0
 12039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12041 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12042 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12043 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12044 ;;Total ram usage:        5 bytes
 12045 ;; Hardware stack levels used: 1
 12046 ;; Hardware stack levels required when called: 1
 12047 ;; This function calls:
 12048 ;;		_Load_Cmd
 12049 ;; This function is called by:
 12050 ;;		_main
 12051 ;;		_LCD_Set_Cursor
 12052 ;; This function uses a non-reentrant model
 12053 ;;
 12054                           
 12055  1F0D                     _LCD_Cmd:	
 12056                           ;psect for function _LCD_Cmd
 12057                           
 12058                           
 12059                           ;incstack = 0
 12060                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 12061                           ;LCD_Cmd@cmd stored from wreg
 12062  1F0D  00F6               	movwf	LCD_Cmd@cmd
 12063  1F0E                     l3898:
 12064                           
 12065                           ;LCD_LIB.c: 65:     char NibbleH, NibbleL;;LCD_LIB.c: 66:     NibbleH = cmd>>4;
 12066  1F0E  0876               	movf	LCD_Cmd@cmd,w
 12067  1F0F  00F2               	movwf	??_LCD_Cmd
 12068  1F10  3004               	movlw	4
 12069  1F11                     u5215:
 12070  1F11  36F2               	lsrf	??_LCD_Cmd,f
 12071  1F12  0B89               	decfsz	9,f
 12072  1F13  2F11               	goto	u5215
 12073  1F14  0872               	movf	??_LCD_Cmd,w
 12074  1F15  00F3               	movwf	??_LCD_Cmd+1
 12075  1F16  0873               	movf	??_LCD_Cmd+1,w
 12076  1F17  00F4               	movwf	LCD_Cmd@NibbleH
 12077  1F18                     l3900:
 12078                           
 12079                           ;LCD_LIB.c: 67:     NibbleL = cmd & 0x0F;
 12080  1F18  0876               	movf	LCD_Cmd@cmd,w
 12081  1F19  390F               	andlw	15
 12082  1F1A  00F2               	movwf	??_LCD_Cmd
 12083  1F1B  0872               	movf	??_LCD_Cmd,w
 12084  1F1C  00F5               	movwf	LCD_Cmd@NibbleL
 12085  1F1D                     l3902:
 12086                           
 12087                           ;LCD_LIB.c: 68:     Load_Cmd(NibbleH);
 12088  1F1D  0874               	movf	LCD_Cmd@NibbleH,w
 12089  1F1E  3190  2047  319F   	fcall	_Load_Cmd
 12090  1F21                     l3904:
 12091                           
 12092                           ;LCD_LIB.c: 69:     Load_Cmd(NibbleL);
 12093  1F21  0875               	movf	LCD_Cmd@NibbleL,w
 12094  1F22  3190  2047  319F   	fcall	_Load_Cmd
 12095  1F25                     l3906:
 12096                           
 12097                           ;LCD_LIB.c: 70:     _delay((unsigned long)((2)*(32000000/4000.0)));
 12098  1F25  3015               	movlw	21
 12099  1F26  00F2               	movwf	??_LCD_Cmd
 12100  1F27  30C6               	movlw	198
 12101  1F28                     u5647:
 12102  1F28  0B89               	decfsz	9,f
 12103  1F29  2F28               	goto	u5647
 12104  1F2A  0BF2               	decfsz	??_LCD_Cmd,f
 12105  1F2B  2F28               	goto	u5647
 12106  1F2C  3200               	nop2
 12107  1F2D                     l174:
 12108  1F2D  0008               	return
 12109  1F2E                     __end_of_LCD_Cmd:
 12110                           
 12111                           	psect	text42
 12112  1151                     __ptext42:	
 12113 ;; *************** function _LCD_Init *****************
 12114 ;; Defined at:
 12115 ;;		line 37 in file "LCD_LIB.c"
 12116 ;; Parameters:    Size  Location     Type
 12117 ;;		None
 12118 ;; Auto vars:     Size  Location     Type
 12119 ;;		None
 12120 ;; Return value:  Size  Location     Type
 12121 ;;                  1    wreg      void 
 12122 ;; Registers used:
 12123 ;;		wreg, status,2, status,0, pclath, cstack
 12124 ;; Tracked objects:
 12125 ;;		On entry : 0/0
 12126 ;;		On exit  : 0/0
 12127 ;;		Unchanged: 0/0
 12128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12131 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12132 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12133 ;;Total ram usage:        1 bytes
 12134 ;; Hardware stack levels used: 1
 12135 ;; Hardware stack levels required when called: 1
 12136 ;; This function calls:
 12137 ;;		_Load_Cmd
 12138 ;; This function is called by:
 12139 ;;		_main
 12140 ;; This function uses a non-reentrant model
 12141 ;;
 12142                           
 12143  1151                     _LCD_Init:	
 12144                           ;psect for function _LCD_Init
 12145                           
 12146  1151                     l4136:	
 12147                           ;incstack = 0
 12148                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 12149                           
 12150                           
 12151                           ;LCD_LIB.c: 39:     TRISDbits.TRISD0 = 0; TRISDbits.TRISD1 = 0; TRISDbits.TRISD4 = 0;
 12152  1151  0021               	movlb	1	; select bank1
 12153  1152  100F               	bcf	15,0	;volatile
 12154  1153  108F               	bcf	15,1	;volatile
 12155  1154  120F               	bcf	15,4	;volatile
 12156                           
 12157                           ;LCD_LIB.c: 40:     TRISDbits.TRISD5 = 0; TRISDbits.TRISD6 = 0; TRISDbits.TRISD7 = 0;
 12158  1155  128F               	bcf	15,5	;volatile
 12159  1156  130F               	bcf	15,6	;volatile
 12160  1157  138F               	bcf	15,7	;volatile
 12161                           
 12162                           ;LCD_LIB.c: 42:     LATDbits.LATD1 = 0; LATDbits.LATD4 = 0; LATDbits.LATD5 = 0;
 12163  1158  0022               	movlb	2	; select bank2
 12164  1159  108F               	bcf	15,1	;volatile
 12165  115A  120F               	bcf	15,4	;volatile
 12166  115B  128F               	bcf	15,5	;volatile
 12167                           
 12168                           ;LCD_LIB.c: 43:     LATDbits.LATD6 = 0; LATDbits.LATD7 = 0;
 12169  115C  130F               	bcf	15,6	;volatile
 12170  115D  138F               	bcf	15,7	;volatile
 12171  115E                     l4138:
 12172                           
 12173                           ;LCD_LIB.c: 45:     _delay((unsigned long)((15)*(32000000/4000.0)));
 12174  115E  309C               	movlw	156
 12175  115F  00F2               	movwf	??_LCD_Init
 12176  1160  30D7               	movlw	215
 12177  1161                     u5657:
 12178  1161  0B89               	decfsz	9,f
 12179  1162  2961               	goto	u5657
 12180  1163  0BF2               	decfsz	??_LCD_Init,f
 12181  1164  2961               	goto	u5657
 12182  1165  0000               	nop
 12183  1166                     l4140:
 12184                           
 12185                           ;LCD_LIB.c: 46:     Load_Cmd(0x03);
 12186  1166  3003               	movlw	3
 12187  1167  3190  2047  3191   	fcall	_Load_Cmd
 12188  116A                     l4142:
 12189                           
 12190                           ;LCD_LIB.c: 47:     _delay((unsigned long)((5)*(32000000/4000.0)));
 12191  116A  3034               	movlw	52
 12192  116B  00F2               	movwf	??_LCD_Init
 12193  116C  30F2               	movlw	242
 12194  116D                     u5667:
 12195  116D  0B89               	decfsz	9,f
 12196  116E  296D               	goto	u5667
 12197  116F  0BF2               	decfsz	??_LCD_Init,f
 12198  1170  296D               	goto	u5667
 12199                           
 12200                           ;LCD_LIB.c: 48:     Load_Cmd(0x03);
 12201  1171  3003               	movlw	3
 12202  1172  3190  2047  3191   	fcall	_Load_Cmd
 12203  1175                     l4144:
 12204                           
 12205                           ;LCD_LIB.c: 49:     _delay((unsigned long)((100)*(32000000/4000000.0)));
 12206  1175  30A0               	movlw	160
 12207  1176                     u5677:
 12208  1176  3200               	nop2
 12209  1177  0B89               	decfsz	9,f
 12210  1178  2976               	goto	u5677
 12211  1179                     l4146:
 12212                           
 12213                           ;LCD_LIB.c: 50:     Load_Cmd(0x03);
 12214  1179  3003               	movlw	3
 12215  117A  3190  2047  3191   	fcall	_Load_Cmd
 12216  117D                     l4148:
 12217                           
 12218                           ;LCD_LIB.c: 51:     Load_Cmd(0x02);
 12219  117D  3002               	movlw	2
 12220  117E  3190  2047  3191   	fcall	_Load_Cmd
 12221  1181                     l4150:
 12222                           
 12223                           ;LCD_LIB.c: 53:     Load_Cmd(0x02);
 12224  1181  3002               	movlw	2
 12225  1182  3190  2047  3191   	fcall	_Load_Cmd
 12226  1185                     l4152:
 12227                           
 12228                           ;LCD_LIB.c: 54:     Load_Cmd(0x08);
 12229  1185  3008               	movlw	8
 12230  1186  3190  2047  3191   	fcall	_Load_Cmd
 12231  1189                     l4154:
 12232                           
 12233                           ;LCD_LIB.c: 56:     Load_Cmd(0x00);
 12234  1189  3000               	movlw	0
 12235  118A  3190  2047  3191   	fcall	_Load_Cmd
 12236  118D                     l4156:
 12237                           
 12238                           ;LCD_LIB.c: 57:     Load_Cmd(0x0F);
 12239  118D  300F               	movlw	15
 12240  118E  3190  2047  3191   	fcall	_Load_Cmd
 12241  1191                     l4158:
 12242                           
 12243                           ;LCD_LIB.c: 59:     Load_Cmd(0x00);
 12244  1191  3000               	movlw	0
 12245  1192  3190  2047  3191   	fcall	_Load_Cmd
 12246  1195                     l4160:
 12247                           
 12248                           ;LCD_LIB.c: 60:     Load_Cmd(0x01);
 12249  1195  3001               	movlw	1
 12250  1196  3190  2047  3191   	fcall	_Load_Cmd
 12251  1199                     l4162:
 12252                           
 12253                           ;LCD_LIB.c: 61:     _delay((unsigned long)((2)*(32000000/4000.0)));
 12254  1199  3015               	movlw	21
 12255  119A  00F2               	movwf	??_LCD_Init
 12256  119B  30C6               	movlw	198
 12257  119C                     u5687:
 12258  119C  0B89               	decfsz	9,f
 12259  119D  299C               	goto	u5687
 12260  119E  0BF2               	decfsz	??_LCD_Init,f
 12261  119F  299C               	goto	u5687
 12262  11A0  3200               	nop2
 12263  11A1                     l171:
 12264  11A1  0008               	return
 12265  11A2                     __end_of_LCD_Init:
 12266                           
 12267                           	psect	text43
 12268  1047                     __ptext43:	
 12269 ;; *************** function _Load_Cmd *****************
 12270 ;; Defined at:
 12271 ;;		line 6 in file "LCD_LIB.c"
 12272 ;; Parameters:    Size  Location     Type
 12273 ;;  cmd             1    wreg     unsigned char 
 12274 ;; Auto vars:     Size  Location     Type
 12275 ;;  cmd             1    1[COMMON] unsigned char 
 12276 ;; Return value:  Size  Location     Type
 12277 ;;                  1    wreg      void 
 12278 ;; Registers used:
 12279 ;;		wreg
 12280 ;; Tracked objects:
 12281 ;;		On entry : 0/0
 12282 ;;		On exit  : 0/0
 12283 ;;		Unchanged: 0/0
 12284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12286 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12287 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12288 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12289 ;;Total ram usage:        2 bytes
 12290 ;; Hardware stack levels used: 1
 12291 ;; This function calls:
 12292 ;;		Nothing
 12293 ;; This function is called by:
 12294 ;;		_LCD_Init
 12295 ;;		_LCD_Cmd
 12296 ;; This function uses a non-reentrant model
 12297 ;;
 12298                           
 12299  1047                     _Load_Cmd:	
 12300                           ;psect for function _Load_Cmd
 12301                           
 12302                           
 12303                           ;incstack = 0
 12304                           ; Regs used in _Load_Cmd: [wreg]
 12305                           ;Load_Cmd@cmd stored from wreg
 12306  1047  00F1               	movwf	Load_Cmd@cmd
 12307  1048                     l3520:
 12308                           
 12309                           ;LCD_LIB.c: 7:     LATDbits.LATD0 = 0;
 12310  1048  0022               	movlb	2	; select bank2
 12311  1049  100F               	bcf	15,0	;volatile
 12312  104A                     l3522:
 12313                           
 12314                           ;LCD_LIB.c: 9:     if( (cmd & 1) == 0 ) LATDbits.LATD4 = 0; else LATDbits.LATD4 = 1;
 12315  104A  1871               	btfsc	Load_Cmd@cmd,0
 12316  104B  284D               	goto	u4601
 12317  104C  284E               	goto	u4600
 12318  104D                     u4601:
 12319  104D  2850               	goto	l149
 12320  104E                     u4600:
 12321  104E                     l3524:
 12322  104E  120F               	bcf	15,4	;volatile
 12323  104F  2851               	goto	l3526
 12324  1050                     l149:
 12325  1050  160F               	bsf	15,4	;volatile
 12326  1051                     l3526:
 12327                           
 12328                           ;LCD_LIB.c: 10:     if( (cmd & 2) == 0 ) LATDbits.LATD5 = 0; else LATDbits.LATD5 = 1;
 12329  1051  18F1               	btfsc	Load_Cmd@cmd,1
 12330  1052  2854               	goto	u4611
 12331  1053  2855               	goto	u4610
 12332  1054                     u4611:
 12333  1054  2857               	goto	l151
 12334  1055                     u4610:
 12335  1055                     l3528:
 12336  1055  128F               	bcf	15,5	;volatile
 12337  1056  2858               	goto	l3530
 12338  1057                     l151:
 12339  1057  168F               	bsf	15,5	;volatile
 12340  1058                     l3530:
 12341                           
 12342                           ;LCD_LIB.c: 11:     if( (cmd & 4) == 0 ) LATDbits.LATD6 = 0; else LATDbits.LATD6 = 1;
 12343  1058  1971               	btfsc	Load_Cmd@cmd,2
 12344  1059  285B               	goto	u4621
 12345  105A  285C               	goto	u4620
 12346  105B                     u4621:
 12347  105B  285E               	goto	l153
 12348  105C                     u4620:
 12349  105C                     l3532:
 12350  105C  130F               	bcf	15,6	;volatile
 12351  105D  285F               	goto	l3534
 12352  105E                     l153:
 12353  105E  170F               	bsf	15,6	;volatile
 12354  105F                     l3534:
 12355                           
 12356                           ;LCD_LIB.c: 12:     if( (cmd & 8) == 0 ) LATDbits.LATD7 = 0; else LATDbits.LATD7 = 1;
 12357  105F  19F1               	btfsc	Load_Cmd@cmd,3
 12358  1060  2862               	goto	u4631
 12359  1061  2863               	goto	u4630
 12360  1062                     u4631:
 12361  1062  2865               	goto	l155
 12362  1063                     u4630:
 12363  1063                     l3536:
 12364  1063  138F               	bcf	15,7	;volatile
 12365  1064  2866               	goto	l156
 12366  1065                     l155:
 12367  1065  178F               	bsf	15,7	;volatile
 12368  1066                     l156:
 12369                           
 12370                           ;LCD_LIB.c: 14:     LATDbits.LATD1 = 0;
 12371  1066  108F               	bcf	15,1	;volatile
 12372                           
 12373                           ;LCD_LIB.c: 15:     LATDbits.LATD1 = 1;
 12374  1067  148F               	bsf	15,1	;volatile
 12375                           
 12376                           ;LCD_LIB.c: 16:     LATDbits.LATD1 = 0;
 12377  1068  108F               	bcf	15,1	;volatile
 12378  1069                     l3538:
 12379                           
 12380                           ;LCD_LIB.c: 17:     _delay((unsigned long)((300)*(32000000/4000000.0)));
 12381  1069  3004               	movlw	4
 12382  106A  00F0               	movwf	??_Load_Cmd
 12383  106B  301C               	movlw	28
 12384  106C                     u5697:
 12385  106C  0B89               	decfsz	9,f
 12386  106D  286C               	goto	u5697
 12387  106E  0BF0               	decfsz	??_Load_Cmd,f
 12388  106F  286C               	goto	u5697
 12389  1070  3200               	nop2
 12390  1071                     l157:
 12391  1071  0008               	return
 12392  1072                     __end_of_Load_Cmd:
 12393                           
 12394                           	psect	text44
 12395  1002                     __ptext44:	
 12396 ;; *************** function _ADC_GetConversion *****************
 12397 ;; Defined at:
 12398 ;;		line 112 in file "mcc_generated_files/adc.c"
 12399 ;; Parameters:    Size  Location     Type
 12400 ;;  channel         1    wreg     enum E2956
 12401 ;; Auto vars:     Size  Location     Type
 12402 ;;  channel         1    3[COMMON] enum E2956
 12403 ;; Return value:  Size  Location     Type
 12404 ;;                  2    0[COMMON] unsigned short 
 12405 ;; Registers used:
 12406 ;;		wreg, status,2, status,0
 12407 ;; Tracked objects:
 12408 ;;		On entry : 0/0
 12409 ;;		On exit  : 0/0
 12410 ;;		Unchanged: 0/0
 12411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12412 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12413 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12414 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12415 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12416 ;;Total ram usage:        4 bytes
 12417 ;; Hardware stack levels used: 1
 12418 ;; This function calls:
 12419 ;;		Nothing
 12420 ;; This function is called by:
 12421 ;;		_main
 12422 ;; This function uses a non-reentrant model
 12423 ;;
 12424                           
 12425  1002                     _ADC_GetConversion:	
 12426                           ;psect for function _ADC_GetConversion
 12427                           
 12428                           
 12429                           ;incstack = 0
 12430                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 12431                           ;ADC_GetConversion@channel stored from wreg
 12432  1002  00F3               	movwf	ADC_GetConversion@channel
 12433  1003                     l4124:
 12434                           
 12435                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
 12436  1003  0873               	movf	ADC_GetConversion@channel,w
 12437  1004  00F2               	movwf	??_ADC_GetConversion
 12438  1005  0DF2               	rlf	??_ADC_GetConversion,f
 12439  1006  0DF2               	rlf	??_ADC_GetConversion,f
 12440  1007  0021               	movlb	1	; select bank1
 12441  1008  081D               	movf	29,w	;volatile
 12442  1009  0672               	xorwf	??_ADC_GetConversion,w
 12443  100A  3983               	andlw	-125
 12444  100B  0672               	xorwf	??_ADC_GetConversion,w
 12445  100C  009D               	movwf	29	;volatile
 12446  100D                     l4126:
 12447                           
 12448                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
 12449  100D  141D               	bsf	29,0	;volatile
 12450  100E                     l4128:
 12451                           
 12452                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(32000000/4000000.0)));
 12453  100E  300D               	movlw	13
 12454  100F                     u5707:
 12455  100F  0B89               	decfsz	9,f
 12456  1010  280F               	goto	u5707
 12457  1011  0000               	nop
 12458  1012                     l4130:
 12459                           
 12460                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
 12461  1012  0021               	movlb	1	; select bank1
 12462  1013  149D               	bsf	29,1	;volatile
 12463  1014                     l104:	
 12464                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
 12465                           
 12466                           
 12467                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
 12468  1014  189D               	btfsc	29,1	;volatile
 12469  1015  2817               	goto	u5421
 12470  1016  2818               	goto	u5420
 12471  1017                     u5421:
 12472  1017  2814               	goto	l104
 12473  1018                     u5420:
 12474  1018                     l4132:
 12475                           
 12476                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 12477  1018  081C               	movf	28,w	;volatile
 12478  1019  00F1               	movwf	?_ADC_GetConversion+1
 12479  101A  081B               	movf	27,w	;volatile
 12480  101B  00F0               	movwf	?_ADC_GetConversion
 12481  101C                     l107:
 12482  101C  0008               	return
 12483  101D                     __end_of_ADC_GetConversion:
 12484  007E                     btemp	set	126	;btemp
 12485  007E                     wtemp0	set	126
 12486                           
 12487                           	psect	idloc
 12488                           
 12489                           ;Config register IDLOC0 @ 0x8000
 12490                           ;	unspecified, using default values
 12491  8000                     	org	32768
 12492  8000  3FFF               	dw	16383
 12493                           
 12494                           ;Config register IDLOC1 @ 0x8001
 12495                           ;	unspecified, using default values
 12496  8001                     	org	32769
 12497  8001  3FFF               	dw	16383
 12498                           
 12499                           ;Config register IDLOC2 @ 0x8002
 12500                           ;	unspecified, using default values
 12501  8002                     	org	32770
 12502  8002  3FFF               	dw	16383
 12503                           
 12504                           ;Config register IDLOC3 @ 0x8003
 12505                           ;	unspecified, using default values
 12506  8003                     	org	32771
 12507  8003  3FFF               	dw	16383
 12508                           
 12509                           	psect	config
 12510                           
 12511                           ;Config register CONFIG1 @ 0x8007
 12512                           ;	Oscillator Selection
 12513                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 12514                           ;	Watchdog Timer Enable
 12515                           ;	WDTE = OFF, WDT disabled
 12516                           ;	Power-up Timer Enable
 12517                           ;	PWRTE = OFF, PWRT disabled
 12518                           ;	MCLR Pin Function Select
 12519                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 12520                           ;	Flash Program Memory Code Protection
 12521                           ;	CP = OFF, Program memory code protection is disabled
 12522                           ;	Data Memory Code Protection
 12523                           ;	CPD = OFF, Data memory code protection is disabled
 12524                           ;	Brown-out Reset Enable
 12525                           ;	BOREN = ON, Brown-out Reset enabled
 12526                           ;	Clock Out Enable
 12527                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 12528                           ;	Internal/External Switchover
 12529                           ;	IESO = ON, Internal/External Switchover mode is enabled
 12530                           ;	Fail-Safe Clock Monitor Enable
 12531                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 12532  8007                     	org	32775
 12533  8007  3FE4               	dw	16356
 12534                           
 12535                           ;Config register CONFIG2 @ 0x8008
 12536                           ;	Flash Memory Self-Write Protection
 12537                           ;	WRT = OFF, Write protection off
 12538                           ;	Voltage Regulator Capacitor Enable
 12539                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
 12540                           ;	PLL Enable
 12541                           ;	PLLEN = ON, 4x PLL enabled
 12542                           ;	Stack Overflow/Underflow Reset Enable
 12543                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 12544                           ;	Brown-out Reset Voltage Selection
 12545                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 12546                           ;	Low-Voltage Programming Enable
 12547                           ;	LVP = ON, Low-voltage programming enabled
 12548  8008                     	org	32776
 12549  8008  3FFF               	dw	16383

Data Sizes:
    Strings     31
    Constant    0
    Data        20
    BSS         110
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80     63      77
    BANK2            80      0      32
    BANK3            80      0      80
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> strText(BANK2[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S792$source	PTR const unsigned char  size(1) Largest target is 0

    f...source	PTR const unsigned char  size(1) Largest target is 0

    S792$buffer	PTR unsigned char  size(1) Largest target is 0

    f...buffer	PTR unsigned char  size(1) Largest target is 0

    LCD_Write_Text@text	PTR unsigned char  size(1) Largest target is 20
		 -> strText(BANK2[20]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Text
    _main->___flmul
    _efgtoa->___flmul
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->__Umul8_16
    ___flge->___flmul
    _atoi->___wmul
    _atoi->_isdigit
    ___xxtofl->_ADC_GetConversion
    _LCD_Write_Text->_LCD_Set_Cursor
    _LCD_Write_Cp->_Load_Data
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Cmd->_Load_Cmd
    _LCD_Init->_Load_Cmd

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _efgtoa->_floorf
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   32895
                                             72 BANK0      4     4      0
                  _ADC_GetConversion
                            _LCD_Cmd
                           _LCD_Init
                     _LCD_Write_Text
                  _SYSTEM_Initialize
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6   27691
                                             65 BANK0      7     1      6
                                             51 BANK1     12    12      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   27375
                                             57 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2   27038
                                             41 BANK0     16    14      2
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     5      4     410
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              59    54      5   21654
                                             33 BANK0      8     3      5
                                              0 BANK1     51    51      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              4     2      2     920
                                              6 COMMON     4     2      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     6      2     641
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2907
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             13 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     287
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             11     7      4     381
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2637
                                             21 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    2288
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    3481
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     942
                                             21 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    1881
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1165
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              4 COMMON     8     4      4
                                              0 BANK0      6     6      0
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Text                                       4     2      2     885
                                             12 COMMON     2     0      2
                                              0 BANK0      2     2      0
                     _LCD_Set_Cursor
                       _LCD_Write_Cp
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Cp                                         5     5      0     178
                                              2 COMMON     5     5      0
                          _Load_Data
 ---------------------------------------------------------------------------------
 (3) _Load_Data                                            2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       5     4      1     466
                                              7 COMMON     5     4      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              5     5      0     178
                                              2 COMMON     5     5      0
                           _Load_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      88
                                              2 COMMON     1     1      0
                           _Load_Cmd
 ---------------------------------------------------------------------------------
 (4) _Load_Cmd                                             2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _LCD_Cmd
     _Load_Cmd
   _LCD_Init
     _Load_Cmd
   _LCD_Write_Text
     _LCD_Set_Cursor
       _LCD_Cmd
     _LCD_Write_Cp
       _Load_Data
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   ___flmul
     __Umul8_16
   ___xxtofl
     _ADC_GetConversion (ARG)
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     3F      4D       7       96.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     11B      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     11B      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Sep 15 10:18:59 2023

                  ___fldiv@aexp 002C                    ___fldiv@bexp 002B                    ___fldiv@sign 0024  
                            l21 0016                              l30 0803                              l24 1E3A  
                            l27 1E3F                              l69 1FB3                              l89 1E28  
                  ___awdiv@sign 0076             ___wmul@multiplicand 0072             __Umul8_16@word_mpld 0076  
                           l104 1014                             l201 1F91                             l107 101C  
                           l151 1057                             l160 107B                             l153 105E  
                           l137 1571                             l162 1082                             l155 1065  
                           l171 11A1                             l156 1066                             l164 1089  
                           l157 1071                             l149 1050                             l174 1F2D  
                           l166 1090                             l167 1091                             l351 1ED8  
                           l192 1102                             l168 109C                             l504 1354  
                           l520 111F                             l177 1EB3                             l353 1EEC  
                           l521 113B                             l532 14B9                             l517 11F4  
                           l541 1E33                             l710 17FF                             l526 1150  
                           l552 13B3                             l537 14D2                             l529 1465  
                           l545 13C8                             l730 17E7                             l555 13C8  
                           l732 17F6                             l724 1781                             l708 16A3  
                           l652 094D                             l900 0349                             l805 008F  
                           l806 009B                             l814 1046                             l760 0D78  
                           l656 09EF                             l920 057B                             l729 17CD  
                           l673 0A84                             l665 0B2D                             l754 0D00  
                           l658 09CA                             l683 0AC8                             l915 0565  
                           l748 0D84                             l860 129D                             l677 0AA6  
                           l694 0B23                             l686 0B00                             l767 1FC6  
                           l695 0B2D                             l855 1262                             l792 003A  
                           l769 1FD6                             l794 00C3                             l698 1F0C  
                           l858 1284                             l890 02E9                             l970 0FFF  
                           l876 07D4                             l798 0075                             l982 10CD  
                           l992 1447                             l889 0305                             _ekg 0138  
                           _pad 1248                             _pot 013C                    ___awmod@sign 0076  
                           wreg 0009                    ___flmul@aexp 002D                    ___flmul@bexp 002E  
                  ___flmul@sign 0028                    ___flmul@temp 0033                    ___flmul@prod 002F  
               __end_of_LCD_Cmd 1F2E                  _LCD_Set_Cursor 10CE                    ___fltol@exp1 007A  
                          l1100 1E6A                            l1007 1501                            l1023 0845  
                          l1103 1E6A                            l1024 08EE                            l1034 1E82  
                          l1042 1F4E                            l1018 1566                            l1028 08E6  
                          l1063 1247                            l1071 1FFF                            l3000 133A  
                          l1080 1F6F                            l1048 1E9A                            l3010 1350  
                          l3002 133B                            l1074 1001                            l1090 12F5  
                          l3004 1340                            l3020 11AC                            l3100 137C  
                          l3006 1346                            l3030 11C0                            l3022 11AE  
                          l3014 11A2                            l3102 137D                            l1086 1ECD  
                          l3008 134B                            l3040 11DB                            l3032 11C5  
                          l3024 11B2                            l3016 11A3                            l3200 1701  
                          l3104 1385                            l4000 0F39                            l3042 11E0  
                          l3034 11C9                            l3026 11B7                            l3018 11A7  
                          l3210 172D                            l3202 170F                            l3130 1EF0  
                          l3122 13AA                            l3114 1393                            l3106 1387  
                          l4010 0F88                            l3036 11CD                            l3028 11BD  
                          l3044 11E6                            l3220 1748                            l3212 172E  
                          l3204 1713                            l3140 165A                            l3060 114F  
                          l3052 1103                            l3300 0B67                            l3124 13B8  
                          l3108 138B                            l3116 13A3                            l4020 0FC0  
                          l4012 0F90                            l4004 0F4C                            l4102 10E8  
                          l3046 11EB                            l3038 11D7                            l3230 175D  
                          l3222 174A                            l3214 1736                            l3206 1714  
                          l3150 166E                            l3142 165B                            l3134 164C  
                          l3054 1117                            l3070 1481                            l3310 0B83  
                          l3302 0B6C                            l3126 13BD                            l4022 0FCB  
                          l4006 0F67                            l4110 109F                            l4104 10FE  
                          l4040 1F92                            l4200 005B                            l3048 11F0  
                          l3240 177E                            l3224 1751                            l3232 1761  
                          l3208 171B                            l3216 173A                            l3160 1685  
                          l3144 1660                            l3152 1670                            l3136 1652  
                          l3056 1133                            l3080 14D1                            l3072 1485  
                          l3064 1448                            l3400 0D60                            l3320 0BA3  
                          l3312 0B88                            l3304 0B71                            l3128 1EED  
                          l4008 0F78                            l4016 0FA6                            l4032 0FDC  
                          l4112 10A3                            l4130 1012                            l4050 1FA1  
                          l4042 1F98                            l4122 000A                            l4210 0085  
                          l4202 0062                            l3250 1797                            l3234 1765  
                          l3226 1755                            l3218 1740                            l3170 1699  
                          l3162 1686                            l3154 1678                            l3146 1665  
                          l3138 1656                            l3058 114D                            l3074 149D  
                          l3066 145D                            l3410 0D7C                            l3402 0D62  
                          l3330 0BFE                            l3322 0BB0                            l3314 0B8D  
                          l3306 0B79                            l4034 0FF5                            l4018 0FB8  
                          l4026 0FD1                            l4114 10A7                            l4132 1018  
                          l4124 1003                            l4140 1166                            l4060 1FAC  
                          l4052 1FA3                            l4044 1F9B                            l4220 00B6  
                          l4212 0089                            l4204 0066                            l3260 17DE  
                          l3252 17AF                            l3244 1786                            l3236 1766  
                          l3228 1756                            l3164 168B                            l3172 169B  
                          l3156 167D                            l3148 166D                            l3076 14A1  
                          l3068 1479                            l3404 0D6F                            l3340 0C33  
                          l3332 0C0B                            l3324 0BCA                            l3308 0B7B  
                          l3084 1E29                            l3092 1355                            l3500 08DE  
                          l3420 125B                            l4028 0FD9                            l4116 10BB  
                          l4126 100D                            l4150 1181                            l4142 116A  
                          l4070 1E37                            l4062 1FAE                            l4054 1FA6  
                          l4046 1F9D                            l4222 00BA                            l4214 0093  
                          l4206 006E                            l3510 1F30                            l3262 17E6  
                          l3246 178B                            l3254 17B3                            l3238 176A  
                          l3190 16E2                            l3174 16AB                            l3182 16C4  
                          l3166 1690                            l3158 1681                            l3078 14CF  
                          l3406 0D73                            l3350 0C76                            l3342 0C3A  
                          l3334 0C12                            l3326 0BD7                            l3318 0B96  
                          l3086 1E31                            l3094 1360                            l2710 11F5  
                          l3430 1289                            l3422 1260                            l3414 124A  
                          l4118 10C5                            l4230 1591                            l4128 100E  
                          l3520 1048                            l4160 1195                            l4152 1185  
                          l4144 1175                            l4136 1151                            l4080 1E25  
                          l4072 1E38                            l4064 1FAF                            l4056 1FA8  
                          l4048 1F9F                            l4224 00BB                            l4216 009D  
                          l4208 007C                            l3504 1E6B                            l3512 1F37  
                          l3264 17EC                            l3256 17C0                            l3248 1793  
                          l3192 16EA                            l3184 16C9                            l3176 16B7  
                          l3168 1698                            l3408 0D74                            l3360 0CC9  
                          l3352 0C8A                            l3344 0C4E                            l3336 0C1F  
                          l3328 0BF1                            l3280 0B3C                            l3088 1E33  
                          l2800 098F                            l3440 13F6                            l2720 122C  
                          l2712 11FA                            l3432 1291                            l3424 1265  
                          l3416 124E                            l3600 01CD                            l4240 1631  
                          l4232 159A                            l3530 1058                            l3522 104A  
                          l4162 1199                            l4154 1189                            l4146 1179  
                          l4138 115E                            l4090 10CF                            l4082 1E9C  
                          l4066 1FB1                            l4058 1FAA                            l4074 0800  
                          l4218 00B1                            l3514 1F46                            l3266 17F0  
                          l3258 17DB                            l3194 16F2                            l3178 16BB  
                          l3362 0CD0                            l3370 0CE0                            l3354 0C9F  
                          l3346 0C55                            l3338 0C26                            l3290 0B51  
                          l3282 0B3D                            l3274 0B2E                            l2810 09CE  
                          l2802 0993                            l2730 08F9                            l3098 1369  
                          l3442 13FC                            l3450 141D                            l2722 123E  
                          l2714 11FF                            l3426 1271                            l3418 1256  
                          l3610 01F5                            l3602 01D2                            l4170 102F  
                          l4242 163C                            l4234 15C3                            l3532 105C  
                          l3524 104E                            l4156 118D                            l4148 117D  
                          l4092 10D0                            l4084 1EA6                            l4180 1F83  
                          l4076 1E21                            l4068 1E34                            l3516 1F47  
                          l3508 1F2E                            l3268 17F2                            l3196 16FA  
                          l3188 16D2                            l3372 0CE4                            l3364 0CD4  
                          l3356 0CB6                            l3348 0C69                            l3292 0B59  
                          l3284 0B42                            l3276 0B34                            l2900 0AFC  
                          l2820 09E5                            l2812 09D5                            l2804 0997  
                          l2740 0910                            l2732 08FD                            l3452 1423  
                          l3444 1413                            l3436 13C9                            l2716 1204  
                          l3428 1276                            l3460 1F50                            l3700 052A  
                          l3620 0279                            l3540 00C6                            l4172 103C  
                          l4164 101F                            l4236 15E3                            l4228 1567  
                          l3534 105F                            l3526 1051                            l4158 1191  
                          l4094 10D6                            l4086 1EAB                            l4182 1F88  
                          l4078 1E24                            l4190 0032                            l3198 16FC  
                          l3390 0D2E                            l3382 0D05                            l3374 0CE5  
                          l3366 0CD5                            l3358 0CBD                            l3294 0B5E  
                          l3286 0B47                            l3278 0B38                            l2910 0B18  
                          l2902 0B05                            l2830 0A01                            l2814 09D7  
                          l2822 09E9                            l2806 0998                            l2750 0926  
                          l2742 0911                            l2734 08FE                            l2726 08EF  
                          l3446 1418                            l3438 13E1                            l2718 120E  
                          l3462 1F58                            l3470 1E63                            l3710 0574  
                          l3702 052F                            l3630 02D8                            l3622 0296  
                          l3614 020D                            l3606 01EA                            l3550 010F  
                          l3542 00C8                            l4166 102B                            l4238 1618  
                          l3536 1063                            l3528 1055                            l4096 10DC  
                          l4088 1EAF                            l4176 1F72                            l4192 0042  
                          l4184 0019                            l2920 1FB5                            l3384 0D0A  
                          l3392 0D32                            l3376 0CE9                            l3368 0CDC  
                          l3296 0B62                            l3288 0B4F                            l2912 0B1C  
                          l2904 0B0A                            l2840 0A1A                            l2832 0A09  
                          l2824 09F3                            l2816 09DB                            l2808 09AF  
                          l2760 0935                            l2752 0927                            l2736 0903  
                          l2744 0913                            l2728 08F5                            l3456 1443  
                          l3480 0844                            l3464 1E54                            l3800 0744  
                          l3720 05CE                            l3712 0579                            l3704 055B  
                          l3632 02DE                            l3624 029A                            l3616 0239  
                          l3608 01F3                            l3560 0128                            l3552 0112  
                          l3544 00D8                            l4168 102D                            l3538 1069  
                          l4098 10E2                            l4178 1F7B                            l4186 001E  
                          l2930 1FD2                            l2922 1FB7                            l3394 0D3F  
                          l3386 0D12                            l3378 0CFD                            l3298 0B66  
                          l2914 0B1E                            l2906 0B12                            l2850 0A44  
                          l2842 0A1E                            l2834 0A0D                            l2826 09F8  
                          l2818 09DC                            l2770 0953                            l2762 093A  
                          l2754 092B                            l2746 091B                            l2738 0908  
                          l3490 088E                            l3482 084A                            l3474 0804  
                          l3810 0768                            l3802 0748                            l3730 05E8  
                          l3722 05D4                            l3714 0582                            l3706 0561  
                          l3650 033C                            l3634 02E5                            l3618 023D  
                          l3626 02C1                            l3562 012D                            l3570 0140  
                          l3554 0116                            l3546 00F6                            l3900 1F18  
                          l4196 004B                            l4188 0022                            l2924 1FBE  
                          l3396 0D49                            l3388 0D16                            l2916 0B28  
                          l2908 0B17                            l2860 0A8C                            l2852 0A68  
                          l2844 0A1F                            l2836 0A11                            l2780 0967  
                          l2772 0957                            l2764 0942                            l2756 092F  
                          l2748 0920                            l3492 0896                            l3484 0862  
                          l3476 081C                            l2940 1FEF                            l3468 1E54  
                          l3812 076D                            l3804 074E                            l3740 060E  
                          l3732 05F4                            l3724 05D8                            l3716 05C2  
                          l3708 056E                            l3660 035D                            l3652 0343  
                          l3644 030B                            l3636 02F6                            l3628 02D2  
                          l3580 016E                            l3564 0131                            l3556 011C  
                          l3548 00FB                            l3902 1F1D                            l3910 1075  
                          l4198 0050                            l2926 1FC2                            l3398 0D57  
                          l2918 0B2C                            l2870 0AA5                            l2862 0A91  
                          l2854 0A6E                            l2846 0A28                            l2838 0A18  
                          l2790 097B                            l2782 096B                            l2774 095B  
                          l2766 0943                            l2758 0930                            l3494 08A7  
                          l3478 0837                            l2934 1FD9                            l2942 1EB5  
                          l3830 07AE                            l3822 0786                            l3814 0771  
                          l3806 075D                            l3750 062E                            l3742 0613  
                          l3734 05F9                            l3718 05C7                            l3726 05DD  
                          l3670 0375                            l3662 0361                            l3654 034D  
                          l3646 0311                            l3638 02FC                            l3582 0178  
                          l3566 0137                            l3558 0121                            ?_pad 0024  
                          l3904 1F21                            l3920 1087                            l3912 1079  
                          l2960 1ED4                            l4296 1512                            l3840 14D9  
                          l2928 1FCD                            l2872 0AAA                            l2880 0AB6  
                          l2856 0A73                            l2848 0A2D                            l2792 097F  
                          l2784 096F                            l2776 095F                            l2768 0945  
                          l3496 08BE                            l3488 0877                            l2936 1FDC  
                          l2944 1EBA                            l2952 1E83                            l3832 07B3  
                          l3824 0797                            l3816 077D                            l3808 0762  
                          l3760 06A5                            l3752 0633                            l3744 0617  
                          l3736 05FD                            l3728 05E4                            l3680 0392  
                          l3672 037B                            l3664 0367                            l3656 0353  
                          l3648 0320                            l3584 017D                            l3576 0152  
                          l3568 013C                            l3906 1F25                            l4298 10F0  
                          l3922 108A                            l3914 107C                            l2962 1EDD  
                          l3850 1506                            l2970 12F6                            l2874 0AAD  
                          l2866 0A9A                            l2858 0A7C                            l2882 0ABA  
                          l2794 0983                            l2786 0973                            l2778 0963  
                          l3498 08C7                            l2938 1FEA                            l2946 1EBE  
                          l3826 079D                            l3818 0782                            l3834 07BD  
                          l3770 06D7                            l3738 0602                            l3746 061B  
                          l3754 0637                            l3762 06A9                            l3690 04AE  
                          l3682 043C                            l3666 036B                            l3674 037F  
                          l3658 0359                            l3594 01A7                            l3578 0163  
                          l3930 0D98                            l3924 108E                            l3916 1080  
                          l3908 1073                            l2964 1EE2                            l2956 1ECE  
                          l3860 154F                            l3852 151A                            l3844 14DD  
                          l2980 1306                            l2972 12F7                            l2892 0ACD  
                          l2884 0ABB                            l2876 0AAF                            l2868 0AA1  
                          l2796 0987                            l2788 0977                            l2948 1EC7  
                          l3828 07A2                            l3780 06F8                            l3772 06E2  
                          l3764 06BB                            l3756 0685                            l3748 0621  
                          l3692 04C6                            l3684 0440                            l3676 0381  
                          l3668 0373                            l3596 01B8                            l3588 0195  
                          l3940 0DC3                            l3932 0DA0                            l3926 1094  
                          l3918 1083                            l2966 1EE8                            l2958 1ED0  
                          l3862 1556                            l3846 14E7                            l3838 14D3  
                          l2990 131A                            l2982 130B                            l2974 12FB  
                          l2894 0AD2                            l2886 0ABF                            l2878 0AB4  
                          l2798 098B                            l3790 070D                            l3782 06FE  
                          l3774 06E7                            l3766 06CB                            l3758 06A1  
                          l3694 04CB                            l3686 0452                            l3678 0389  
                          l3598 01C3                            l3950 0DED                            l3942 0DD0  
                          l3934 0DA6                            l3864 1562                            l3848 14FC  
                          l2992 131F                            l2984 130F                            l2976 1300  
                          l2896 0ADA                            l2888 0AC5                            l3792 0712  
                          l3784 0700                            l3776 06EE                            l3768 06D2  
                          l3696 04D3                            l3688 04A4                            l3880 12B6  
                          l3872 129F                            l3960 0E25                            l3944 0DD4  
                          l3936 0DAA                            l3928 0D87                            l3858 153B  
                          l2994 1323                            l2986 1311                            l2978 1302  
                          l2898 0ADE                            l3794 0717                            l3786 0704  
                          l3778 06F4                            l3698 04F0                            l3890 12D3  
                          l3882 12BA                            l3874 12A7                            l3970 0E63  
                          l3962 0E2D                            l3954 0DF5                            l3946 0DD6  
                          l3938 0DBB                            l2996 1327                            l2988 1317  
                          l3796 072F                            l3788 0708                            l3892 12D9  
                          l3884 12BE                            l3876 12B3                            l3980 0EA5  
                          l3964 0E3E                            l3956 0E11                            l3948 0DDD  
                          l2998 1336                            l3798 0740                            l3894 12E8  
                          l3886 12C2                            l3990 0EF9                            l3982 0EC2  
                          l3974 0E6B                            l3966 0E46                            l3958 0E23  
                          l3888 12CA                            l3992 0F01                            l3984 0EC7  
                          l3968 0E53                            l3976 0E86                            l3898 1F0E  
                          l3994 0F11                            l3986 0EE4                            l3978 0EA0  
                          l3988 0EEA                            l3998 0F27                            STR_1 2000  
                          STR_2 200C                            STR_3 2014                            STR_6 2010  
                          STR_7 2018                            u3000 09F3                            u3001 09F2  
                          u3010 09F8                            u3011 09F7                            u3020 0A0D  
                          u3021 0A0C                            _LATA 010C                            u3110 0AA5  
                          u3030 0A11                            _LATB 010D                            u3111 0AA4  
                          u3031 0A10                            _LATC 010E                            u4000 1797  
                          u3200 0AED                            u3120 0AAA                            u3040 0A1E  
                          _LATD 010F                            u4001 1796                            u3121 0AA9  
                          u3105 0A9B                            u3041 0A1D                            _LATE 0110  
                          u4010 17A5                            u3210 0AFC                            u3130 0AB4  
                          u3211 0AFB                            u3131 0AB3                            u4020 17C0  
                          u4100 0B71                            u3220 0B05                            u3140 0ABA  
                          u3060 0A44                            u3300 1FFF                            u4021 17BF  
                          u4101 0B70                            u3221 0B04                            u3205 0AE9  
                          u3141 0AB9                            u3061 0A43                            u3301 1FFE  
                          u4030 17DB                            u4110 0B88                            u3230 0B0A  
                          u3150 0ABF                            u3070 0A73                            u3310 1EC7  
                          u4031 17DA                            u4015 17A1                            u4111 0B87  
                          u3231 0B09                            u3151 0ABE                            u3071 0A72  
                          u3063 0A40                            u3055 0A22                            u3311 1EC6  
                          u3400 1317                            u4040 17F0                            u4120 0B8D  
                          u3240 0B17                            u3160 0AC5                            u3080 0A8C  
                          u3320 1E93                            u5000 05E8                            u3401 1316  
                          u4041 17EF                            u4025 17BC                            u4121 0B8C  
                          u3241 0B16                            u3161 0AC4                            u3081 0A8B  
                          u3321 1E91                            u5001 05E7                            u4210 0CE4  
                          u4050 0B3C                            u3250 0B1C                            u3170 0ACC  
                          u3090 0A91                            u3330 1E94                            u5010 0621  
                          u4035 17D7                            u4211 0CE3                            u4051 0B3B  
                          u3251 0B1B                            u3171 0ACB                            u3091 0A90  
                          u5011 0620                            u3340 1ED4                            u3420 1327  
                          u3500 11BD                            u4300 0D73                            u4220 0CE9  
                          u4060 0B42                            u3260 0B2C                            u3180 0AD2  
                          u5100 0768                            u5020 06BB                            u3341 1ED3  
                          u3421 1326                            u3501 11BC                            u4301 0D72  
                          u4221 0CE8                            u4205 0CD6                            u4061 0B41  
                          u3261 0B2B                            u3181 0AD1                            u5101 0767  
                          u5021 06BA                            u3270 1FC2                            u4230 0CFD  
                          u4150 0C95                            u4070 0B47                            u3190 0ADE  
                          u4310 124E                            u5110 0797                            u5030 06CB  
                          u3415 131B                            u3271 1FC1                            u4231 0CFC  
                          u4135 0C0C                            u4071 0B46                            u3191 0ADD  
                          u4311 124D                            u5111 0796                            u5031 06CA  
                          u5120 14E7                            u3440 1336                            u3520 11CD  
                          u3600 145D                            u4240 0D04                            u4160 0CAC  
                          u4080 0B66                            u4400 1430                            u2800 11FA  
                          u4320 125B                            u5040 06D2                            u5200 12E8  
                          u5121 14E6                            u3441 1335                            u3521 11CC  
                          u3601 145C                            u4241 0D03                            u4145 0C3B  
                          u4081 0B65                            u2801 11F9                            u4321 125A  
                          u5041 06D1                            u5025 06B7                            u5201 12E7  
                          u3370 1EE8                            u5130 14FB                            u3530 11D7  
                          u3610 1479                            u3290 1FD2                            u4250 0D0A  
                          u4090 0B6C                            u4410 143B                            u2810 11FF  
                          u4330 1284                            u5050 06D7                            u3371 1EE7  
                          u3355 1ED9                            u5131 14FA                            u3435 1328  
                          u3531 11D6                            u3515 11C1                            u3611 1478  
                          u3291 1FD1                            u4251 0D09                            u4155 0C91  
                          u4091 0B6B                            u4411 1439                            u2811 11FE  
                          u4331 1283                            u5051 06D6                            u5035 06C7  
                          u5220 1079                            u5140 154F                            u3460 1346  
                          u3380 12FB                            u3620 1485                            u4260 0D16  
                          u2900 093A                            u4420 143C                            u4500 0884  
                          u2820 120E                            u4340 1289                            u5060 06F4  
                          u5300 0E23                            u5221 1078                            u3365 1EDE  
                          u5141 154E                            u3461 1345                            u3445 1332  
                          u3381 12FA                            u3621 1484                            u3285 1FC7  
                          u4261 0D15                            u4165 0CA8                            u2901 0939  
                          u4405 142C                            u2821 120D                            u4341 1288  
                          u5061 06F3                            u5301 0E22                            u5230 1080  
                          u5150 1556                            u3470 134B                            u3390 1306  
                          u3550 11E6                            u3630 14A1                            u4270 0D24  
                          u4190 0CD4                            u2910 0953                            u3710 13A2  
                          u4350 13EE                            u4510 088E                            u2830 122C  
                          u4430 1F6F                            u5070 0704                            u5310 0E3E  
                          u5215 1F11                            u5231 107F                            u5151 1555  
                          u3471 134A                            u3455 133C                            u3391 1305  
                          u3551 11E5                            u3535 11D3                            u3631 14A0  
                          u4191 0CD3                            u4175 0CB7                            u2911 0952  
                          u3711 13A1                            u4511 088D                            u2831 122B  
                          u4335 1280                            u4431 1F6E                            u5071 0703  
                          u5311 0E3D                            u4600 104E                            u5240 1087  
                          u3560 11EB                            u3480 11A7                            u3800 168B  
                          u3640 14CF                            u4280 0D3F                            u2920 0957  
                          u2840 08FD                            u3720 13A9                            u4360 13FC  
                          u4520 08B4                            u4440 1E63                            u5080 074E  
                          u5160 12B3                            u5320 0E86                            u4601 104D  
                          u5241 1086                            u3561 11EA                            u3545 11DC  
                          u3481 11A6                            u3801 168A                            u3641 14CE  
                          u4281 0D3E                            u4185 0CCA                            u2921 0956  
                          u2841 08FC                            u3721 13A8                            u3705 1394  
                          u4361 13FB                            u4505 0880                            u4441 1E62  
                          u5081 074D                            u5161 12B2                            u5321 0E85  
                          u4610 1055                            u5250 108E                            u3490 11B2  
                          u3810 1690                            u3570 1117                            u4290 0D57  
                          u3650 1E31                            u2930 09AF                            u2850 0903  
                          u4370 1409                            u4530 08BE                            u4450 0829  
                          u5090 075D                            u5170 12CA                            u5330 0EA5  
                          u5410 10C5                            u4611 1054                            u5251 108D  
                          u3491 11B1                            u3811 168F                            u3571 1116  
                          u4291 0D56                            u4275 0D20                            u3651 1E30  
                          u2931 09AE                            u2851 0902                            u4355 13EA  
                          u4531 08BD                            u2835 1228                            u5091 075C  
                          u5171 12C9                            u5331 0EA4                            u5411 10C4  
                          u5420 1018                            u4620 105C                            u5500 007B  
                          u3900 1740                            u3820 16AB                            u3580 1133  
                          u2940 09B8                            u2860 0908                            u3740 13B8  
                          u3660 1360                            u4380 1413                            u4540 08D4  
                          u4460 0844                            u4700 01A7                            u5180 12D3  
                          u5340 0EC7                            u5260 0D98                            u5421 1017  
                          u4621 105B                            u5405 1E9F                            u5501 007A  
                          u3901 173F                            u3821 16AA                            u3581 1132  
                          u3645 14CB                            u4285 0D3B                            u2941 09B6  
                          u2861 0907                            u3741 13B7                            u3661 135F  
                          u4381 1412                            u4525 08B0                            u4461 0843  
                          u4701 01A6                            u5181 12D2                            u5341 0EC6  
                          u5261 0D97                            u4630 1063                            u5430 1F91  
                          u3910 1748                            u3830 16C9                            u3590 114D  
                          u2950 09B9                            u2870 0926                            u3750 13BD  
                          u3670 1376                            u4390 1423                            u4550 08DE  
                          u4470 084A                            u4710 01B8                            u5190 12D9  
                          u5350 0EEA                            u5270 0DBB                            u4631 1062  
                          u5431 1F90                            u3911 1747                            u3831 16C8  
                          u3591 114C                            u4295 0D53                            u2935 09AB  
                          u2871 0925                            u3751 13BC                            u3735 13AB  
                          u4391 1422                            u4375 1405                            u4551 08DD  
                          u4471 0849                            u4455 0825                            u5095 0759  
                          u4711 01B7                            u5191 12D8                            u5351 0EE9  
                          u5271 0DBA                            u5520 0089                            u5440 001E  
                          u4560 1E7B                            u3840 1701                            u3760 165A  
                          u2960 09CE                            u2880 092F                            u3680 138B  
                          u4480 0858                            u4800 0320                            u4720 020C  
                          u4640 00F6                            u5360 0F39                            u5280 0DD4  
                          u5521 0088                            u5441 001D                            u4561 1E79  
                          u3841 1700                            u3761 1659                            u2961 09CD  
                          u2881 092E                            u3681 138A                            u4545 08D0  
                          u4465 0840                            u4801 031F                            u4721 020B  
                          u4641 00F5                            u5361 0F38                            u5281 0DD3  
                          u5530 008F                            u5450 0022                            u4570 1E7C  
                          u3930 1755                            u3770 1660                            u2970 09DB  
                          u2890 0935                            u3690 1392                            u4490 0876  
                          u4810 033C                            u4730 0278                            u4650 011C  
                          u5370 0F67                            u5290 0E11                            u5531 008E  
                          u5515 007F                            u5451 0021                            u3931 1754  
                          u3771 165F                            u3595 1149                            u2971 09DA  
                          u2891 0934                            u3691 1391                            u3675 1372  
                          u4491 0875                            u4811 033B                            u4731 0277  
                          u4651 011B                            u5371 0F66                            u5291 0E10  
                          u5540 0093                            u5460 0042                            u4580 1F37  
                          u3780 1665                            u4900 04C6                            u4820 0353  
                          u4740 02C1                            u4660 0121                            u5380 0FB8  
                          u5541 0092                            u5461 0041                            u4581 1F36  
                          u3925 174B                            u3781 1664                            u4485 0854  
                          u4901 04C5                            u4821 0352                            u4805 031C  
                          u4741 02C0                            u4661 0120                            u5381 0FB7  
                          u5390 1E3F                            u5550 00A7                            u4590 1F46  
                          u3950 1765                            u3870 1713                            u3790 1685  
                          u2990 09EF                            u4910 04CB                            u4830 0359  
                          u4750 02DE                            u4670 0128                            u5391 1E3E  
                          u4591 1F45                            u3951 1764                            u3871 1712  
                          u3855 1702                            u3791 1684                            u2991 09EE  
                          u4911 04CA                            u4831 0358                            u4815 0338  
                          u4751 02DD                            u4671 0127                            u5607 15BE  
                          u5560 00B6                            u5480 0061                            u3960 176A  
                          u4920 052A                            u4840 035D                            u4760 02E5  
                          u4680 0152                            u5561 00B5                            u5481 0060  
                          u3961 1769                            u3945 1757                            u3865 1709  
                          u2985 09DF                            u4921 0529                            u4841 035C  
                          u4761 02E4                            u4681 0151                            u5617 15E7  
                          u5570 00BA                            u3970 177E                            u3890 172D  
                          u4930 0561                            u4850 0367                            u4770 02F6  
                          u4690 0163                            u5707 100F                            u5571 00B9  
                          u5555 00A3                            u5475 0055                            u3971 177D  
                          u3891 172C                            u4931 0560                            u4851 0366  
                          u4771 02F5                            u4691 0162                            u5627 1642  
                          u3980 1785                            u4940 0574                            u4860 036B  
                          u4780 030A                            u5637 1097                            u3981 1784  
                          u3885 1715                            u4941 0573                            u4861 036A  
                          u4781 0309                            u3990 178B                            u4950 05C7  
                          u4870 037B                            u4790 0311                            u5647 1F28  
                          u5495 006F                            u3991 178A                            u3895 1729  
                          u4951 05C6                            u4871 037A                            u4791 0310  
                          u4775 02F2                            u4960 05CE                            u4880 0452  
                          u5657 1161                            u4961 05CD                            u4881 0451  
                          u4970 05D4                            u4890 04A4                            u5667 116D  
                          u4971 05D3                            u4891 04A3                            u4980 05D8  
                          u5677 1176                            u4981 05D7                            u4885 044E  
                          u5597 1595                            u4990 05E4                            u5687 119C  
                          u4991 05E3                            u5697 106C                            _PLLR 04D6  
                          _WPUB 020D                            _WPUE 0210                            _dbuf 01A0  
                          _atoi 14D3                            _main 1567                            _prec 006C  
                          _temp 00E9                            _nout 00E3                            pad@i 0027  
                          pad@p 0025                            fsr0h 0005                            fsr1h 0007  
                          indf0 0000                            fsr0l 0004                            indf1 0001  
                          fsr1l 0006                            pad@w 0029                            btemp 007E  
                 ___fpclassifyf 13C9                            start 0002                 ___fldiv@new_exp 0025  
                 ?_LCD_Write_Cp 0070                     Load_Cmd@cmd 0071                           ??_pad 007C  
              __end_of_LCD_Init 11A2   __end_of_OSCILLATOR_Initialize 1E40                   ___fltol@sign1 0079  
                         ?_atoi 0076                 __end_of___fladd 0B2E                           ?_main 0070  
               __end_of___fldiv 1800                 __end_of___awdiv 1355                 __end_of___flneg 1E34  
                         STR_10 201C                           STR_12 201C                 __end_of___awmod 11F5  
               __end_of___flmul 0D85                 __end_of___flsub 1F0D                 __end_of___fltol 13C9  
               ___awdiv@divisor 0070                 ___awdiv@counter 0075                    vfpfcnvrt@fmt 0049  
                         _TRISA 008C                           _TRISB 008D                           _TRISC 008E  
                         _TRISD 008F                           _TRISE 0090          __end_of_LCD_Set_Cursor 1103  
                         _flags 006E                  _WDT_Initialize 0800                           _fputc 11F5  
                         _fputs 1FD7                 __end_of_isdigit 1E83                           atoi@n 0022  
                         pad@fp 002B                           atoi@s 0076                           _width 00E5  
                         _putch 1001                 __end_of_isspace 1F4F                 __end_of_isupper 1E9B  
                         status 0003                           wtemp0 007E                 __end_of_sprintf 1047  
                ?___fpclassifyf 0070                 __end_of_tolower 1E6B                 __end_of_strncmp 12F6  
                ??_LCD_Write_Cp 0072                 __initialization 07D5                  _LCD_Write_Text 1F70  
                  __end_of_atoi 1567                    __end_of_main 164C                __end_of_Load_Cmd 1072  
                        ??_atoi 0078                          ??_main 0068                       ??_LCD_Cmd 0072  
        __end_of_WDT_Initialize 0804                 ?_LCD_Set_Cursor 0077                          _ADCON0 009D  
                        _ADCON1 009E                          ?_fputc 0070                          ?_fputs 0078  
                        _ADRESH 009C                          _ADRESL 009B                ___awdiv@dividend 0072  
                        _APFCON 011D                          _ANSELA 018C                          ?_putch 0070  
                        _ANSELB 018D                          _ANSELD 018F                          _ANSELE 0190  
                        _BORCON 0116                          _OSCCON 0099                          _WDTCON 0097  
              __end_of___xxtofl 00C4          __end_of_LCD_Write_Text 1F92                    vfprintf@cfmt 005F  
                        ___flge 1448                          ___fleq 1103                       ??___fladd 0020  
                        ___wmul 1ECE                       ??___fldiv 0078                       ??___awdiv 0074  
                     ??___flneg 0074                       ??___awmod 0074                       ??___flmul 0079  
                     ??___flsub 007E                       ??___fltol 0074                          _efgtoa 00C4  
                        _floorf 0804                ___awdiv@quotient 0077                 ___awmod@divisor 0070  
               ___awmod@counter 0075                          pad@buf 0024                          _strcpy 1F4F  
                        _strlen 1EB4                          fputc@c 0070                          fputs@c 0020  
                        fputs@i 0021                          fputs@s 0023                       ??_isdigit 0072  
               ___fpclassifyf@e 0020                 ___fpclassifyf@u 0022                 ___fpclassifyf@x 0070  
                     ??_isspace 0072                 ?_WDT_Initialize 0070                       ??_isupper 0072  
      ADC_GetConversion@channel 0073                          putch@c 0070                __end_of_vfprintf 10CE  
                     ??_sprintf 0067                       ??_tolower 0078                       ??_strncmp 0074  
                    ___flge@ff1 0035                      ___flge@ff2 0039                 ??___fpclassifyf 0074  
                  ___xxtofl@arg 0022                    ___xxtofl@exp 0021               _SYSTEM_Initialize 000A  
                  ___xxtofl@val 0074                      ___fleq@ff1 0070                      ___fleq@ff2 0074  
       __end_of__initialization 07FD                       ?_LCD_Init 0070                      ___flneg@f1 0070  
            ?_SYSTEM_Initialize 0070                      ___fltol@f1 0070                 ?_LCD_Write_Text 007C  
                __pcstackCOMMON 0070                    __pidataBANK2 1E40             ??_SYSTEM_Initialize 0070  
                 __end_of_fputc 1248                   __end_of_fputs 2000                   __end_of_putch 1002  
                LCD_Cmd@NibbleH 0074                  LCD_Cmd@NibbleL 0075               __end_of_Load_Data 109D  
                _OPTION_REGbits 0095            __end_of_LCD_Write_Cp 1EB4                   Load_Data@data 0071  
                       ??_fputc 0073       __end_of_SYSTEM_Initialize 0017                         ??_fputs 0079  
                       ??_putch 0070                      __pbssBANK0 006C                      __pbssBANK1 00DF  
                    __pbssBANK2 0134                      __pbssBANK3 01A0                       ?_Load_Cmd 0070  
                    ??_LCD_Init 0072               __end_of__Umul8_16 1FD7                      _efgtoa$934 00A2  
                    _efgtoa$926 00A0                      _efgtoa$935 00A4                      __pmaintext 1567  
                       ?___flge 0035                         ?___fleq 0070                         ?___wmul 0070  
                       ?_efgtoa 0041                         ?_floorf 002D                         ?_strcpy 0070  
                       ?_strlen 0070                         _LCD_Cmd 1F0D                       ?___xxtofl 0074  
                       _OSCTUNE 0098                      ??_Load_Cmd 0070            _ADC_InterruptHandler 00E7  
                       ___fladd 08EF                         ___fldiv 164C                         ___awdiv 12F6  
                       ___flneg 1E29                         ___awmod 11A2                         ___flmul 0B2E  
                       ___flsub 1EED                         ___fltol 1355                       ?_vfprintf 0059  
              ??_LCD_Set_Cursor 0078                         __ptext1 101D                         __ptext2 109D  
                       __ptext3 0D85                         __ptext4 129E                         __ptext5 00C4  
                       __ptext6 1E54                         __ptext7 1E83                         __ptext8 1F4F  
                       __ptext9 1248           _OSCILLATOR_Initialize 1E34                         _isdigit 1E6B  
                    ??___xxtofl 0078                ___awmod@dividend 0072        ??_PIN_MANAGER_Initialize 0070  
                       _isspace 1F2E                         _isupper 1E83                         efgtoa@c 0045  
                       efgtoa@d 00B2                         efgtoa@e 00CB                         efgtoa@f 0041  
                       efgtoa@g 00C7                         efgtoa@h 00BD                         efgtoa@i 00C5  
                       efgtoa@l 00C1                         efgtoa@m 00AC                         efgtoa@n 00CD  
                       efgtoa@p 00B7                         efgtoa@t 00A6                         efgtoa@u 00CF  
                       efgtoa@w 00B9                         atoi@neg 0020                         _strText 0120  
                       _sprintf 101D                         _tolower 1E54                         clrloop0 1E1C  
                       _strncmp 129E            end_of_initialization 07FD                         floorf@e 003B  
                       floorf@m 0037                         floorf@u 003D                         floorf@x 002D  
             LCD_Write_Cp@letra 0076                         fputc@fp 0072                         init_ram 0004  
                       fputs@fp 0078                         initloop 0005               __end_of_vfpfcnvrt 1000  
                    efgtoa@mode 00BC                      efgtoa@sign 00B4                      ??_vfprintf 005C  
                       strcpy@d 0076                         strlen@a 0073                         strcpy@s 0074  
                       strlen@s 0074                ??_WDT_Initialize 0070                     ___fladd@grs 007B  
                 ___xxtofl@sign 0020               LCD_Write_Text@col 007C                       _TRISDbits 008F  
                   ___fldiv@grs 0027                     ___fldiv@rem 0020                ??_LCD_Write_Text 0020  
                   ___flmul@grs 0029                      LCD_Cmd@cmd 0076                    _LCD_Write_Cp 1E9B  
                __end_of___flge 14D3                  __end_of___fleq 1151                     vfpfcnvrt@ap 004A  
                   vfpfcnvrt@ct 0054                     vfpfcnvrt@fp 0058                  __end_of___wmul 1EED  
                __end_of_efgtoa 07D5                  _ADC_Initialize 1E21                  __end_of_floorf 08EF  
        ?_OSCILLATOR_Initialize 0070                      floorf@F526 0134                  __end_of_strcpy 1F70  
                __end_of_strlen 1ECE             start_initialization 07D5                       _Load_Data 1072  
                   __end_of_pad 129E           __end_of___fpclassifyf 1448                     vfprintf@fmt 0059  
                      ??___flge 003D                        ??___fleq 0078                        ??___wmul 0074  
                      ??_efgtoa 0046          __end_of_ADC_Initialize 1E29                       __Umul8_16 1FB4  
                   __pdataBANK2 0120                        ??_floorf 0031                        ??_strcpy 0072  
                      ??_strlen 0072                       ___fladd@a 0074                       ___fladd@b 0070  
                      ?_LCD_Cmd 0070                       ___fldiv@a 0070                       ___fldiv@b 0074  
                     ___flmul@a 0024                       ___flmul@b 0020                       ___flsub@a 0035  
                     ___flsub@b 0039                      ?_Load_Data 0070                       ___latbits 0003  
                 __pcstackBANK0 0020                   __pcstackBANK1 00A0          _PIN_MANAGER_Initialize 1F92  
                      ?___fladd 0070                        ?___fldiv 0070                        ?___awdiv 0070  
                      ?___flneg 0070                        ?___awmod 0070                        ?___flmul 0020  
                      ?___flsub 0035                        ?___fltol 0070                      ?__Umul8_16 0070  
               ?_ADC_Initialize 0070                        ?_isdigit 0070                        ?_isspace 0070  
                      ?_isupper 0070                        ?_sprintf 0061                        ?_tolower 0076  
                      ?_strncmp 0070                        _LCD_Init 1151                  ___wmul@product 0074  
                      _LATDbits 010F                       clear_ram0 1E1B                       _vfpfcnvrt 0D85  
                    _ADCON0bits 009D               ___wmul@multiplier 0070             LCD_Write_Cp@NibbleH 0074  
           LCD_Write_Cp@NibbleL 0075                     ??_Load_Data 0070                    _isspace$1013 0074  
                    vfpfcnvrt@c 0057                      vfpfcnvrt@f 0050                        _Load_Cmd 1047  
                    vfprintf@ap 005B                      vfprintf@fp 005E               _ADC_GetConversion 1002  
       ??_OSCILLATOR_Initialize 0070                     ??__Umul8_16 0072              ?_ADC_GetConversion 0070  
                    ?_vfpfcnvrt 0049              ___fpclassifyf@F465 00DF             ??_ADC_GetConversion 0072  
                    sprintf@fmt 0061                        ___xxtofl 0017                        __ptext10 1EB4  
                      __ptext11 1FD7                        __ptext20 0B2E                        __ptext12 11F5  
                      __ptext21 1FB4                        __ptext13 1001                        __ptext30 1ECE  
                      __ptext22 1448                        __ptext14 0804                        __ptext31 0017  
                      __ptext23 1103                        __ptext15 13C9                        __ptext40 10CE  
                      __ptext32 000A                        __ptext24 164C                        __ptext16 1355  
                      __ptext41 1F0D                        __ptext33 0800                        __ptext25 11A2  
                      __ptext17 1EED                        __ptext42 1151                        __ptext34 1F92  
                      __ptext26 12F6                        __ptext18 08EF                        __ptext43 1047  
                      __ptext35 1E34                        __ptext27 14D3                        __ptext19 1E29  
                      __ptext44 1002                        __ptext36 1E21                        __ptext28 1F2E  
                      __ptext37 1F70                        __ptext29 1E6B                        __ptext38 1E9B  
                      __ptext39 1072                      strcpy@dest 0077       __end_of_ADC_GetConversion 101D  
                      efgtoa@fp 00B6                        efgtoa@ne 00AA                        efgtoa@pp 00A8  
                      efgtoa@ou 00AE                        _vfprintf 109D                        isdigit@c 0070  
                     sprintf@ap 00D4                        isspace@c 0070         ?_PIN_MANAGER_Initialize 0070  
                     strcpy@src 0070                        isupper@c 0070                       strncmp@_l 0075  
                     strncmp@_r 0070                ??_ADC_Initialize 0070                     efgtoa@nmode 00BB  
            LCD_Set_Cursor@fila 007A                     ??_vfpfcnvrt 004B                   __pstringtext1 2000  
                 __pstringtext2 200C                   __pstringtext3 2010                   __pstringtext4 2014  
                 __pstringtext5 2018                   __pstringtext6 201C                   __pstringtext7 0000  
        __Umul8_16@multiplicand 0070                        sprintf@f 00D5                        tolower@c 0076  
                      sprintf@s 00D3                        strncmp@l 0078                        strncmp@n 0072  
                      strncmp@r 0076               LCD_Set_Cursor@col 0077               LCD_Set_Cursor@pos 007B  
                 ___fladd@signs 0078  __end_of_PIN_MANAGER_Initialize 1FB4                    ___fladd@aexp 0079  
                  ___fladd@bexp 007A            __Umul8_16@multiplier 0078              LCD_Write_Text@fila 0021  
            LCD_Write_Text@text 007D               __Umul8_16@product 0074  
