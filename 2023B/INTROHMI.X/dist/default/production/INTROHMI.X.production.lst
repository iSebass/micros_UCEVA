

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Oct 27 09:53:52 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1939
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK4,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    17                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,noexec
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2,group=3
    52                           	psect	text28,local,class=CODE,merge=1,delta=2,group=3
    53                           	psect	text29,local,class=CODE,merge=1,delta=2,group=3
    54                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text32,local,class=CODE,merge=1,delta=2
    57                           	psect	text33,local,class=CODE,merge=1,delta=2
    58                           	psect	text34,local,class=CODE,merge=1,delta=2
    59                           	psect	text35,local,class=CODE,merge=1,delta=2
    60                           	psect	text36,local,class=CODE,merge=1,delta=2
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    63                           	dabs	1,0x7E,2
    64  0000                     
    65                           ; Version 2.40
    66                           ; Generated 17/11/2021 GMT
    67                           ; 
    68                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution. Publication is not required when
    82                           ;        this file is used in an embedded application.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC16F1939 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     	;# 
   101  0001                     	;# 
   102  0002                     	;# 
   103  0003                     	;# 
   104  0004                     	;# 
   105  0005                     	;# 
   106  0006                     	;# 
   107  0007                     	;# 
   108  0008                     	;# 
   109  0009                     	;# 
   110  000A                     	;# 
   111  000B                     	;# 
   112  000C                     	;# 
   113  000D                     	;# 
   114  000E                     	;# 
   115  000F                     	;# 
   116  0010                     	;# 
   117  0011                     	;# 
   118  0012                     	;# 
   119  0013                     	;# 
   120  0015                     	;# 
   121  0016                     	;# 
   122  0016                     	;# 
   123  0017                     	;# 
   124  0018                     	;# 
   125  0019                     	;# 
   126  001A                     	;# 
   127  001B                     	;# 
   128  001C                     	;# 
   129  001E                     	;# 
   130  001F                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  008F                     	;# 
   135  0090                     	;# 
   136  0091                     	;# 
   137  0092                     	;# 
   138  0093                     	;# 
   139  0095                     	;# 
   140  0096                     	;# 
   141  0097                     	;# 
   142  0098                     	;# 
   143  0099                     	;# 
   144  009A                     	;# 
   145  009B                     	;# 
   146  009B                     	;# 
   147  009C                     	;# 
   148  009D                     	;# 
   149  009E                     	;# 
   150  010C                     	;# 
   151  010D                     	;# 
   152  010E                     	;# 
   153  010F                     	;# 
   154  0110                     	;# 
   155  0111                     	;# 
   156  0112                     	;# 
   157  0113                     	;# 
   158  0114                     	;# 
   159  0115                     	;# 
   160  0116                     	;# 
   161  0117                     	;# 
   162  0118                     	;# 
   163  0119                     	;# 
   164  011A                     	;# 
   165  011B                     	;# 
   166  011D                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  018F                     	;# 
   170  0190                     	;# 
   171  0191                     	;# 
   172  0191                     	;# 
   173  0192                     	;# 
   174  0193                     	;# 
   175  0193                     	;# 
   176  0193                     	;# 
   177  0194                     	;# 
   178  0195                     	;# 
   179  0196                     	;# 
   180  0199                     	;# 
   181  019A                     	;# 
   182  019B                     	;# 
   183  019B                     	;# 
   184  019B                     	;# 
   185  019B                     	;# 
   186  019C                     	;# 
   187  019C                     	;# 
   188  019D                     	;# 
   189  019E                     	;# 
   190  019F                     	;# 
   191  020D                     	;# 
   192  0210                     	;# 
   193  0211                     	;# 
   194  0212                     	;# 
   195  0213                     	;# 
   196  0214                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0216                     	;# 
   200  0217                     	;# 
   201  0291                     	;# 
   202  0291                     	;# 
   203  0292                     	;# 
   204  0293                     	;# 
   205  0294                     	;# 
   206  0295                     	;# 
   207  0295                     	;# 
   208  0296                     	;# 
   209  0298                     	;# 
   210  0298                     	;# 
   211  0299                     	;# 
   212  029A                     	;# 
   213  029B                     	;# 
   214  029C                     	;# 
   215  029C                     	;# 
   216  029D                     	;# 
   217  029E                     	;# 
   218  029F                     	;# 
   219  0311                     	;# 
   220  0311                     	;# 
   221  0312                     	;# 
   222  0313                     	;# 
   223  0314                     	;# 
   224  0315                     	;# 
   225  0315                     	;# 
   226  0316                     	;# 
   227  0318                     	;# 
   228  0318                     	;# 
   229  0319                     	;# 
   230  031A                     	;# 
   231  031C                     	;# 
   232  031C                     	;# 
   233  031D                     	;# 
   234  031E                     	;# 
   235  0394                     	;# 
   236  0395                     	;# 
   237  0396                     	;# 
   238  0415                     	;# 
   239  0416                     	;# 
   240  0417                     	;# 
   241  041C                     	;# 
   242  041D                     	;# 
   243  041E                     	;# 
   244  0791                     	;# 
   245  0792                     	;# 
   246  0793                     	;# 
   247  0794                     	;# 
   248  0795                     	;# 
   249  0798                     	;# 
   250  0799                     	;# 
   251  079A                     	;# 
   252  07A0                     	;# 
   253  07A1                     	;# 
   254  07A2                     	;# 
   255  07A3                     	;# 
   256  07A4                     	;# 
   257  07A5                     	;# 
   258  07A6                     	;# 
   259  07A7                     	;# 
   260  07A8                     	;# 
   261  07A9                     	;# 
   262  07AA                     	;# 
   263  07AB                     	;# 
   264  0FE4                     	;# 
   265  0FE5                     	;# 
   266  0FE6                     	;# 
   267  0FE7                     	;# 
   268  0FE8                     	;# 
   269  0FE9                     	;# 
   270  0FEA                     	;# 
   271  0FEB                     	;# 
   272  0FED                     	;# 
   273  0FEE                     	;# 
   274  0FEF                     	;# 
   275  0000                     	;# 
   276  0001                     	;# 
   277  0002                     	;# 
   278  0003                     	;# 
   279  0004                     	;# 
   280  0005                     	;# 
   281  0006                     	;# 
   282  0007                     	;# 
   283  0008                     	;# 
   284  0009                     	;# 
   285  000A                     	;# 
   286  000B                     	;# 
   287  000C                     	;# 
   288  000D                     	;# 
   289  000E                     	;# 
   290  000F                     	;# 
   291  0010                     	;# 
   292  0011                     	;# 
   293  0012                     	;# 
   294  0013                     	;# 
   295  0015                     	;# 
   296  0016                     	;# 
   297  0016                     	;# 
   298  0017                     	;# 
   299  0018                     	;# 
   300  0019                     	;# 
   301  001A                     	;# 
   302  001B                     	;# 
   303  001C                     	;# 
   304  001E                     	;# 
   305  001F                     	;# 
   306  008C                     	;# 
   307  008D                     	;# 
   308  008E                     	;# 
   309  008F                     	;# 
   310  0090                     	;# 
   311  0091                     	;# 
   312  0092                     	;# 
   313  0093                     	;# 
   314  0095                     	;# 
   315  0096                     	;# 
   316  0097                     	;# 
   317  0098                     	;# 
   318  0099                     	;# 
   319  009A                     	;# 
   320  009B                     	;# 
   321  009B                     	;# 
   322  009C                     	;# 
   323  009D                     	;# 
   324  009E                     	;# 
   325  010C                     	;# 
   326  010D                     	;# 
   327  010E                     	;# 
   328  010F                     	;# 
   329  0110                     	;# 
   330  0111                     	;# 
   331  0112                     	;# 
   332  0113                     	;# 
   333  0114                     	;# 
   334  0115                     	;# 
   335  0116                     	;# 
   336  0117                     	;# 
   337  0118                     	;# 
   338  0119                     	;# 
   339  011A                     	;# 
   340  011B                     	;# 
   341  011D                     	;# 
   342  018C                     	;# 
   343  018D                     	;# 
   344  018F                     	;# 
   345  0190                     	;# 
   346  0191                     	;# 
   347  0191                     	;# 
   348  0192                     	;# 
   349  0193                     	;# 
   350  0193                     	;# 
   351  0193                     	;# 
   352  0194                     	;# 
   353  0195                     	;# 
   354  0196                     	;# 
   355  0199                     	;# 
   356  019A                     	;# 
   357  019B                     	;# 
   358  019B                     	;# 
   359  019B                     	;# 
   360  019B                     	;# 
   361  019C                     	;# 
   362  019C                     	;# 
   363  019D                     	;# 
   364  019E                     	;# 
   365  019F                     	;# 
   366  020D                     	;# 
   367  0210                     	;# 
   368  0211                     	;# 
   369  0212                     	;# 
   370  0213                     	;# 
   371  0214                     	;# 
   372  0215                     	;# 
   373  0215                     	;# 
   374  0216                     	;# 
   375  0217                     	;# 
   376  0291                     	;# 
   377  0291                     	;# 
   378  0292                     	;# 
   379  0293                     	;# 
   380  0294                     	;# 
   381  0295                     	;# 
   382  0295                     	;# 
   383  0296                     	;# 
   384  0298                     	;# 
   385  0298                     	;# 
   386  0299                     	;# 
   387  029A                     	;# 
   388  029B                     	;# 
   389  029C                     	;# 
   390  029C                     	;# 
   391  029D                     	;# 
   392  029E                     	;# 
   393  029F                     	;# 
   394  0311                     	;# 
   395  0311                     	;# 
   396  0312                     	;# 
   397  0313                     	;# 
   398  0314                     	;# 
   399  0315                     	;# 
   400  0315                     	;# 
   401  0316                     	;# 
   402  0318                     	;# 
   403  0318                     	;# 
   404  0319                     	;# 
   405  031A                     	;# 
   406  031C                     	;# 
   407  031C                     	;# 
   408  031D                     	;# 
   409  031E                     	;# 
   410  0394                     	;# 
   411  0395                     	;# 
   412  0396                     	;# 
   413  0415                     	;# 
   414  0416                     	;# 
   415  0417                     	;# 
   416  041C                     	;# 
   417  041D                     	;# 
   418  041E                     	;# 
   419  0791                     	;# 
   420  0792                     	;# 
   421  0793                     	;# 
   422  0794                     	;# 
   423  0795                     	;# 
   424  0798                     	;# 
   425  0799                     	;# 
   426  079A                     	;# 
   427  07A0                     	;# 
   428  07A1                     	;# 
   429  07A2                     	;# 
   430  07A3                     	;# 
   431  07A4                     	;# 
   432  07A5                     	;# 
   433  07A6                     	;# 
   434  07A7                     	;# 
   435  07A8                     	;# 
   436  07A9                     	;# 
   437  07AA                     	;# 
   438  07AB                     	;# 
   439  0FE4                     	;# 
   440  0FE5                     	;# 
   441  0FE6                     	;# 
   442  0FE7                     	;# 
   443  0FE8                     	;# 
   444  0FE9                     	;# 
   445  0FEA                     	;# 
   446  0FEB                     	;# 
   447  0FED                     	;# 
   448  0FEE                     	;# 
   449  0FEF                     	;# 
   450  0000                     	;# 
   451  0001                     	;# 
   452  0002                     	;# 
   453  0003                     	;# 
   454  0004                     	;# 
   455  0005                     	;# 
   456  0006                     	;# 
   457  0007                     	;# 
   458  0008                     	;# 
   459  0009                     	;# 
   460  000A                     	;# 
   461  000B                     	;# 
   462  000C                     	;# 
   463  000D                     	;# 
   464  000E                     	;# 
   465  000F                     	;# 
   466  0010                     	;# 
   467  0011                     	;# 
   468  0012                     	;# 
   469  0013                     	;# 
   470  0015                     	;# 
   471  0016                     	;# 
   472  0016                     	;# 
   473  0017                     	;# 
   474  0018                     	;# 
   475  0019                     	;# 
   476  001A                     	;# 
   477  001B                     	;# 
   478  001C                     	;# 
   479  001E                     	;# 
   480  001F                     	;# 
   481  008C                     	;# 
   482  008D                     	;# 
   483  008E                     	;# 
   484  008F                     	;# 
   485  0090                     	;# 
   486  0091                     	;# 
   487  0092                     	;# 
   488  0093                     	;# 
   489  0095                     	;# 
   490  0096                     	;# 
   491  0097                     	;# 
   492  0098                     	;# 
   493  0099                     	;# 
   494  009A                     	;# 
   495  009B                     	;# 
   496  009B                     	;# 
   497  009C                     	;# 
   498  009D                     	;# 
   499  009E                     	;# 
   500  010C                     	;# 
   501  010D                     	;# 
   502  010E                     	;# 
   503  010F                     	;# 
   504  0110                     	;# 
   505  0111                     	;# 
   506  0112                     	;# 
   507  0113                     	;# 
   508  0114                     	;# 
   509  0115                     	;# 
   510  0116                     	;# 
   511  0117                     	;# 
   512  0118                     	;# 
   513  0119                     	;# 
   514  011A                     	;# 
   515  011B                     	;# 
   516  011D                     	;# 
   517  018C                     	;# 
   518  018D                     	;# 
   519  018F                     	;# 
   520  0190                     	;# 
   521  0191                     	;# 
   522  0191                     	;# 
   523  0192                     	;# 
   524  0193                     	;# 
   525  0193                     	;# 
   526  0193                     	;# 
   527  0194                     	;# 
   528  0195                     	;# 
   529  0196                     	;# 
   530  0199                     	;# 
   531  019A                     	;# 
   532  019B                     	;# 
   533  019B                     	;# 
   534  019B                     	;# 
   535  019B                     	;# 
   536  019C                     	;# 
   537  019C                     	;# 
   538  019D                     	;# 
   539  019E                     	;# 
   540  019F                     	;# 
   541  020D                     	;# 
   542  0210                     	;# 
   543  0211                     	;# 
   544  0212                     	;# 
   545  0213                     	;# 
   546  0214                     	;# 
   547  0215                     	;# 
   548  0215                     	;# 
   549  0216                     	;# 
   550  0217                     	;# 
   551  0291                     	;# 
   552  0291                     	;# 
   553  0292                     	;# 
   554  0293                     	;# 
   555  0294                     	;# 
   556  0295                     	;# 
   557  0295                     	;# 
   558  0296                     	;# 
   559  0298                     	;# 
   560  0298                     	;# 
   561  0299                     	;# 
   562  029A                     	;# 
   563  029B                     	;# 
   564  029C                     	;# 
   565  029C                     	;# 
   566  029D                     	;# 
   567  029E                     	;# 
   568  029F                     	;# 
   569  0311                     	;# 
   570  0311                     	;# 
   571  0312                     	;# 
   572  0313                     	;# 
   573  0314                     	;# 
   574  0315                     	;# 
   575  0315                     	;# 
   576  0316                     	;# 
   577  0318                     	;# 
   578  0318                     	;# 
   579  0319                     	;# 
   580  031A                     	;# 
   581  031C                     	;# 
   582  031C                     	;# 
   583  031D                     	;# 
   584  031E                     	;# 
   585  0394                     	;# 
   586  0395                     	;# 
   587  0396                     	;# 
   588  0415                     	;# 
   589  0416                     	;# 
   590  0417                     	;# 
   591  041C                     	;# 
   592  041D                     	;# 
   593  041E                     	;# 
   594  0791                     	;# 
   595  0792                     	;# 
   596  0793                     	;# 
   597  0794                     	;# 
   598  0795                     	;# 
   599  0798                     	;# 
   600  0799                     	;# 
   601  079A                     	;# 
   602  07A0                     	;# 
   603  07A1                     	;# 
   604  07A2                     	;# 
   605  07A3                     	;# 
   606  07A4                     	;# 
   607  07A5                     	;# 
   608  07A6                     	;# 
   609  07A7                     	;# 
   610  07A8                     	;# 
   611  07A9                     	;# 
   612  07AA                     	;# 
   613  07AB                     	;# 
   614  0FE4                     	;# 
   615  0FE5                     	;# 
   616  0FE6                     	;# 
   617  0FE7                     	;# 
   618  0FE8                     	;# 
   619  0FE9                     	;# 
   620  0FEA                     	;# 
   621  0FEB                     	;# 
   622  0FED                     	;# 
   623  0FEE                     	;# 
   624  0FEF                     	;# 
   625  0000                     	;# 
   626  0001                     	;# 
   627  0002                     	;# 
   628  0003                     	;# 
   629  0004                     	;# 
   630  0005                     	;# 
   631  0006                     	;# 
   632  0007                     	;# 
   633  0008                     	;# 
   634  0009                     	;# 
   635  000A                     	;# 
   636  000B                     	;# 
   637  000C                     	;# 
   638  000D                     	;# 
   639  000E                     	;# 
   640  000F                     	;# 
   641  0010                     	;# 
   642  0011                     	;# 
   643  0012                     	;# 
   644  0013                     	;# 
   645  0015                     	;# 
   646  0016                     	;# 
   647  0016                     	;# 
   648  0017                     	;# 
   649  0018                     	;# 
   650  0019                     	;# 
   651  001A                     	;# 
   652  001B                     	;# 
   653  001C                     	;# 
   654  001E                     	;# 
   655  001F                     	;# 
   656  008C                     	;# 
   657  008D                     	;# 
   658  008E                     	;# 
   659  008F                     	;# 
   660  0090                     	;# 
   661  0091                     	;# 
   662  0092                     	;# 
   663  0093                     	;# 
   664  0095                     	;# 
   665  0096                     	;# 
   666  0097                     	;# 
   667  0098                     	;# 
   668  0099                     	;# 
   669  009A                     	;# 
   670  009B                     	;# 
   671  009B                     	;# 
   672  009C                     	;# 
   673  009D                     	;# 
   674  009E                     	;# 
   675  010C                     	;# 
   676  010D                     	;# 
   677  010E                     	;# 
   678  010F                     	;# 
   679  0110                     	;# 
   680  0111                     	;# 
   681  0112                     	;# 
   682  0113                     	;# 
   683  0114                     	;# 
   684  0115                     	;# 
   685  0116                     	;# 
   686  0117                     	;# 
   687  0118                     	;# 
   688  0119                     	;# 
   689  011A                     	;# 
   690  011B                     	;# 
   691  011D                     	;# 
   692  018C                     	;# 
   693  018D                     	;# 
   694  018F                     	;# 
   695  0190                     	;# 
   696  0191                     	;# 
   697  0191                     	;# 
   698  0192                     	;# 
   699  0193                     	;# 
   700  0193                     	;# 
   701  0193                     	;# 
   702  0194                     	;# 
   703  0195                     	;# 
   704  0196                     	;# 
   705  0199                     	;# 
   706  019A                     	;# 
   707  019B                     	;# 
   708  019B                     	;# 
   709  019B                     	;# 
   710  019B                     	;# 
   711  019C                     	;# 
   712  019C                     	;# 
   713  019D                     	;# 
   714  019E                     	;# 
   715  019F                     	;# 
   716  020D                     	;# 
   717  0210                     	;# 
   718  0211                     	;# 
   719  0212                     	;# 
   720  0213                     	;# 
   721  0214                     	;# 
   722  0215                     	;# 
   723  0215                     	;# 
   724  0216                     	;# 
   725  0217                     	;# 
   726  0291                     	;# 
   727  0291                     	;# 
   728  0292                     	;# 
   729  0293                     	;# 
   730  0294                     	;# 
   731  0295                     	;# 
   732  0295                     	;# 
   733  0296                     	;# 
   734  0298                     	;# 
   735  0298                     	;# 
   736  0299                     	;# 
   737  029A                     	;# 
   738  029B                     	;# 
   739  029C                     	;# 
   740  029C                     	;# 
   741  029D                     	;# 
   742  029E                     	;# 
   743  029F                     	;# 
   744  0311                     	;# 
   745  0311                     	;# 
   746  0312                     	;# 
   747  0313                     	;# 
   748  0314                     	;# 
   749  0315                     	;# 
   750  0315                     	;# 
   751  0316                     	;# 
   752  0318                     	;# 
   753  0318                     	;# 
   754  0319                     	;# 
   755  031A                     	;# 
   756  031C                     	;# 
   757  031C                     	;# 
   758  031D                     	;# 
   759  031E                     	;# 
   760  0394                     	;# 
   761  0395                     	;# 
   762  0396                     	;# 
   763  0415                     	;# 
   764  0416                     	;# 
   765  0417                     	;# 
   766  041C                     	;# 
   767  041D                     	;# 
   768  041E                     	;# 
   769  0791                     	;# 
   770  0792                     	;# 
   771  0793                     	;# 
   772  0794                     	;# 
   773  0795                     	;# 
   774  0798                     	;# 
   775  0799                     	;# 
   776  079A                     	;# 
   777  07A0                     	;# 
   778  07A1                     	;# 
   779  07A2                     	;# 
   780  07A3                     	;# 
   781  07A4                     	;# 
   782  07A5                     	;# 
   783  07A6                     	;# 
   784  07A7                     	;# 
   785  07A8                     	;# 
   786  07A9                     	;# 
   787  07AA                     	;# 
   788  07AB                     	;# 
   789  0FE4                     	;# 
   790  0FE5                     	;# 
   791  0FE6                     	;# 
   792  0FE7                     	;# 
   793  0FE8                     	;# 
   794  0FE9                     	;# 
   795  0FEA                     	;# 
   796  0FEB                     	;# 
   797  0FED                     	;# 
   798  0FEE                     	;# 
   799  0FEF                     	;# 
   800  0000                     	;# 
   801  0001                     	;# 
   802  0002                     	;# 
   803  0003                     	;# 
   804  0004                     	;# 
   805  0005                     	;# 
   806  0006                     	;# 
   807  0007                     	;# 
   808  0008                     	;# 
   809  0009                     	;# 
   810  000A                     	;# 
   811  000B                     	;# 
   812  000C                     	;# 
   813  000D                     	;# 
   814  000E                     	;# 
   815  000F                     	;# 
   816  0010                     	;# 
   817  0011                     	;# 
   818  0012                     	;# 
   819  0013                     	;# 
   820  0015                     	;# 
   821  0016                     	;# 
   822  0016                     	;# 
   823  0017                     	;# 
   824  0018                     	;# 
   825  0019                     	;# 
   826  001A                     	;# 
   827  001B                     	;# 
   828  001C                     	;# 
   829  001E                     	;# 
   830  001F                     	;# 
   831  008C                     	;# 
   832  008D                     	;# 
   833  008E                     	;# 
   834  008F                     	;# 
   835  0090                     	;# 
   836  0091                     	;# 
   837  0092                     	;# 
   838  0093                     	;# 
   839  0095                     	;# 
   840  0096                     	;# 
   841  0097                     	;# 
   842  0098                     	;# 
   843  0099                     	;# 
   844  009A                     	;# 
   845  009B                     	;# 
   846  009B                     	;# 
   847  009C                     	;# 
   848  009D                     	;# 
   849  009E                     	;# 
   850  010C                     	;# 
   851  010D                     	;# 
   852  010E                     	;# 
   853  010F                     	;# 
   854  0110                     	;# 
   855  0111                     	;# 
   856  0112                     	;# 
   857  0113                     	;# 
   858  0114                     	;# 
   859  0115                     	;# 
   860  0116                     	;# 
   861  0117                     	;# 
   862  0118                     	;# 
   863  0119                     	;# 
   864  011A                     	;# 
   865  011B                     	;# 
   866  011D                     	;# 
   867  018C                     	;# 
   868  018D                     	;# 
   869  018F                     	;# 
   870  0190                     	;# 
   871  0191                     	;# 
   872  0191                     	;# 
   873  0192                     	;# 
   874  0193                     	;# 
   875  0193                     	;# 
   876  0193                     	;# 
   877  0194                     	;# 
   878  0195                     	;# 
   879  0196                     	;# 
   880  0199                     	;# 
   881  019A                     	;# 
   882  019B                     	;# 
   883  019B                     	;# 
   884  019B                     	;# 
   885  019B                     	;# 
   886  019C                     	;# 
   887  019C                     	;# 
   888  019D                     	;# 
   889  019E                     	;# 
   890  019F                     	;# 
   891  020D                     	;# 
   892  0210                     	;# 
   893  0211                     	;# 
   894  0212                     	;# 
   895  0213                     	;# 
   896  0214                     	;# 
   897  0215                     	;# 
   898  0215                     	;# 
   899  0216                     	;# 
   900  0217                     	;# 
   901  0291                     	;# 
   902  0291                     	;# 
   903  0292                     	;# 
   904  0293                     	;# 
   905  0294                     	;# 
   906  0295                     	;# 
   907  0295                     	;# 
   908  0296                     	;# 
   909  0298                     	;# 
   910  0298                     	;# 
   911  0299                     	;# 
   912  029A                     	;# 
   913  029B                     	;# 
   914  029C                     	;# 
   915  029C                     	;# 
   916  029D                     	;# 
   917  029E                     	;# 
   918  029F                     	;# 
   919  0311                     	;# 
   920  0311                     	;# 
   921  0312                     	;# 
   922  0313                     	;# 
   923  0314                     	;# 
   924  0315                     	;# 
   925  0315                     	;# 
   926  0316                     	;# 
   927  0318                     	;# 
   928  0318                     	;# 
   929  0319                     	;# 
   930  031A                     	;# 
   931  031C                     	;# 
   932  031C                     	;# 
   933  031D                     	;# 
   934  031E                     	;# 
   935  0394                     	;# 
   936  0395                     	;# 
   937  0396                     	;# 
   938  0415                     	;# 
   939  0416                     	;# 
   940  0417                     	;# 
   941  041C                     	;# 
   942  041D                     	;# 
   943  041E                     	;# 
   944  0791                     	;# 
   945  0792                     	;# 
   946  0793                     	;# 
   947  0794                     	;# 
   948  0795                     	;# 
   949  0798                     	;# 
   950  0799                     	;# 
   951  079A                     	;# 
   952  07A0                     	;# 
   953  07A1                     	;# 
   954  07A2                     	;# 
   955  07A3                     	;# 
   956  07A4                     	;# 
   957  07A5                     	;# 
   958  07A6                     	;# 
   959  07A7                     	;# 
   960  07A8                     	;# 
   961  07A9                     	;# 
   962  07AA                     	;# 
   963  07AB                     	;# 
   964  0FE4                     	;# 
   965  0FE5                     	;# 
   966  0FE6                     	;# 
   967  0FE7                     	;# 
   968  0FE8                     	;# 
   969  0FE9                     	;# 
   970  0FEA                     	;# 
   971  0FEB                     	;# 
   972  0FED                     	;# 
   973  0FEE                     	;# 
   974  0FEF                     	;# 
   975                           
   976                           	psect	idataBANK4
   977  10B1                     __pidataBANK4:
   978                           
   979                           ;initializer for _bufferTx
   980  10B1  3420               	retlw	32
   981  10B2  3400               	retlw	0
   982  10B3  3400               	retlw	0
   983  10B4  3400               	retlw	0
   984  10B5  3400               	retlw	0
   985  10B6  3400               	retlw	0
   986  10B7  3400               	retlw	0
   987  10B8  3400               	retlw	0
   988  10B9  3400               	retlw	0
   989  10BA  3400               	retlw	0
   990  10BB  3400               	retlw	0
   991  10BC  3400               	retlw	0
   992  10BD  3400               	retlw	0
   993  10BE  3400               	retlw	0
   994  10BF  3400               	retlw	0
   995  10C0  3400               	retlw	0
   996  10C1  3400               	retlw	0
   997  10C2  3400               	retlw	0
   998  10C3  3400               	retlw	0
   999  10C4  3400               	retlw	0
  1000  10C5  3400               	retlw	0
  1001  10C6  3400               	retlw	0
  1002  10C7  3400               	retlw	0
  1003  10C8  3400               	retlw	0
  1004  10C9  3400               	retlw	0
  1005  10CA  3400               	retlw	0
  1006  10CB  3400               	retlw	0
  1007  10CC  3400               	retlw	0
  1008  10CD  3400               	retlw	0
  1009  10CE  3400               	retlw	0
  1010  10CF  3400               	retlw	0
  1011  10D0  3400               	retlw	0
  1012  10D1  3400               	retlw	0
  1013  10D2  3400               	retlw	0
  1014  10D3  3400               	retlw	0
  1015  10D4  3400               	retlw	0
  1016  10D5  3400               	retlw	0
  1017  10D6  3400               	retlw	0
  1018  10D7  3400               	retlw	0
  1019  10D8  3400               	retlw	0
  1020  10D9  3400               	retlw	0
  1021  10DA  3400               	retlw	0
  1022  10DB  3400               	retlw	0
  1023  10DC  3400               	retlw	0
  1024  10DD  3400               	retlw	0
  1025  10DE  3400               	retlw	0
  1026  10DF  3400               	retlw	0
  1027  10E0  3400               	retlw	0
  1028  10E1  3400               	retlw	0
  1029  10E2  3400               	retlw	0
  1030                           
  1031                           	psect	nvBANK2
  1032  0144                     __pnvBANK2:
  1033  0144                     _pot2:
  1034  0144                     	ds	4
  1035  0148                     _pot1:
  1036  0148                     	ds	4
  1037  014C                     _conver:
  1038  014C                     	ds	2
  1039  008D                     _RCIF	set	141
  1040  008C                     _TXIF	set	140
  1041  009B                     _ADRESL	set	155
  1042  009C                     _ADRESH	set	156
  1043  009D                     _ADCON0bits	set	157
  1044  009E                     _ADCON1bits	set	158
  1045  008E                     _TRISCbits	set	142
  1046  0098                     _OSCTUNE	set	152
  1047  0099                     _OSCCON	set	153
  1048  0116                     _BORCON	set	278
  1049  0199                     _RCREG	set	409
  1050  019A                     _TXREG	set	410
  1051  019D                     _RCSTAbits	set	413
  1052  019E                     _TXSTAbits	set	414
  1053  019B                     _SPBRG	set	411
  1054  018C                     _ANSELAbits	set	396
  1055                           
  1056                           	psect	stringtext1
  1057  2000                     __pstringtext1:
  1058  2000                     STR_1:
  1059  2000  3423               	retlw	35	;'#'
  1060  2001  3425               	retlw	37	;'%'
  1061  2002  3437               	retlw	55	;'7'
  1062  2003  342E               	retlw	46	;'.'
  1063  2004  3435               	retlw	53	;'5'
  1064  2005  3466               	retlw	102	;'f'
  1065  2006  342F               	retlw	47	;'/'
  1066  2007  3425               	retlw	37	;'%'
  1067  2008  3433               	retlw	51	;'3'
  1068  2009  342E               	retlw	46	;'.'
  1069  200A  3431               	retlw	49	;'1'
  1070  200B  3466               	retlw	102	;'f'
  1071  200C  342A               	retlw	42	;'*'
  1072  200D  340D               	retlw	13
  1073  200E  340A               	retlw	10
  1074  200F  3400               	retlw	0
  1075                           
  1076                           	psect	stringtext2
  1077  2010                     __pstringtext2:
  1078  2010                     STR_2:
  1079  2010  3449               	retlw	73	;'I'
  1080  2011  344E               	retlw	78	;'N'
  1081  2012  3446               	retlw	70	;'F'
  1082  2013  3400               	retlw	0
  1083                           
  1084                           	psect	stringtext3
  1085  2014                     __pstringtext3:
  1086  2014                     STR_6:
  1087  2014  344E               	retlw	78	;'N'
  1088  2015  3441               	retlw	65	;'A'
  1089  2016  344E               	retlw	78	;'N'
  1090  2017  3400               	retlw	0
  1091                           
  1092                           	psect	stringtext4
  1093  2018                     __pstringtext4:
  1094  2018                     STR_3:
  1095  2018  3469               	retlw	105	;'i'
  1096  2019  346E               	retlw	110	;'n'
  1097  201A  3466               	retlw	102	;'f'
  1098  201B  3400               	retlw	0
  1099                           
  1100                           	psect	stringtext5
  1101  201C                     __pstringtext5:
  1102  201C                     STR_7:
  1103  201C  346E               	retlw	110	;'n'
  1104  201D  3461               	retlw	97	;'a'
  1105  201E  346E               	retlw	110	;'n'
  1106  201F  3400               	retlw	0
  1107                           
  1108                           	psect	stringtext6
  1109  2020                     __pstringtext6:
  1110  2020                     STR_10:
  1111  2020  346C               	retlw	108	;'l'
  1112  2021  3466               	retlw	102	;'f'
  1113  2022  3400               	retlw	0
  1114                           
  1115                           	psect	stringtext7
  1116  0000                     __pstringtext7:
  1117  2020                     
  1118                           	psect	cinit
  1119  07DE                     start_initialization:	
  1120                           ; #config settings
  1121                           
  1122  07DE                     __initialization:
  1123                           
  1124                           ; Initialize objects allocated to BANK4
  1125  07DE  30B1               	movlw	low __pidataBANK4
  1126  07DF  0084               	movwf	4
  1127  07E0  3090               	movlw	(high __pidataBANK4)| (0+128)
  1128  07E1  0085               	movwf	5
  1129  07E2  3020               	movlw	low __pdataBANK4
  1130  07E3  0086               	movwf	6
  1131  07E4  3002               	movlw	high __pdataBANK4
  1132  07E5  0087               	movwf	7
  1133  07E6  3032               	movlw	50
  1134  07E7  3180  2007  3187   	fcall	init_ram
  1135                           
  1136                           ; Clear objects allocated to BANK1
  1137  07EA  0021               	movlb	1	; select bank1
  1138  07EB  01ED               	clrf	__pbssBANK1& (0+127)
  1139  07EC  01EE               	clrf	(__pbssBANK1+1)& (0+127)
  1140                           
  1141                           ; Clear objects allocated to BANK2
  1142  07ED  3036               	movlw	low __pbssBANK2
  1143  07EE  0084               	movwf	4
  1144  07EF  3001               	movlw	high __pbssBANK2
  1145  07F0  0085               	movwf	5
  1146  07F1  300E               	movlw	14
  1147  07F2  3190  2002  3187   	fcall	clear_ram0
  1148                           
  1149                           ; Clear objects allocated to BANK3
  1150  07F5  30A0               	movlw	low __pbssBANK3
  1151  07F6  0084               	movwf	4
  1152  07F7  3001               	movlw	high __pbssBANK3
  1153  07F8  0085               	movwf	5
  1154  07F9  3050               	movlw	80
  1155  07FA  3190  2002  3187   	fcall	clear_ram0
  1156  07FD                     end_of_initialization:	
  1157                           ;End of C runtime variable initialization code
  1158                           
  1159  07FD                     __end_of__initialization:
  1160  07FD  0020               	movlb	0
  1161  07FE  3194  2C8B         	ljmp	_main	;jump to C main() function
  1162                           
  1163                           	psect	bssBANK1
  1164  00ED                     __pbssBANK1:
  1165  00ED                     _flags:
  1166  00ED                     	ds	2
  1167                           
  1168                           	psect	bssBANK2
  1169  0136                     __pbssBANK2:
  1170  0136                     floorf@F526:
  1171  0136                     	ds	4
  1172  013A                     ___fpclassifyf@F465:
  1173  013A                     	ds	4
  1174  013E                     _nout:
  1175  013E                     	ds	2
  1176  0140                     _width:
  1177  0140                     	ds	2
  1178  0142                     _prec:
  1179  0142                     	ds	2
  1180                           
  1181                           	psect	bssBANK3
  1182  01A0                     __pbssBANK3:
  1183  01A0                     _dbuf:
  1184  01A0                     	ds	80
  1185                           
  1186                           	psect	dataBANK4
  1187  0220                     __pdataBANK4:
  1188  0220                     _bufferTx:
  1189  0220                     	ds	50
  1190                           
  1191                           	psect	inittext
  1192  0007                     init_ram:
  1193  0007  00FE               	movwf	btemp
  1194  0008                     initloop:
  1195  0008  0012               	moviw fsr0++
  1196  0009  001E               	movwi fsr1++
  1197  000A  0BFE               	decfsz	btemp,f
  1198  000B  2808               	goto	initloop
  1199  000C  3400               	retlw	0
  1200                           
  1201                           	psect	clrtext
  1202  1002                     clear_ram0:	
  1203                           ;	Called with FSR0 containing the base address, and
  1204                           ;	WREG with the size to clear
  1205                           
  1206  1002  0064               	clrwdt	;clear the watchdog before getting into this loop
  1207  1003                     clrloop0:
  1208  1003  0180               	clrf	0	;clear RAM location pointed to by FSR
  1209  1004  3101               	addfsr 0,1
  1210  1005  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1211  1006  2803               	goto	clrloop0	;have we reached the end yet?
  1212  1007  3400               	retlw	0	;all done for this memory range, return
  1213                           
  1214                           	psect	cstackBANK2
  1215  0120                     __pcstackBANK2:
  1216  0120                     ?_sprintf:
  1217  0120                     sprintf@fmt:	
  1218                           ; 2 bytes @ 0x0
  1219                           
  1220                           
  1221                           ; 2 bytes @ 0x0
  1222  0120                     	ds	10
  1223  012A                     sprintf@s:
  1224                           
  1225                           ; 1 bytes @ 0xA
  1226  012A                     	ds	1
  1227  012B                     sprintf@ap:
  1228                           
  1229                           ; 1 bytes @ 0xB
  1230  012B                     	ds	1
  1231  012C                     sprintf@f:
  1232                           
  1233                           ; 10 bytes @ 0xC
  1234  012C                     	ds	10
  1235                           
  1236                           	psect	cstackBANK1
  1237  00A0                     __pcstackBANK1:
  1238  00A0                     _efgtoa$890:
  1239                           
  1240                           ; 2 bytes @ 0x0
  1241  00A0                     	ds	2
  1242  00A2                     _efgtoa$898:
  1243                           
  1244                           ; 2 bytes @ 0x2
  1245  00A2                     	ds	2
  1246  00A4                     _efgtoa$899:
  1247                           
  1248                           ; 2 bytes @ 0x4
  1249  00A4                     	ds	2
  1250  00A6                     efgtoa@t:
  1251                           
  1252                           ; 2 bytes @ 0x6
  1253  00A6                     	ds	2
  1254  00A8                     efgtoa@pp:
  1255                           
  1256                           ; 2 bytes @ 0x8
  1257  00A8                     	ds	2
  1258  00AA                     efgtoa@ne:
  1259                           
  1260                           ; 2 bytes @ 0xA
  1261  00AA                     	ds	2
  1262  00AC                     efgtoa@m:
  1263                           
  1264                           ; 2 bytes @ 0xC
  1265  00AC                     	ds	2
  1266  00AE                     efgtoa@ou:
  1267                           
  1268                           ; 4 bytes @ 0xE
  1269  00AE                     	ds	4
  1270  00B2                     efgtoa@d:
  1271                           
  1272                           ; 2 bytes @ 0x12
  1273  00B2                     	ds	2
  1274  00B4                     efgtoa@sign:
  1275                           
  1276                           ; 2 bytes @ 0x14
  1277  00B4                     	ds	2
  1278  00B6                     efgtoa@fp:
  1279                           
  1280                           ; 1 bytes @ 0x16
  1281  00B6                     	ds	1
  1282  00B7                     efgtoa@p:
  1283                           
  1284                           ; 2 bytes @ 0x17
  1285  00B7                     	ds	2
  1286  00B9                     efgtoa@w:
  1287                           
  1288                           ; 2 bytes @ 0x19
  1289  00B9                     	ds	2
  1290  00BB                     efgtoa@nmode:
  1291                           
  1292                           ; 1 bytes @ 0x1B
  1293  00BB                     	ds	1
  1294  00BC                     efgtoa@mode:
  1295                           
  1296                           ; 1 bytes @ 0x1C
  1297  00BC                     	ds	1
  1298  00BD                     efgtoa@h:
  1299                           
  1300                           ; 4 bytes @ 0x1D
  1301  00BD                     	ds	4
  1302  00C1                     efgtoa@l:
  1303                           
  1304                           ; 4 bytes @ 0x21
  1305  00C1                     	ds	4
  1306  00C5                     efgtoa@i:
  1307                           
  1308                           ; 2 bytes @ 0x25
  1309  00C5                     	ds	2
  1310  00C7                     efgtoa@g:
  1311                           
  1312                           ; 4 bytes @ 0x27
  1313  00C7                     	ds	4
  1314  00CB                     efgtoa@e:
  1315                           
  1316                           ; 2 bytes @ 0x2B
  1317  00CB                     	ds	2
  1318  00CD                     efgtoa@n:
  1319                           
  1320                           ; 2 bytes @ 0x2D
  1321  00CD                     	ds	2
  1322  00CF                     efgtoa@u:
  1323                           
  1324                           ; 4 bytes @ 0x2F
  1325  00CF                     	ds	4
  1326  00D3                     ?_vfpfcnvrt:
  1327  00D3                     vfpfcnvrt@fmt:	
  1328                           ; 2 bytes @ 0x33
  1329                           
  1330                           
  1331                           ; 1 bytes @ 0x33
  1332  00D3                     	ds	1
  1333  00D4                     vfpfcnvrt@ap:
  1334                           
  1335                           ; 1 bytes @ 0x34
  1336  00D4                     	ds	1
  1337  00D5                     ??_vfpfcnvrt:
  1338                           
  1339                           ; 1 bytes @ 0x35
  1340  00D5                     	ds	5
  1341  00DA                     vfpfcnvrt@f:
  1342                           
  1343                           ; 4 bytes @ 0x3A
  1344  00DA                     	ds	4
  1345  00DE                     vfpfcnvrt@ct:
  1346                           
  1347                           ; 3 bytes @ 0x3E
  1348  00DE                     	ds	3
  1349  00E1                     vfpfcnvrt@c:
  1350                           
  1351                           ; 1 bytes @ 0x41
  1352  00E1                     	ds	1
  1353  00E2                     vfpfcnvrt@fp:
  1354                           
  1355                           ; 1 bytes @ 0x42
  1356  00E2                     	ds	1
  1357  00E3                     ?_vfprintf:
  1358  00E3                     vfprintf@fmt:	
  1359                           ; 2 bytes @ 0x43
  1360                           
  1361                           
  1362                           ; 2 bytes @ 0x43
  1363  00E3                     	ds	2
  1364  00E5                     vfprintf@ap:
  1365                           
  1366                           ; 1 bytes @ 0x45
  1367  00E5                     	ds	1
  1368  00E6                     ??_vfprintf:
  1369                           
  1370                           ; 1 bytes @ 0x46
  1371  00E6                     	ds	2
  1372  00E8                     vfprintf@fp:
  1373                           
  1374                           ; 1 bytes @ 0x48
  1375  00E8                     	ds	1
  1376  00E9                     vfprintf@cfmt:
  1377                           
  1378                           ; 2 bytes @ 0x49
  1379  00E9                     	ds	2
  1380  00EB                     ??_sprintf:
  1381                           
  1382                           ; 1 bytes @ 0x4B
  1383  00EB                     	ds	1
  1384  00EC                     ??_main:
  1385                           
  1386                           ; 1 bytes @ 0x4C
  1387  00EC                     	ds	1
  1388                           
  1389                           	psect	cstackCOMMON
  1390  0070                     __pcstackCOMMON:
  1391  0070                     ?___fleq:
  1392  0070                     ?_ADC_Init:	
  1393                           ; 1 bit 
  1394                           
  1395  0070                     ??_ADC_Init:	
  1396                           ; 1 bytes @ 0x0
  1397                           
  1398  0070                     ?_UART_Init:	
  1399                           ; 1 bytes @ 0x0
  1400                           
  1401  0070                     ??_UART_Init:	
  1402                           ; 1 bytes @ 0x0
  1403                           
  1404  0070                     ?_UART_Write_Text:	
  1405                           ; 1 bytes @ 0x0
  1406                           
  1407  0070                     ?_strcpy:	
  1408                           ; 1 bytes @ 0x0
  1409                           
  1410  0070                     ?_putch:	
  1411                           ; 1 bytes @ 0x0
  1412                           
  1413  0070                     ??_putch:	
  1414                           ; 1 bytes @ 0x0
  1415                           
  1416  0070                     ?_main:	
  1417                           ; 1 bytes @ 0x0
  1418                           
  1419  0070                     ?_UART_Write:	
  1420                           ; 1 bytes @ 0x0
  1421                           
  1422  0070                     ??_UART_Write:	
  1423                           ; 1 bytes @ 0x0
  1424                           
  1425  0070                     ?_ADC_Read:	
  1426                           ; 1 bytes @ 0x0
  1427                           
  1428  0070                     ?__Umul8_16:	
  1429                           ; 2 bytes @ 0x0
  1430                           
  1431  0070                     ?_fputc:	
  1432                           ; 2 bytes @ 0x0
  1433                           
  1434  0070                     ?_strlen:	
  1435                           ; 2 bytes @ 0x0
  1436                           
  1437  0070                     ?___fpclassifyf:	
  1438                           ; 2 bytes @ 0x0
  1439                           
  1440  0070                     ?_isupper:	
  1441                           ; 2 bytes @ 0x0
  1442                           
  1443  0070                     ?_isdigit:	
  1444                           ; 2 bytes @ 0x0
  1445                           
  1446  0070                     ?_strncmp:	
  1447                           ; 2 bytes @ 0x0
  1448                           
  1449  0070                     ?_isspace:	
  1450                           ; 2 bytes @ 0x0
  1451                           
  1452  0070                     ?___wmul:	
  1453                           ; 2 bytes @ 0x0
  1454                           
  1455  0070                     ?___awdiv:	
  1456                           ; 2 bytes @ 0x0
  1457                           
  1458  0070                     ?___awmod:	
  1459                           ; 2 bytes @ 0x0
  1460                           
  1461  0070                     ?___flneg:	
  1462                           ; 2 bytes @ 0x0
  1463                           
  1464  0070                     ?___fltol:	
  1465                           ; 4 bytes @ 0x0
  1466                           
  1467  0070                     ?___fladd:	
  1468                           ; 4 bytes @ 0x0
  1469                           
  1470  0070                     ?___xxtofl:	
  1471                           ; 4 bytes @ 0x0
  1472                           
  1473  0070                     UART_Write@c:	
  1474                           ; 4 bytes @ 0x0
  1475                           
  1476  0070                     __Umul8_16@multiplicand:	
  1477                           ; 1 bytes @ 0x0
  1478                           
  1479  0070                     putch@c:	
  1480                           ; 1 bytes @ 0x0
  1481                           
  1482  0070                     ___wmul@multiplier:	
  1483                           ; 1 bytes @ 0x0
  1484                           
  1485  0070                     ___awdiv@divisor:	
  1486                           ; 2 bytes @ 0x0
  1487                           
  1488  0070                     ___awmod@divisor:	
  1489                           ; 2 bytes @ 0x0
  1490                           
  1491  0070                     isdigit@c:	
  1492                           ; 2 bytes @ 0x0
  1493                           
  1494  0070                     isspace@c:	
  1495                           ; 2 bytes @ 0x0
  1496                           
  1497  0070                     isupper@c:	
  1498                           ; 2 bytes @ 0x0
  1499                           
  1500  0070                     fputc@c:	
  1501                           ; 2 bytes @ 0x0
  1502                           
  1503  0070                     strcpy@src:	
  1504                           ; 2 bytes @ 0x0
  1505                           
  1506  0070                     strncmp@_r:	
  1507                           ; 2 bytes @ 0x0
  1508                           
  1509  0070                     ___fleq@ff1:	
  1510                           ; 2 bytes @ 0x0
  1511                           
  1512  0070                     ___flneg@f1:	
  1513                           ; 4 bytes @ 0x0
  1514                           
  1515  0070                     ___fltol@f1:	
  1516                           ; 4 bytes @ 0x0
  1517                           
  1518  0070                     ___fladd@b:	
  1519                           ; 4 bytes @ 0x0
  1520                           
  1521  0070                     ___xxtofl@val:	
  1522                           ; 4 bytes @ 0x0
  1523                           
  1524  0070                     ___fpclassifyf@x:	
  1525                           ; 4 bytes @ 0x0
  1526                           
  1527                           
  1528                           ; 4 bytes @ 0x0
  1529  0070                     	ds	1
  1530  0071                     ??_UART_Write_Text:
  1531                           
  1532                           ; 1 bytes @ 0x1
  1533  0071                     	ds	1
  1534  0072                     ??_ADC_Read:
  1535  0072                     ??__Umul8_16:	
  1536                           ; 1 bytes @ 0x2
  1537                           
  1538  0072                     ??_strlen:	
  1539                           ; 1 bytes @ 0x2
  1540                           
  1541  0072                     ??_isupper:	
  1542                           ; 1 bytes @ 0x2
  1543                           
  1544  0072                     ??_strcpy:	
  1545                           ; 1 bytes @ 0x2
  1546                           
  1547  0072                     ??_isdigit:	
  1548                           ; 1 bytes @ 0x2
  1549                           
  1550  0072                     ??_isspace:	
  1551                           ; 1 bytes @ 0x2
  1552                           
  1553  0072                     UART_Write_Text@c:	
  1554                           ; 1 bytes @ 0x2
  1555                           
  1556  0072                     fputc@fp:	
  1557                           ; 1 bytes @ 0x2
  1558                           
  1559  0072                     ___wmul@multiplicand:	
  1560                           ; 1 bytes @ 0x2
  1561                           
  1562  0072                     ___awdiv@dividend:	
  1563                           ; 2 bytes @ 0x2
  1564                           
  1565  0072                     ___awmod@dividend:	
  1566                           ; 2 bytes @ 0x2
  1567                           
  1568  0072                     strncmp@n:	
  1569                           ; 2 bytes @ 0x2
  1570                           
  1571                           
  1572                           ; 2 bytes @ 0x2
  1573  0072                     	ds	1
  1574  0073                     ??_fputc:
  1575  0073                     ADC_Read@ch:	
  1576                           ; 1 bytes @ 0x3
  1577                           
  1578  0073                     strlen@a:	
  1579                           ; 1 bytes @ 0x3
  1580                           
  1581                           
  1582                           ; 1 bytes @ 0x3
  1583  0073                     	ds	1
  1584  0074                     ??___fpclassifyf:
  1585  0074                     ??_strncmp:	
  1586                           ; 1 bytes @ 0x4
  1587                           
  1588  0074                     ??___wmul:	
  1589                           ; 1 bytes @ 0x4
  1590                           
  1591  0074                     ??___awdiv:	
  1592                           ; 1 bytes @ 0x4
  1593                           
  1594  0074                     ??___awmod:	
  1595                           ; 1 bytes @ 0x4
  1596                           
  1597  0074                     ??___flneg:	
  1598                           ; 1 bytes @ 0x4
  1599                           
  1600  0074                     ??___fltol:	
  1601                           ; 1 bytes @ 0x4
  1602                           
  1603  0074                     ??___xxtofl:	
  1604                           ; 1 bytes @ 0x4
  1605                           
  1606  0074                     _isspace$977:	
  1607                           ; 1 bytes @ 0x4
  1608                           
  1609  0074                     strlen@s:	
  1610                           ; 1 bytes @ 0x4
  1611                           
  1612  0074                     ___wmul@product:	
  1613                           ; 1 bytes @ 0x4
  1614                           
  1615  0074                     __Umul8_16@product:	
  1616                           ; 2 bytes @ 0x4
  1617                           
  1618  0074                     strcpy@s:	
  1619                           ; 2 bytes @ 0x4
  1620                           
  1621  0074                     ___fleq@ff2:	
  1622                           ; 2 bytes @ 0x4
  1623                           
  1624  0074                     ___fladd@a:	
  1625                           ; 4 bytes @ 0x4
  1626                           
  1627                           
  1628                           ; 4 bytes @ 0x4
  1629  0074                     	ds	1
  1630  0075                     ___awdiv@counter:
  1631  0075                     ___awmod@counter:	
  1632                           ; 1 bytes @ 0x5
  1633                           
  1634  0075                     strncmp@_l:	
  1635                           ; 1 bytes @ 0x5
  1636                           
  1637                           
  1638                           ; 1 bytes @ 0x5
  1639  0075                     	ds	1
  1640  0076                     ?_tolower:
  1641  0076                     ?_atoi:	
  1642                           ; 2 bytes @ 0x6
  1643                           
  1644  0076                     ___awdiv@sign:	
  1645                           ; 2 bytes @ 0x6
  1646                           
  1647  0076                     ___awmod@sign:	
  1648                           ; 1 bytes @ 0x6
  1649                           
  1650  0076                     strcpy@d:	
  1651                           ; 1 bytes @ 0x6
  1652                           
  1653  0076                     __Umul8_16@word_mpld:	
  1654                           ; 1 bytes @ 0x6
  1655                           
  1656  0076                     atoi@s:	
  1657                           ; 2 bytes @ 0x6
  1658                           
  1659  0076                     strncmp@r:	
  1660                           ; 2 bytes @ 0x6
  1661                           
  1662  0076                     tolower@c:	
  1663                           ; 2 bytes @ 0x6
  1664                           
  1665                           
  1666                           ; 2 bytes @ 0x6
  1667  0076                     	ds	1
  1668  0077                     strcpy@dest:
  1669  0077                     ___awdiv@quotient:	
  1670                           ; 1 bytes @ 0x7
  1671                           
  1672                           
  1673                           ; 2 bytes @ 0x7
  1674  0077                     	ds	1
  1675  0078                     ??_tolower:
  1676  0078                     ??_atoi:	
  1677                           ; 1 bytes @ 0x8
  1678                           
  1679  0078                     ??___fleq:	
  1680                           ; 1 bytes @ 0x8
  1681                           
  1682  0078                     ?_fputs:	
  1683                           ; 1 bytes @ 0x8
  1684                           
  1685  0078                     ___fladd@signs:	
  1686                           ; 2 bytes @ 0x8
  1687                           
  1688  0078                     __Umul8_16@multiplier:	
  1689                           ; 1 bytes @ 0x8
  1690                           
  1691  0078                     ___xxtofl@sign:	
  1692                           ; 1 bytes @ 0x8
  1693                           
  1694  0078                     fputs@fp:	
  1695                           ; 1 bytes @ 0x8
  1696                           
  1697  0078                     strncmp@l:	
  1698                           ; 1 bytes @ 0x8
  1699                           
  1700                           
  1701                           ; 1 bytes @ 0x8
  1702  0078                     	ds	1
  1703  0079                     ??_fputs:
  1704  0079                     ___fltol@sign1:	
  1705                           ; 1 bytes @ 0x9
  1706                           
  1707  0079                     ___fladd@aexp:	
  1708                           ; 1 bytes @ 0x9
  1709                           
  1710  0079                     ___xxtofl@exp:	
  1711                           ; 1 bytes @ 0x9
  1712                           
  1713                           
  1714                           ; 1 bytes @ 0x9
  1715  0079                     	ds	1
  1716  007A                     ___fltol@exp1:
  1717  007A                     ___fladd@bexp:	
  1718                           ; 1 bytes @ 0xA
  1719                           
  1720  007A                     ___xxtofl@arg:	
  1721                           ; 1 bytes @ 0xA
  1722                           
  1723                           
  1724                           ; 4 bytes @ 0xA
  1725  007A                     	ds	1
  1726  007B                     ___fladd@grs:
  1727                           
  1728                           ; 1 bytes @ 0xB
  1729  007B                     	ds	1
  1730  007C                     ??_pad:
  1731                           
  1732                           ; 1 bytes @ 0xC
  1733  007C                     	ds	2
  1734  007E                     ??___flsub:
  1735                           
  1736                           	psect	cstackBANK0
  1737  0020                     __pcstackBANK0:	
  1738                           ; 1 bytes @ 0xE
  1739                           
  1740  0020                     ??___fladd:
  1741  0020                     ?___flmul:	
  1742                           ; 1 bytes @ 0x0
  1743                           
  1744  0020                     fputs@c:	
  1745                           ; 4 bytes @ 0x0
  1746                           
  1747  0020                     ___fpclassifyf@e:	
  1748                           ; 1 bytes @ 0x0
  1749                           
  1750  0020                     atoi@neg:	
  1751                           ; 2 bytes @ 0x0
  1752                           
  1753  0020                     ___flmul@b:	
  1754                           ; 2 bytes @ 0x0
  1755                           
  1756                           
  1757                           ; 4 bytes @ 0x0
  1758  0020                     	ds	1
  1759  0021                     fputs@i:
  1760                           
  1761                           ; 2 bytes @ 0x1
  1762  0021                     	ds	1
  1763  0022                     atoi@n:
  1764  0022                     ___fpclassifyf@u:	
  1765                           ; 2 bytes @ 0x2
  1766                           
  1767                           
  1768                           ; 4 bytes @ 0x2
  1769  0022                     	ds	1
  1770  0023                     fputs@s:
  1771                           
  1772                           ; 1 bytes @ 0x3
  1773  0023                     	ds	1
  1774  0024                     ?_pad:
  1775  0024                     pad@buf:	
  1776                           ; 2 bytes @ 0x4
  1777                           
  1778  0024                     ___flmul@a:	
  1779                           ; 1 bytes @ 0x4
  1780                           
  1781                           
  1782                           ; 4 bytes @ 0x4
  1783  0024                     	ds	1
  1784  0025                     pad@p:
  1785                           
  1786                           ; 2 bytes @ 0x5
  1787  0025                     	ds	2
  1788  0027                     pad@i:
  1789                           
  1790                           ; 2 bytes @ 0x7
  1791  0027                     	ds	1
  1792  0028                     ??___flmul:
  1793                           
  1794                           ; 1 bytes @ 0x8
  1795  0028                     	ds	1
  1796  0029                     pad@w:
  1797                           
  1798                           ; 2 bytes @ 0x9
  1799  0029                     	ds	2
  1800  002B                     pad@fp:
  1801                           
  1802                           ; 1 bytes @ 0xB
  1803  002B                     	ds	2
  1804  002D                     ___flmul@sign:
  1805                           
  1806                           ; 1 bytes @ 0xD
  1807  002D                     	ds	1
  1808  002E                     ___flmul@grs:
  1809                           
  1810                           ; 4 bytes @ 0xE
  1811  002E                     	ds	4
  1812  0032                     ___flmul@aexp:
  1813                           
  1814                           ; 1 bytes @ 0x12
  1815  0032                     	ds	1
  1816  0033                     ___flmul@bexp:
  1817                           
  1818                           ; 1 bytes @ 0x13
  1819  0033                     	ds	1
  1820  0034                     ___flmul@prod:
  1821                           
  1822                           ; 4 bytes @ 0x14
  1823  0034                     	ds	4
  1824  0038                     ___flmul@temp:
  1825                           
  1826                           ; 2 bytes @ 0x18
  1827  0038                     	ds	2
  1828  003A                     ?___flge:
  1829  003A                     ?___flsub:	
  1830                           ; 1 bit 
  1831                           
  1832  003A                     ?___fldiv:	
  1833                           ; 4 bytes @ 0x1A
  1834                           
  1835  003A                     ___flge@ff1:	
  1836                           ; 4 bytes @ 0x1A
  1837                           
  1838  003A                     ___flsub@a:	
  1839                           ; 4 bytes @ 0x1A
  1840                           
  1841  003A                     ___fldiv@a:	
  1842                           ; 4 bytes @ 0x1A
  1843                           
  1844                           
  1845                           ; 4 bytes @ 0x1A
  1846  003A                     	ds	4
  1847  003E                     ___flge@ff2:
  1848  003E                     ___flsub@b:	
  1849                           ; 4 bytes @ 0x1E
  1850                           
  1851  003E                     ___fldiv@b:	
  1852                           ; 4 bytes @ 0x1E
  1853                           
  1854                           
  1855                           ; 4 bytes @ 0x1E
  1856  003E                     	ds	4
  1857  0042                     ??___flge:
  1858  0042                     ??___fldiv:	
  1859                           ; 1 bytes @ 0x22
  1860                           
  1861                           
  1862                           ; 1 bytes @ 0x22
  1863  0042                     	ds	5
  1864  0047                     ___fldiv@rem:
  1865                           
  1866                           ; 4 bytes @ 0x27
  1867  0047                     	ds	4
  1868  004B                     ___fldiv@sign:
  1869                           
  1870                           ; 1 bytes @ 0x2B
  1871  004B                     	ds	1
  1872  004C                     ___fldiv@new_exp:
  1873                           
  1874                           ; 2 bytes @ 0x2C
  1875  004C                     	ds	2
  1876  004E                     ___fldiv@grs:
  1877                           
  1878                           ; 4 bytes @ 0x2E
  1879  004E                     	ds	4
  1880  0052                     ___fldiv@bexp:
  1881                           
  1882                           ; 1 bytes @ 0x32
  1883  0052                     	ds	1
  1884  0053                     ___fldiv@aexp:
  1885                           
  1886                           ; 1 bytes @ 0x33
  1887  0053                     	ds	1
  1888  0054                     ?_floorf:
  1889  0054                     floorf@x:	
  1890                           ; 4 bytes @ 0x34
  1891                           
  1892                           
  1893                           ; 4 bytes @ 0x34
  1894  0054                     	ds	4
  1895  0058                     ??_floorf:
  1896                           
  1897                           ; 1 bytes @ 0x38
  1898  0058                     	ds	6
  1899  005E                     floorf@m:
  1900                           
  1901                           ; 4 bytes @ 0x3E
  1902  005E                     	ds	4
  1903  0062                     floorf@e:
  1904                           
  1905                           ; 2 bytes @ 0x42
  1906  0062                     	ds	2
  1907  0064                     floorf@u:
  1908                           
  1909                           ; 4 bytes @ 0x44
  1910  0064                     	ds	4
  1911  0068                     ?_efgtoa:
  1912  0068                     efgtoa@f:	
  1913                           ; 2 bytes @ 0x48
  1914                           
  1915                           
  1916                           ; 4 bytes @ 0x48
  1917  0068                     	ds	4
  1918  006C                     efgtoa@c:
  1919                           
  1920                           ; 1 bytes @ 0x4C
  1921  006C                     	ds	1
  1922  006D                     ??_efgtoa:
  1923                           
  1924                           ; 1 bytes @ 0x4D
  1925  006D                     	ds	3
  1926                           
  1927                           	psect	maintext
  1928  148B                     __pmaintext:	
  1929 ;;
  1930 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1931 ;;
  1932 ;; *************** function _main *****************
  1933 ;; Defined at:
  1934 ;;		line 11 in file "main.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;		None
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;		None
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      void 
  1941 ;; Registers used:
  1942 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : B1F/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1950 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1951 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1952 ;;Total ram usage:        1 bytes
  1953 ;; Hardware stack levels required when called: 8
  1954 ;; This function calls:
  1955 ;;		_ADC_Init
  1956 ;;		_ADC_Read
  1957 ;;		_UART_Init
  1958 ;;		_UART_Write_Text
  1959 ;;		___fldiv
  1960 ;;		___flmul
  1961 ;;		___xxtofl
  1962 ;;		_sprintf
  1963 ;; This function is called by:
  1964 ;;		Startup code after reset
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968  148B                     _main:	
  1969                           ;psect for function _main
  1970                           
  1971  148B                     l3829:	
  1972                           ;incstack = 0
  1973                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1974                           
  1975                           
  1976                           ;main.c: 13:     OSCCON = 0x38;
  1977  148B  3038               	movlw	56
  1978  148C  0021               	movlb	1	; select bank1
  1979  148D  0099               	movwf	25	;volatile
  1980  148E                     l3831:
  1981                           
  1982                           ;main.c: 14:     OSCTUNE = 0x00;
  1983  148E  0198               	clrf	24	;volatile
  1984  148F                     l3833:
  1985                           
  1986                           ;main.c: 15:     BORCON = 0x00;
  1987  148F  0022               	movlb	2	; select bank2
  1988  1490  0196               	clrf	22	;volatile
  1989  1491                     l3835:
  1990                           
  1991                           ;main.c: 17:     ANSELAbits.ANSA0 = 1;
  1992  1491  0023               	movlb	3	; select bank3
  1993  1492  140C               	bsf	12,0	;volatile
  1994  1493                     l3837:
  1995                           
  1996                           ;main.c: 18:     ADC_Init();
  1997  1493  319E  26E6  3194   	fcall	_ADC_Init
  1998  1496                     l3839:
  1999                           
  2000                           ;main.c: 19:     UART_Init();
  2001  1496  319E  26FC  3194   	fcall	_UART_Init
  2002  1499                     l3841:
  2003                           
  2004                           ;main.c: 23:         conver = ADC_Read(0);
  2005  1499  3000               	movlw	0
  2006  149A  319F  2708  3194   	fcall	_ADC_Read
  2007  149D  0871               	movf	?_ADC_Read+1,w
  2008  149E  0022               	movlb	2	; select bank2
  2009  149F  00CD               	movwf	(_conver+1)^(0+256)
  2010  14A0  0870               	movf	?_ADC_Read,w
  2011  14A1  00CC               	movwf	_conver^(0+256)
  2012  14A2                     l3843:
  2013                           
  2014                           ;main.c: 24:         pot1 = 5.0*conver/1023.0;
  2015  14A2  3044               	movlw	68
  2016  14A3  0020               	movlb	0	; select bank0
  2017  14A4  00BD               	movwf	___fldiv@a+3
  2018  14A5  307F               	movlw	127
  2019  14A6  00BC               	movwf	___fldiv@a+2
  2020  14A7  30C0               	movlw	192
  2021  14A8  00BB               	movwf	___fldiv@a+1
  2022  14A9  3000               	movlw	0
  2023  14AA  00BA               	movwf	___fldiv@a
  2024  14AB  3040               	movlw	64
  2025  14AC  00A3               	movwf	___flmul@b+3
  2026  14AD  30A0               	movlw	160
  2027  14AE  00A2               	movwf	___flmul@b+2
  2028  14AF  3000               	movlw	0
  2029  14B0  00A1               	movwf	___flmul@b+1
  2030  14B1  3000               	movlw	0
  2031  14B2  00A0               	movwf	___flmul@b
  2032  14B3  0022               	movlb	2	; select bank2
  2033  14B4  084C               	movf	_conver^(0+256),w
  2034  14B5  00F0               	movwf	___xxtofl@val
  2035  14B6  084D               	movf	(_conver+1)^(0+256),w
  2036  14B7  00F1               	movwf	___xxtofl@val+1
  2037  14B8  0D89               	rlf	9,f
  2038  14B9  3B89               	subwfb	9,f
  2039  14BA  0989               	comf	9,f
  2040  14BB  00F2               	movwf	___xxtofl@val+2
  2041  14BC  00F3               	movwf	___xxtofl@val+3
  2042  14BD  3001               	movlw	1
  2043  14BE  3188  2018  3194   	fcall	___xxtofl
  2044  14C1  0873               	movf	?___xxtofl+3,w
  2045  14C2  0020               	movlb	0	; select bank0
  2046  14C3  00A7               	movwf	___flmul@a+3
  2047  14C4  0872               	movf	?___xxtofl+2,w
  2048  14C5  00A6               	movwf	___flmul@a+2
  2049  14C6  0871               	movf	?___xxtofl+1,w
  2050  14C7  00A5               	movwf	___flmul@a+1
  2051  14C8  0870               	movf	?___xxtofl,w
  2052  14C9  00A4               	movwf	___flmul@a
  2053  14CA  318B  2303  3194   	fcall	___flmul
  2054  14CD  0020               	movlb	0	; select bank0
  2055  14CE  0823               	movf	?___flmul+3,w
  2056  14CF  00C1               	movwf	___fldiv@b+3
  2057  14D0  0822               	movf	?___flmul+2,w
  2058  14D1  00C0               	movwf	___fldiv@b+2
  2059  14D2  0821               	movf	?___flmul+1,w
  2060  14D3  00BF               	movwf	___fldiv@b+1
  2061  14D4  0820               	movf	?___flmul,w
  2062  14D5  00BE               	movwf	___fldiv@b
  2063  14D6  3196  264C  3194   	fcall	___fldiv
  2064  14D9  0020               	movlb	0	; select bank0
  2065  14DA  083D               	movf	?___fldiv+3,w
  2066  14DB  0022               	movlb	2	; select bank2
  2067  14DC  00CB               	movwf	(_pot1+3)^(0+256)
  2068  14DD  0020               	movlb	0	; select bank0
  2069  14DE  083C               	movf	?___fldiv+2,w
  2070  14DF  0022               	movlb	2	; select bank2
  2071  14E0  00CA               	movwf	(_pot1+2)^(0+256)
  2072  14E1  0020               	movlb	0	; select bank0
  2073  14E2  083B               	movf	?___fldiv+1,w
  2074  14E3  0022               	movlb	2	; select bank2
  2075  14E4  00C9               	movwf	(_pot1+1)^(0+256)
  2076  14E5  0020               	movlb	0	; select bank0
  2077  14E6  083A               	movf	?___fldiv,w
  2078  14E7  0022               	movlb	2	; select bank2
  2079  14E8  00C8               	movwf	_pot1^(0+256)
  2080  14E9                     l3845:
  2081                           
  2082                           ;main.c: 26:         conver = ADC_Read(1);
  2083  14E9  3001               	movlw	1
  2084  14EA  319F  2708  3194   	fcall	_ADC_Read
  2085  14ED  0871               	movf	?_ADC_Read+1,w
  2086  14EE  0022               	movlb	2	; select bank2
  2087  14EF  00CD               	movwf	(_conver+1)^(0+256)
  2088  14F0  0870               	movf	?_ADC_Read,w
  2089  14F1  00CC               	movwf	_conver^(0+256)
  2090  14F2                     l3847:
  2091                           
  2092                           ;main.c: 27:         pot2 = 5.0*conver/1023.0;
  2093  14F2  3044               	movlw	68
  2094  14F3  0020               	movlb	0	; select bank0
  2095  14F4  00BD               	movwf	___fldiv@a+3
  2096  14F5  307F               	movlw	127
  2097  14F6  00BC               	movwf	___fldiv@a+2
  2098  14F7  30C0               	movlw	192
  2099  14F8  00BB               	movwf	___fldiv@a+1
  2100  14F9  3000               	movlw	0
  2101  14FA  00BA               	movwf	___fldiv@a
  2102  14FB  3040               	movlw	64
  2103  14FC  00A3               	movwf	___flmul@b+3
  2104  14FD  30A0               	movlw	160
  2105  14FE  00A2               	movwf	___flmul@b+2
  2106  14FF  3000               	movlw	0
  2107  1500  00A1               	movwf	___flmul@b+1
  2108  1501  3000               	movlw	0
  2109  1502  00A0               	movwf	___flmul@b
  2110  1503  0022               	movlb	2	; select bank2
  2111  1504  084C               	movf	_conver^(0+256),w
  2112  1505  00F0               	movwf	___xxtofl@val
  2113  1506  084D               	movf	(_conver+1)^(0+256),w
  2114  1507  00F1               	movwf	___xxtofl@val+1
  2115  1508  0D89               	rlf	9,f
  2116  1509  3B89               	subwfb	9,f
  2117  150A  0989               	comf	9,f
  2118  150B  00F2               	movwf	___xxtofl@val+2
  2119  150C  00F3               	movwf	___xxtofl@val+3
  2120  150D  3001               	movlw	1
  2121  150E  3188  2018  3194   	fcall	___xxtofl
  2122  1511  0873               	movf	?___xxtofl+3,w
  2123  1512  0020               	movlb	0	; select bank0
  2124  1513  00A7               	movwf	___flmul@a+3
  2125  1514  0872               	movf	?___xxtofl+2,w
  2126  1515  00A6               	movwf	___flmul@a+2
  2127  1516  0871               	movf	?___xxtofl+1,w
  2128  1517  00A5               	movwf	___flmul@a+1
  2129  1518  0870               	movf	?___xxtofl,w
  2130  1519  00A4               	movwf	___flmul@a
  2131  151A  318B  2303  3194   	fcall	___flmul
  2132  151D  0020               	movlb	0	; select bank0
  2133  151E  0823               	movf	?___flmul+3,w
  2134  151F  00C1               	movwf	___fldiv@b+3
  2135  1520  0822               	movf	?___flmul+2,w
  2136  1521  00C0               	movwf	___fldiv@b+2
  2137  1522  0821               	movf	?___flmul+1,w
  2138  1523  00BF               	movwf	___fldiv@b+1
  2139  1524  0820               	movf	?___flmul,w
  2140  1525  00BE               	movwf	___fldiv@b
  2141  1526  3196  264C  3194   	fcall	___fldiv
  2142  1529  0020               	movlb	0	; select bank0
  2143  152A  083D               	movf	?___fldiv+3,w
  2144  152B  0022               	movlb	2	; select bank2
  2145  152C  00C7               	movwf	(_pot2+3)^(0+256)
  2146  152D  0020               	movlb	0	; select bank0
  2147  152E  083C               	movf	?___fldiv+2,w
  2148  152F  0022               	movlb	2	; select bank2
  2149  1530  00C6               	movwf	(_pot2+2)^(0+256)
  2150  1531  0020               	movlb	0	; select bank0
  2151  1532  083B               	movf	?___fldiv+1,w
  2152  1533  0022               	movlb	2	; select bank2
  2153  1534  00C5               	movwf	(_pot2+1)^(0+256)
  2154  1535  0020               	movlb	0	; select bank0
  2155  1536  083A               	movf	?___fldiv,w
  2156  1537  0022               	movlb	2	; select bank2
  2157  1538  00C4               	movwf	_pot2^(0+256)
  2158  1539                     l3849:
  2159                           
  2160                           ;main.c: 29:         sprintf(bufferTx,"#%7.5f/%3.1f*\r\n",pot1, pot2);
  2161  1539  3000               	movlw	low (STR_1| (0+32768))
  2162  153A  00A0               	movwf	sprintf@fmt^(0+256)
  2163  153B  30A0               	movlw	high (STR_1| (0+32768))
  2164  153C  00A1               	movwf	(sprintf@fmt^(0+256)+1)
  2165  153D  084B               	movf	(_pot1+3)^(0+256),w
  2166  153E  00A5               	movwf	((?_sprintf+3)^(0+256)+2)
  2167  153F  084A               	movf	(_pot1+2)^(0+256),w
  2168  1540  00A4               	movwf	((?_sprintf+2)^(0+256)+2)
  2169  1541  0849               	movf	(_pot1+1)^(0+256),w
  2170  1542  00A3               	movwf	((?_sprintf+1)^(0+256)+2)
  2171  1543  0848               	movf	_pot1^(0+256),w
  2172  1544  00A2               	movwf	(?_sprintf^(0+256)+2)
  2173  1545  0847               	movf	(_pot2+3)^(0+256),w
  2174  1546  00A9               	movwf	((?_sprintf+3)^(0+256)+6)
  2175  1547  0846               	movf	(_pot2+2)^(0+256),w
  2176  1548  00A8               	movwf	((?_sprintf+2)^(0+256)+6)
  2177  1549  0845               	movf	(_pot2+1)^(0+256),w
  2178  154A  00A7               	movwf	((?_sprintf+1)^(0+256)+6)
  2179  154B  0844               	movf	_pot2^(0+256),w
  2180  154C  00A6               	movwf	(?_sprintf^(0+256)+6)
  2181  154D  3020               	movlw	(low (_bufferTx| (0+512)))& (0+255)
  2182  154E  3190  2054  3194   	fcall	_sprintf
  2183  1551                     l3851:
  2184                           
  2185                           ;main.c: 30:         UART_Write_Text(bufferTx);
  2186  1551  3020               	movlw	(low (_bufferTx| (0+512)))& (0+255)
  2187  1552  319F  2735  3194   	fcall	_UART_Write_Text
  2188  1555                     l3853:
  2189                           
  2190                           ;main.c: 32:         _delay((unsigned long)((20)*(20000000UL/4000.0)));
  2191  1555  3082               	movlw	130
  2192  1556  0021               	movlb	1	; select bank1
  2193  1557  00EC               	movwf	??_main^(0+128)
  2194  1558  30DD               	movlw	221
  2195  1559                     u5387:
  2196  1559  0B89               	decfsz	9,f
  2197  155A  2D59               	goto	u5387
  2198  155B  0BEC               	decfsz	??_main^(0+128),f
  2199  155C  2D59               	goto	u5387
  2200  155D  3200               	nop2
  2201  155E  2C99               	goto	l3841
  2202  155F  3180  2802         	ljmp	start
  2203  1561                     __end_of_main:
  2204                           
  2205                           	psect	text1
  2206  1054                     __ptext1:	
  2207 ;; *************** function _sprintf *****************
  2208 ;; Defined at:
  2209 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;  s               1    wreg     PTR unsigned char 
  2212 ;;		 -> bufferTx(50), 
  2213 ;;  fmt             2    0[BANK2 ] PTR const unsigned char 
  2214 ;;		 -> STR_1(16), 
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;  s               1   10[BANK2 ] PTR unsigned char 
  2217 ;;		 -> bufferTx(50), 
  2218 ;;  f              10   12[BANK2 ] struct _IO_FILE
  2219 ;;  ret             2    0        int 
  2220 ;;  ap              1   11[BANK2 ] PTR void [1]
  2221 ;;		 -> ?_sprintf(2), 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  2    0[BANK2 ] int 
  2224 ;; Registers used:
  2225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2231 ;;      Params:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0
  2232 ;;      Locals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
  2233 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2234 ;;      Totals:         0       0       1      22       0       0       0       0       0       0       0       0       
      +0       0
  2235 ;;Total ram usage:       23 bytes
  2236 ;; Hardware stack levels used: 1
  2237 ;; Hardware stack levels required when called: 7
  2238 ;; This function calls:
  2239 ;;		_vfprintf
  2240 ;; This function is called by:
  2241 ;;		_main
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245  1054                     _sprintf:	
  2246                           ;psect for function _sprintf
  2247                           
  2248                           
  2249                           ;incstack = 0
  2250                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2251                           ;sprintf@s stored from wreg
  2252  1054  0022               	movlb	2	; select bank2
  2253  1055  00AA               	movwf	sprintf@s^(0+256)
  2254  1056                     l3765:
  2255  1056  3022               	movlw	(low ((?_sprintf| (0+256)+2)))& (0+255)
  2256  1057  0021               	movlb	1	; select bank1
  2257  1058  00EB               	movwf	??_sprintf^(0+128)
  2258  1059  086B               	movf	??_sprintf^(0+128),w
  2259  105A  0022               	movlb	2	; select bank2
  2260  105B  00AB               	movwf	sprintf@ap^(0+256)
  2261  105C  082A               	movf	sprintf@s^(0+256),w
  2262  105D  0021               	movlb	1	; select bank1
  2263  105E  00EB               	movwf	??_sprintf^(0+128)
  2264  105F  086B               	movf	??_sprintf^(0+128),w
  2265  1060  0022               	movlb	2	; select bank2
  2266  1061  00AC               	movwf	sprintf@f^(0+256)
  2267  1062                     l3767:
  2268  1062  01AE               	clrf	(sprintf@f^(0+256)+2)
  2269  1063  01AF               	clrf	((sprintf@f+1)^(0+256)+2)
  2270  1064                     l3769:
  2271  1064  01B4               	clrf	(sprintf@f^(0+256)+8)
  2272  1065  01B5               	clrf	((sprintf@f+1)^(0+256)+8)
  2273  1066                     l3771:
  2274  1066  0821               	movf	(sprintf@fmt+1)^(0+256),w
  2275  1067  0021               	movlb	1	; select bank1
  2276  1068  00E4               	movwf	(vfprintf@fmt+1)^(0+128)
  2277  1069  0022               	movlb	2	; select bank2
  2278  106A  0820               	movf	sprintf@fmt^(0+256),w
  2279  106B  0021               	movlb	1	; select bank1
  2280  106C  00E3               	movwf	vfprintf@fmt^(0+128)
  2281  106D  302B               	movlw	(low (sprintf@ap| (0+256)))& (0+255)
  2282  106E  00EB               	movwf	??_sprintf^(0+128)
  2283  106F  086B               	movf	??_sprintf^(0+128),w
  2284  1070  00E5               	movwf	vfprintf@ap^(0+128)
  2285  1071  302C               	movlw	(low (sprintf@f| (0+256)))& (0+255)
  2286  1072  3190  2080  3190   	fcall	_vfprintf
  2287  1075                     l3773:
  2288  1075  0022               	movlb	2	; select bank2
  2289  1076  082E               	movf	(sprintf@f^(0+256)+2),w
  2290  1077  072A               	addwf	sprintf@s^(0+256),w
  2291  1078  0021               	movlb	1	; select bank1
  2292  1079  00EB               	movwf	??_sprintf^(0+128)
  2293  107A  086B               	movf	??_sprintf^(0+128),w
  2294  107B  0086               	movwf	6
  2295  107C  3002               	movlw	2	; select bank4/5
  2296  107D  0087               	movwf	7
  2297  107E  0181               	clrf	1
  2298  107F                     l703:
  2299  107F  0008               	return
  2300  1080                     __end_of_sprintf:
  2301                           
  2302                           	psect	text2
  2303  1080                     __ptext2:	
  2304 ;; *************** function _vfprintf *****************
  2305 ;; Defined at:
  2306 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  fp              1    wreg     PTR struct _IO_FILE
  2309 ;;		 -> sprintf@f(10), 
  2310 ;;  fmt             2   67[BANK1 ] PTR const unsigned char 
  2311 ;;		 -> STR_1(16), 
  2312 ;;  ap              1   69[BANK1 ] PTR PTR void 
  2313 ;;		 -> sprintf@ap(1), 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;  fp              1   72[BANK1 ] PTR struct _IO_FILE
  2316 ;;		 -> sprintf@f(10), 
  2317 ;;  cfmt            2   73[BANK1 ] PTR unsigned char 
  2318 ;;		 -> STR_1(16), 
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  2   67[BANK1 ] int 
  2321 ;; Registers used:
  2322 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2328 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2329 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2330 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2331 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  2332 ;;Total ram usage:        8 bytes
  2333 ;; Hardware stack levels used: 1
  2334 ;; Hardware stack levels required when called: 6
  2335 ;; This function calls:
  2336 ;;		_vfpfcnvrt
  2337 ;; This function is called by:
  2338 ;;		_sprintf
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342  1080                     _vfprintf:	
  2343                           ;psect for function _vfprintf
  2344                           
  2345                           
  2346                           ;incstack = 0
  2347                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2348                           ;vfprintf@fp stored from wreg
  2349  1080  0021               	movlb	1	; select bank1
  2350  1081  00E8               	movwf	vfprintf@fp^(0+128)
  2351  1082                     l3723:
  2352                           
  2353                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2354  1082  0864               	movf	(vfprintf@fmt+1)^(0+128),w
  2355  1083  00EA               	movwf	(vfprintf@cfmt+1)^(0+128)
  2356  1084  0863               	movf	vfprintf@fmt^(0+128),w
  2357  1085  00E9               	movwf	vfprintf@cfmt^(0+128)
  2358  1086                     l3725:
  2359                           
  2360                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2361  1086  0022               	movlb	2	; select bank2
  2362  1087  01BE               	clrf	_nout^(0+256)
  2363  1088  01BF               	clrf	(_nout+1)^(0+256)
  2364                           
  2365                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2366  1089  289E               	goto	l3729
  2367  108A                     l3727:
  2368                           
  2369                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2370  108A  30E9               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2371  108B  00E6               	movwf	??_vfprintf^(0+128)
  2372  108C  0866               	movf	??_vfprintf^(0+128),w
  2373  108D  00D3               	movwf	vfpfcnvrt@fmt^(0+128)
  2374  108E  0865               	movf	vfprintf@ap^(0+128),w
  2375  108F  00E7               	movwf	(??_vfprintf+1)^(0+128)
  2376  1090  0867               	movf	(??_vfprintf+1)^(0+128),w
  2377  1091  00D4               	movwf	vfpfcnvrt@ap^(0+128)
  2378  1092  0868               	movf	vfprintf@fp^(0+128),w
  2379  1093  318D  255A  3190   	fcall	_vfpfcnvrt
  2380  1096  0021               	movlb	1	; select bank1
  2381  1097  0853               	movf	?_vfpfcnvrt^(0+128),w
  2382  1098  0022               	movlb	2	; select bank2
  2383  1099  07BE               	addwf	_nout^(0+256),f
  2384  109A  0021               	movlb	1	; select bank1
  2385  109B  0854               	movf	(?_vfpfcnvrt+1)^(0+128),w
  2386  109C  0022               	movlb	2	; select bank2
  2387  109D  3DBF               	addwfc	(_nout+1)^(0+256),f
  2388  109E                     l3729:
  2389                           
  2390                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2391  109E  0021               	movlb	1	; select bank1
  2392  109F  0869               	movf	vfprintf@cfmt^(0+128),w
  2393  10A0  0084               	movwf	4
  2394  10A1  086A               	movf	(vfprintf@cfmt+1)^(0+128),w
  2395  10A2  0085               	movwf	5
  2396  10A3  0012               	moviw fsr0++
  2397  10A4  1D03               	btfss	3,2
  2398  10A5  28A7               	goto	u5211
  2399  10A6  28A8               	goto	u5210
  2400  10A7                     u5211:
  2401  10A7  288A               	goto	l3727
  2402  10A8                     u5210:
  2403  10A8                     l3731:
  2404                           
  2405                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2406  10A8  0022               	movlb	2	; select bank2
  2407  10A9  083F               	movf	(_nout+1)^(0+256),w
  2408  10AA  0021               	movlb	1	; select bank1
  2409  10AB  00E4               	movwf	(?_vfprintf+1)^(0+128)
  2410  10AC  0022               	movlb	2	; select bank2
  2411  10AD  083E               	movf	_nout^(0+256),w
  2412  10AE  0021               	movlb	1	; select bank1
  2413  10AF  00E3               	movwf	?_vfprintf^(0+128)
  2414  10B0                     l871:
  2415  10B0  0008               	return
  2416  10B1                     __end_of_vfprintf:
  2417                           
  2418                           	psect	text3
  2419  0D5A                     __ptext3:	
  2420 ;; *************** function _vfpfcnvrt *****************
  2421 ;; Defined at:
  2422 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  fp              1    wreg     PTR struct _IO_FILE
  2425 ;;		 -> sprintf@f(10), 
  2426 ;;  fmt             1   51[BANK1 ] PTR PTR unsigned char 
  2427 ;;		 -> vfprintf@cfmt(2), 
  2428 ;;  ap              1   52[BANK1 ] PTR PTR void 
  2429 ;;		 -> sprintf@ap(1), 
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  fp              1   66[BANK1 ] PTR struct _IO_FILE
  2432 ;;		 -> sprintf@f(10), 
  2433 ;;  llu             8    0        unsigned long long 
  2434 ;;  ll              8    0        long long 
  2435 ;;  f               4   58[BANK1 ] long long 
  2436 ;;  ct              3   62[BANK1 ] unsigned char [3]
  2437 ;;  vp              2    0        PTR void 
  2438 ;;  i               2    0        int 
  2439 ;;  done            2    0        int 
  2440 ;;  cp              2    0        PTR unsigned char 
  2441 ;;  c               1   65[BANK1 ] unsigned char 
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  2   51[BANK1 ] int 
  2444 ;; Registers used:
  2445 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2451 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2452 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  2453 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  2454 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  2455 ;;Total ram usage:       16 bytes
  2456 ;; Hardware stack levels used: 1
  2457 ;; Hardware stack levels required when called: 5
  2458 ;; This function calls:
  2459 ;;		_atoi
  2460 ;;		_efgtoa
  2461 ;;		_fputc
  2462 ;;		_isdigit
  2463 ;;		_isupper
  2464 ;;		_strncmp
  2465 ;;		_tolower
  2466 ;; This function is called by:
  2467 ;;		_vfprintf
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471  0D5A                     _vfpfcnvrt:	
  2472                           ;psect for function _vfpfcnvrt
  2473                           
  2474                           
  2475                           ;incstack = 0
  2476                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2477                           ;vfpfcnvrt@fp stored from wreg
  2478  0D5A  0021               	movlb	1	; select bank1
  2479  0D5B  00E2               	movwf	vfpfcnvrt@fp^(0+128)
  2480  0D5C                     l3607:
  2481                           
  2482                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2483  0D5C  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2484  0D5D  0086               	movwf	6
  2485  0D5E  0187               	clrf	7
  2486  0D5F  3F40               	moviw [0]fsr1
  2487  0D60  00D5               	movwf	??_vfpfcnvrt^(0+128)
  2488  0D61  3F41               	moviw [1]fsr1
  2489  0D62  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2490  0D63  0855               	movf	??_vfpfcnvrt^(0+128),w
  2491  0D64  0084               	movwf	4
  2492  0D65  0856               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2493  0D66  0085               	movwf	5
  2494  0D67  0012               	moviw fsr0++
  2495  0D68  3A25               	xorlw	37
  2496  0D69  1D03               	btfss	3,2
  2497  0D6A  2D6C               	goto	u5071
  2498  0D6B  2D6D               	goto	u5070
  2499  0D6C                     u5071:
  2500  0D6C  2FDC               	goto	l3711
  2501  0D6D                     u5070:
  2502  0D6D                     l3609:
  2503                           
  2504                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2505  0D6D  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2506  0D6E  0086               	movwf	6
  2507  0D6F  0187               	clrf	7
  2508  0D70  3001               	movlw	1
  2509  0D71  0781               	addwf	1,f
  2510  0D72  3141               	addfsr 1,1
  2511  0D73  1803               	skipnc
  2512  0D74  0A81               	incf	1,f
  2513  0D75                     l3611:
  2514                           
  2515                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2516  0D75  0022               	movlb	2	; select bank2
  2517  0D76  01C0               	clrf	_width^(0+256)
  2518  0D77  01C1               	clrf	(_width+1)^(0+256)
  2519  0D78  0021               	movlb	1	; select bank1
  2520  0D79  01ED               	clrf	_flags^(0+128)
  2521  0D7A  01EE               	clrf	(_flags+1)^(0+128)
  2522  0D7B                     l3613:
  2523                           
  2524                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2525  0D7B  30FF               	movlw	255
  2526  0D7C  0022               	movlb	2	; select bank2
  2527  0D7D  00C2               	movwf	_prec^(0+256)
  2528  0D7E  30FF               	movlw	255
  2529  0D7F  00C3               	movwf	(_prec^(0+256)+1)
  2530  0D80                     l3615:
  2531                           
  2532                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2533  0D80  0021               	movlb	1	; select bank1
  2534  0D81  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2535  0D82  0086               	movwf	6
  2536  0D83  0187               	clrf	7
  2537  0D84  3F40               	moviw [0]fsr1
  2538  0D85  00D5               	movwf	??_vfpfcnvrt^(0+128)
  2539  0D86  3F41               	moviw [1]fsr1
  2540  0D87  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2541  0D88  0855               	movf	??_vfpfcnvrt^(0+128),w
  2542  0D89  0084               	movwf	4
  2543  0D8A  0856               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2544  0D8B  0085               	movwf	5
  2545  0D8C  0012               	moviw fsr0++
  2546  0D8D  3A2A               	xorlw	42
  2547  0D8E  1D03               	btfss	3,2
  2548  0D8F  2D91               	goto	u5081
  2549  0D90  2D92               	goto	u5080
  2550  0D91                     u5081:
  2551  0D91  2DB6               	goto	l3627
  2552  0D92                     u5080:
  2553  0D92                     l3617:
  2554                           
  2555                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2556  0D92  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2557  0D93  0086               	movwf	6
  2558  0D94  0187               	clrf	7
  2559  0D95  3001               	movlw	1
  2560  0D96  0781               	addwf	1,f
  2561  0D97  3141               	addfsr 1,1
  2562  0D98  1803               	skipnc
  2563  0D99  0A81               	incf	1,f
  2564  0D9A                     l3619:
  2565                           
  2566                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2567  0D9A  0854               	movf	vfpfcnvrt@ap^(0+128),w
  2568  0D9B  0086               	movwf	6
  2569  0D9C  3001               	movlw	1	; select bank2/3
  2570  0D9D  0087               	movwf	7
  2571  0D9E  0801               	movf	1,w
  2572  0D9F  0084               	movwf	4
  2573  0DA0  3001               	movlw	1	; select bank2/3
  2574  0DA1  0085               	movwf	5
  2575  0DA2  3002               	movlw	2
  2576  0DA3  0781               	addwf	1,f
  2577  0DA4  3F00               	moviw [0]fsr0
  2578  0DA5  0022               	movlb	2	; select bank2
  2579  0DA6  00C0               	movwf	_width^(0+256)
  2580  0DA7  3F01               	moviw [1]fsr0
  2581  0DA8  00C1               	movwf	(_width+1)^(0+256)
  2582  0DA9                     l3621:
  2583                           
  2584                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2585  0DA9  1FC1               	btfss	(_width+1)^(0+256),7
  2586  0DAA  2DAC               	goto	u5091
  2587  0DAB  2DAD               	goto	u5090
  2588  0DAC                     u5091:
  2589  0DAC  2DEA               	goto	l3635
  2590  0DAD                     u5090:
  2591  0DAD                     l3623:
  2592                           
  2593                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2594  0DAD  0021               	movlb	1	; select bank1
  2595  0DAE  146D               	bsf	_flags^(0+128),0
  2596  0DAF                     l3625:
  2597                           
  2598                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2599  0DAF  0022               	movlb	2	; select bank2
  2600  0DB0  09C0               	comf	_width^(0+256),f
  2601  0DB1  09C1               	comf	(_width+1)^(0+256),f
  2602  0DB2  0AC0               	incf	_width^(0+256),f
  2603  0DB3  1903               	skipnz
  2604  0DB4  0AC1               	incf	(_width+1)^(0+256),f
  2605  0DB5  2DEA               	goto	l3635
  2606  0DB6                     l3627:
  2607                           
  2608                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2609  0DB6  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2610  0DB7  0086               	movwf	6
  2611  0DB8  0187               	clrf	7
  2612  0DB9  3F40               	moviw [0]fsr1
  2613  0DBA  00F6               	movwf	atoi@s
  2614  0DBB  3F41               	moviw [1]fsr1
  2615  0DBC  00F7               	movwf	atoi@s+1
  2616  0DBD  3193  23F7  318D   	fcall	_atoi
  2617  0DC0  0877               	movf	?_atoi+1,w
  2618  0DC1  0022               	movlb	2	; select bank2
  2619  0DC2  00C1               	movwf	(_width+1)^(0+256)
  2620  0DC3  0876               	movf	?_atoi,w
  2621  0DC4  00C0               	movwf	_width^(0+256)
  2622                           
  2623                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2624  0DC5  2DCE               	goto	l3633
  2625  0DC6                     l3629:
  2626                           
  2627                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2628  0DC6  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2629  0DC7  0086               	movwf	6
  2630  0DC8  0187               	clrf	7
  2631  0DC9  3001               	movlw	1
  2632  0DCA  0781               	addwf	1,f
  2633  0DCB  3141               	addfsr 1,1
  2634  0DCC  1803               	skipnc
  2635  0DCD  0A81               	incf	1,f
  2636  0DCE                     l3633:
  2637  0DCE  0021               	movlb	1	; select bank1
  2638  0DCF  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2639  0DD0  0086               	movwf	6
  2640  0DD1  0187               	clrf	7
  2641  0DD2  3F40               	moviw [0]fsr1
  2642  0DD3  00D5               	movwf	??_vfpfcnvrt^(0+128)
  2643  0DD4  3F41               	moviw [1]fsr1
  2644  0DD5  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2645  0DD6  0855               	movf	??_vfpfcnvrt^(0+128),w
  2646  0DD7  0084               	movwf	4
  2647  0DD8  0856               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2648  0DD9  0085               	movwf	5
  2649  0DDA  0800               	movf	0,w	;code access
  2650  0DDB  3ED0               	addlw	208
  2651  0DDC  00D7               	movwf	(??_vfpfcnvrt+2)^(0+128)
  2652  0DDD  30FF               	movlw	255
  2653  0DDE  1803               	skipnc
  2654  0DDF  3000               	movlw	0
  2655  0DE0  00D8               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  2656  0DE1  3000               	movlw	0
  2657  0DE2  0258               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  2658  0DE3  300A               	movlw	10
  2659  0DE4  1903               	skipnz
  2660  0DE5  0257               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  2661  0DE6  1C03               	skipc
  2662  0DE7  2DE9               	goto	u5101
  2663  0DE8  2DEA               	goto	u5100
  2664  0DE9                     u5101:
  2665  0DE9  2DC6               	goto	l3629
  2666  0DEA                     u5100:
  2667  0DEA                     l3635:
  2668                           
  2669                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2670  0DEA  0021               	movlb	1	; select bank1
  2671  0DEB  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2672  0DEC  0086               	movwf	6
  2673  0DED  0187               	clrf	7
  2674  0DEE  3F40               	moviw [0]fsr1
  2675  0DEF  00D5               	movwf	??_vfpfcnvrt^(0+128)
  2676  0DF0  3F41               	moviw [1]fsr1
  2677  0DF1  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2678  0DF2  0855               	movf	??_vfpfcnvrt^(0+128),w
  2679  0DF3  0084               	movwf	4
  2680  0DF4  0856               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2681  0DF5  0085               	movwf	5
  2682  0DF6  0012               	moviw fsr0++
  2683  0DF7  3A2E               	xorlw	46
  2684  0DF8  1D03               	btfss	3,2
  2685  0DF9  2DFB               	goto	u5111
  2686  0DFA  2DFC               	goto	u5110
  2687  0DFB                     u5111:
  2688  0DFB  2E65               	goto	l3655
  2689  0DFC                     u5110:
  2690  0DFC                     l3637:
  2691                           
  2692                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2693  0DFC  0022               	movlb	2	; select bank2
  2694  0DFD  01C2               	clrf	_prec^(0+256)
  2695  0DFE  01C3               	clrf	(_prec+1)^(0+256)
  2696  0DFF                     l3639:
  2697                           
  2698                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2699  0DFF  0021               	movlb	1	; select bank1
  2700  0E00  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2701  0E01  0086               	movwf	6
  2702  0E02  0187               	clrf	7
  2703  0E03  3001               	movlw	1
  2704  0E04  0781               	addwf	1,f
  2705  0E05  3141               	addfsr 1,1
  2706  0E06  1803               	skipnc
  2707  0E07  0A81               	incf	1,f
  2708  0E08                     l3641:
  2709                           
  2710                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2711  0E08  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2712  0E09  0086               	movwf	6
  2713  0E0A  0187               	clrf	7
  2714  0E0B  3F40               	moviw [0]fsr1
  2715  0E0C  00D5               	movwf	??_vfpfcnvrt^(0+128)
  2716  0E0D  3F41               	moviw [1]fsr1
  2717  0E0E  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2718  0E0F  0855               	movf	??_vfpfcnvrt^(0+128),w
  2719  0E10  0084               	movwf	4
  2720  0E11  0856               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2721  0E12  0085               	movwf	5
  2722  0E13  0012               	moviw fsr0++
  2723  0E14  3A2A               	xorlw	42
  2724  0E15  1D03               	btfss	3,2
  2725  0E16  2E18               	goto	u5121
  2726  0E17  2E19               	goto	u5120
  2727  0E18                     u5121:
  2728  0E18  2E31               	goto	l3647
  2729  0E19                     u5120:
  2730  0E19                     l3643:
  2731                           
  2732                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2733  0E19  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2734  0E1A  0086               	movwf	6
  2735  0E1B  0187               	clrf	7
  2736  0E1C  3001               	movlw	1
  2737  0E1D  0781               	addwf	1,f
  2738  0E1E  3141               	addfsr 1,1
  2739  0E1F  1803               	skipnc
  2740  0E20  0A81               	incf	1,f
  2741  0E21                     l3645:
  2742                           
  2743                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2744  0E21  0854               	movf	vfpfcnvrt@ap^(0+128),w
  2745  0E22  0086               	movwf	6
  2746  0E23  3001               	movlw	1	; select bank2/3
  2747  0E24  0087               	movwf	7
  2748  0E25  0801               	movf	1,w
  2749  0E26  0084               	movwf	4
  2750  0E27  3001               	movlw	1	; select bank2/3
  2751  0E28  0085               	movwf	5
  2752  0E29  3002               	movlw	2
  2753  0E2A  0781               	addwf	1,f
  2754  0E2B  3F00               	moviw [0]fsr0
  2755  0E2C  0022               	movlb	2	; select bank2
  2756  0E2D  00C2               	movwf	_prec^(0+256)
  2757  0E2E  3F01               	moviw [1]fsr0
  2758  0E2F  00C3               	movwf	(_prec+1)^(0+256)
  2759                           
  2760                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2761  0E30  2E65               	goto	l3655
  2762  0E31                     l3647:
  2763                           
  2764                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2765  0E31  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2766  0E32  0086               	movwf	6
  2767  0E33  0187               	clrf	7
  2768  0E34  3F40               	moviw [0]fsr1
  2769  0E35  00F6               	movwf	atoi@s
  2770  0E36  3F41               	moviw [1]fsr1
  2771  0E37  00F7               	movwf	atoi@s+1
  2772  0E38  3193  23F7  318D   	fcall	_atoi
  2773  0E3B  0877               	movf	?_atoi+1,w
  2774  0E3C  0022               	movlb	2	; select bank2
  2775  0E3D  00C3               	movwf	(_prec+1)^(0+256)
  2776  0E3E  0876               	movf	?_atoi,w
  2777  0E3F  00C2               	movwf	_prec^(0+256)
  2778                           
  2779                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2780  0E40  2E49               	goto	l3653
  2781  0E41                     l3649:
  2782                           
  2783                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2784  0E41  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2785  0E42  0086               	movwf	6
  2786  0E43  0187               	clrf	7
  2787  0E44  3001               	movlw	1
  2788  0E45  0781               	addwf	1,f
  2789  0E46  3141               	addfsr 1,1
  2790  0E47  1803               	skipnc
  2791  0E48  0A81               	incf	1,f
  2792  0E49                     l3653:
  2793  0E49  0021               	movlb	1	; select bank1
  2794  0E4A  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2795  0E4B  0086               	movwf	6
  2796  0E4C  0187               	clrf	7
  2797  0E4D  3F40               	moviw [0]fsr1
  2798  0E4E  00D5               	movwf	??_vfpfcnvrt^(0+128)
  2799  0E4F  3F41               	moviw [1]fsr1
  2800  0E50  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2801  0E51  0855               	movf	??_vfpfcnvrt^(0+128),w
  2802  0E52  0084               	movwf	4
  2803  0E53  0856               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2804  0E54  0085               	movwf	5
  2805  0E55  0800               	movf	0,w	;code access
  2806  0E56  3ED0               	addlw	208
  2807  0E57  00D7               	movwf	(??_vfpfcnvrt+2)^(0+128)
  2808  0E58  30FF               	movlw	255
  2809  0E59  1803               	skipnc
  2810  0E5A  3000               	movlw	0
  2811  0E5B  00D8               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  2812  0E5C  3000               	movlw	0
  2813  0E5D  0258               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  2814  0E5E  300A               	movlw	10
  2815  0E5F  1903               	skipnz
  2816  0E60  0257               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  2817  0E61  1C03               	skipc
  2818  0E62  2E64               	goto	u5131
  2819  0E63  2E65               	goto	u5130
  2820  0E64                     u5131:
  2821  0E64  2E41               	goto	l3649
  2822  0E65                     u5130:
  2823  0E65                     l3655:
  2824                           
  2825                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2826  0E65  0021               	movlb	1	; select bank1
  2827  0E66  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2828  0E67  0086               	movwf	6
  2829  0E68  0187               	clrf	7
  2830  0E69  3F40               	moviw [0]fsr1
  2831  0E6A  00D5               	movwf	??_vfpfcnvrt^(0+128)
  2832  0E6B  3F41               	moviw [1]fsr1
  2833  0E6C  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2834  0E6D  0855               	movf	??_vfpfcnvrt^(0+128),w
  2835  0E6E  0084               	movwf	4
  2836  0E6F  0856               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2837  0E70  0085               	movwf	5
  2838  0E71  0800               	movf	0,w	;code access
  2839  0E72  00D7               	movwf	(??_vfpfcnvrt+2)^(0+128)
  2840  0E73  01D8               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  2841  0E74  0857               	movf	(??_vfpfcnvrt+2)^(0+128),w
  2842  0E75  00F6               	movwf	tolower@c
  2843  0E76  0858               	movf	(??_vfpfcnvrt+3)^(0+128),w
  2844  0E77  00F7               	movwf	tolower@c+1
  2845  0E78  319F  271E  318D   	fcall	_tolower
  2846  0E7B  0876               	movf	?_tolower,w
  2847  0E7C  0021               	movlb	1	; select bank1
  2848  0E7D  00D9               	movwf	(??_vfpfcnvrt+4)^(0+128)
  2849  0E7E  0859               	movf	(??_vfpfcnvrt+4)^(0+128),w
  2850  0E7F  00DE               	movwf	vfpfcnvrt@ct^(0+128)
  2851  0E80                     l3657:
  2852                           
  2853                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2854  0E80  085E               	movf	vfpfcnvrt@ct^(0+128),w
  2855  0E81  1903               	btfsc	3,2
  2856  0E82  2E84               	goto	u5141
  2857  0E83  2E85               	goto	u5140
  2858  0E84                     u5141:
  2859  0E84  2EC4               	goto	l3665
  2860  0E85                     u5140:
  2861  0E85                     l3659:
  2862                           
  2863                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2864  0E85  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2865  0E86  0086               	movwf	6
  2866  0E87  0187               	clrf	7
  2867  0E88  3F40               	moviw [0]fsr1
  2868  0E89  00D5               	movwf	??_vfpfcnvrt^(0+128)
  2869  0E8A  3F41               	moviw [1]fsr1
  2870  0E8B  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2871  0E8C  3001               	movlw	1
  2872  0E8D  0755               	addwf	??_vfpfcnvrt^(0+128),w
  2873  0E8E  0084               	movwf	4
  2874  0E8F  0856               	movf	(??_vfpfcnvrt^(0+128)+1),w
  2875  0E90  1803               	skipnc
  2876  0E91  0A56               	incf	(??_vfpfcnvrt^(0+128)+1),w
  2877  0E92  0085               	movwf	5
  2878  0E93  0800               	movf	0,w	;code access
  2879  0E94  00D7               	movwf	(??_vfpfcnvrt+2)^(0+128)
  2880  0E95  01D8               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  2881  0E96  0857               	movf	(??_vfpfcnvrt+2)^(0+128),w
  2882  0E97  00F6               	movwf	tolower@c
  2883  0E98  0858               	movf	(??_vfpfcnvrt+3)^(0+128),w
  2884  0E99  00F7               	movwf	tolower@c+1
  2885  0E9A  319F  271E  318D   	fcall	_tolower
  2886  0E9D  0876               	movf	?_tolower,w
  2887  0E9E  0021               	movlb	1	; select bank1
  2888  0E9F  00D9               	movwf	(??_vfpfcnvrt+4)^(0+128)
  2889  0EA0  0859               	movf	(??_vfpfcnvrt+4)^(0+128),w
  2890  0EA1  00DF               	movwf	(vfpfcnvrt@ct^(0+128)+1)
  2891  0EA2                     l3661:
  2892                           
  2893                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2894  0EA2  085F               	movf	(vfpfcnvrt@ct^(0+128)+1),w
  2895  0EA3  1903               	btfsc	3,2
  2896  0EA4  2EA6               	goto	u5151
  2897  0EA5  2EA7               	goto	u5150
  2898  0EA6                     u5151:
  2899  0EA6  2EC4               	goto	l3665
  2900  0EA7                     u5150:
  2901  0EA7                     l3663:
  2902                           
  2903                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2904  0EA7  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2905  0EA8  0086               	movwf	6
  2906  0EA9  0187               	clrf	7
  2907  0EAA  3F40               	moviw [0]fsr1
  2908  0EAB  00D5               	movwf	??_vfpfcnvrt^(0+128)
  2909  0EAC  3F41               	moviw [1]fsr1
  2910  0EAD  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2911  0EAE  3002               	movlw	2
  2912  0EAF  0755               	addwf	??_vfpfcnvrt^(0+128),w
  2913  0EB0  0084               	movwf	4
  2914  0EB1  0856               	movf	(??_vfpfcnvrt^(0+128)+1),w
  2915  0EB2  1803               	skipnc
  2916  0EB3  0A56               	incf	(??_vfpfcnvrt^(0+128)+1),w
  2917  0EB4  0085               	movwf	5
  2918  0EB5  0800               	movf	0,w	;code access
  2919  0EB6  00D7               	movwf	(??_vfpfcnvrt+2)^(0+128)
  2920  0EB7  01D8               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  2921  0EB8  0857               	movf	(??_vfpfcnvrt+2)^(0+128),w
  2922  0EB9  00F6               	movwf	tolower@c
  2923  0EBA  0858               	movf	(??_vfpfcnvrt+3)^(0+128),w
  2924  0EBB  00F7               	movwf	tolower@c+1
  2925  0EBC  319F  271E  318D   	fcall	_tolower
  2926  0EBF  0876               	movf	?_tolower,w
  2927  0EC0  0021               	movlb	1	; select bank1
  2928  0EC1  00D9               	movwf	(??_vfpfcnvrt+4)^(0+128)
  2929  0EC2  0859               	movf	(??_vfpfcnvrt+4)^(0+128),w
  2930  0EC3  00E0               	movwf	(vfpfcnvrt@ct^(0+128)+2)
  2931  0EC4                     l3665:
  2932                           
  2933                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2934  0EC4  3066               	movlw	102
  2935  0EC5  065E               	xorwf	vfpfcnvrt@ct^(0+128),w
  2936  0EC6  1D03               	btfss	3,2
  2937  0EC7  2EC9               	goto	u5161
  2938  0EC8  2ECA               	goto	u5160
  2939  0EC9                     u5161:
  2940  0EC9  2F16               	goto	l3677
  2941  0ECA                     u5160:
  2942  0ECA                     l3667:
  2943                           
  2944                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2945  0ECA  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2946  0ECB  0086               	movwf	6
  2947  0ECC  0187               	clrf	7
  2948  0ECD  3F40               	moviw [0]fsr1
  2949  0ECE  00D5               	movwf	??_vfpfcnvrt^(0+128)
  2950  0ECF  3F41               	moviw [1]fsr1
  2951  0ED0  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2952  0ED1  0855               	movf	??_vfpfcnvrt^(0+128),w
  2953  0ED2  0084               	movwf	4
  2954  0ED3  0856               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2955  0ED4  0085               	movwf	5
  2956  0ED5  0800               	movf	0,w	;code access
  2957  0ED6  00D7               	movwf	(??_vfpfcnvrt+2)^(0+128)
  2958  0ED7  0857               	movf	(??_vfpfcnvrt+2)^(0+128),w
  2959  0ED8  00E1               	movwf	vfpfcnvrt@c^(0+128)
  2960  0ED9                     l3669:
  2961                           
  2962                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2963  0ED9  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2964  0EDA  0086               	movwf	6
  2965  0EDB  0187               	clrf	7
  2966  0EDC  3001               	movlw	1
  2967  0EDD  0781               	addwf	1,f
  2968  0EDE  3141               	addfsr 1,1
  2969  0EDF  1803               	skipnc
  2970  0EE0  0A81               	incf	1,f
  2971  0EE1                     l3671:
  2972                           
  2973                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2974  0EE1  0854               	movf	vfpfcnvrt@ap^(0+128),w
  2975  0EE2  0086               	movwf	6
  2976  0EE3  3001               	movlw	1	; select bank2/3
  2977  0EE4  0087               	movwf	7
  2978  0EE5  0801               	movf	1,w
  2979  0EE6  0084               	movwf	4
  2980  0EE7  3001               	movlw	1	; select bank2/3
  2981  0EE8  0085               	movwf	5
  2982  0EE9  3004               	movlw	4
  2983  0EEA  0781               	addwf	1,f
  2984  0EEB  3F00               	moviw [0]fsr0
  2985  0EEC  00DA               	movwf	vfpfcnvrt@f^(0+128)
  2986  0EED  3F01               	moviw [1]fsr0
  2987  0EEE  00DB               	movwf	(vfpfcnvrt@f+1)^(0+128)
  2988  0EEF  3F02               	moviw [2]fsr0
  2989  0EF0  00DC               	movwf	(vfpfcnvrt@f+2)^(0+128)
  2990  0EF1  3F03               	moviw [3]fsr0
  2991  0EF2  00DD               	movwf	(vfpfcnvrt@f+3)^(0+128)
  2992  0EF3                     l3673:
  2993                           
  2994                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2995  0EF3  085D               	movf	(vfpfcnvrt@f+3)^(0+128),w
  2996  0EF4  0020               	movlb	0	; select bank0
  2997  0EF5  00EB               	movwf	efgtoa@f+3
  2998  0EF6  0021               	movlb	1	; select bank1
  2999  0EF7  085C               	movf	(vfpfcnvrt@f+2)^(0+128),w
  3000  0EF8  0020               	movlb	0	; select bank0
  3001  0EF9  00EA               	movwf	efgtoa@f+2
  3002  0EFA  0021               	movlb	1	; select bank1
  3003  0EFB  085B               	movf	(vfpfcnvrt@f+1)^(0+128),w
  3004  0EFC  0020               	movlb	0	; select bank0
  3005  0EFD  00E9               	movwf	efgtoa@f+1
  3006  0EFE  0021               	movlb	1	; select bank1
  3007  0EFF  085A               	movf	vfpfcnvrt@f^(0+128),w
  3008  0F00  0020               	movlb	0	; select bank0
  3009  0F01  00E8               	movwf	efgtoa@f
  3010  0F02  0021               	movlb	1	; select bank1
  3011  0F03  0861               	movf	vfpfcnvrt@c^(0+128),w
  3012  0F04  00D5               	movwf	??_vfpfcnvrt^(0+128)
  3013  0F05  0855               	movf	??_vfpfcnvrt^(0+128),w
  3014  0F06  0020               	movlb	0	; select bank0
  3015  0F07  00EC               	movwf	efgtoa@c
  3016  0F08  0021               	movlb	1	; select bank1
  3017  0F09  0862               	movf	vfpfcnvrt@fp^(0+128),w
  3018  0F0A  3180  2081  318D   	fcall	_efgtoa
  3019  0F0D  0020               	movlb	0	; select bank0
  3020  0F0E  0869               	movf	?_efgtoa+1,w
  3021  0F0F  0021               	movlb	1	; select bank1
  3022  0F10  00D4               	movwf	(?_vfpfcnvrt+1)^(0+128)
  3023  0F11  0020               	movlb	0	; select bank0
  3024  0F12  0868               	movf	?_efgtoa,w
  3025  0F13  0021               	movlb	1	; select bank1
  3026  0F14  00D3               	movwf	?_vfpfcnvrt^(0+128)
  3027  0F15  2FFF               	goto	l859
  3028  0F16                     l3677:
  3029                           
  3030                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3031  0F16  3020               	movlw	low (STR_10| (0+32768))
  3032  0F17  00F0               	movwf	strncmp@_r
  3033  0F18  30A0               	movlw	high (STR_10| (0+32768))
  3034  0F19  00F1               	movwf	strncmp@_r+1
  3035  0F1A  3002               	movlw	2
  3036  0F1B  00F2               	movwf	strncmp@n
  3037  0F1C  3000               	movlw	0
  3038  0F1D  00F3               	movwf	strncmp@n+1
  3039  0F1E  30DE               	movlw	(low (vfpfcnvrt@ct| 0))& (0+255)
  3040  0F1F  3191  2184  318D   	fcall	_strncmp
  3041  0F22  0870               	movf	?_strncmp,w
  3042  0F23  0471               	iorwf	?_strncmp+1,w
  3043  0F24  1D03               	btfss	3,2
  3044  0F25  2F27               	goto	u5171
  3045  0F26  2F28               	goto	u5170
  3046  0F27                     u5171:
  3047  0F27  2FA6               	goto	l3695
  3048  0F28                     u5170:
  3049  0F28                     l3679:
  3050                           
  3051                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  3052  0F28  0021               	movlb	1	; select bank1
  3053  0F29  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  3054  0F2A  0086               	movwf	6
  3055  0F2B  0187               	clrf	7
  3056  0F2C  3F40               	moviw [0]fsr1
  3057  0F2D  00D5               	movwf	??_vfpfcnvrt^(0+128)
  3058  0F2E  3F41               	moviw [1]fsr1
  3059  0F2F  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3060  0F30  3001               	movlw	1
  3061  0F31  0755               	addwf	??_vfpfcnvrt^(0+128),w
  3062  0F32  0084               	movwf	4
  3063  0F33  0856               	movf	(??_vfpfcnvrt^(0+128)+1),w
  3064  0F34  1803               	skipnc
  3065  0F35  0A56               	incf	(??_vfpfcnvrt^(0+128)+1),w
  3066  0F36  0085               	movwf	5
  3067  0F37  0800               	movf	0,w	;code access
  3068  0F38  00D7               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3069  0F39  0857               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3070  0F3A  00E1               	movwf	vfpfcnvrt@c^(0+128)
  3071  0F3B                     l3683:	
  3072                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 && isupper((int)(*fmt)[0]), ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3073                           
  3074  0F3B  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  3075  0F3C  0086               	movwf	6
  3076  0F3D  0187               	clrf	7
  3077  0F3E  3F40               	moviw [0]fsr1
  3078  0F3F  00D5               	movwf	??_vfpfcnvrt^(0+128)
  3079  0F40  3F41               	moviw [1]fsr1
  3080  0F41  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3081  0F42  0855               	movf	??_vfpfcnvrt^(0+128),w
  3082  0F43  0084               	movwf	4
  3083  0F44  0856               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3084  0F45  0085               	movwf	5
  3085  0F46  0800               	movf	0,w	;code access
  3086  0F47  3EBF               	addlw	191
  3087  0F48  00D7               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3088  0F49  30FF               	movlw	255
  3089  0F4A  1803               	skipnc
  3090  0F4B  3000               	movlw	0
  3091  0F4C  00D8               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  3092  0F4D  3000               	movlw	0
  3093  0F4E  0258               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  3094  0F4F  301A               	movlw	26
  3095  0F50  1903               	skipnz
  3096  0F51  0257               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  3097  0F52  1803               	skipnc
  3098  0F53  2F55               	goto	u5181
  3099  0F54  2F56               	goto	u5180
  3100  0F55                     u5181:
  3101  0F55  2F69               	goto	l3687
  3102  0F56                     u5180:
  3103  0F56                     l3685:
  3104                           
  3105                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3106  0F56  0854               	movf	vfpfcnvrt@ap^(0+128),w
  3107  0F57  0086               	movwf	6
  3108  0F58  3001               	movlw	1	; select bank2/3
  3109  0F59  0087               	movwf	7
  3110  0F5A  0801               	movf	1,w
  3111  0F5B  0084               	movwf	4
  3112  0F5C  3001               	movlw	1	; select bank2/3
  3113  0F5D  0085               	movwf	5
  3114  0F5E  3004               	movlw	4
  3115  0F5F  0781               	addwf	1,f
  3116  0F60  3F00               	moviw [0]fsr0
  3117  0F61  00DA               	movwf	vfpfcnvrt@f^(0+128)
  3118  0F62  3F01               	moviw [1]fsr0
  3119  0F63  00DB               	movwf	(vfpfcnvrt@f+1)^(0+128)
  3120  0F64  3F02               	moviw [2]fsr0
  3121  0F65  00DC               	movwf	(vfpfcnvrt@f+2)^(0+128)
  3122  0F66  3F03               	moviw [3]fsr0
  3123  0F67  00DD               	movwf	(vfpfcnvrt@f+3)^(0+128)
  3124                           
  3125                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3126  0F68  2F7B               	goto	l3689
  3127  0F69                     l3687:
  3128                           
  3129                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3130  0F69  0854               	movf	vfpfcnvrt@ap^(0+128),w
  3131  0F6A  0086               	movwf	6
  3132  0F6B  3001               	movlw	1	; select bank2/3
  3133  0F6C  0087               	movwf	7
  3134  0F6D  0801               	movf	1,w
  3135  0F6E  0084               	movwf	4
  3136  0F6F  3001               	movlw	1	; select bank2/3
  3137  0F70  0085               	movwf	5
  3138  0F71  3004               	movlw	4
  3139  0F72  0781               	addwf	1,f
  3140  0F73  3F00               	moviw [0]fsr0
  3141  0F74  00DA               	movwf	vfpfcnvrt@f^(0+128)
  3142  0F75  3F01               	moviw [1]fsr0
  3143  0F76  00DB               	movwf	(vfpfcnvrt@f+1)^(0+128)
  3144  0F77  3F02               	moviw [2]fsr0
  3145  0F78  00DC               	movwf	(vfpfcnvrt@f+2)^(0+128)
  3146  0F79  3F03               	moviw [3]fsr0
  3147  0F7A  00DD               	movwf	(vfpfcnvrt@f+3)^(0+128)
  3148  0F7B                     l3689:
  3149                           
  3150                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3151  0F7B  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  3152  0F7C  0086               	movwf	6
  3153  0F7D  0187               	clrf	7
  3154  0F7E  3002               	movlw	2
  3155  0F7F  0781               	addwf	1,f
  3156  0F80  3141               	addfsr 1,1
  3157  0F81  1803               	skipnc
  3158  0F82  0A81               	incf	1,f
  3159  0F83                     l3691:
  3160                           
  3161                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  3162  0F83  085D               	movf	(vfpfcnvrt@f+3)^(0+128),w
  3163  0F84  0020               	movlb	0	; select bank0
  3164  0F85  00EB               	movwf	efgtoa@f+3
  3165  0F86  0021               	movlb	1	; select bank1
  3166  0F87  085C               	movf	(vfpfcnvrt@f+2)^(0+128),w
  3167  0F88  0020               	movlb	0	; select bank0
  3168  0F89  00EA               	movwf	efgtoa@f+2
  3169  0F8A  0021               	movlb	1	; select bank1
  3170  0F8B  085B               	movf	(vfpfcnvrt@f+1)^(0+128),w
  3171  0F8C  0020               	movlb	0	; select bank0
  3172  0F8D  00E9               	movwf	efgtoa@f+1
  3173  0F8E  0021               	movlb	1	; select bank1
  3174  0F8F  085A               	movf	vfpfcnvrt@f^(0+128),w
  3175  0F90  0020               	movlb	0	; select bank0
  3176  0F91  00E8               	movwf	efgtoa@f
  3177  0F92  0021               	movlb	1	; select bank1
  3178  0F93  0861               	movf	vfpfcnvrt@c^(0+128),w
  3179  0F94  00D5               	movwf	??_vfpfcnvrt^(0+128)
  3180  0F95  0855               	movf	??_vfpfcnvrt^(0+128),w
  3181  0F96  0020               	movlb	0	; select bank0
  3182  0F97  00EC               	movwf	efgtoa@c
  3183  0F98  0021               	movlb	1	; select bank1
  3184  0F99  0862               	movf	vfpfcnvrt@fp^(0+128),w
  3185  0F9A  3180  2081  318D   	fcall	_efgtoa
  3186  0F9D  0020               	movlb	0	; select bank0
  3187  0F9E  0869               	movf	?_efgtoa+1,w
  3188  0F9F  0021               	movlb	1	; select bank1
  3189  0FA0  00D4               	movwf	(?_vfpfcnvrt+1)^(0+128)
  3190  0FA1  0020               	movlb	0	; select bank0
  3191  0FA2  0868               	movf	?_efgtoa,w
  3192  0FA3  0021               	movlb	1	; select bank1
  3193  0FA4  00D3               	movwf	?_vfpfcnvrt^(0+128)
  3194  0FA5  2FFF               	goto	l859
  3195  0FA6                     l3695:
  3196                           
  3197                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3198  0FA6  0021               	movlb	1	; select bank1
  3199  0FA7  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  3200  0FA8  0086               	movwf	6
  3201  0FA9  0187               	clrf	7
  3202  0FAA  3F40               	moviw [0]fsr1
  3203  0FAB  00D5               	movwf	??_vfpfcnvrt^(0+128)
  3204  0FAC  3F41               	moviw [1]fsr1
  3205  0FAD  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3206  0FAE  0855               	movf	??_vfpfcnvrt^(0+128),w
  3207  0FAF  0084               	movwf	4
  3208  0FB0  0856               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3209  0FB1  0085               	movwf	5
  3210  0FB2  0012               	moviw fsr0++
  3211  0FB3  3A25               	xorlw	37
  3212  0FB4  1D03               	btfss	3,2
  3213  0FB5  2FB7               	goto	u5191
  3214  0FB6  2FB8               	goto	u5190
  3215  0FB7                     u5191:
  3216  0FB7  2FD1               	goto	l3705
  3217  0FB8                     u5190:
  3218  0FB8                     l3697:
  3219                           
  3220                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3221  0FB8  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  3222  0FB9  0086               	movwf	6
  3223  0FBA  0187               	clrf	7
  3224  0FBB  3001               	movlw	1
  3225  0FBC  0781               	addwf	1,f
  3226  0FBD  3141               	addfsr 1,1
  3227  0FBE  1803               	skipnc
  3228  0FBF  0A81               	incf	1,f
  3229  0FC0                     l3699:
  3230                           
  3231                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3232  0FC0  3025               	movlw	37
  3233  0FC1  00F0               	movwf	fputc@c
  3234  0FC2  3000               	movlw	0
  3235  0FC3  00F1               	movwf	fputc@c+1
  3236  0FC4  0862               	movf	vfpfcnvrt@fp^(0+128),w
  3237  0FC5  00D5               	movwf	??_vfpfcnvrt^(0+128)
  3238  0FC6  0855               	movf	??_vfpfcnvrt^(0+128),w
  3239  0FC7  00F2               	movwf	fputc@fp
  3240  0FC8  3191  21DC  318D   	fcall	_fputc
  3241  0FCB                     l3701:
  3242                           
  3243                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3244  0FCB  3001               	movlw	1
  3245  0FCC  0021               	movlb	1	; select bank1
  3246  0FCD  00D3               	movwf	?_vfpfcnvrt^(0+128)
  3247  0FCE  3000               	movlw	0
  3248  0FCF  00D4               	movwf	(?_vfpfcnvrt^(0+128)+1)
  3249  0FD0  2FFF               	goto	l859
  3250  0FD1                     l3705:
  3251                           
  3252                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3253  0FD1  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  3254  0FD2  0086               	movwf	6
  3255  0FD3  0187               	clrf	7
  3256  0FD4  3001               	movlw	1
  3257  0FD5  0781               	addwf	1,f
  3258  0FD6  3141               	addfsr 1,1
  3259  0FD7  1803               	skipnc
  3260  0FD8  0A81               	incf	1,f
  3261  0FD9                     l3707:
  3262                           
  3263                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3264  0FD9  01D3               	clrf	?_vfpfcnvrt^(0+128)
  3265  0FDA  01D4               	clrf	(?_vfpfcnvrt+1)^(0+128)
  3266  0FDB  2FFF               	goto	l859
  3267  0FDC                     l3711:
  3268                           
  3269                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3270  0FDC  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  3271  0FDD  0086               	movwf	6
  3272  0FDE  0187               	clrf	7
  3273  0FDF  3F40               	moviw [0]fsr1
  3274  0FE0  00D5               	movwf	??_vfpfcnvrt^(0+128)
  3275  0FE1  3F41               	moviw [1]fsr1
  3276  0FE2  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3277  0FE3  0855               	movf	??_vfpfcnvrt^(0+128),w
  3278  0FE4  0084               	movwf	4
  3279  0FE5  0856               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3280  0FE6  0085               	movwf	5
  3281  0FE7  0800               	movf	0,w	;code access
  3282  0FE8  00D7               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3283  0FE9  01D8               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  3284  0FEA  0857               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3285  0FEB  00F0               	movwf	fputc@c
  3286  0FEC  0858               	movf	(??_vfpfcnvrt+3)^(0+128),w
  3287  0FED  00F1               	movwf	fputc@c+1
  3288  0FEE  0862               	movf	vfpfcnvrt@fp^(0+128),w
  3289  0FEF  00D9               	movwf	(??_vfpfcnvrt+4)^(0+128)
  3290  0FF0  0859               	movf	(??_vfpfcnvrt+4)^(0+128),w
  3291  0FF1  00F2               	movwf	fputc@fp
  3292  0FF2  3191  21DC  318D   	fcall	_fputc
  3293  0FF5                     l3713:
  3294                           
  3295                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3296  0FF5  0021               	movlb	1	; select bank1
  3297  0FF6  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  3298  0FF7  0086               	movwf	6
  3299  0FF8  0187               	clrf	7
  3300  0FF9  3001               	movlw	1
  3301  0FFA  0781               	addwf	1,f
  3302  0FFB  3141               	addfsr 1,1
  3303  0FFC  1803               	skipnc
  3304  0FFD  0A81               	incf	1,f
  3305  0FFE  2FCB               	goto	l3701
  3306  0FFF                     l859:
  3307  0FFF  0008               	return
  3308  1000                     __end_of_vfpfcnvrt:
  3309                           
  3310                           	psect	text4
  3311  1184                     __ptext4:	
  3312 ;; *************** function _strncmp *****************
  3313 ;; Defined at:
  3314 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;  _l              1    wreg     PTR const unsigned char 
  3317 ;;		 -> vfpfcnvrt@ct(3), 
  3318 ;;  _r              2    0[COMMON] PTR const unsigned char 
  3319 ;;		 -> STR_12(3), 
  3320 ;;  n               2    2[COMMON] unsigned int 
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;  _l              1    5[COMMON] PTR const unsigned char 
  3323 ;;		 -> vfpfcnvrt@ct(3), 
  3324 ;;  r               2    6[COMMON] PTR const unsigned char 
  3325 ;;		 -> STR_12(3), 
  3326 ;;  l               1    8[COMMON] PTR const unsigned char 
  3327 ;;		 -> vfpfcnvrt@ct(3), 
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  2    0[COMMON] int 
  3330 ;; Registers used:
  3331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3337 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3338 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3339 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3340 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3341 ;;Total ram usage:        9 bytes
  3342 ;; Hardware stack levels used: 1
  3343 ;; This function calls:
  3344 ;;		Nothing
  3345 ;; This function is called by:
  3346 ;;		_vfpfcnvrt
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           
  3350  1184                     _strncmp:	
  3351                           ;psect for function _strncmp
  3352                           
  3353                           
  3354                           ;incstack = 0
  3355                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  3356                           ;strncmp@_l stored from wreg
  3357  1184  00F5               	movwf	strncmp@_l
  3358  1185                     l3581:
  3359  1185  0875               	movf	strncmp@_l,w
  3360  1186  00F4               	movwf	??_strncmp
  3361  1187  0874               	movf	??_strncmp,w
  3362  1188  00F8               	movwf	strncmp@l
  3363  1189  0871               	movf	strncmp@_r+1,w
  3364  118A  00F7               	movwf	strncmp@r+1
  3365  118B  0870               	movf	strncmp@_r,w
  3366  118C  00F6               	movwf	strncmp@r
  3367  118D                     l3583:
  3368  118D  3001               	movlw	1
  3369  118E  02F2               	subwf	strncmp@n,f
  3370  118F  3000               	movlw	0
  3371  1190  3BF3               	subwfb	strncmp@n+1,f
  3372  1191  0A72               	incf	strncmp@n,w
  3373  1192  1D03               	skipz
  3374  1193  2998               	goto	u5021
  3375  1194  0A73               	incf	strncmp@n+1,w
  3376  1195  1D03               	btfss	3,2
  3377  1196  2998               	goto	u5021
  3378  1197  2999               	goto	u5020
  3379  1198                     u5021:
  3380  1198  29A8               	goto	l3595
  3381  1199                     u5020:
  3382  1199                     l3585:
  3383  1199  01F0               	clrf	?_strncmp
  3384  119A  01F1               	clrf	?_strncmp+1
  3385  119B  29DB               	goto	l979
  3386  119C                     l3589:
  3387  119C  3001               	movlw	1
  3388  119D  00F4               	movwf	??_strncmp
  3389  119E  0874               	movf	??_strncmp,w
  3390  119F  07F8               	addwf	strncmp@l,f
  3391  11A0                     l3591:
  3392  11A0  3001               	movlw	1
  3393  11A1  07F6               	addwf	strncmp@r,f
  3394  11A2  3000               	movlw	0
  3395  11A3  3DF7               	addwfc	strncmp@r+1,f
  3396  11A4                     l3593:
  3397  11A4  3001               	movlw	1
  3398  11A5  02F2               	subwf	strncmp@n,f
  3399  11A6  3000               	movlw	0
  3400  11A7  3BF3               	subwfb	strncmp@n+1,f
  3401  11A8                     l3595:
  3402  11A8  0878               	movf	strncmp@l,w
  3403  11A9  0086               	movwf	6
  3404  11AA  0187               	clrf	7
  3405  11AB  0801               	movf	1,w
  3406  11AC  1903               	btfsc	3,2
  3407  11AD  29AF               	goto	u5031
  3408  11AE  29B0               	goto	u5030
  3409  11AF                     u5031:
  3410  11AF  29CE               	goto	l3603
  3411  11B0                     u5030:
  3412  11B0                     l3597:
  3413  11B0  0876               	movf	strncmp@r,w
  3414  11B1  0084               	movwf	4
  3415  11B2  0877               	movf	strncmp@r+1,w
  3416  11B3  0085               	movwf	5
  3417  11B4  0012               	moviw fsr0++
  3418  11B5  1903               	btfsc	3,2
  3419  11B6  29B8               	goto	u5041
  3420  11B7  29B9               	goto	u5040
  3421  11B8                     u5041:
  3422  11B8  29CE               	goto	l3603
  3423  11B9                     u5040:
  3424  11B9                     l3599:
  3425  11B9  0872               	movf	strncmp@n,w
  3426  11BA  0473               	iorwf	strncmp@n+1,w
  3427  11BB  1903               	btfsc	3,2
  3428  11BC  29BE               	goto	u5051
  3429  11BD  29BF               	goto	u5050
  3430  11BE                     u5051:
  3431  11BE  29CE               	goto	l3603
  3432  11BF                     u5050:
  3433  11BF                     l3601:
  3434  11BF  0876               	movf	strncmp@r,w
  3435  11C0  0084               	movwf	4
  3436  11C1  0877               	movf	strncmp@r+1,w
  3437  11C2  0085               	movwf	5
  3438  11C3  0800               	movf	0,w	;code access
  3439  11C4  00F4               	movwf	??_strncmp
  3440  11C5  0878               	movf	strncmp@l,w
  3441  11C6  0086               	movwf	6
  3442  11C7  0187               	clrf	7
  3443  11C8  0801               	movf	1,w
  3444  11C9  0674               	xorwf	??_strncmp,w
  3445  11CA  1903               	skipnz
  3446  11CB  29CD               	goto	u5061
  3447  11CC  29CE               	goto	u5060
  3448  11CD                     u5061:
  3449  11CD  299C               	goto	l3589
  3450  11CE                     u5060:
  3451  11CE                     l3603:
  3452  11CE  0878               	movf	strncmp@l,w
  3453  11CF  0086               	movwf	6
  3454  11D0  0187               	clrf	7
  3455  11D1  0876               	movf	strncmp@r,w
  3456  11D2  0084               	movwf	4
  3457  11D3  0877               	movf	strncmp@r+1,w
  3458  11D4  0085               	movwf	5
  3459  11D5  0800               	movf	0,w	;code access
  3460  11D6  0201               	subwf	1,w
  3461  11D7  00F0               	movwf	?_strncmp
  3462  11D8  01F1               	clrf	?_strncmp+1
  3463  11D9  1C03               	skipc
  3464  11DA  03F1               	decf	?_strncmp+1,f
  3465  11DB                     l979:
  3466  11DB  0008               	return
  3467  11DC                     __end_of_strncmp:
  3468                           
  3469                           	psect	text5
  3470  0081                     __ptext5:	
  3471 ;; *************** function _efgtoa *****************
  3472 ;; Defined at:
  3473 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;  fp              1    wreg     PTR struct _IO_FILE
  3476 ;;		 -> sprintf@f(10), 
  3477 ;;  f               4   72[BANK0 ] PTR struct _IO_FILE
  3478 ;;  c               1   76[BANK0 ] unsigned char 
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;  fp              1   22[BANK1 ] PTR struct _IO_FILE
  3481 ;;		 -> sprintf@f(10), 
  3482 ;;  u               4   47[BANK1 ] PTR struct _IO_FILE
  3483 ;;  g               4   39[BANK1 ] PTR struct _IO_FILE
  3484 ;;  l               4   33[BANK1 ] PTR struct _IO_FILE
  3485 ;;  h               4   29[BANK1 ] PTR struct _IO_FILE
  3486 ;;  ou              4   14[BANK1 ] PTR struct _IO_FILE
  3487 ;;  n               2   45[BANK1 ] int 
  3488 ;;  e               2   43[BANK1 ] int 
  3489 ;;  i               2   37[BANK1 ] int 
  3490 ;;  w               2   25[BANK1 ] int 
  3491 ;;  p               2   23[BANK1 ] int 
  3492 ;;  sign            2   20[BANK1 ] int 
  3493 ;;  d               2   18[BANK1 ] int 
  3494 ;;  m               2   12[BANK1 ] int 
  3495 ;;  ne              2   10[BANK1 ] int 
  3496 ;;  pp              2    8[BANK1 ] int 
  3497 ;;  t               2    6[BANK1 ] int 
  3498 ;;  mode            1   28[BANK1 ] unsigned char 
  3499 ;;  nmode           1   27[BANK1 ] unsigned char 
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  2   72[BANK0 ] int 
  3502 ;; Registers used:
  3503 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3509 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3510 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0
  3511 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3512 ;;      Totals:         0       8      51       0       0       0       0       0       0       0       0       0       
      +0       0
  3513 ;;Total ram usage:       59 bytes
  3514 ;; Hardware stack levels used: 1
  3515 ;; Hardware stack levels required when called: 4
  3516 ;; This function calls:
  3517 ;;		___awdiv
  3518 ;;		___awmod
  3519 ;;		___fladd
  3520 ;;		___fldiv
  3521 ;;		___fleq
  3522 ;;		___flge
  3523 ;;		___flmul
  3524 ;;		___flneg
  3525 ;;		___flsub
  3526 ;;		___fltol
  3527 ;;		___fpclassifyf
  3528 ;;		_floorf
  3529 ;;		_isupper
  3530 ;;		_pad
  3531 ;;		_strcpy
  3532 ;;		_tolower
  3533 ;; This function is called by:
  3534 ;;		_vfpfcnvrt
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538  0081                     _efgtoa:	
  3539                           ;psect for function _efgtoa
  3540                           
  3541                           
  3542                           ;incstack = 0
  3543                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3544                           ;efgtoa@fp stored from wreg
  3545  0081  0021               	movlb	1	; select bank1
  3546  0082  00B6               	movwf	efgtoa@fp^(0+128)
  3547  0083                     l3249:
  3548                           
  3549                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3550  0083  01B4               	clrf	efgtoa@sign^(0+128)
  3551  0084  01B5               	clrf	(efgtoa@sign+1)^(0+128)
  3552  0085                     l3251:
  3553                           
  3554                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3555  0085  0020               	movlb	0	; select bank0
  3556  0086  086B               	movf	efgtoa@f+3,w
  3557  0087  0021               	movlb	1	; select bank1
  3558  0088  00CA               	movwf	(efgtoa@g+3)^(0+128)
  3559  0089  0020               	movlb	0	; select bank0
  3560  008A  086A               	movf	efgtoa@f+2,w
  3561  008B  0021               	movlb	1	; select bank1
  3562  008C  00C9               	movwf	(efgtoa@g+2)^(0+128)
  3563  008D  0020               	movlb	0	; select bank0
  3564  008E  0869               	movf	efgtoa@f+1,w
  3565  008F  0021               	movlb	1	; select bank1
  3566  0090  00C8               	movwf	(efgtoa@g+1)^(0+128)
  3567  0091  0020               	movlb	0	; select bank0
  3568  0092  0868               	movf	efgtoa@f,w
  3569  0093  0021               	movlb	1	; select bank1
  3570  0094  00C7               	movwf	efgtoa@g^(0+128)
  3571  0095                     l3253:
  3572                           
  3573                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3574  0095  084A               	movf	(efgtoa@g+3)^(0+128),w
  3575  0096  0020               	movlb	0	; select bank0
  3576  0097  00BD               	movwf	___flge@ff1+3
  3577  0098  0021               	movlb	1	; select bank1
  3578  0099  0849               	movf	(efgtoa@g+2)^(0+128),w
  3579  009A  0020               	movlb	0	; select bank0
  3580  009B  00BC               	movwf	___flge@ff1+2
  3581  009C  0021               	movlb	1	; select bank1
  3582  009D  0848               	movf	(efgtoa@g+1)^(0+128),w
  3583  009E  0020               	movlb	0	; select bank0
  3584  009F  00BB               	movwf	___flge@ff1+1
  3585  00A0  0021               	movlb	1	; select bank1
  3586  00A1  0847               	movf	efgtoa@g^(0+128),w
  3587  00A2  0020               	movlb	0	; select bank0
  3588  00A3  00BA               	movwf	___flge@ff1
  3589  00A4  3000               	movlw	0
  3590  00A5  00C1               	movwf	___flge@ff2+3
  3591  00A6  3000               	movlw	0
  3592  00A7  00C0               	movwf	___flge@ff2+2
  3593  00A8  3000               	movlw	0
  3594  00A9  00BF               	movwf	___flge@ff2+1
  3595  00AA  3000               	movlw	0
  3596  00AB  00BE               	movwf	___flge@ff2
  3597  00AC  3193  236C  3180   	fcall	___flge
  3598  00AF  1803               	btfsc	3,0
  3599  00B0  28B2               	goto	u4501
  3600  00B1  28B3               	goto	u4500
  3601  00B2                     u4501:
  3602  00B2  28CC               	goto	l3259
  3603  00B3                     u4500:
  3604  00B3                     l3255:
  3605                           
  3606                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3607  00B3  3001               	movlw	1
  3608  00B4  0021               	movlb	1	; select bank1
  3609  00B5  00B4               	movwf	efgtoa@sign^(0+128)
  3610  00B6  3000               	movlw	0
  3611  00B7  00B5               	movwf	(efgtoa@sign^(0+128)+1)
  3612  00B8                     l3257:
  3613                           
  3614                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3615  00B8  084A               	movf	(efgtoa@g+3)^(0+128),w
  3616  00B9  00F3               	movwf	___flneg@f1+3
  3617  00BA  0849               	movf	(efgtoa@g+2)^(0+128),w
  3618  00BB  00F2               	movwf	___flneg@f1+2
  3619  00BC  0848               	movf	(efgtoa@g+1)^(0+128),w
  3620  00BD  00F1               	movwf	___flneg@f1+1
  3621  00BE  0847               	movf	efgtoa@g^(0+128),w
  3622  00BF  00F0               	movwf	___flneg@f1
  3623  00C0  319E  26F1  3180   	fcall	___flneg
  3624  00C3  0873               	movf	?___flneg+3,w
  3625  00C4  0021               	movlb	1	; select bank1
  3626  00C5  00CA               	movwf	(efgtoa@g+3)^(0+128)
  3627  00C6  0872               	movf	?___flneg+2,w
  3628  00C7  00C9               	movwf	(efgtoa@g+2)^(0+128)
  3629  00C8  0871               	movf	?___flneg+1,w
  3630  00C9  00C8               	movwf	(efgtoa@g+1)^(0+128)
  3631  00CA  0870               	movf	?___flneg,w
  3632  00CB  00C7               	movwf	efgtoa@g^(0+128)
  3633  00CC                     l3259:
  3634                           
  3635                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3636  00CC  0021               	movlb	1	; select bank1
  3637  00CD  01CD               	clrf	efgtoa@n^(0+128)
  3638  00CE  01CE               	clrf	(efgtoa@n+1)^(0+128)
  3639  00CF                     l3261:
  3640                           
  3641                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3642  00CF  0022               	movlb	2	; select bank2
  3643  00D0  0841               	movf	(_width+1)^(0+256),w
  3644  00D1  0021               	movlb	1	; select bank1
  3645  00D2  00BA               	movwf	(efgtoa@w+1)^(0+128)
  3646  00D3  0022               	movlb	2	; select bank2
  3647  00D4  0840               	movf	_width^(0+256),w
  3648  00D5  0021               	movlb	1	; select bank1
  3649  00D6  00B9               	movwf	efgtoa@w^(0+128)
  3650  00D7                     l3263:
  3651                           
  3652                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3653  00D7  0834               	movf	efgtoa@sign^(0+128),w
  3654  00D8  0435               	iorwf	(efgtoa@sign+1)^(0+128),w
  3655  00D9  1D03               	btfss	3,2
  3656  00DA  28DC               	goto	u4511
  3657  00DB  28DD               	goto	u4510
  3658  00DC                     u4511:
  3659  00DC  28E1               	goto	l3267
  3660  00DD                     u4510:
  3661  00DD                     l3265:
  3662  00DD  1D6D               	btfss	_flags^(0+128),2
  3663  00DE  28E0               	goto	u4521
  3664  00DF  28E1               	goto	u4520
  3665  00E0                     u4521:
  3666  00E0  28FF               	goto	l3279
  3667  00E1                     u4520:
  3668  00E1                     l3267:
  3669                           
  3670                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3671  00E1  0834               	movf	efgtoa@sign^(0+128),w
  3672  00E2  0435               	iorwf	(efgtoa@sign+1)^(0+128),w
  3673  00E3  1D03               	btfss	3,2
  3674  00E4  28E6               	goto	u4531
  3675  00E5  28E7               	goto	u4530
  3676  00E6                     u4531:
  3677  00E6  28EC               	goto	l3271
  3678  00E7                     u4530:
  3679  00E7                     l3269:
  3680  00E7  302B               	movlw	43
  3681  00E8  00A0               	movwf	_efgtoa$890^(0+128)
  3682  00E9  3000               	movlw	0
  3683  00EA  00A1               	movwf	(_efgtoa$890^(0+128)+1)
  3684  00EB  28F0               	goto	l3273
  3685  00EC                     l3271:
  3686  00EC  302D               	movlw	45
  3687  00ED  00A0               	movwf	_efgtoa$890^(0+128)
  3688  00EE  3000               	movlw	0
  3689  00EF  00A1               	movwf	(_efgtoa$890^(0+128)+1)
  3690  00F0                     l3273:
  3691  00F0  0820               	movf	_efgtoa$890^(0+128),w
  3692  00F1  0020               	movlb	0	; select bank0
  3693  00F2  00ED               	movwf	??_efgtoa
  3694  00F3  086D               	movf	??_efgtoa,w
  3695  00F4  0023               	movlb	3	; select bank3
  3696  00F5  00A0               	movwf	_dbuf^(0+384)
  3697  00F6                     l3275:
  3698                           
  3699                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3700  00F6  3001               	movlw	1
  3701  00F7  0021               	movlb	1	; select bank1
  3702  00F8  07CD               	addwf	efgtoa@n^(0+128),f
  3703  00F9  3000               	movlw	0
  3704  00FA  3DCE               	addwfc	(efgtoa@n+1)^(0+128),f
  3705  00FB                     l3277:
  3706                           
  3707                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  3708  00FB  30FF               	movlw	255
  3709  00FC  07B9               	addwf	efgtoa@w^(0+128),f
  3710  00FD  30FF               	movlw	255
  3711  00FE  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  3712  00FF                     l3279:
  3713                           
  3714                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  3715  00FF  084A               	movf	(efgtoa@g+3)^(0+128),w
  3716  0100  00F3               	movwf	___fpclassifyf@x+3
  3717  0101  0849               	movf	(efgtoa@g+2)^(0+128),w
  3718  0102  00F2               	movwf	___fpclassifyf@x+2
  3719  0103  0848               	movf	(efgtoa@g+1)^(0+128),w
  3720  0104  00F1               	movwf	___fpclassifyf@x+1
  3721  0105  0847               	movf	efgtoa@g^(0+128),w
  3722  0106  00F0               	movwf	___fpclassifyf@x
  3723  0107  3192  22ED  3180   	fcall	___fpclassifyf
  3724  010A  0370               	decf	?___fpclassifyf,w
  3725  010B  0471               	iorwf	?___fpclassifyf+1,w
  3726  010C  1D03               	btfss	3,2
  3727  010D  290F               	goto	u4541
  3728  010E  2910               	goto	u4540
  3729  010F                     u4541:
  3730  010F  2953               	goto	l3297
  3731  0110                     u4540:
  3732  0110                     l3285:
  3733  0110  0020               	movlb	0	; select bank0
  3734  0111  086C               	movf	efgtoa@c,w
  3735  0112  3EBF               	addlw	191
  3736  0113  00ED               	movwf	??_efgtoa
  3737  0114  30FF               	movlw	255
  3738  0115  1803               	skipnc
  3739  0116  3000               	movlw	0
  3740  0117  00EE               	movwf	??_efgtoa+1
  3741  0118  3000               	movlw	0
  3742  0119  026E               	subwf	??_efgtoa+1,w
  3743  011A  301A               	movlw	26
  3744  011B  1903               	skipnz
  3745  011C  026D               	subwf	??_efgtoa,w
  3746  011D  1803               	skipnc
  3747  011E  2920               	goto	u4551
  3748  011F  2921               	goto	u4550
  3749  0120                     u4551:
  3750  0120  292C               	goto	l3289
  3751  0121                     u4550:
  3752  0121                     l3287:
  3753                           
  3754                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3755  0121  3010               	movlw	low (STR_2| (0+32768))
  3756  0122  00F0               	movwf	strcpy@src
  3757  0123  30A0               	movlw	high (STR_2| (0+32768))
  3758  0124  00F1               	movwf	strcpy@src+1
  3759  0125  0021               	movlb	1	; select bank1
  3760  0126  084D               	movf	efgtoa@n^(0+128),w
  3761  0127  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3762  0128  319F  27DF  3180   	fcall	_strcpy
  3763                           
  3764                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3765  012B  2936               	goto	l3291
  3766  012C                     l3289:
  3767                           
  3768                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3769  012C  3018               	movlw	low (STR_3| (0+32768))
  3770  012D  00F0               	movwf	strcpy@src
  3771  012E  30A0               	movlw	high (STR_3| (0+32768))
  3772  012F  00F1               	movwf	strcpy@src+1
  3773  0130  0021               	movlb	1	; select bank1
  3774  0131  084D               	movf	efgtoa@n^(0+128),w
  3775  0132  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3776  0133  319F  27DF  3180   	fcall	_strcpy
  3777  0136                     l3291:
  3778                           
  3779                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3780  0136  30FD               	movlw	253
  3781  0137  0021               	movlb	1	; select bank1
  3782  0138  07B9               	addwf	efgtoa@w^(0+128),f
  3783  0139  30FF               	movlw	255
  3784  013A  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  3785  013B                     l3293:
  3786                           
  3787                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3788  013B  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  3789  013C  0020               	movlb	0	; select bank0
  3790  013D  00ED               	movwf	??_efgtoa
  3791  013E  086D               	movf	??_efgtoa,w
  3792  013F  00A4               	movwf	pad@buf
  3793  0140  0021               	movlb	1	; select bank1
  3794  0141  083A               	movf	(efgtoa@w+1)^(0+128),w
  3795  0142  0020               	movlb	0	; select bank0
  3796  0143  00A6               	movwf	pad@p+1
  3797  0144  0021               	movlb	1	; select bank1
  3798  0145  0839               	movf	efgtoa@w^(0+128),w
  3799  0146  0020               	movlb	0	; select bank0
  3800  0147  00A5               	movwf	pad@p
  3801  0148  0021               	movlb	1	; select bank1
  3802  0149  0836               	movf	efgtoa@fp^(0+128),w
  3803  014A  3192  2235  3180   	fcall	_pad
  3804  014D  0020               	movlb	0	; select bank0
  3805  014E  0825               	movf	?_pad+1,w
  3806  014F  00E9               	movwf	?_efgtoa+1
  3807  0150  0824               	movf	?_pad,w
  3808  0151  00E8               	movwf	?_efgtoa
  3809  0152  2FDD               	goto	l765
  3810  0153                     l3297:
  3811                           
  3812                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  3813  0153  0021               	movlb	1	; select bank1
  3814  0154  084A               	movf	(efgtoa@g+3)^(0+128),w
  3815  0155  00F3               	movwf	___fpclassifyf@x+3
  3816  0156  0849               	movf	(efgtoa@g+2)^(0+128),w
  3817  0157  00F2               	movwf	___fpclassifyf@x+2
  3818  0158  0848               	movf	(efgtoa@g+1)^(0+128),w
  3819  0159  00F1               	movwf	___fpclassifyf@x+1
  3820  015A  0847               	movf	efgtoa@g^(0+128),w
  3821  015B  00F0               	movwf	___fpclassifyf@x
  3822  015C  3192  22ED  3180   	fcall	___fpclassifyf
  3823  015F  0870               	movf	?___fpclassifyf,w
  3824  0160  0471               	iorwf	?___fpclassifyf+1,w
  3825  0161  1D03               	btfss	3,2
  3826  0162  2964               	goto	u4561
  3827  0163  2965               	goto	u4560
  3828  0164                     u4561:
  3829  0164  29A8               	goto	l3315
  3830  0165                     u4560:
  3831  0165                     l3303:
  3832  0165  0020               	movlb	0	; select bank0
  3833  0166  086C               	movf	efgtoa@c,w
  3834  0167  3EBF               	addlw	191
  3835  0168  00ED               	movwf	??_efgtoa
  3836  0169  30FF               	movlw	255
  3837  016A  1803               	skipnc
  3838  016B  3000               	movlw	0
  3839  016C  00EE               	movwf	??_efgtoa+1
  3840  016D  3000               	movlw	0
  3841  016E  026E               	subwf	??_efgtoa+1,w
  3842  016F  301A               	movlw	26
  3843  0170  1903               	skipnz
  3844  0171  026D               	subwf	??_efgtoa,w
  3845  0172  1803               	skipnc
  3846  0173  2975               	goto	u4571
  3847  0174  2976               	goto	u4570
  3848  0175                     u4571:
  3849  0175  2981               	goto	l3307
  3850  0176                     u4570:
  3851  0176                     l3305:
  3852                           
  3853                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3854  0176  3014               	movlw	low (STR_6| (0+32768))
  3855  0177  00F0               	movwf	strcpy@src
  3856  0178  30A0               	movlw	high (STR_6| (0+32768))
  3857  0179  00F1               	movwf	strcpy@src+1
  3858  017A  0021               	movlb	1	; select bank1
  3859  017B  084D               	movf	efgtoa@n^(0+128),w
  3860  017C  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3861  017D  319F  27DF  3180   	fcall	_strcpy
  3862                           
  3863                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3864  0180  298B               	goto	l3309
  3865  0181                     l3307:
  3866                           
  3867                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3868  0181  301C               	movlw	low (STR_7| (0+32768))
  3869  0182  00F0               	movwf	strcpy@src
  3870  0183  30A0               	movlw	high (STR_7| (0+32768))
  3871  0184  00F1               	movwf	strcpy@src+1
  3872  0185  0021               	movlb	1	; select bank1
  3873  0186  084D               	movf	efgtoa@n^(0+128),w
  3874  0187  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3875  0188  319F  27DF  3180   	fcall	_strcpy
  3876  018B                     l3309:
  3877                           
  3878                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3879  018B  30FD               	movlw	253
  3880  018C  0021               	movlb	1	; select bank1
  3881  018D  07B9               	addwf	efgtoa@w^(0+128),f
  3882  018E  30FF               	movlw	255
  3883  018F  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  3884  0190                     l3311:
  3885                           
  3886                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3887  0190  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  3888  0191  0020               	movlb	0	; select bank0
  3889  0192  00ED               	movwf	??_efgtoa
  3890  0193  086D               	movf	??_efgtoa,w
  3891  0194  00A4               	movwf	pad@buf
  3892  0195  0021               	movlb	1	; select bank1
  3893  0196  083A               	movf	(efgtoa@w+1)^(0+128),w
  3894  0197  0020               	movlb	0	; select bank0
  3895  0198  00A6               	movwf	pad@p+1
  3896  0199  0021               	movlb	1	; select bank1
  3897  019A  0839               	movf	efgtoa@w^(0+128),w
  3898  019B  0020               	movlb	0	; select bank0
  3899  019C  00A5               	movwf	pad@p
  3900  019D  0021               	movlb	1	; select bank1
  3901  019E  0836               	movf	efgtoa@fp^(0+128),w
  3902  019F  3192  2235  3180   	fcall	_pad
  3903  01A2  0020               	movlb	0	; select bank0
  3904  01A3  0825               	movf	?_pad+1,w
  3905  01A4  00E9               	movwf	?_efgtoa+1
  3906  01A5  0824               	movf	?_pad,w
  3907  01A6  00E8               	movwf	?_efgtoa
  3908  01A7  2FDD               	goto	l765
  3909  01A8                     l3315:
  3910                           
  3911                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3912  01A8  303F               	movlw	63
  3913  01A9  0021               	movlb	1	; select bank1
  3914  01AA  00D2               	movwf	(efgtoa@u+3)^(0+128)
  3915  01AB  3080               	movlw	128
  3916  01AC  00D1               	movwf	(efgtoa@u+2)^(0+128)
  3917  01AD  3000               	movlw	0
  3918  01AE  00D0               	movwf	(efgtoa@u+1)^(0+128)
  3919  01AF  3000               	movlw	0
  3920  01B0  00CF               	movwf	efgtoa@u^(0+128)
  3921  01B1                     l3317:
  3922                           
  3923                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3924  01B1  01CB               	clrf	efgtoa@e^(0+128)
  3925  01B2  01CC               	clrf	(efgtoa@e+1)^(0+128)
  3926  01B3                     l3319:
  3927                           
  3928                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3929  01B3  084A               	movf	(efgtoa@g+3)^(0+128),w
  3930  01B4  00F3               	movwf	___fleq@ff1+3
  3931  01B5  0849               	movf	(efgtoa@g+2)^(0+128),w
  3932  01B6  00F2               	movwf	___fleq@ff1+2
  3933  01B7  0848               	movf	(efgtoa@g+1)^(0+128),w
  3934  01B8  00F1               	movwf	___fleq@ff1+1
  3935  01B9  0847               	movf	efgtoa@g^(0+128),w
  3936  01BA  00F0               	movwf	___fleq@ff1
  3937  01BB  3000               	movlw	0
  3938  01BC  00F7               	movwf	___fleq@ff2+3
  3939  01BD  3000               	movlw	0
  3940  01BE  00F6               	movwf	___fleq@ff2+2
  3941  01BF  3000               	movlw	0
  3942  01C0  00F5               	movwf	___fleq@ff2+1
  3943  01C1  3000               	movlw	0
  3944  01C2  00F4               	movwf	___fleq@ff2
  3945  01C3  3190  20E3  3180   	fcall	___fleq
  3946  01C6  1803               	btfsc	3,0
  3947  01C7  29C9               	goto	u4581
  3948  01C8  29CA               	goto	u4580
  3949  01C9                     u4581:
  3950  01C9  2A8E               	goto	l3335
  3951  01CA                     u4580:
  3952  01CA  29FB               	goto	l3327
  3953  01CB                     l3323:
  3954                           
  3955                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3956  01CB  3041               	movlw	65
  3957  01CC  0020               	movlb	0	; select bank0
  3958  01CD  00A3               	movwf	___flmul@b+3
  3959  01CE  3020               	movlw	32
  3960  01CF  00A2               	movwf	___flmul@b+2
  3961  01D0  3000               	movlw	0
  3962  01D1  00A1               	movwf	___flmul@b+1
  3963  01D2  3000               	movlw	0
  3964  01D3  00A0               	movwf	___flmul@b
  3965  01D4  0021               	movlb	1	; select bank1
  3966  01D5  0852               	movf	(efgtoa@u+3)^(0+128),w
  3967  01D6  0020               	movlb	0	; select bank0
  3968  01D7  00A7               	movwf	___flmul@a+3
  3969  01D8  0021               	movlb	1	; select bank1
  3970  01D9  0851               	movf	(efgtoa@u+2)^(0+128),w
  3971  01DA  0020               	movlb	0	; select bank0
  3972  01DB  00A6               	movwf	___flmul@a+2
  3973  01DC  0021               	movlb	1	; select bank1
  3974  01DD  0850               	movf	(efgtoa@u+1)^(0+128),w
  3975  01DE  0020               	movlb	0	; select bank0
  3976  01DF  00A5               	movwf	___flmul@a+1
  3977  01E0  0021               	movlb	1	; select bank1
  3978  01E1  084F               	movf	efgtoa@u^(0+128),w
  3979  01E2  0020               	movlb	0	; select bank0
  3980  01E3  00A4               	movwf	___flmul@a
  3981  01E4  318B  2303  3180   	fcall	___flmul
  3982  01E7  0020               	movlb	0	; select bank0
  3983  01E8  0823               	movf	?___flmul+3,w
  3984  01E9  0021               	movlb	1	; select bank1
  3985  01EA  00D2               	movwf	(efgtoa@u+3)^(0+128)
  3986  01EB  0020               	movlb	0	; select bank0
  3987  01EC  0822               	movf	?___flmul+2,w
  3988  01ED  0021               	movlb	1	; select bank1
  3989  01EE  00D1               	movwf	(efgtoa@u+2)^(0+128)
  3990  01EF  0020               	movlb	0	; select bank0
  3991  01F0  0821               	movf	?___flmul+1,w
  3992  01F1  0021               	movlb	1	; select bank1
  3993  01F2  00D0               	movwf	(efgtoa@u+1)^(0+128)
  3994  01F3  0020               	movlb	0	; select bank0
  3995  01F4  0820               	movf	?___flmul,w
  3996  01F5  0021               	movlb	1	; select bank1
  3997  01F6  00CF               	movwf	efgtoa@u^(0+128)
  3998  01F7                     l3325:
  3999                           
  4000                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4001  01F7  3001               	movlw	1
  4002  01F8  07CB               	addwf	efgtoa@e^(0+128),f
  4003  01F9  3000               	movlw	0
  4004  01FA  3DCC               	addwfc	(efgtoa@e+1)^(0+128),f
  4005  01FB                     l3327:
  4006                           
  4007                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4008  01FB  0021               	movlb	1	; select bank1
  4009  01FC  084A               	movf	(efgtoa@g+3)^(0+128),w
  4010  01FD  0020               	movlb	0	; select bank0
  4011  01FE  00BD               	movwf	___flge@ff1+3
  4012  01FF  0021               	movlb	1	; select bank1
  4013  0200  0849               	movf	(efgtoa@g+2)^(0+128),w
  4014  0201  0020               	movlb	0	; select bank0
  4015  0202  00BC               	movwf	___flge@ff1+2
  4016  0203  0021               	movlb	1	; select bank1
  4017  0204  0848               	movf	(efgtoa@g+1)^(0+128),w
  4018  0205  0020               	movlb	0	; select bank0
  4019  0206  00BB               	movwf	___flge@ff1+1
  4020  0207  0021               	movlb	1	; select bank1
  4021  0208  0847               	movf	efgtoa@g^(0+128),w
  4022  0209  0020               	movlb	0	; select bank0
  4023  020A  00BA               	movwf	___flge@ff1
  4024  020B  3041               	movlw	65
  4025  020C  00A3               	movwf	___flmul@b+3
  4026  020D  3020               	movlw	32
  4027  020E  00A2               	movwf	___flmul@b+2
  4028  020F  3000               	movlw	0
  4029  0210  00A1               	movwf	___flmul@b+1
  4030  0211  3000               	movlw	0
  4031  0212  00A0               	movwf	___flmul@b
  4032  0213  0021               	movlb	1	; select bank1
  4033  0214  0852               	movf	(efgtoa@u+3)^(0+128),w
  4034  0215  0020               	movlb	0	; select bank0
  4035  0216  00A7               	movwf	___flmul@a+3
  4036  0217  0021               	movlb	1	; select bank1
  4037  0218  0851               	movf	(efgtoa@u+2)^(0+128),w
  4038  0219  0020               	movlb	0	; select bank0
  4039  021A  00A6               	movwf	___flmul@a+2
  4040  021B  0021               	movlb	1	; select bank1
  4041  021C  0850               	movf	(efgtoa@u+1)^(0+128),w
  4042  021D  0020               	movlb	0	; select bank0
  4043  021E  00A5               	movwf	___flmul@a+1
  4044  021F  0021               	movlb	1	; select bank1
  4045  0220  084F               	movf	efgtoa@u^(0+128),w
  4046  0221  0020               	movlb	0	; select bank0
  4047  0222  00A4               	movwf	___flmul@a
  4048  0223  318B  2303  3180   	fcall	___flmul
  4049  0226  0020               	movlb	0	; select bank0
  4050  0227  0823               	movf	?___flmul+3,w
  4051  0228  00C1               	movwf	___flge@ff2+3
  4052  0229  0822               	movf	?___flmul+2,w
  4053  022A  00C0               	movwf	___flge@ff2+2
  4054  022B  0821               	movf	?___flmul+1,w
  4055  022C  00BF               	movwf	___flge@ff2+1
  4056  022D  0820               	movf	?___flmul,w
  4057  022E  00BE               	movwf	___flge@ff2
  4058  022F  3193  236C  3180   	fcall	___flge
  4059  0232  1803               	btfsc	3,0
  4060  0233  2A35               	goto	u4591
  4061  0234  2A36               	goto	u4590
  4062  0235                     u4591:
  4063  0235  29CB               	goto	l3323
  4064  0236                     u4590:
  4065  0236  2A67               	goto	l3333
  4066  0237                     l3329:
  4067                           
  4068                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4069  0237  3041               	movlw	65
  4070  0238  0020               	movlb	0	; select bank0
  4071  0239  00BD               	movwf	___fldiv@a+3
  4072  023A  3020               	movlw	32
  4073  023B  00BC               	movwf	___fldiv@a+2
  4074  023C  3000               	movlw	0
  4075  023D  00BB               	movwf	___fldiv@a+1
  4076  023E  3000               	movlw	0
  4077  023F  00BA               	movwf	___fldiv@a
  4078  0240  0021               	movlb	1	; select bank1
  4079  0241  0852               	movf	(efgtoa@u+3)^(0+128),w
  4080  0242  0020               	movlb	0	; select bank0
  4081  0243  00C1               	movwf	___fldiv@b+3
  4082  0244  0021               	movlb	1	; select bank1
  4083  0245  0851               	movf	(efgtoa@u+2)^(0+128),w
  4084  0246  0020               	movlb	0	; select bank0
  4085  0247  00C0               	movwf	___fldiv@b+2
  4086  0248  0021               	movlb	1	; select bank1
  4087  0249  0850               	movf	(efgtoa@u+1)^(0+128),w
  4088  024A  0020               	movlb	0	; select bank0
  4089  024B  00BF               	movwf	___fldiv@b+1
  4090  024C  0021               	movlb	1	; select bank1
  4091  024D  084F               	movf	efgtoa@u^(0+128),w
  4092  024E  0020               	movlb	0	; select bank0
  4093  024F  00BE               	movwf	___fldiv@b
  4094  0250  3196  264C  3180   	fcall	___fldiv
  4095  0253  0020               	movlb	0	; select bank0
  4096  0254  083D               	movf	?___fldiv+3,w
  4097  0255  0021               	movlb	1	; select bank1
  4098  0256  00D2               	movwf	(efgtoa@u+3)^(0+128)
  4099  0257  0020               	movlb	0	; select bank0
  4100  0258  083C               	movf	?___fldiv+2,w
  4101  0259  0021               	movlb	1	; select bank1
  4102  025A  00D1               	movwf	(efgtoa@u+2)^(0+128)
  4103  025B  0020               	movlb	0	; select bank0
  4104  025C  083B               	movf	?___fldiv+1,w
  4105  025D  0021               	movlb	1	; select bank1
  4106  025E  00D0               	movwf	(efgtoa@u+1)^(0+128)
  4107  025F  0020               	movlb	0	; select bank0
  4108  0260  083A               	movf	?___fldiv,w
  4109  0261  0021               	movlb	1	; select bank1
  4110  0262  00CF               	movwf	efgtoa@u^(0+128)
  4111  0263                     l3331:
  4112                           
  4113                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4114  0263  30FF               	movlw	255
  4115  0264  07CB               	addwf	efgtoa@e^(0+128),f
  4116  0265  30FF               	movlw	255
  4117  0266  3DCC               	addwfc	(efgtoa@e+1)^(0+128),f
  4118  0267                     l3333:
  4119                           
  4120                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4121  0267  0021               	movlb	1	; select bank1
  4122  0268  084A               	movf	(efgtoa@g+3)^(0+128),w
  4123  0269  0020               	movlb	0	; select bank0
  4124  026A  00BD               	movwf	___flge@ff1+3
  4125  026B  0021               	movlb	1	; select bank1
  4126  026C  0849               	movf	(efgtoa@g+2)^(0+128),w
  4127  026D  0020               	movlb	0	; select bank0
  4128  026E  00BC               	movwf	___flge@ff1+2
  4129  026F  0021               	movlb	1	; select bank1
  4130  0270  0848               	movf	(efgtoa@g+1)^(0+128),w
  4131  0271  0020               	movlb	0	; select bank0
  4132  0272  00BB               	movwf	___flge@ff1+1
  4133  0273  0021               	movlb	1	; select bank1
  4134  0274  0847               	movf	efgtoa@g^(0+128),w
  4135  0275  0020               	movlb	0	; select bank0
  4136  0276  00BA               	movwf	___flge@ff1
  4137  0277  0021               	movlb	1	; select bank1
  4138  0278  0852               	movf	(efgtoa@u+3)^(0+128),w
  4139  0279  0020               	movlb	0	; select bank0
  4140  027A  00C1               	movwf	___flge@ff2+3
  4141  027B  0021               	movlb	1	; select bank1
  4142  027C  0851               	movf	(efgtoa@u+2)^(0+128),w
  4143  027D  0020               	movlb	0	; select bank0
  4144  027E  00C0               	movwf	___flge@ff2+2
  4145  027F  0021               	movlb	1	; select bank1
  4146  0280  0850               	movf	(efgtoa@u+1)^(0+128),w
  4147  0281  0020               	movlb	0	; select bank0
  4148  0282  00BF               	movwf	___flge@ff2+1
  4149  0283  0021               	movlb	1	; select bank1
  4150  0284  084F               	movf	efgtoa@u^(0+128),w
  4151  0285  0020               	movlb	0	; select bank0
  4152  0286  00BE               	movwf	___flge@ff2
  4153  0287  3193  236C  3180   	fcall	___flge
  4154  028A  1C03               	btfss	3,0
  4155  028B  2A8D               	goto	u4601
  4156  028C  2A8E               	goto	u4600
  4157  028D                     u4601:
  4158  028D  2A37               	goto	l3329
  4159  028E                     u4600:
  4160  028E                     l3335:
  4161                           
  4162                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4163  028E  0020               	movlb	0	; select bank0
  4164  028F  086C               	movf	efgtoa@c,w
  4165  0290  00ED               	movwf	??_efgtoa
  4166  0291  01EE               	clrf	??_efgtoa+1
  4167  0292  086D               	movf	??_efgtoa,w
  4168  0293  00F6               	movwf	tolower@c
  4169  0294  086E               	movf	??_efgtoa+1,w
  4170  0295  00F7               	movwf	tolower@c+1
  4171  0296  319F  271E  3180   	fcall	_tolower
  4172  0299  0876               	movf	?_tolower,w
  4173  029A  0020               	movlb	0	; select bank0
  4174  029B  00EF               	movwf	??_efgtoa+2
  4175  029C  086F               	movf	??_efgtoa+2,w
  4176  029D  0021               	movlb	1	; select bank1
  4177  029E  00BC               	movwf	efgtoa@mode^(0+128)
  4178  029F                     l3337:
  4179                           
  4180                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4181  029F  083C               	movf	efgtoa@mode^(0+128),w
  4182  02A0  0020               	movlb	0	; select bank0
  4183  02A1  00ED               	movwf	??_efgtoa
  4184  02A2  086D               	movf	??_efgtoa,w
  4185  02A3  0021               	movlb	1	; select bank1
  4186  02A4  00BB               	movwf	efgtoa@nmode^(0+128)
  4187  02A5                     l3339:
  4188                           
  4189                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4190  02A5  3067               	movlw	103
  4191  02A6  063C               	xorwf	efgtoa@mode^(0+128),w
  4192  02A7  1D03               	btfss	3,2
  4193  02A8  2AAA               	goto	u4611
  4194  02A9  2AAB               	goto	u4610
  4195  02AA                     u4611:
  4196  02AA  2AD4               	goto	l778
  4197  02AB                     u4610:
  4198  02AB                     l3341:
  4199                           
  4200                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4201  02AB  0022               	movlb	2	; select bank2
  4202  02AC  0842               	movf	_prec^(0+256),w
  4203  02AD  0443               	iorwf	(_prec+1)^(0+256),w
  4204  02AE  1D03               	btfss	3,2
  4205  02AF  2AB1               	goto	u4621
  4206  02B0  2AB2               	goto	u4620
  4207  02B1                     u4621:
  4208  02B1  2AB6               	goto	l779
  4209  02B2                     u4620:
  4210  02B2                     l3343:
  4211                           
  4212                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4213  02B2  3001               	movlw	1
  4214  02B3  00C2               	movwf	_prec^(0+256)
  4215  02B4  3000               	movlw	0
  4216  02B5  00C3               	movwf	(_prec^(0+256)+1)
  4217  02B6                     l779:	
  4218                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 395:   }
  4219                           
  4220                           
  4221                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4222  02B6  0843               	movf	(_prec+1)^(0+256),w
  4223  02B7  3A80               	xorlw	128
  4224  02B8  0020               	movlb	0	; select bank0
  4225  02B9  00ED               	movwf	??_efgtoa
  4226  02BA  3080               	movlw	128
  4227  02BB  026D               	subwf	??_efgtoa,w
  4228  02BC  1D03               	skipz
  4229  02BD  2AC1               	goto	u4635
  4230  02BE  3001               	movlw	1
  4231  02BF  0022               	movlb	2	; select bank2
  4232  02C0  0242               	subwf	_prec^(0+256),w
  4233  02C1                     u4635:
  4234  02C1  1803               	skipnc
  4235  02C2  2AC4               	goto	u4631
  4236  02C3  2AC5               	goto	u4630
  4237  02C4                     u4631:
  4238  02C4  2ACB               	goto	l3347
  4239  02C5                     u4630:
  4240  02C5                     l3345:
  4241  02C5  3006               	movlw	6
  4242  02C6  0021               	movlb	1	; select bank1
  4243  02C7  00B7               	movwf	efgtoa@p^(0+128)
  4244  02C8  3000               	movlw	0
  4245  02C9  00B8               	movwf	(efgtoa@p^(0+128)+1)
  4246  02CA  2ADA               	goto	l3353
  4247  02CB                     l3347:
  4248  02CB  0022               	movlb	2	; select bank2
  4249  02CC  0843               	movf	(_prec+1)^(0+256),w
  4250  02CD  0021               	movlb	1	; select bank1
  4251  02CE  00B8               	movwf	(efgtoa@p+1)^(0+128)
  4252  02CF  0022               	movlb	2	; select bank2
  4253  02D0  0842               	movf	_prec^(0+256),w
  4254  02D1  0021               	movlb	1	; select bank1
  4255  02D2  00B7               	movwf	efgtoa@p^(0+128)
  4256  02D3  2ADA               	goto	l3353
  4257  02D4                     l778:
  4258                           
  4259                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4260  02D4  0022               	movlb	2	; select bank2
  4261  02D5  1BC3               	btfsc	(_prec+1)^(0+256),7
  4262  02D6  2AD8               	goto	u4641
  4263  02D7  2AD9               	goto	u4640
  4264  02D8                     u4641:
  4265  02D8  2AC5               	goto	l3345
  4266  02D9                     u4640:
  4267  02D9  2ACB               	goto	l3347
  4268  02DA                     l3353:
  4269                           
  4270                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4271  02DA  3067               	movlw	103
  4272  02DB  063C               	xorwf	efgtoa@mode^(0+128),w
  4273  02DC  1D03               	btfss	3,2
  4274  02DD  2ADF               	goto	u4651
  4275  02DE  2AE0               	goto	u4650
  4276  02DF                     u4651:
  4277  02DF  2B18               	goto	l789
  4278  02E0                     u4650:
  4279  02E0                     l3355:
  4280                           
  4281                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4282  02E0  084C               	movf	(efgtoa@e+1)^(0+128),w
  4283  02E1  3A80               	xorlw	128
  4284  02E2  0020               	movlb	0	; select bank0
  4285  02E3  00ED               	movwf	??_efgtoa
  4286  02E4  307F               	movlw	127
  4287  02E5  026D               	subwf	??_efgtoa,w
  4288  02E6  1D03               	skipz
  4289  02E7  2AEB               	goto	u4665
  4290  02E8  30FC               	movlw	252
  4291  02E9  0021               	movlb	1	; select bank1
  4292  02EA  024B               	subwf	efgtoa@e^(0+128),w
  4293  02EB                     u4665:
  4294  02EB  1C03               	skipc
  4295  02EC  2AEE               	goto	u4661
  4296  02ED  2AEF               	goto	u4660
  4297  02EE                     u4661:
  4298  02EE  2B12               	goto	l3361
  4299  02EF                     u4660:
  4300  02EF                     l3357:
  4301  02EF  0021               	movlb	1	; select bank1
  4302  02F0  0837               	movf	efgtoa@p^(0+128),w
  4303  02F1  3EFF               	addlw	255
  4304  02F2  0020               	movlb	0	; select bank0
  4305  02F3  00ED               	movwf	??_efgtoa
  4306  02F4  30FF               	movlw	255
  4307  02F5  0021               	movlb	1	; select bank1
  4308  02F6  3D38               	addwfc	(efgtoa@p+1)^(0+128),w
  4309  02F7  0020               	movlb	0	; select bank0
  4310  02F8  00EE               	movwf	??_efgtoa+1
  4311  02F9  086E               	movf	??_efgtoa+1,w
  4312  02FA  3A80               	xorlw	128
  4313  02FB  00EF               	movwf	??_efgtoa+2
  4314  02FC  0021               	movlb	1	; select bank1
  4315  02FD  084C               	movf	(efgtoa@e+1)^(0+128),w
  4316  02FE  3A80               	xorlw	128
  4317  02FF  0020               	movlb	0	; select bank0
  4318  0300  026F               	subwf	??_efgtoa+2,w
  4319  0301  1D03               	skipz
  4320  0302  2B07               	goto	u4675
  4321  0303  0021               	movlb	1	; select bank1
  4322  0304  084B               	movf	efgtoa@e^(0+128),w
  4323  0305  0020               	movlb	0	; select bank0
  4324  0306  026D               	subwf	??_efgtoa,w
  4325  0307                     u4675:
  4326  0307  1C03               	skipc
  4327  0308  2B0A               	goto	u4671
  4328  0309  2B0B               	goto	u4670
  4329  030A                     u4671:
  4330  030A  2B12               	goto	l3361
  4331  030B                     u4670:
  4332  030B                     l3359:
  4333                           
  4334                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4335  030B  3066               	movlw	102
  4336  030C  0020               	movlb	0	; select bank0
  4337  030D  00ED               	movwf	??_efgtoa
  4338  030E  086D               	movf	??_efgtoa,w
  4339  030F  0021               	movlb	1	; select bank1
  4340  0310  00BB               	movwf	efgtoa@nmode^(0+128)
  4341                           
  4342                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4343  0311  2B18               	goto	l789
  4344  0312                     l3361:
  4345                           
  4346                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4347  0312  3065               	movlw	101
  4348  0313  0020               	movlb	0	; select bank0
  4349  0314  00ED               	movwf	??_efgtoa
  4350  0315  086D               	movf	??_efgtoa,w
  4351  0316  0021               	movlb	1	; select bank1
  4352  0317  00BB               	movwf	efgtoa@nmode^(0+128)
  4353  0318                     l789:	
  4354                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 408:     }
  4355                           
  4356                           
  4357                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4358  0318  0838               	movf	(efgtoa@p+1)^(0+128),w
  4359  0319  00AD               	movwf	(efgtoa@m+1)^(0+128)
  4360  031A  0837               	movf	efgtoa@p^(0+128),w
  4361  031B  00AC               	movwf	efgtoa@m^(0+128)
  4362  031C                     l3363:
  4363                           
  4364                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4365  031C  3067               	movlw	103
  4366  031D  063C               	xorwf	efgtoa@mode^(0+128),w
  4367  031E  1D03               	btfss	3,2
  4368  031F  2B21               	goto	u4681
  4369  0320  2B22               	goto	u4680
  4370  0321                     u4681:
  4371  0321  2B2C               	goto	l3369
  4372  0322                     u4680:
  4373  0322                     l3365:
  4374  0322  3066               	movlw	102
  4375  0323  063B               	xorwf	efgtoa@nmode^(0+128),w
  4376  0324  1D03               	btfss	3,2
  4377  0325  2B27               	goto	u4691
  4378  0326  2B28               	goto	u4690
  4379  0327                     u4691:
  4380  0327  2B30               	goto	l3371
  4381  0328                     u4690:
  4382  0328                     l3367:
  4383  0328  1FCC               	btfss	(efgtoa@e+1)^(0+128),7
  4384  0329  2B2B               	goto	u4701
  4385  032A  2B2C               	goto	u4700
  4386  032B                     u4701:
  4387  032B  2B30               	goto	l3371
  4388  032C                     u4700:
  4389  032C                     l3369:
  4390                           
  4391                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4392  032C  3001               	movlw	1
  4393  032D  07AC               	addwf	efgtoa@m^(0+128),f
  4394  032E  3000               	movlw	0
  4395  032F  3DAD               	addwfc	(efgtoa@m+1)^(0+128),f
  4396  0330                     l3371:
  4397                           
  4398                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4399  0330  3066               	movlw	102
  4400  0331  063B               	xorwf	efgtoa@nmode^(0+128),w
  4401  0332  1D03               	btfss	3,2
  4402  0333  2B35               	goto	u4711
  4403  0334  2B36               	goto	u4710
  4404  0335                     u4711:
  4405  0335  2B4E               	goto	l3383
  4406  0336                     u4710:
  4407  0336                     l3373:
  4408                           
  4409                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4410  0336  1FCC               	btfss	(efgtoa@e+1)^(0+128),7
  4411  0337  2B39               	goto	u4721
  4412  0338  2B3A               	goto	u4720
  4413  0339                     u4721:
  4414  0339  2B44               	goto	l3379
  4415  033A                     u4720:
  4416  033A                     l3375:
  4417                           
  4418                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4419  033A  303F               	movlw	63
  4420  033B  00D2               	movwf	(efgtoa@u+3)^(0+128)
  4421  033C  3080               	movlw	128
  4422  033D  00D1               	movwf	(efgtoa@u+2)^(0+128)
  4423  033E  3000               	movlw	0
  4424  033F  00D0               	movwf	(efgtoa@u+1)^(0+128)
  4425  0340  3000               	movlw	0
  4426  0341  00CF               	movwf	efgtoa@u^(0+128)
  4427  0342                     l3377:
  4428                           
  4429                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4430  0342  01CB               	clrf	efgtoa@e^(0+128)
  4431  0343  01CC               	clrf	(efgtoa@e+1)^(0+128)
  4432  0344                     l3379:
  4433                           
  4434                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4435  0344  3067               	movlw	103
  4436  0345  063C               	xorwf	efgtoa@mode^(0+128),w
  4437  0346  1903               	btfsc	3,2
  4438  0347  2B49               	goto	u4731
  4439  0348  2B4A               	goto	u4730
  4440  0349                     u4731:
  4441  0349  2B4E               	goto	l3383
  4442  034A                     u4730:
  4443  034A                     l3381:
  4444                           
  4445                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4446  034A  084B               	movf	efgtoa@e^(0+128),w
  4447  034B  07AC               	addwf	efgtoa@m^(0+128),f
  4448  034C  084C               	movf	(efgtoa@e+1)^(0+128),w
  4449  034D  3DAD               	addwfc	(efgtoa@m+1)^(0+128),f
  4450  034E                     l3383:
  4451                           
  4452                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4453  034E  01C5               	clrf	efgtoa@i^(0+128)
  4454  034F  01C6               	clrf	(efgtoa@i+1)^(0+128)
  4455  0350                     l3385:
  4456                           
  4457                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4458  0350  084A               	movf	(efgtoa@g+3)^(0+128),w
  4459  0351  00C0               	movwf	(efgtoa@h+3)^(0+128)
  4460  0352  0849               	movf	(efgtoa@g+2)^(0+128),w
  4461  0353  00BF               	movwf	(efgtoa@h+2)^(0+128)
  4462  0354  0848               	movf	(efgtoa@g+1)^(0+128),w
  4463  0355  00BE               	movwf	(efgtoa@h+1)^(0+128)
  4464  0356  0847               	movf	efgtoa@g^(0+128),w
  4465  0357  00BD               	movwf	efgtoa@h^(0+128)
  4466  0358                     l3387:
  4467                           
  4468                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4469  0358  0852               	movf	(efgtoa@u+3)^(0+128),w
  4470  0359  00B1               	movwf	(efgtoa@ou+3)^(0+128)
  4471  035A  0851               	movf	(efgtoa@u+2)^(0+128),w
  4472  035B  00B0               	movwf	(efgtoa@ou+2)^(0+128)
  4473  035C  0850               	movf	(efgtoa@u+1)^(0+128),w
  4474  035D  00AF               	movwf	(efgtoa@ou+1)^(0+128)
  4475  035E  084F               	movf	efgtoa@u^(0+128),w
  4476  035F  00AE               	movwf	efgtoa@ou^(0+128)
  4477                           
  4478                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4479  0360  2C2E               	goto	l3393
  4480  0361                     l3389:
  4481                           
  4482                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4483  0361  0021               	movlb	1	; select bank1
  4484  0362  0852               	movf	(efgtoa@u+3)^(0+128),w
  4485  0363  0020               	movlb	0	; select bank0
  4486  0364  00BD               	movwf	___fldiv@a+3
  4487  0365  0021               	movlb	1	; select bank1
  4488  0366  0851               	movf	(efgtoa@u+2)^(0+128),w
  4489  0367  0020               	movlb	0	; select bank0
  4490  0368  00BC               	movwf	___fldiv@a+2
  4491  0369  0021               	movlb	1	; select bank1
  4492  036A  0850               	movf	(efgtoa@u+1)^(0+128),w
  4493  036B  0020               	movlb	0	; select bank0
  4494  036C  00BB               	movwf	___fldiv@a+1
  4495  036D  0021               	movlb	1	; select bank1
  4496  036E  084F               	movf	efgtoa@u^(0+128),w
  4497  036F  0020               	movlb	0	; select bank0
  4498  0370  00BA               	movwf	___fldiv@a
  4499  0371  0021               	movlb	1	; select bank1
  4500  0372  0840               	movf	(efgtoa@h+3)^(0+128),w
  4501  0373  0020               	movlb	0	; select bank0
  4502  0374  00C1               	movwf	___fldiv@b+3
  4503  0375  0021               	movlb	1	; select bank1
  4504  0376  083F               	movf	(efgtoa@h+2)^(0+128),w
  4505  0377  0020               	movlb	0	; select bank0
  4506  0378  00C0               	movwf	___fldiv@b+2
  4507  0379  0021               	movlb	1	; select bank1
  4508  037A  083E               	movf	(efgtoa@h+1)^(0+128),w
  4509  037B  0020               	movlb	0	; select bank0
  4510  037C  00BF               	movwf	___fldiv@b+1
  4511  037D  0021               	movlb	1	; select bank1
  4512  037E  083D               	movf	efgtoa@h^(0+128),w
  4513  037F  0020               	movlb	0	; select bank0
  4514  0380  00BE               	movwf	___fldiv@b
  4515  0381  3196  264C  3180   	fcall	___fldiv
  4516  0384  0020               	movlb	0	; select bank0
  4517  0385  083D               	movf	?___fldiv+3,w
  4518  0386  00D7               	movwf	floorf@x+3
  4519  0387  083C               	movf	?___fldiv+2,w
  4520  0388  00D6               	movwf	floorf@x+2
  4521  0389  083B               	movf	?___fldiv+1,w
  4522  038A  00D5               	movwf	floorf@x+1
  4523  038B  083A               	movf	?___fldiv,w
  4524  038C  00D4               	movwf	floorf@x
  4525  038D  3195  2561  3180   	fcall	_floorf
  4526  0390  0020               	movlb	0	; select bank0
  4527  0391  0857               	movf	?_floorf+3,w
  4528  0392  0021               	movlb	1	; select bank1
  4529  0393  00C4               	movwf	(efgtoa@l+3)^(0+128)
  4530  0394  0020               	movlb	0	; select bank0
  4531  0395  0856               	movf	?_floorf+2,w
  4532  0396  0021               	movlb	1	; select bank1
  4533  0397  00C3               	movwf	(efgtoa@l+2)^(0+128)
  4534  0398  0020               	movlb	0	; select bank0
  4535  0399  0855               	movf	?_floorf+1,w
  4536  039A  0021               	movlb	1	; select bank1
  4537  039B  00C2               	movwf	(efgtoa@l+1)^(0+128)
  4538  039C  0020               	movlb	0	; select bank0
  4539  039D  0854               	movf	?_floorf,w
  4540  039E  0021               	movlb	1	; select bank1
  4541  039F  00C1               	movwf	efgtoa@l^(0+128)
  4542                           
  4543                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4544  03A0  0844               	movf	(efgtoa@l+3)^(0+128),w
  4545  03A1  00F3               	movwf	___fltol@f1+3
  4546  03A2  0843               	movf	(efgtoa@l+2)^(0+128),w
  4547  03A3  00F2               	movwf	___fltol@f1+2
  4548  03A4  0842               	movf	(efgtoa@l+1)^(0+128),w
  4549  03A5  00F1               	movwf	___fltol@f1+1
  4550  03A6  0841               	movf	efgtoa@l^(0+128),w
  4551  03A7  00F0               	movwf	___fltol@f1
  4552  03A8  3180  200D  3180   	fcall	___fltol
  4553  03AB  0871               	movf	?___fltol+1,w
  4554  03AC  0021               	movlb	1	; select bank1
  4555  03AD  00B3               	movwf	(efgtoa@d+1)^(0+128)
  4556  03AE  0870               	movf	?___fltol,w
  4557  03AF  00B2               	movwf	efgtoa@d^(0+128)
  4558                           
  4559                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4560  03B0  0844               	movf	(efgtoa@l+3)^(0+128),w
  4561  03B1  0020               	movlb	0	; select bank0
  4562  03B2  00A7               	movwf	___flmul@a+3
  4563  03B3  0021               	movlb	1	; select bank1
  4564  03B4  0843               	movf	(efgtoa@l+2)^(0+128),w
  4565  03B5  0020               	movlb	0	; select bank0
  4566  03B6  00A6               	movwf	___flmul@a+2
  4567  03B7  0021               	movlb	1	; select bank1
  4568  03B8  0842               	movf	(efgtoa@l+1)^(0+128),w
  4569  03B9  0020               	movlb	0	; select bank0
  4570  03BA  00A5               	movwf	___flmul@a+1
  4571  03BB  0021               	movlb	1	; select bank1
  4572  03BC  0841               	movf	efgtoa@l^(0+128),w
  4573  03BD  0020               	movlb	0	; select bank0
  4574  03BE  00A4               	movwf	___flmul@a
  4575  03BF  0021               	movlb	1	; select bank1
  4576  03C0  0852               	movf	(efgtoa@u+3)^(0+128),w
  4577  03C1  0020               	movlb	0	; select bank0
  4578  03C2  00A3               	movwf	___flmul@b+3
  4579  03C3  0021               	movlb	1	; select bank1
  4580  03C4  0851               	movf	(efgtoa@u+2)^(0+128),w
  4581  03C5  0020               	movlb	0	; select bank0
  4582  03C6  00A2               	movwf	___flmul@b+2
  4583  03C7  0021               	movlb	1	; select bank1
  4584  03C8  0850               	movf	(efgtoa@u+1)^(0+128),w
  4585  03C9  0020               	movlb	0	; select bank0
  4586  03CA  00A1               	movwf	___flmul@b+1
  4587  03CB  0021               	movlb	1	; select bank1
  4588  03CC  084F               	movf	efgtoa@u^(0+128),w
  4589  03CD  0020               	movlb	0	; select bank0
  4590  03CE  00A0               	movwf	___flmul@b
  4591  03CF  318B  2303  3180   	fcall	___flmul
  4592  03D2  0020               	movlb	0	; select bank0
  4593  03D3  0823               	movf	?___flmul+3,w
  4594  03D4  00BD               	movwf	___flsub@a+3
  4595  03D5  0822               	movf	?___flmul+2,w
  4596  03D6  00BC               	movwf	___flsub@a+2
  4597  03D7  0821               	movf	?___flmul+1,w
  4598  03D8  00BB               	movwf	___flsub@a+1
  4599  03D9  0820               	movf	?___flmul,w
  4600  03DA  00BA               	movwf	___flsub@a
  4601  03DB  0021               	movlb	1	; select bank1
  4602  03DC  0840               	movf	(efgtoa@h+3)^(0+128),w
  4603  03DD  0020               	movlb	0	; select bank0
  4604  03DE  00C1               	movwf	___flsub@b+3
  4605  03DF  0021               	movlb	1	; select bank1
  4606  03E0  083F               	movf	(efgtoa@h+2)^(0+128),w
  4607  03E1  0020               	movlb	0	; select bank0
  4608  03E2  00C0               	movwf	___flsub@b+2
  4609  03E3  0021               	movlb	1	; select bank1
  4610  03E4  083E               	movf	(efgtoa@h+1)^(0+128),w
  4611  03E5  0020               	movlb	0	; select bank0
  4612  03E6  00BF               	movwf	___flsub@b+1
  4613  03E7  0021               	movlb	1	; select bank1
  4614  03E8  083D               	movf	efgtoa@h^(0+128),w
  4615  03E9  0020               	movlb	0	; select bank0
  4616  03EA  00BE               	movwf	___flsub@b
  4617  03EB  319F  279E  3180   	fcall	___flsub
  4618  03EE  0020               	movlb	0	; select bank0
  4619  03EF  083D               	movf	?___flsub+3,w
  4620  03F0  0021               	movlb	1	; select bank1
  4621  03F1  00C0               	movwf	(efgtoa@h+3)^(0+128)
  4622  03F2  0020               	movlb	0	; select bank0
  4623  03F3  083C               	movf	?___flsub+2,w
  4624  03F4  0021               	movlb	1	; select bank1
  4625  03F5  00BF               	movwf	(efgtoa@h+2)^(0+128)
  4626  03F6  0020               	movlb	0	; select bank0
  4627  03F7  083B               	movf	?___flsub+1,w
  4628  03F8  0021               	movlb	1	; select bank1
  4629  03F9  00BE               	movwf	(efgtoa@h+1)^(0+128)
  4630  03FA  0020               	movlb	0	; select bank0
  4631  03FB  083A               	movf	?___flsub,w
  4632  03FC  0021               	movlb	1	; select bank1
  4633  03FD  00BD               	movwf	efgtoa@h^(0+128)
  4634                           
  4635                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  4636  03FE  3041               	movlw	65
  4637  03FF  0020               	movlb	0	; select bank0
  4638  0400  00BD               	movwf	___fldiv@a+3
  4639  0401  3020               	movlw	32
  4640  0402  00BC               	movwf	___fldiv@a+2
  4641  0403  3000               	movlw	0
  4642  0404  00BB               	movwf	___fldiv@a+1
  4643  0405  3000               	movlw	0
  4644  0406  00BA               	movwf	___fldiv@a
  4645  0407  0021               	movlb	1	; select bank1
  4646  0408  0852               	movf	(efgtoa@u+3)^(0+128),w
  4647  0409  0020               	movlb	0	; select bank0
  4648  040A  00C1               	movwf	___fldiv@b+3
  4649  040B  0021               	movlb	1	; select bank1
  4650  040C  0851               	movf	(efgtoa@u+2)^(0+128),w
  4651  040D  0020               	movlb	0	; select bank0
  4652  040E  00C0               	movwf	___fldiv@b+2
  4653  040F  0021               	movlb	1	; select bank1
  4654  0410  0850               	movf	(efgtoa@u+1)^(0+128),w
  4655  0411  0020               	movlb	0	; select bank0
  4656  0412  00BF               	movwf	___fldiv@b+1
  4657  0413  0021               	movlb	1	; select bank1
  4658  0414  084F               	movf	efgtoa@u^(0+128),w
  4659  0415  0020               	movlb	0	; select bank0
  4660  0416  00BE               	movwf	___fldiv@b
  4661  0417  3196  264C  3180   	fcall	___fldiv
  4662  041A  0020               	movlb	0	; select bank0
  4663  041B  083D               	movf	?___fldiv+3,w
  4664  041C  0021               	movlb	1	; select bank1
  4665  041D  00D2               	movwf	(efgtoa@u+3)^(0+128)
  4666  041E  0020               	movlb	0	; select bank0
  4667  041F  083C               	movf	?___fldiv+2,w
  4668  0420  0021               	movlb	1	; select bank1
  4669  0421  00D1               	movwf	(efgtoa@u+2)^(0+128)
  4670  0422  0020               	movlb	0	; select bank0
  4671  0423  083B               	movf	?___fldiv+1,w
  4672  0424  0021               	movlb	1	; select bank1
  4673  0425  00D0               	movwf	(efgtoa@u+1)^(0+128)
  4674  0426  0020               	movlb	0	; select bank0
  4675  0427  083A               	movf	?___fldiv,w
  4676  0428  0021               	movlb	1	; select bank1
  4677  0429  00CF               	movwf	efgtoa@u^(0+128)
  4678  042A                     l3391:
  4679                           
  4680                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  4681  042A  3001               	movlw	1
  4682  042B  07C5               	addwf	efgtoa@i^(0+128),f
  4683  042C  3000               	movlw	0
  4684  042D  3DC6               	addwfc	(efgtoa@i+1)^(0+128),f
  4685  042E                     l3393:
  4686                           
  4687                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4688  042E  0846               	movf	(efgtoa@i+1)^(0+128),w
  4689  042F  3A80               	xorlw	128
  4690  0430  0020               	movlb	0	; select bank0
  4691  0431  00ED               	movwf	??_efgtoa
  4692  0432  0021               	movlb	1	; select bank1
  4693  0433  082D               	movf	(efgtoa@m+1)^(0+128),w
  4694  0434  3A80               	xorlw	128
  4695  0435  0020               	movlb	0	; select bank0
  4696  0436  026D               	subwf	??_efgtoa,w
  4697  0437  1D03               	skipz
  4698  0438  2C3C               	goto	u4745
  4699  0439  0021               	movlb	1	; select bank1
  4700  043A  082C               	movf	efgtoa@m^(0+128),w
  4701  043B  0245               	subwf	efgtoa@i^(0+128),w
  4702  043C                     u4745:
  4703  043C  1C03               	skipc
  4704  043D  2C3F               	goto	u4741
  4705  043E  2C40               	goto	u4740
  4706  043F                     u4741:
  4707  043F  2B61               	goto	l3389
  4708  0440                     u4740:
  4709  0440                     l3395:
  4710                           
  4711                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  4712  0440  3040               	movlw	64
  4713  0441  0020               	movlb	0	; select bank0
  4714  0442  00A3               	movwf	___flmul@b+3
  4715  0443  30A0               	movlw	160
  4716  0444  00A2               	movwf	___flmul@b+2
  4717  0445  3000               	movlw	0
  4718  0446  00A1               	movwf	___flmul@b+1
  4719  0447  3000               	movlw	0
  4720  0448  00A0               	movwf	___flmul@b
  4721  0449  0021               	movlb	1	; select bank1
  4722  044A  0852               	movf	(efgtoa@u+3)^(0+128),w
  4723  044B  0020               	movlb	0	; select bank0
  4724  044C  00A7               	movwf	___flmul@a+3
  4725  044D  0021               	movlb	1	; select bank1
  4726  044E  0851               	movf	(efgtoa@u+2)^(0+128),w
  4727  044F  0020               	movlb	0	; select bank0
  4728  0450  00A6               	movwf	___flmul@a+2
  4729  0451  0021               	movlb	1	; select bank1
  4730  0452  0850               	movf	(efgtoa@u+1)^(0+128),w
  4731  0453  0020               	movlb	0	; select bank0
  4732  0454  00A5               	movwf	___flmul@a+1
  4733  0455  0021               	movlb	1	; select bank1
  4734  0456  084F               	movf	efgtoa@u^(0+128),w
  4735  0457  0020               	movlb	0	; select bank0
  4736  0458  00A4               	movwf	___flmul@a
  4737  0459  318B  2303  3180   	fcall	___flmul
  4738  045C  0020               	movlb	0	; select bank0
  4739  045D  0823               	movf	?___flmul+3,w
  4740  045E  0021               	movlb	1	; select bank1
  4741  045F  00C4               	movwf	(efgtoa@l+3)^(0+128)
  4742  0460  0020               	movlb	0	; select bank0
  4743  0461  0822               	movf	?___flmul+2,w
  4744  0462  0021               	movlb	1	; select bank1
  4745  0463  00C3               	movwf	(efgtoa@l+2)^(0+128)
  4746  0464  0020               	movlb	0	; select bank0
  4747  0465  0821               	movf	?___flmul+1,w
  4748  0466  0021               	movlb	1	; select bank1
  4749  0467  00C2               	movwf	(efgtoa@l+1)^(0+128)
  4750  0468  0020               	movlb	0	; select bank0
  4751  0469  0820               	movf	?___flmul,w
  4752  046A  0021               	movlb	1	; select bank1
  4753  046B  00C1               	movwf	efgtoa@l^(0+128)
  4754                           
  4755                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  4756  046C  0840               	movf	(efgtoa@h+3)^(0+128),w
  4757  046D  0020               	movlb	0	; select bank0
  4758  046E  00BD               	movwf	___flge@ff1+3
  4759  046F  0021               	movlb	1	; select bank1
  4760  0470  083F               	movf	(efgtoa@h+2)^(0+128),w
  4761  0471  0020               	movlb	0	; select bank0
  4762  0472  00BC               	movwf	___flge@ff1+2
  4763  0473  0021               	movlb	1	; select bank1
  4764  0474  083E               	movf	(efgtoa@h+1)^(0+128),w
  4765  0475  0020               	movlb	0	; select bank0
  4766  0476  00BB               	movwf	___flge@ff1+1
  4767  0477  0021               	movlb	1	; select bank1
  4768  0478  083D               	movf	efgtoa@h^(0+128),w
  4769  0479  0020               	movlb	0	; select bank0
  4770  047A  00BA               	movwf	___flge@ff1
  4771  047B  0021               	movlb	1	; select bank1
  4772  047C  0844               	movf	(efgtoa@l+3)^(0+128),w
  4773  047D  0020               	movlb	0	; select bank0
  4774  047E  00C1               	movwf	___flge@ff2+3
  4775  047F  0021               	movlb	1	; select bank1
  4776  0480  0843               	movf	(efgtoa@l+2)^(0+128),w
  4777  0481  0020               	movlb	0	; select bank0
  4778  0482  00C0               	movwf	___flge@ff2+2
  4779  0483  0021               	movlb	1	; select bank1
  4780  0484  0842               	movf	(efgtoa@l+1)^(0+128),w
  4781  0485  0020               	movlb	0	; select bank0
  4782  0486  00BF               	movwf	___flge@ff2+1
  4783  0487  0021               	movlb	1	; select bank1
  4784  0488  0841               	movf	efgtoa@l^(0+128),w
  4785  0489  0020               	movlb	0	; select bank0
  4786  048A  00BE               	movwf	___flge@ff2
  4787  048B  3193  236C  3180   	fcall	___flge
  4788  048E  1803               	btfsc	3,0
  4789  048F  2C91               	goto	u4751
  4790  0490  2C92               	goto	u4750
  4791  0491                     u4751:
  4792  0491  2C9C               	goto	l3399
  4793  0492                     u4750:
  4794  0492                     l3397:
  4795                           
  4796                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  4797  0492  3000               	movlw	0
  4798  0493  0021               	movlb	1	; select bank1
  4799  0494  00C4               	movwf	(efgtoa@l+3)^(0+128)
  4800  0495  3000               	movlw	0
  4801  0496  00C3               	movwf	(efgtoa@l+2)^(0+128)
  4802  0497  3000               	movlw	0
  4803  0498  00C2               	movwf	(efgtoa@l+1)^(0+128)
  4804  0499  3000               	movlw	0
  4805  049A  00C1               	movwf	efgtoa@l^(0+128)
  4806                           
  4807                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  4808  049B  2CC1               	goto	l3405
  4809  049C                     l3399:
  4810                           
  4811                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4812  049C  0021               	movlb	1	; select bank1
  4813  049D  0840               	movf	(efgtoa@h+3)^(0+128),w
  4814  049E  00F3               	movwf	___fleq@ff1+3
  4815  049F  083F               	movf	(efgtoa@h+2)^(0+128),w
  4816  04A0  00F2               	movwf	___fleq@ff1+2
  4817  04A1  083E               	movf	(efgtoa@h+1)^(0+128),w
  4818  04A2  00F1               	movwf	___fleq@ff1+1
  4819  04A3  083D               	movf	efgtoa@h^(0+128),w
  4820  04A4  00F0               	movwf	___fleq@ff1
  4821  04A5  0844               	movf	(efgtoa@l+3)^(0+128),w
  4822  04A6  00F7               	movwf	___fleq@ff2+3
  4823  04A7  0843               	movf	(efgtoa@l+2)^(0+128),w
  4824  04A8  00F6               	movwf	___fleq@ff2+2
  4825  04A9  0842               	movf	(efgtoa@l+1)^(0+128),w
  4826  04AA  00F5               	movwf	___fleq@ff2+1
  4827  04AB  0841               	movf	efgtoa@l^(0+128),w
  4828  04AC  00F4               	movwf	___fleq@ff2
  4829  04AD  3190  20E3  3180   	fcall	___fleq
  4830  04B0  1C03               	btfss	3,0
  4831  04B1  2CB3               	goto	u4761
  4832  04B2  2CB4               	goto	u4760
  4833  04B3                     u4761:
  4834  04B3  2CC1               	goto	l3405
  4835  04B4                     u4760:
  4836  04B4                     l3401:
  4837  04B4  0021               	movlb	1	; select bank1
  4838  04B5  1832               	btfsc	efgtoa@d^(0+128),0
  4839  04B6  2CB8               	goto	u4771
  4840  04B7  2CB9               	goto	u4770
  4841  04B8                     u4771:
  4842  04B8  2CC1               	goto	l3405
  4843  04B9                     u4770:
  4844  04B9                     l3403:
  4845                           
  4846                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4847  04B9  3000               	movlw	0
  4848  04BA  00C4               	movwf	(efgtoa@l+3)^(0+128)
  4849  04BB  3000               	movlw	0
  4850  04BC  00C3               	movwf	(efgtoa@l+2)^(0+128)
  4851  04BD  3000               	movlw	0
  4852  04BE  00C2               	movwf	(efgtoa@l+1)^(0+128)
  4853  04BF  3000               	movlw	0
  4854  04C0  00C1               	movwf	efgtoa@l^(0+128)
  4855  04C1                     l3405:
  4856                           
  4857                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4858  04C1  0021               	movlb	1	; select bank1
  4859  04C2  0844               	movf	(efgtoa@l+3)^(0+128),w
  4860  04C3  00F3               	movwf	___fladd@b+3
  4861  04C4  0843               	movf	(efgtoa@l+2)^(0+128),w
  4862  04C5  00F2               	movwf	___fladd@b+2
  4863  04C6  0842               	movf	(efgtoa@l+1)^(0+128),w
  4864  04C7  00F1               	movwf	___fladd@b+1
  4865  04C8  0841               	movf	efgtoa@l^(0+128),w
  4866  04C9  00F0               	movwf	___fladd@b
  4867  04CA  084A               	movf	(efgtoa@g+3)^(0+128),w
  4868  04CB  00F7               	movwf	___fladd@a+3
  4869  04CC  0849               	movf	(efgtoa@g+2)^(0+128),w
  4870  04CD  00F6               	movwf	___fladd@a+2
  4871  04CE  0848               	movf	(efgtoa@g+1)^(0+128),w
  4872  04CF  00F5               	movwf	___fladd@a+1
  4873  04D0  0847               	movf	efgtoa@g^(0+128),w
  4874  04D1  00F4               	movwf	___fladd@a
  4875  04D2  3188  20C4  3180   	fcall	___fladd
  4876  04D5  0873               	movf	?___fladd+3,w
  4877  04D6  0021               	movlb	1	; select bank1
  4878  04D7  00C0               	movwf	(efgtoa@h+3)^(0+128)
  4879  04D8  0872               	movf	?___fladd+2,w
  4880  04D9  00BF               	movwf	(efgtoa@h+2)^(0+128)
  4881  04DA  0871               	movf	?___fladd+1,w
  4882  04DB  00BE               	movwf	(efgtoa@h+1)^(0+128)
  4883  04DC  0870               	movf	?___fladd,w
  4884  04DD  00BD               	movwf	efgtoa@h^(0+128)
  4885  04DE                     l3407:
  4886                           
  4887                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4888  04DE  0840               	movf	(efgtoa@h+3)^(0+128),w
  4889  04DF  0020               	movlb	0	; select bank0
  4890  04E0  00BD               	movwf	___flge@ff1+3
  4891  04E1  0021               	movlb	1	; select bank1
  4892  04E2  083F               	movf	(efgtoa@h+2)^(0+128),w
  4893  04E3  0020               	movlb	0	; select bank0
  4894  04E4  00BC               	movwf	___flge@ff1+2
  4895  04E5  0021               	movlb	1	; select bank1
  4896  04E6  083E               	movf	(efgtoa@h+1)^(0+128),w
  4897  04E7  0020               	movlb	0	; select bank0
  4898  04E8  00BB               	movwf	___flge@ff1+1
  4899  04E9  0021               	movlb	1	; select bank1
  4900  04EA  083D               	movf	efgtoa@h^(0+128),w
  4901  04EB  0020               	movlb	0	; select bank0
  4902  04EC  00BA               	movwf	___flge@ff1
  4903  04ED  3041               	movlw	65
  4904  04EE  00A3               	movwf	___flmul@b+3
  4905  04EF  3020               	movlw	32
  4906  04F0  00A2               	movwf	___flmul@b+2
  4907  04F1  3000               	movlw	0
  4908  04F2  00A1               	movwf	___flmul@b+1
  4909  04F3  3000               	movlw	0
  4910  04F4  00A0               	movwf	___flmul@b
  4911  04F5  0021               	movlb	1	; select bank1
  4912  04F6  0831               	movf	(efgtoa@ou+3)^(0+128),w
  4913  04F7  0020               	movlb	0	; select bank0
  4914  04F8  00A7               	movwf	___flmul@a+3
  4915  04F9  0021               	movlb	1	; select bank1
  4916  04FA  0830               	movf	(efgtoa@ou+2)^(0+128),w
  4917  04FB  0020               	movlb	0	; select bank0
  4918  04FC  00A6               	movwf	___flmul@a+2
  4919  04FD  0021               	movlb	1	; select bank1
  4920  04FE  082F               	movf	(efgtoa@ou+1)^(0+128),w
  4921  04FF  0020               	movlb	0	; select bank0
  4922  0500  00A5               	movwf	___flmul@a+1
  4923  0501  0021               	movlb	1	; select bank1
  4924  0502  082E               	movf	efgtoa@ou^(0+128),w
  4925  0503  0020               	movlb	0	; select bank0
  4926  0504  00A4               	movwf	___flmul@a
  4927  0505  318B  2303  3180   	fcall	___flmul
  4928  0508  0020               	movlb	0	; select bank0
  4929  0509  0823               	movf	?___flmul+3,w
  4930  050A  00C1               	movwf	___flge@ff2+3
  4931  050B  0822               	movf	?___flmul+2,w
  4932  050C  00C0               	movwf	___flge@ff2+2
  4933  050D  0821               	movf	?___flmul+1,w
  4934  050E  00BF               	movwf	___flge@ff2+1
  4935  050F  0820               	movf	?___flmul,w
  4936  0510  00BE               	movwf	___flge@ff2
  4937  0511  3193  236C  3180   	fcall	___flge
  4938  0514  1C03               	btfss	3,0
  4939  0515  2D17               	goto	u4781
  4940  0516  2D18               	goto	u4780
  4941  0517                     u4781:
  4942  0517  2D53               	goto	l804
  4943  0518                     u4780:
  4944  0518                     l3409:
  4945                           
  4946                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  4947  0518  3001               	movlw	1
  4948  0519  0021               	movlb	1	; select bank1
  4949  051A  07CB               	addwf	efgtoa@e^(0+128),f
  4950  051B  3000               	movlw	0
  4951  051C  3DCC               	addwfc	(efgtoa@e+1)^(0+128),f
  4952  051D                     l3411:
  4953                           
  4954                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4955  051D  3041               	movlw	65
  4956  051E  0020               	movlb	0	; select bank0
  4957  051F  00A3               	movwf	___flmul@b+3
  4958  0520  3020               	movlw	32
  4959  0521  00A2               	movwf	___flmul@b+2
  4960  0522  3000               	movlw	0
  4961  0523  00A1               	movwf	___flmul@b+1
  4962  0524  3000               	movlw	0
  4963  0525  00A0               	movwf	___flmul@b
  4964  0526  0021               	movlb	1	; select bank1
  4965  0527  0831               	movf	(efgtoa@ou+3)^(0+128),w
  4966  0528  0020               	movlb	0	; select bank0
  4967  0529  00A7               	movwf	___flmul@a+3
  4968  052A  0021               	movlb	1	; select bank1
  4969  052B  0830               	movf	(efgtoa@ou+2)^(0+128),w
  4970  052C  0020               	movlb	0	; select bank0
  4971  052D  00A6               	movwf	___flmul@a+2
  4972  052E  0021               	movlb	1	; select bank1
  4973  052F  082F               	movf	(efgtoa@ou+1)^(0+128),w
  4974  0530  0020               	movlb	0	; select bank0
  4975  0531  00A5               	movwf	___flmul@a+1
  4976  0532  0021               	movlb	1	; select bank1
  4977  0533  082E               	movf	efgtoa@ou^(0+128),w
  4978  0534  0020               	movlb	0	; select bank0
  4979  0535  00A4               	movwf	___flmul@a
  4980  0536  318B  2303  3180   	fcall	___flmul
  4981  0539  0020               	movlb	0	; select bank0
  4982  053A  0823               	movf	?___flmul+3,w
  4983  053B  0021               	movlb	1	; select bank1
  4984  053C  00B1               	movwf	(efgtoa@ou+3)^(0+128)
  4985  053D  0020               	movlb	0	; select bank0
  4986  053E  0822               	movf	?___flmul+2,w
  4987  053F  0021               	movlb	1	; select bank1
  4988  0540  00B0               	movwf	(efgtoa@ou+2)^(0+128)
  4989  0541  0020               	movlb	0	; select bank0
  4990  0542  0821               	movf	?___flmul+1,w
  4991  0543  0021               	movlb	1	; select bank1
  4992  0544  00AF               	movwf	(efgtoa@ou+1)^(0+128)
  4993  0545  0020               	movlb	0	; select bank0
  4994  0546  0820               	movf	?___flmul,w
  4995  0547  0021               	movlb	1	; select bank1
  4996  0548  00AE               	movwf	efgtoa@ou^(0+128)
  4997  0549                     l3413:
  4998                           
  4999                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5000  0549  3066               	movlw	102
  5001  054A  063B               	xorwf	efgtoa@nmode^(0+128),w
  5002  054B  1D03               	btfss	3,2
  5003  054C  2D4E               	goto	u4791
  5004  054D  2D4F               	goto	u4790
  5005  054E                     u4791:
  5006  054E  2D53               	goto	l804
  5007  054F                     u4790:
  5008  054F                     l3415:
  5009                           
  5010                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  5011  054F  3001               	movlw	1
  5012  0550  07AC               	addwf	efgtoa@m^(0+128),f
  5013  0551  3000               	movlw	0
  5014  0552  3DAD               	addwfc	(efgtoa@m+1)^(0+128),f
  5015  0553                     l804:	
  5016                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 460:  }
  5017                           
  5018                           
  5019                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5020  0553  0021               	movlb	1	; select bank1
  5021  0554  0831               	movf	(efgtoa@ou+3)^(0+128),w
  5022  0555  00D2               	movwf	(efgtoa@u+3)^(0+128)
  5023  0556  0830               	movf	(efgtoa@ou+2)^(0+128),w
  5024  0557  00D1               	movwf	(efgtoa@u+2)^(0+128)
  5025  0558  082F               	movf	(efgtoa@ou+1)^(0+128),w
  5026  0559  00D0               	movwf	(efgtoa@u+1)^(0+128)
  5027  055A  082E               	movf	efgtoa@ou^(0+128),w
  5028  055B  00CF               	movwf	efgtoa@u^(0+128)
  5029  055C                     l3417:
  5030                           
  5031                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5032  055C  3065               	movlw	101
  5033  055D  063B               	xorwf	efgtoa@nmode^(0+128),w
  5034  055E  1903               	btfsc	3,2
  5035  055F  2D61               	goto	u4801
  5036  0560  2D62               	goto	u4800
  5037  0561                     u4801:
  5038  0561  2D67               	goto	l3421
  5039  0562                     u4800:
  5040  0562                     l3419:
  5041  0562  084C               	movf	(efgtoa@e+1)^(0+128),w
  5042  0563  00AB               	movwf	(efgtoa@ne+1)^(0+128)
  5043  0564  084B               	movf	efgtoa@e^(0+128),w
  5044  0565  00AA               	movwf	efgtoa@ne^(0+128)
  5045  0566  2D69               	goto	l809
  5046  0567                     l3421:
  5047  0567  01AA               	clrf	efgtoa@ne^(0+128)
  5048  0568  01AB               	clrf	(efgtoa@ne+1)^(0+128)
  5049  0569                     l809:
  5050                           
  5051                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5052  0569  01A8               	clrf	efgtoa@pp^(0+128)
  5053  056A  01A9               	clrf	(efgtoa@pp+1)^(0+128)
  5054                           
  5055                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5056  056B  01A6               	clrf	efgtoa@t^(0+128)
  5057  056C  01A7               	clrf	(efgtoa@t+1)^(0+128)
  5058                           
  5059                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5060  056D  01C5               	clrf	efgtoa@i^(0+128)
  5061  056E  01C6               	clrf	(efgtoa@i+1)^(0+128)
  5062                           
  5063                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5064  056F  2EB3               	goto	l3471
  5065  0570                     l3423:
  5066                           
  5067                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5068  0570  0021               	movlb	1	; select bank1
  5069  0571  0852               	movf	(efgtoa@u+3)^(0+128),w
  5070  0572  0020               	movlb	0	; select bank0
  5071  0573  00BD               	movwf	___fldiv@a+3
  5072  0574  0021               	movlb	1	; select bank1
  5073  0575  0851               	movf	(efgtoa@u+2)^(0+128),w
  5074  0576  0020               	movlb	0	; select bank0
  5075  0577  00BC               	movwf	___fldiv@a+2
  5076  0578  0021               	movlb	1	; select bank1
  5077  0579  0850               	movf	(efgtoa@u+1)^(0+128),w
  5078  057A  0020               	movlb	0	; select bank0
  5079  057B  00BB               	movwf	___fldiv@a+1
  5080  057C  0021               	movlb	1	; select bank1
  5081  057D  084F               	movf	efgtoa@u^(0+128),w
  5082  057E  0020               	movlb	0	; select bank0
  5083  057F  00BA               	movwf	___fldiv@a
  5084  0580  0021               	movlb	1	; select bank1
  5085  0581  0840               	movf	(efgtoa@h+3)^(0+128),w
  5086  0582  0020               	movlb	0	; select bank0
  5087  0583  00C1               	movwf	___fldiv@b+3
  5088  0584  0021               	movlb	1	; select bank1
  5089  0585  083F               	movf	(efgtoa@h+2)^(0+128),w
  5090  0586  0020               	movlb	0	; select bank0
  5091  0587  00C0               	movwf	___fldiv@b+2
  5092  0588  0021               	movlb	1	; select bank1
  5093  0589  083E               	movf	(efgtoa@h+1)^(0+128),w
  5094  058A  0020               	movlb	0	; select bank0
  5095  058B  00BF               	movwf	___fldiv@b+1
  5096  058C  0021               	movlb	1	; select bank1
  5097  058D  083D               	movf	efgtoa@h^(0+128),w
  5098  058E  0020               	movlb	0	; select bank0
  5099  058F  00BE               	movwf	___fldiv@b
  5100  0590  3196  264C  3180   	fcall	___fldiv
  5101  0593  0020               	movlb	0	; select bank0
  5102  0594  083D               	movf	?___fldiv+3,w
  5103  0595  00D7               	movwf	floorf@x+3
  5104  0596  083C               	movf	?___fldiv+2,w
  5105  0597  00D6               	movwf	floorf@x+2
  5106  0598  083B               	movf	?___fldiv+1,w
  5107  0599  00D5               	movwf	floorf@x+1
  5108  059A  083A               	movf	?___fldiv,w
  5109  059B  00D4               	movwf	floorf@x
  5110  059C  3195  2561  3180   	fcall	_floorf
  5111  059F  0020               	movlb	0	; select bank0
  5112  05A0  0857               	movf	?_floorf+3,w
  5113  05A1  0021               	movlb	1	; select bank1
  5114  05A2  00C4               	movwf	(efgtoa@l+3)^(0+128)
  5115  05A3  0020               	movlb	0	; select bank0
  5116  05A4  0856               	movf	?_floorf+2,w
  5117  05A5  0021               	movlb	1	; select bank1
  5118  05A6  00C3               	movwf	(efgtoa@l+2)^(0+128)
  5119  05A7  0020               	movlb	0	; select bank0
  5120  05A8  0855               	movf	?_floorf+1,w
  5121  05A9  0021               	movlb	1	; select bank1
  5122  05AA  00C2               	movwf	(efgtoa@l+1)^(0+128)
  5123  05AB  0020               	movlb	0	; select bank0
  5124  05AC  0854               	movf	?_floorf,w
  5125  05AD  0021               	movlb	1	; select bank1
  5126  05AE  00C1               	movwf	efgtoa@l^(0+128)
  5127                           
  5128                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5129  05AF  0844               	movf	(efgtoa@l+3)^(0+128),w
  5130  05B0  00F3               	movwf	___fltol@f1+3
  5131  05B1  0843               	movf	(efgtoa@l+2)^(0+128),w
  5132  05B2  00F2               	movwf	___fltol@f1+2
  5133  05B3  0842               	movf	(efgtoa@l+1)^(0+128),w
  5134  05B4  00F1               	movwf	___fltol@f1+1
  5135  05B5  0841               	movf	efgtoa@l^(0+128),w
  5136  05B6  00F0               	movwf	___fltol@f1
  5137  05B7  3180  200D  3180   	fcall	___fltol
  5138  05BA  0871               	movf	?___fltol+1,w
  5139  05BB  0021               	movlb	1	; select bank1
  5140  05BC  00B3               	movwf	(efgtoa@d+1)^(0+128)
  5141  05BD  0870               	movf	?___fltol,w
  5142  05BE  00B2               	movwf	efgtoa@d^(0+128)
  5143  05BF                     l3425:
  5144                           
  5145                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5146  05BF  1A6D               	btfsc	_flags^(0+128),4
  5147  05C0  2DC2               	goto	u4811
  5148  05C1  2DC3               	goto	u4810
  5149  05C2                     u4811:
  5150  05C2  2DD8               	goto	l3435
  5151  05C3                     u4810:
  5152  05C3                     l3427:
  5153  05C3  0832               	movf	efgtoa@d^(0+128),w
  5154  05C4  0433               	iorwf	(efgtoa@d+1)^(0+128),w
  5155  05C5  1D03               	btfss	3,2
  5156  05C6  2DC8               	goto	u4821
  5157  05C7  2DC9               	goto	u4820
  5158  05C8                     u4821:
  5159  05C8  2DD8               	goto	l3435
  5160  05C9                     u4820:
  5161  05C9                     l3429:
  5162  05C9  3067               	movlw	103
  5163  05CA  063C               	xorwf	efgtoa@mode^(0+128),w
  5164  05CB  1D03               	btfss	3,2
  5165  05CC  2DCE               	goto	u4831
  5166  05CD  2DCF               	goto	u4830
  5167  05CE                     u4831:
  5168  05CE  2DD8               	goto	l3435
  5169  05CF                     u4830:
  5170  05CF                     l3431:
  5171  05CF  1FAB               	btfss	(efgtoa@ne+1)^(0+128),7
  5172  05D0  2DD2               	goto	u4841
  5173  05D1  2DD3               	goto	u4840
  5174  05D2                     u4841:
  5175  05D2  2DD8               	goto	l3435
  5176  05D3                     u4840:
  5177  05D3                     l3433:
  5178                           
  5179                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5180  05D3  3001               	movlw	1
  5181  05D4  07A6               	addwf	efgtoa@t^(0+128),f
  5182  05D5  3000               	movlw	0
  5183  05D6  3DA7               	addwfc	(efgtoa@t+1)^(0+128),f
  5184                           
  5185                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5186  05D7  2E31               	goto	l3463
  5187  05D8                     l3435:
  5188                           
  5189                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5190  05D8  0828               	movf	efgtoa@pp^(0+128),w
  5191  05D9  0429               	iorwf	(efgtoa@pp+1)^(0+128),w
  5192  05DA  1D03               	btfss	3,2
  5193  05DB  2DDD               	goto	u4851
  5194  05DC  2DDE               	goto	u4850
  5195  05DD                     u4851:
  5196  05DD  2E15               	goto	l3455
  5197  05DE                     u4850:
  5198  05DE                     l3437:
  5199  05DE  1FAB               	btfss	(efgtoa@ne+1)^(0+128),7
  5200  05DF  2DE1               	goto	u4861
  5201  05E0  2DE2               	goto	u4860
  5202  05E1                     u4861:
  5203  05E1  2E15               	goto	l3455
  5204  05E2                     u4860:
  5205  05E2                     l3439:
  5206                           
  5207                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5208  05E2  302E               	movlw	46
  5209  05E3  0020               	movlb	0	; select bank0
  5210  05E4  00ED               	movwf	??_efgtoa
  5211  05E5  0021               	movlb	1	; select bank1
  5212  05E6  084D               	movf	efgtoa@n^(0+128),w
  5213  05E7  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5214  05E8  0086               	movwf	6
  5215  05E9  3001               	movlw	1	; select bank3/4
  5216  05EA  0087               	movwf	7
  5217  05EB  0020               	movlb	0	; select bank0
  5218  05EC  086D               	movf	??_efgtoa,w
  5219  05ED  0081               	movwf	1
  5220  05EE                     l3441:
  5221  05EE  3001               	movlw	1
  5222  05EF  0021               	movlb	1	; select bank1
  5223  05F0  07CD               	addwf	efgtoa@n^(0+128),f
  5224  05F1  3000               	movlw	0
  5225  05F2  3DCE               	addwfc	(efgtoa@n+1)^(0+128),f
  5226  05F3                     l3443:
  5227                           
  5228                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5229  05F3  30FF               	movlw	255
  5230  05F4  07B9               	addwf	efgtoa@w^(0+128),f
  5231  05F5  30FF               	movlw	255
  5232  05F6  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5233  05F7                     l3445:
  5234                           
  5235                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5236  05F7  3001               	movlw	1
  5237  05F8  00A8               	movwf	efgtoa@pp^(0+128)
  5238  05F9  3000               	movlw	0
  5239  05FA  00A9               	movwf	(efgtoa@pp^(0+128)+1)
  5240  05FB  2E15               	goto	l3455
  5241  05FC                     l3447:
  5242                           
  5243                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5244  05FC  3030               	movlw	48
  5245  05FD  0020               	movlb	0	; select bank0
  5246  05FE  00ED               	movwf	??_efgtoa
  5247  05FF  0021               	movlb	1	; select bank1
  5248  0600  084D               	movf	efgtoa@n^(0+128),w
  5249  0601  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5250  0602  0086               	movwf	6
  5251  0603  3001               	movlw	1	; select bank3/4
  5252  0604  0087               	movwf	7
  5253  0605  0020               	movlb	0	; select bank0
  5254  0606  086D               	movf	??_efgtoa,w
  5255  0607  0081               	movwf	1
  5256  0608                     l3449:
  5257  0608  3001               	movlw	1
  5258  0609  0021               	movlb	1	; select bank1
  5259  060A  07CD               	addwf	efgtoa@n^(0+128),f
  5260  060B  3000               	movlw	0
  5261  060C  3DCE               	addwfc	(efgtoa@n+1)^(0+128),f
  5262  060D                     l3451:
  5263                           
  5264                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5265  060D  30FF               	movlw	255
  5266  060E  07B9               	addwf	efgtoa@w^(0+128),f
  5267  060F  30FF               	movlw	255
  5268  0610  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5269  0611                     l3453:
  5270                           
  5271                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5272  0611  30FF               	movlw	255
  5273  0612  07A6               	addwf	efgtoa@t^(0+128),f
  5274  0613  30FF               	movlw	255
  5275  0614  3DA7               	addwfc	(efgtoa@t+1)^(0+128),f
  5276  0615                     l3455:
  5277                           
  5278                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5279  0615  0826               	movf	efgtoa@t^(0+128),w
  5280  0616  0427               	iorwf	(efgtoa@t+1)^(0+128),w
  5281  0617  1D03               	btfss	3,2
  5282  0618  2E1A               	goto	u4871
  5283  0619  2E1B               	goto	u4870
  5284  061A                     u4871:
  5285  061A  2DFC               	goto	l3447
  5286  061B                     u4870:
  5287  061B                     l3457:
  5288                           
  5289                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5290  061B  0832               	movf	efgtoa@d^(0+128),w
  5291  061C  3E30               	addlw	48
  5292  061D  0020               	movlb	0	; select bank0
  5293  061E  00ED               	movwf	??_efgtoa
  5294  061F  0021               	movlb	1	; select bank1
  5295  0620  084D               	movf	efgtoa@n^(0+128),w
  5296  0621  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5297  0622  0086               	movwf	6
  5298  0623  3001               	movlw	1	; select bank3/4
  5299  0624  0087               	movwf	7
  5300  0625  0020               	movlb	0	; select bank0
  5301  0626  086D               	movf	??_efgtoa,w
  5302  0627  0081               	movwf	1
  5303  0628                     l3459:
  5304  0628  3001               	movlw	1
  5305  0629  0021               	movlb	1	; select bank1
  5306  062A  07CD               	addwf	efgtoa@n^(0+128),f
  5307  062B  3000               	movlw	0
  5308  062C  3DCE               	addwfc	(efgtoa@n+1)^(0+128),f
  5309  062D                     l3461:
  5310                           
  5311                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5312  062D  30FF               	movlw	255
  5313  062E  07B9               	addwf	efgtoa@w^(0+128),f
  5314  062F  30FF               	movlw	255
  5315  0630  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5316  0631                     l3463:
  5317                           
  5318                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5319  0631  0844               	movf	(efgtoa@l+3)^(0+128),w
  5320  0632  0020               	movlb	0	; select bank0
  5321  0633  00A7               	movwf	___flmul@a+3
  5322  0634  0021               	movlb	1	; select bank1
  5323  0635  0843               	movf	(efgtoa@l+2)^(0+128),w
  5324  0636  0020               	movlb	0	; select bank0
  5325  0637  00A6               	movwf	___flmul@a+2
  5326  0638  0021               	movlb	1	; select bank1
  5327  0639  0842               	movf	(efgtoa@l+1)^(0+128),w
  5328  063A  0020               	movlb	0	; select bank0
  5329  063B  00A5               	movwf	___flmul@a+1
  5330  063C  0021               	movlb	1	; select bank1
  5331  063D  0841               	movf	efgtoa@l^(0+128),w
  5332  063E  0020               	movlb	0	; select bank0
  5333  063F  00A4               	movwf	___flmul@a
  5334  0640  0021               	movlb	1	; select bank1
  5335  0641  0852               	movf	(efgtoa@u+3)^(0+128),w
  5336  0642  0020               	movlb	0	; select bank0
  5337  0643  00A3               	movwf	___flmul@b+3
  5338  0644  0021               	movlb	1	; select bank1
  5339  0645  0851               	movf	(efgtoa@u+2)^(0+128),w
  5340  0646  0020               	movlb	0	; select bank0
  5341  0647  00A2               	movwf	___flmul@b+2
  5342  0648  0021               	movlb	1	; select bank1
  5343  0649  0850               	movf	(efgtoa@u+1)^(0+128),w
  5344  064A  0020               	movlb	0	; select bank0
  5345  064B  00A1               	movwf	___flmul@b+1
  5346  064C  0021               	movlb	1	; select bank1
  5347  064D  084F               	movf	efgtoa@u^(0+128),w
  5348  064E  0020               	movlb	0	; select bank0
  5349  064F  00A0               	movwf	___flmul@b
  5350  0650  318B  2303  3180   	fcall	___flmul
  5351  0653  0020               	movlb	0	; select bank0
  5352  0654  0823               	movf	?___flmul+3,w
  5353  0655  00BD               	movwf	___flsub@a+3
  5354  0656  0822               	movf	?___flmul+2,w
  5355  0657  00BC               	movwf	___flsub@a+2
  5356  0658  0821               	movf	?___flmul+1,w
  5357  0659  00BB               	movwf	___flsub@a+1
  5358  065A  0820               	movf	?___flmul,w
  5359  065B  00BA               	movwf	___flsub@a
  5360  065C  0021               	movlb	1	; select bank1
  5361  065D  0840               	movf	(efgtoa@h+3)^(0+128),w
  5362  065E  0020               	movlb	0	; select bank0
  5363  065F  00C1               	movwf	___flsub@b+3
  5364  0660  0021               	movlb	1	; select bank1
  5365  0661  083F               	movf	(efgtoa@h+2)^(0+128),w
  5366  0662  0020               	movlb	0	; select bank0
  5367  0663  00C0               	movwf	___flsub@b+2
  5368  0664  0021               	movlb	1	; select bank1
  5369  0665  083E               	movf	(efgtoa@h+1)^(0+128),w
  5370  0666  0020               	movlb	0	; select bank0
  5371  0667  00BF               	movwf	___flsub@b+1
  5372  0668  0021               	movlb	1	; select bank1
  5373  0669  083D               	movf	efgtoa@h^(0+128),w
  5374  066A  0020               	movlb	0	; select bank0
  5375  066B  00BE               	movwf	___flsub@b
  5376  066C  319F  279E  3180   	fcall	___flsub
  5377  066F  0020               	movlb	0	; select bank0
  5378  0670  083D               	movf	?___flsub+3,w
  5379  0671  0021               	movlb	1	; select bank1
  5380  0672  00C0               	movwf	(efgtoa@h+3)^(0+128)
  5381  0673  0020               	movlb	0	; select bank0
  5382  0674  083C               	movf	?___flsub+2,w
  5383  0675  0021               	movlb	1	; select bank1
  5384  0676  00BF               	movwf	(efgtoa@h+2)^(0+128)
  5385  0677  0020               	movlb	0	; select bank0
  5386  0678  083B               	movf	?___flsub+1,w
  5387  0679  0021               	movlb	1	; select bank1
  5388  067A  00BE               	movwf	(efgtoa@h+1)^(0+128)
  5389  067B  0020               	movlb	0	; select bank0
  5390  067C  083A               	movf	?___flsub,w
  5391  067D  0021               	movlb	1	; select bank1
  5392  067E  00BD               	movwf	efgtoa@h^(0+128)
  5393  067F                     l3465:
  5394                           
  5395                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5396  067F  3041               	movlw	65
  5397  0680  0020               	movlb	0	; select bank0
  5398  0681  00BD               	movwf	___fldiv@a+3
  5399  0682  3020               	movlw	32
  5400  0683  00BC               	movwf	___fldiv@a+2
  5401  0684  3000               	movlw	0
  5402  0685  00BB               	movwf	___fldiv@a+1
  5403  0686  3000               	movlw	0
  5404  0687  00BA               	movwf	___fldiv@a
  5405  0688  0021               	movlb	1	; select bank1
  5406  0689  0852               	movf	(efgtoa@u+3)^(0+128),w
  5407  068A  0020               	movlb	0	; select bank0
  5408  068B  00C1               	movwf	___fldiv@b+3
  5409  068C  0021               	movlb	1	; select bank1
  5410  068D  0851               	movf	(efgtoa@u+2)^(0+128),w
  5411  068E  0020               	movlb	0	; select bank0
  5412  068F  00C0               	movwf	___fldiv@b+2
  5413  0690  0021               	movlb	1	; select bank1
  5414  0691  0850               	movf	(efgtoa@u+1)^(0+128),w
  5415  0692  0020               	movlb	0	; select bank0
  5416  0693  00BF               	movwf	___fldiv@b+1
  5417  0694  0021               	movlb	1	; select bank1
  5418  0695  084F               	movf	efgtoa@u^(0+128),w
  5419  0696  0020               	movlb	0	; select bank0
  5420  0697  00BE               	movwf	___fldiv@b
  5421  0698  3196  264C  3180   	fcall	___fldiv
  5422  069B  0020               	movlb	0	; select bank0
  5423  069C  083D               	movf	?___fldiv+3,w
  5424  069D  0021               	movlb	1	; select bank1
  5425  069E  00D2               	movwf	(efgtoa@u+3)^(0+128)
  5426  069F  0020               	movlb	0	; select bank0
  5427  06A0  083C               	movf	?___fldiv+2,w
  5428  06A1  0021               	movlb	1	; select bank1
  5429  06A2  00D1               	movwf	(efgtoa@u+2)^(0+128)
  5430  06A3  0020               	movlb	0	; select bank0
  5431  06A4  083B               	movf	?___fldiv+1,w
  5432  06A5  0021               	movlb	1	; select bank1
  5433  06A6  00D0               	movwf	(efgtoa@u+1)^(0+128)
  5434  06A7  0020               	movlb	0	; select bank0
  5435  06A8  083A               	movf	?___fldiv,w
  5436  06A9  0021               	movlb	1	; select bank1
  5437  06AA  00CF               	movwf	efgtoa@u^(0+128)
  5438  06AB                     l3467:
  5439                           
  5440                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5441  06AB  30FF               	movlw	255
  5442  06AC  07AA               	addwf	efgtoa@ne^(0+128),f
  5443  06AD  30FF               	movlw	255
  5444  06AE  3DAB               	addwfc	(efgtoa@ne+1)^(0+128),f
  5445  06AF                     l3469:
  5446                           
  5447                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5448  06AF  3001               	movlw	1
  5449  06B0  07C5               	addwf	efgtoa@i^(0+128),f
  5450  06B1  3000               	movlw	0
  5451  06B2  3DC6               	addwfc	(efgtoa@i+1)^(0+128),f
  5452  06B3                     l3471:
  5453                           
  5454                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5455  06B3  0846               	movf	(efgtoa@i+1)^(0+128),w
  5456  06B4  3A80               	xorlw	128
  5457  06B5  0020               	movlb	0	; select bank0
  5458  06B6  00ED               	movwf	??_efgtoa
  5459  06B7  0021               	movlb	1	; select bank1
  5460  06B8  082D               	movf	(efgtoa@m+1)^(0+128),w
  5461  06B9  3A80               	xorlw	128
  5462  06BA  0020               	movlb	0	; select bank0
  5463  06BB  026D               	subwf	??_efgtoa,w
  5464  06BC  1D03               	skipz
  5465  06BD  2EC1               	goto	u4885
  5466  06BE  0021               	movlb	1	; select bank1
  5467  06BF  082C               	movf	efgtoa@m^(0+128),w
  5468  06C0  0245               	subwf	efgtoa@i^(0+128),w
  5469  06C1                     u4885:
  5470  06C1  1803               	skipnc
  5471  06C2  2EC4               	goto	u4881
  5472  06C3  2EC5               	goto	u4880
  5473  06C4                     u4881:
  5474  06C4  2ED5               	goto	l3475
  5475  06C5                     u4880:
  5476  06C5                     l3473:
  5477  06C5  0021               	movlb	1	; select bank1
  5478  06C6  084E               	movf	(efgtoa@n+1)^(0+128),w
  5479  06C7  3A80               	xorlw	128
  5480  06C8  0020               	movlb	0	; select bank0
  5481  06C9  00ED               	movwf	??_efgtoa
  5482  06CA  3080               	movlw	128
  5483  06CB  026D               	subwf	??_efgtoa,w
  5484  06CC  1D03               	skipz
  5485  06CD  2ED1               	goto	u4895
  5486  06CE  304B               	movlw	75
  5487  06CF  0021               	movlb	1	; select bank1
  5488  06D0  024D               	subwf	efgtoa@n^(0+128),w
  5489  06D1                     u4895:
  5490  06D1  1C03               	skipc
  5491  06D2  2ED4               	goto	u4891
  5492  06D3  2ED5               	goto	u4890
  5493  06D4                     u4891:
  5494  06D4  2D70               	goto	l3423
  5495  06D5                     u4890:
  5496  06D5                     l3475:
  5497                           
  5498                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5499  06D5  0021               	movlb	1	; select bank1
  5500  06D6  0828               	movf	efgtoa@pp^(0+128),w
  5501  06D7  0429               	iorwf	(efgtoa@pp+1)^(0+128),w
  5502  06D8  1D03               	btfss	3,2
  5503  06D9  2EDB               	goto	u4901
  5504  06DA  2EDC               	goto	u4900
  5505  06DB                     u4901:
  5506  06DB  2EF1               	goto	l3483
  5507  06DC                     u4900:
  5508  06DC                     l3477:
  5509  06DC  1E6D               	btfss	_flags^(0+128),4
  5510  06DD  2EDF               	goto	u4911
  5511  06DE  2EE0               	goto	u4910
  5512  06DF                     u4911:
  5513  06DF  2EF1               	goto	l3483
  5514  06E0                     u4910:
  5515  06E0                     l3479:
  5516                           
  5517                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5518  06E0  302E               	movlw	46
  5519  06E1  0020               	movlb	0	; select bank0
  5520  06E2  00ED               	movwf	??_efgtoa
  5521  06E3  0021               	movlb	1	; select bank1
  5522  06E4  084D               	movf	efgtoa@n^(0+128),w
  5523  06E5  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5524  06E6  0086               	movwf	6
  5525  06E7  3001               	movlw	1	; select bank3/4
  5526  06E8  0087               	movwf	7
  5527  06E9  0020               	movlb	0	; select bank0
  5528  06EA  086D               	movf	??_efgtoa,w
  5529  06EB  0081               	movwf	1
  5530  06EC                     l3481:
  5531  06EC  3001               	movlw	1
  5532  06ED  0021               	movlb	1	; select bank1
  5533  06EE  07CD               	addwf	efgtoa@n^(0+128),f
  5534  06EF  3000               	movlw	0
  5535  06F0  3DCE               	addwfc	(efgtoa@n+1)^(0+128),f
  5536  06F1                     l3483:
  5537                           
  5538                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5539  06F1  084D               	movf	efgtoa@n^(0+128),w
  5540  06F2  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5541  06F3  0086               	movwf	6
  5542  06F4  3001               	movlw	1	; select bank3/4
  5543  06F5  0087               	movwf	7
  5544  06F6  0181               	clrf	1
  5545  06F7                     l3485:
  5546                           
  5547                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5548  06F7  3065               	movlw	101
  5549  06F8  063B               	xorwf	efgtoa@nmode^(0+128),w
  5550  06F9  1D03               	btfss	3,2
  5551  06FA  2EFC               	goto	u4921
  5552  06FB  2EFD               	goto	u4920
  5553  06FC                     u4921:
  5554  06FC  2FC6               	goto	l3543
  5555  06FD                     u4920:
  5556  06FD                     l3487:
  5557                           
  5558                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5559  06FD  304F               	movlw	79
  5560  06FE  00C5               	movwf	efgtoa@i^(0+128)
  5561  06FF  3000               	movlw	0
  5562  0700  00C6               	movwf	(efgtoa@i^(0+128)+1)
  5563  0701                     l3489:
  5564                           
  5565                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5566  0701  0845               	movf	efgtoa@i^(0+128),w
  5567  0702  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5568  0703  0086               	movwf	6
  5569  0704  3001               	movlw	1	; select bank3/4
  5570  0705  0087               	movwf	7
  5571  0706  0181               	clrf	1
  5572  0707                     l3491:
  5573                           
  5574                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5575  0707  01B4               	clrf	efgtoa@sign^(0+128)
  5576  0708  01B5               	clrf	(efgtoa@sign+1)^(0+128)
  5577  0709                     l3493:
  5578                           
  5579                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5580  0709  1FCC               	btfss	(efgtoa@e+1)^(0+128),7
  5581  070A  2F0C               	goto	u4931
  5582  070B  2F0D               	goto	u4930
  5583  070C                     u4931:
  5584  070C  2F16               	goto	l3499
  5585  070D                     u4930:
  5586  070D                     l3495:
  5587                           
  5588                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5589  070D  3001               	movlw	1
  5590  070E  00B4               	movwf	efgtoa@sign^(0+128)
  5591  070F  3000               	movlw	0
  5592  0710  00B5               	movwf	(efgtoa@sign^(0+128)+1)
  5593  0711                     l3497:
  5594                           
  5595                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5596  0711  09CB               	comf	efgtoa@e^(0+128),f
  5597  0712  09CC               	comf	(efgtoa@e+1)^(0+128),f
  5598  0713  0ACB               	incf	efgtoa@e^(0+128),f
  5599  0714  1903               	skipnz
  5600  0715  0ACC               	incf	(efgtoa@e+1)^(0+128),f
  5601  0716                     l3499:
  5602                           
  5603                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5604  0716  3002               	movlw	2
  5605  0717  00B7               	movwf	efgtoa@p^(0+128)
  5606  0718  3000               	movlw	0
  5607  0719  00B8               	movwf	(efgtoa@p^(0+128)+1)
  5608                           
  5609                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5610  071A  2F51               	goto	l3511
  5611  071B                     l3501:
  5612                           
  5613                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5614  071B  30FF               	movlw	255
  5615  071C  0021               	movlb	1	; select bank1
  5616  071D  07C5               	addwf	efgtoa@i^(0+128),f
  5617  071E  30FF               	movlw	255
  5618  071F  3DC6               	addwfc	(efgtoa@i+1)^(0+128),f
  5619  0720                     l3503:
  5620                           
  5621                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5622  0720  300A               	movlw	10
  5623  0721  00F0               	movwf	___awmod@divisor
  5624  0722  3000               	movlw	0
  5625  0723  00F1               	movwf	___awmod@divisor+1
  5626  0724  084C               	movf	(efgtoa@e+1)^(0+128),w
  5627  0725  00F3               	movwf	___awmod@dividend+1
  5628  0726  084B               	movf	efgtoa@e^(0+128),w
  5629  0727  00F2               	movwf	___awmod@dividend
  5630  0728  3191  2131  3180   	fcall	___awmod
  5631  072B  0870               	movf	?___awmod,w
  5632  072C  3E30               	addlw	48
  5633  072D  0020               	movlb	0	; select bank0
  5634  072E  00ED               	movwf	??_efgtoa
  5635  072F  0021               	movlb	1	; select bank1
  5636  0730  0845               	movf	efgtoa@i^(0+128),w
  5637  0731  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5638  0732  0086               	movwf	6
  5639  0733  3001               	movlw	1	; select bank3/4
  5640  0734  0087               	movwf	7
  5641  0735  0020               	movlb	0	; select bank0
  5642  0736  086D               	movf	??_efgtoa,w
  5643  0737  0081               	movwf	1
  5644  0738                     l3505:
  5645                           
  5646                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5647  0738  300A               	movlw	10
  5648  0739  00F0               	movwf	___awdiv@divisor
  5649  073A  3000               	movlw	0
  5650  073B  00F1               	movwf	___awdiv@divisor+1
  5651  073C  0021               	movlb	1	; select bank1
  5652  073D  084C               	movf	(efgtoa@e+1)^(0+128),w
  5653  073E  00F3               	movwf	___awdiv@dividend+1
  5654  073F  084B               	movf	efgtoa@e^(0+128),w
  5655  0740  00F2               	movwf	___awdiv@dividend
  5656  0741  3192  228E  3180   	fcall	___awdiv
  5657  0744  0871               	movf	?___awdiv+1,w
  5658  0745  0021               	movlb	1	; select bank1
  5659  0746  00CC               	movwf	(efgtoa@e+1)^(0+128)
  5660  0747  0870               	movf	?___awdiv,w
  5661  0748  00CB               	movwf	efgtoa@e^(0+128)
  5662  0749                     l3507:
  5663                           
  5664                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5665  0749  30FF               	movlw	255
  5666  074A  07B7               	addwf	efgtoa@p^(0+128),f
  5667  074B  30FF               	movlw	255
  5668  074C  3DB8               	addwfc	(efgtoa@p+1)^(0+128),f
  5669  074D                     l3509:
  5670                           
  5671                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5672  074D  30FF               	movlw	255
  5673  074E  07B9               	addwf	efgtoa@w^(0+128),f
  5674  074F  30FF               	movlw	255
  5675  0750  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5676  0751                     l3511:
  5677                           
  5678                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5679  0751  084B               	movf	efgtoa@e^(0+128),w
  5680  0752  044C               	iorwf	(efgtoa@e+1)^(0+128),w
  5681  0753  1D03               	btfss	3,2
  5682  0754  2F56               	goto	u4941
  5683  0755  2F57               	goto	u4940
  5684  0756                     u4941:
  5685  0756  2F1B               	goto	l3501
  5686  0757                     u4940:
  5687  0757                     l3513:
  5688  0757  0838               	movf	(efgtoa@p+1)^(0+128),w
  5689  0758  3A80               	xorlw	128
  5690  0759  0020               	movlb	0	; select bank0
  5691  075A  00ED               	movwf	??_efgtoa
  5692  075B  3080               	movlw	128
  5693  075C  026D               	subwf	??_efgtoa,w
  5694  075D  1D03               	skipz
  5695  075E  2F62               	goto	u4955
  5696  075F  3001               	movlw	1
  5697  0760  0021               	movlb	1	; select bank1
  5698  0761  0237               	subwf	efgtoa@p^(0+128),w
  5699  0762                     u4955:
  5700  0762  1803               	skipnc
  5701  0763  2F65               	goto	u4951
  5702  0764  2F66               	goto	u4950
  5703  0765                     u4951:
  5704  0765  2F1B               	goto	l3501
  5705  0766                     u4950:
  5706  0766                     l3515:
  5707                           
  5708                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  5709  0766  30FF               	movlw	255
  5710  0767  0021               	movlb	1	; select bank1
  5711  0768  07C5               	addwf	efgtoa@i^(0+128),f
  5712  0769  30FF               	movlw	255
  5713  076A  3DC6               	addwfc	(efgtoa@i+1)^(0+128),f
  5714  076B                     l3517:
  5715                           
  5716                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5717  076B  0834               	movf	efgtoa@sign^(0+128),w
  5718  076C  0435               	iorwf	(efgtoa@sign+1)^(0+128),w
  5719  076D  1D03               	btfss	3,2
  5720  076E  2F70               	goto	u4961
  5721  076F  2F71               	goto	u4960
  5722  0770                     u4961:
  5723  0770  2F76               	goto	l3521
  5724  0771                     u4960:
  5725  0771                     l3519:
  5726  0771  302B               	movlw	43
  5727  0772  00A2               	movwf	_efgtoa$898^(0+128)
  5728  0773  3000               	movlw	0
  5729  0774  00A3               	movwf	(_efgtoa$898^(0+128)+1)
  5730  0775  2F7A               	goto	l3523
  5731  0776                     l3521:
  5732  0776  302D               	movlw	45
  5733  0777  00A2               	movwf	_efgtoa$898^(0+128)
  5734  0778  3000               	movlw	0
  5735  0779  00A3               	movwf	(_efgtoa$898^(0+128)+1)
  5736  077A                     l3523:
  5737  077A  0822               	movf	_efgtoa$898^(0+128),w
  5738  077B  0020               	movlb	0	; select bank0
  5739  077C  00ED               	movwf	??_efgtoa
  5740  077D  0021               	movlb	1	; select bank1
  5741  077E  0845               	movf	efgtoa@i^(0+128),w
  5742  077F  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5743  0780  0086               	movwf	6
  5744  0781  3001               	movlw	1	; select bank3/4
  5745  0782  0087               	movwf	7
  5746  0783  0020               	movlb	0	; select bank0
  5747  0784  086D               	movf	??_efgtoa,w
  5748  0785  0081               	movwf	1
  5749  0786                     l3525:
  5750                           
  5751                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  5752  0786  30FF               	movlw	255
  5753  0787  0021               	movlb	1	; select bank1
  5754  0788  07B9               	addwf	efgtoa@w^(0+128),f
  5755  0789  30FF               	movlw	255
  5756  078A  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5757  078B                     l3527:
  5758                           
  5759                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  5760  078B  30FF               	movlw	255
  5761  078C  07C5               	addwf	efgtoa@i^(0+128),f
  5762  078D  30FF               	movlw	255
  5763  078E  3DC6               	addwfc	(efgtoa@i+1)^(0+128),f
  5764  078F                     l3531:	
  5765                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 && isupper((int)c), ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5766                           
  5767  078F  0020               	movlb	0	; select bank0
  5768  0790  086C               	movf	efgtoa@c,w
  5769  0791  3EBF               	addlw	191
  5770  0792  00ED               	movwf	??_efgtoa
  5771  0793  30FF               	movlw	255
  5772  0794  1803               	skipnc
  5773  0795  3000               	movlw	0
  5774  0796  00EE               	movwf	??_efgtoa+1
  5775  0797  3000               	movlw	0
  5776  0798  026E               	subwf	??_efgtoa+1,w
  5777  0799  301A               	movlw	26
  5778  079A  1903               	skipnz
  5779  079B  026D               	subwf	??_efgtoa,w
  5780  079C  1C03               	skipc
  5781  079D  2F9F               	goto	u4971
  5782  079E  2FA0               	goto	u4970
  5783  079F                     u4971:
  5784  079F  2FA6               	goto	l3535
  5785  07A0                     u4970:
  5786  07A0                     l3533:
  5787  07A0  3065               	movlw	101
  5788  07A1  0021               	movlb	1	; select bank1
  5789  07A2  00A4               	movwf	_efgtoa$899^(0+128)
  5790  07A3  3000               	movlw	0
  5791  07A4  00A5               	movwf	(_efgtoa$899^(0+128)+1)
  5792  07A5  2FAB               	goto	l3537
  5793  07A6                     l3535:
  5794  07A6  3045               	movlw	69
  5795  07A7  0021               	movlb	1	; select bank1
  5796  07A8  00A4               	movwf	_efgtoa$899^(0+128)
  5797  07A9  3000               	movlw	0
  5798  07AA  00A5               	movwf	(_efgtoa$899^(0+128)+1)
  5799  07AB                     l3537:
  5800  07AB  0824               	movf	_efgtoa$899^(0+128),w
  5801  07AC  0020               	movlb	0	; select bank0
  5802  07AD  00ED               	movwf	??_efgtoa
  5803  07AE  0021               	movlb	1	; select bank1
  5804  07AF  0845               	movf	efgtoa@i^(0+128),w
  5805  07B0  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5806  07B1  0086               	movwf	6
  5807  07B2  3001               	movlw	1	; select bank3/4
  5808  07B3  0087               	movwf	7
  5809  07B4  0020               	movlb	0	; select bank0
  5810  07B5  086D               	movf	??_efgtoa,w
  5811  07B6  0081               	movwf	1
  5812  07B7                     l3539:
  5813                           
  5814                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  5815  07B7  30FF               	movlw	255
  5816  07B8  0021               	movlb	1	; select bank1
  5817  07B9  07B9               	addwf	efgtoa@w^(0+128),f
  5818  07BA  30FF               	movlw	255
  5819  07BB  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5820  07BC                     l3541:
  5821                           
  5822                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5823  07BC  0845               	movf	efgtoa@i^(0+128),w
  5824  07BD  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5825  07BE  00F0               	movwf	strcpy@src
  5826  07BF  3001               	movlw	1
  5827  07C0  00F1               	movwf	strcpy@src+1
  5828  07C1  084D               	movf	efgtoa@n^(0+128),w
  5829  07C2  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5830  07C3  319F  27DF  3180   	fcall	_strcpy
  5831  07C6                     l3543:
  5832                           
  5833                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  5834  07C6  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  5835  07C7  0020               	movlb	0	; select bank0
  5836  07C8  00ED               	movwf	??_efgtoa
  5837  07C9  086D               	movf	??_efgtoa,w
  5838  07CA  00A4               	movwf	pad@buf
  5839  07CB  0021               	movlb	1	; select bank1
  5840  07CC  083A               	movf	(efgtoa@w+1)^(0+128),w
  5841  07CD  0020               	movlb	0	; select bank0
  5842  07CE  00A6               	movwf	pad@p+1
  5843  07CF  0021               	movlb	1	; select bank1
  5844  07D0  0839               	movf	efgtoa@w^(0+128),w
  5845  07D1  0020               	movlb	0	; select bank0
  5846  07D2  00A5               	movwf	pad@p
  5847  07D3  0021               	movlb	1	; select bank1
  5848  07D4  0836               	movf	efgtoa@fp^(0+128),w
  5849  07D5  3192  2235  3180   	fcall	_pad
  5850  07D8  0020               	movlb	0	; select bank0
  5851  07D9  0825               	movf	?_pad+1,w
  5852  07DA  00E9               	movwf	?_efgtoa+1
  5853  07DB  0824               	movf	?_pad,w
  5854  07DC  00E8               	movwf	?_efgtoa
  5855  07DD                     l765:
  5856  07DD  0008               	return
  5857  07DE                     __end_of_efgtoa:
  5858                           
  5859                           	psect	text6
  5860  1F1E                     __ptext6:	
  5861 ;; *************** function _tolower *****************
  5862 ;; Defined at:
  5863 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;  c               2    6[COMMON] int 
  5866 ;; Auto vars:     Size  Location     Type
  5867 ;;		None
  5868 ;; Return value:  Size  Location     Type
  5869 ;;                  2    6[COMMON] int 
  5870 ;; Registers used:
  5871 ;;		wreg, status,2, status,0
  5872 ;; Tracked objects:
  5873 ;;		On entry : 0/0
  5874 ;;		On exit  : 0/0
  5875 ;;		Unchanged: 0/0
  5876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5877 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5879 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5880 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5881 ;;Total ram usage:        4 bytes
  5882 ;; Hardware stack levels used: 1
  5883 ;; Hardware stack levels required when called: 1
  5884 ;; This function calls:
  5885 ;;		_isupper
  5886 ;; This function is called by:
  5887 ;;		_efgtoa
  5888 ;;		_vfpfcnvrt
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891                           
  5892  1F1E                     _tolower:	
  5893                           ;psect for function _tolower
  5894                           
  5895  1F1E                     l3193:	
  5896                           ;incstack = 0
  5897                           ; Regs used in _tolower: [wreg+status,2+status,0]
  5898                           
  5899  1F1E                     l3197:
  5900  1F1E  0876               	movf	tolower@c,w
  5901  1F1F  3EBF               	addlw	191
  5902  1F20  00F8               	movwf	??_tolower
  5903  1F21  30FF               	movlw	255
  5904  1F22  3D77               	addwfc	tolower@c+1,w
  5905  1F23  00F9               	movwf	??_tolower+1
  5906  1F24  3000               	movlw	0
  5907  1F25  0279               	subwf	??_tolower+1,w
  5908  1F26  301A               	movlw	26
  5909  1F27  1903               	skipnz
  5910  1F28  0278               	subwf	??_tolower,w
  5911  1F29  1803               	skipnc
  5912  1F2A  2F2C               	goto	u4341
  5913  1F2B  2F2D               	goto	u4340
  5914  1F2C                     u4341:
  5915  1F2C  2F34               	goto	l989
  5916  1F2D                     u4340:
  5917  1F2D                     l3199:
  5918  1F2D  3020               	movlw	32
  5919  1F2E  0476               	iorwf	tolower@c,w
  5920  1F2F  00F6               	movwf	?_tolower
  5921  1F30  3000               	movlw	0
  5922  1F31  0477               	iorwf	tolower@c+1,w
  5923  1F32  00F7               	movwf	?_tolower+1
  5924  1F33  2F34               	goto	l992
  5925  1F34                     l989:
  5926  1F34                     l992:
  5927  1F34  0008               	return
  5928  1F35                     __end_of_tolower:
  5929                           
  5930                           	psect	text7
  5931  0800                     __ptext7:	
  5932 ;; *************** function _isupper *****************
  5933 ;; Defined at:
  5934 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  5935 ;; Parameters:    Size  Location     Type
  5936 ;;  c               2    0[COMMON] int 
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;		None
  5939 ;; Return value:  Size  Location     Type
  5940 ;;                  2    0[COMMON] int 
  5941 ;; Registers used:
  5942 ;;		wreg, status,2, status,0
  5943 ;; Tracked objects:
  5944 ;;		On entry : 0/0
  5945 ;;		On exit  : 0/0
  5946 ;;		Unchanged: 0/0
  5947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5948 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5950 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5951 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5952 ;;Total ram usage:        6 bytes
  5953 ;; Hardware stack levels used: 1
  5954 ;; This function calls:
  5955 ;;		Nothing
  5956 ;; This function is called by:
  5957 ;;		_efgtoa
  5958 ;;		_vfpfcnvrt
  5959 ;;		_tolower
  5960 ;; This function uses a non-reentrant model
  5961 ;;
  5962                           
  5963  0800                     _isupper:	
  5964                           ;psect for function _isupper
  5965                           
  5966  0800                     l2681:	
  5967                           ;incstack = 0
  5968                           ; Regs used in _isupper: [wreg+status,2+status,0]
  5969                           
  5970  0800  0870               	movf	isupper@c,w
  5971  0801  3EBF               	addlw	191
  5972  0802  00F2               	movwf	??_isupper
  5973  0803  30FF               	movlw	255
  5974  0804  3D71               	addwfc	isupper@c+1,w
  5975  0805  00F3               	movwf	??_isupper+1
  5976  0806  3000               	movlw	0
  5977  0807  0273               	subwf	??_isupper+1,w
  5978  0808  301A               	movlw	26
  5979  0809  1903               	skipnz
  5980  080A  0272               	subwf	??_isupper,w
  5981  080B  1C03               	skipc
  5982  080C  280E               	goto	u3221
  5983  080D  2810               	goto	u3220
  5984  080E                     u3221:
  5985  080E  3001               	movlw	1
  5986  080F  2811               	goto	u3230
  5987  0810                     u3220:
  5988  0810  3000               	movlw	0
  5989  0811                     u3230:
  5990  0811  00F4               	movwf	??_isupper+2
  5991  0812  01F5               	clrf	??_isupper+3
  5992  0813  0874               	movf	??_isupper+2,w
  5993  0814  00F0               	movwf	?_isupper
  5994  0815  0875               	movf	??_isupper+3,w
  5995  0816  00F1               	movwf	?_isupper+1
  5996  0817                     l937:
  5997  0817  0008               	return
  5998  0818                     __end_of_isupper:
  5999                           
  6000                           	psect	text8
  6001  1FDF                     __ptext8:	
  6002 ;; *************** function _strcpy *****************
  6003 ;; Defined at:
  6004 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;  dest            1    wreg     PTR unsigned char 
  6007 ;;		 -> dbuf(80), 
  6008 ;;  src             2    0[COMMON] PTR const unsigned char 
  6009 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  6010 ;;		 -> dbuf(80), 
  6011 ;; Auto vars:     Size  Location     Type
  6012 ;;  dest            1    7[COMMON] PTR unsigned char 
  6013 ;;		 -> dbuf(80), 
  6014 ;;  s               2    4[COMMON] PTR const unsigned char 
  6015 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  6016 ;;		 -> dbuf(80), 
  6017 ;;  d               1    6[COMMON] PTR unsigned char 
  6018 ;;		 -> dbuf(80), 
  6019 ;; Return value:  Size  Location     Type
  6020 ;;                  1    wreg      PTR unsigned char 
  6021 ;; Registers used:
  6022 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6023 ;; Tracked objects:
  6024 ;;		On entry : 0/0
  6025 ;;		On exit  : 0/0
  6026 ;;		Unchanged: 0/0
  6027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6028 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6029 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6030 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6031 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6032 ;;Total ram usage:        8 bytes
  6033 ;; Hardware stack levels used: 1
  6034 ;; This function calls:
  6035 ;;		Nothing
  6036 ;; This function is called by:
  6037 ;;		_efgtoa
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041  1FDF                     _strcpy:	
  6042                           ;psect for function _strcpy
  6043                           
  6044                           
  6045                           ;incstack = 0
  6046                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  6047                           ;strcpy@dest stored from wreg
  6048  1FDF  00F7               	movwf	strcpy@dest
  6049  1FE0                     l3189:
  6050  1FE0  0871               	movf	strcpy@src+1,w
  6051  1FE1  00F5               	movwf	strcpy@s+1
  6052  1FE2  0870               	movf	strcpy@src,w
  6053  1FE3  00F4               	movwf	strcpy@s
  6054  1FE4  0877               	movf	strcpy@dest,w
  6055  1FE5  00F2               	movwf	??_strcpy
  6056  1FE6  0872               	movf	??_strcpy,w
  6057  1FE7  00F6               	movwf	strcpy@d
  6058  1FE8                     l3191:
  6059  1FE8  0876               	movf	strcpy@d,w
  6060  1FE9  0086               	movwf	6
  6061  1FEA  3001               	movlw	1	; select bank2/3
  6062  1FEB  0087               	movwf	7
  6063  1FEC  0AF6               	incf	strcpy@d,f
  6064  1FED  0875               	movf	strcpy@s+1,w
  6065  1FEE  00F3               	movwf	??_strcpy+1
  6066  1FEF  0874               	movf	strcpy@s,w
  6067  1FF0  00F2               	movwf	??_strcpy
  6068  1FF1  0AF4               	incf	strcpy@s,f
  6069  1FF2  1903               	skipnz
  6070  1FF3  0AF5               	incf	strcpy@s+1,f
  6071  1FF4  0872               	movf	??_strcpy,w
  6072  1FF5  0084               	movwf	4
  6073  1FF6  0873               	movf	??_strcpy+1,w
  6074  1FF7  0085               	movwf	5
  6075  1FF8  0800               	movf	0,w	;code access
  6076  1FF9  3FC0               	movwi [0]fsr1
  6077  1FFA  0889               	movf	9,f
  6078  1FFB  1D03               	btfss	3,2
  6079  1FFC  2FFE               	goto	u4331
  6080  1FFD  2FFF               	goto	u4330
  6081  1FFE                     u4331:
  6082  1FFE  2FE8               	goto	l3191
  6083  1FFF                     u4330:
  6084  1FFF                     l969:
  6085  1FFF  0008               	return
  6086  2000                     __end_of_strcpy:
  6087                           
  6088                           	psect	text9
  6089  1235                     __ptext9:	
  6090 ;; *************** function _pad *****************
  6091 ;; Defined at:
  6092 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;  fp              1    wreg     PTR struct _IO_FILE
  6095 ;;		 -> sprintf@f(10), 
  6096 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  6097 ;;		 -> dbuf(80), 
  6098 ;;  p               2    5[BANK0 ] int 
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  6101 ;;		 -> sprintf@f(10), 
  6102 ;;  w               2    9[BANK0 ] int 
  6103 ;;  i               2    7[BANK0 ] int 
  6104 ;; Return value:  Size  Location     Type
  6105 ;;                  2    4[BANK0 ] int 
  6106 ;; Registers used:
  6107 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6108 ;; Tracked objects:
  6109 ;;		On entry : 0/0
  6110 ;;		On exit  : 0/0
  6111 ;;		Unchanged: 0/0
  6112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6113 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6114 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6115 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6116 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6117 ;;Total ram usage:        9 bytes
  6118 ;; Hardware stack levels used: 1
  6119 ;; Hardware stack levels required when called: 3
  6120 ;; This function calls:
  6121 ;;		_fputc
  6122 ;;		_fputs
  6123 ;;		_strlen
  6124 ;; This function is called by:
  6125 ;;		_efgtoa
  6126 ;; This function uses a non-reentrant model
  6127 ;;
  6128                           
  6129  1235                     _pad:	
  6130                           ;psect for function _pad
  6131                           
  6132                           
  6133                           ;incstack = 0
  6134                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6135                           ;pad@fp stored from wreg
  6136  1235  0020               	movlb	0	; select bank0
  6137  1236  00AB               	movwf	pad@fp
  6138  1237                     l3143:
  6139                           
  6140                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6141  1237  0021               	movlb	1	; select bank1
  6142  1238  1C6D               	btfss	_flags^(0+128),0
  6143  1239  2A3B               	goto	u4211
  6144  123A  2A3C               	goto	u4210
  6145  123B                     u4211:
  6146  123B  2A45               	goto	l3147
  6147  123C                     u4210:
  6148  123C                     l3145:
  6149                           
  6150                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6151  123C  0020               	movlb	0	; select bank0
  6152  123D  082B               	movf	pad@fp,w
  6153  123E  00FC               	movwf	??_pad
  6154  123F  087C               	movf	??_pad,w
  6155  1240  00F8               	movwf	fputs@fp
  6156  1241  0824               	movf	pad@buf,w
  6157  1242  3190  202B  3192   	fcall	_fputs
  6158  1245                     l3147:
  6159                           
  6160                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6161  1245  0020               	movlb	0	; select bank0
  6162  1246  1BA6               	btfsc	pad@p+1,7
  6163  1247  2A49               	goto	u4221
  6164  1248  2A4A               	goto	u4220
  6165  1249                     u4221:
  6166  1249  2A4F               	goto	l3151
  6167  124A                     u4220:
  6168  124A                     l3149:
  6169  124A  0826               	movf	pad@p+1,w
  6170  124B  00AA               	movwf	pad@w+1
  6171  124C  0825               	movf	pad@p,w
  6172  124D  00A9               	movwf	pad@w
  6173  124E  2A51               	goto	l744
  6174  124F                     l3151:
  6175  124F  01A9               	clrf	pad@w
  6176  1250  01AA               	clrf	pad@w+1
  6177  1251                     l744:
  6178                           
  6179                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6180  1251  01A7               	clrf	pad@i
  6181  1252  01A8               	clrf	pad@i+1
  6182                           
  6183                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6184  1253  2A65               	goto	l3157
  6185  1254                     l3153:
  6186                           
  6187                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6188  1254  3020               	movlw	32
  6189  1255  00F0               	movwf	fputc@c
  6190  1256  3000               	movlw	0
  6191  1257  00F1               	movwf	fputc@c+1
  6192  1258  0020               	movlb	0	; select bank0
  6193  1259  082B               	movf	pad@fp,w
  6194  125A  00FC               	movwf	??_pad
  6195  125B  087C               	movf	??_pad,w
  6196  125C  00F2               	movwf	fputc@fp
  6197  125D  3191  21DC  3192   	fcall	_fputc
  6198  1260                     l3155:
  6199                           
  6200                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6201  1260  3001               	movlw	1
  6202  1261  0020               	movlb	0	; select bank0
  6203  1262  07A7               	addwf	pad@i,f
  6204  1263  3000               	movlw	0
  6205  1264  3DA8               	addwfc	pad@i+1,f
  6206  1265                     l3157:
  6207                           
  6208                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6209  1265  0828               	movf	pad@i+1,w
  6210  1266  3A80               	xorlw	128
  6211  1267  00FC               	movwf	??_pad
  6212  1268  082A               	movf	pad@w+1,w
  6213  1269  3A80               	xorlw	128
  6214  126A  027C               	subwf	??_pad,w
  6215  126B  1D03               	skipz
  6216  126C  2A6F               	goto	u4235
  6217  126D  0829               	movf	pad@w,w
  6218  126E  0227               	subwf	pad@i,w
  6219  126F                     u4235:
  6220  126F  1C03               	skipc
  6221  1270  2A72               	goto	u4231
  6222  1271  2A73               	goto	u4230
  6223  1272                     u4231:
  6224  1272  2A54               	goto	l3153
  6225  1273                     u4230:
  6226  1273                     l747:
  6227                           
  6228                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6229  1273  0021               	movlb	1	; select bank1
  6230  1274  186D               	btfsc	_flags^(0+128),0
  6231  1275  2A77               	goto	u4241
  6232  1276  2A78               	goto	u4240
  6233  1277                     u4241:
  6234  1277  2A81               	goto	l3161
  6235  1278                     u4240:
  6236  1278                     l3159:
  6237                           
  6238                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6239  1278  0020               	movlb	0	; select bank0
  6240  1279  082B               	movf	pad@fp,w
  6241  127A  00FC               	movwf	??_pad
  6242  127B  087C               	movf	??_pad,w
  6243  127C  00F8               	movwf	fputs@fp
  6244  127D  0824               	movf	pad@buf,w
  6245  127E  3190  202B  3192   	fcall	_fputs
  6246  1281                     l3161:
  6247                           
  6248                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6249  1281  0020               	movlb	0	; select bank0
  6250  1282  0824               	movf	pad@buf,w
  6251  1283  319F  2765  3192   	fcall	_strlen
  6252  1286  0020               	movlb	0	; select bank0
  6253  1287  0829               	movf	pad@w,w
  6254  1288  0770               	addwf	?_strlen,w
  6255  1289  00A4               	movwf	?_pad
  6256  128A  082A               	movf	pad@w+1,w
  6257  128B  3D71               	addwfc	?_strlen+1,w
  6258  128C  00A5               	movwf	?_pad+1
  6259  128D                     l749:
  6260  128D  0008               	return
  6261  128E                     __end_of_pad:
  6262                           
  6263                           	psect	text10
  6264  1F65                     __ptext10:	
  6265 ;; *************** function _strlen *****************
  6266 ;; Defined at:
  6267 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  6268 ;; Parameters:    Size  Location     Type
  6269 ;;  s               1    wreg     PTR const unsigned char 
  6270 ;;		 -> dbuf(80), 
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;  s               1    4[COMMON] PTR const unsigned char 
  6273 ;;		 -> dbuf(80), 
  6274 ;;  a               1    3[COMMON] PTR const unsigned char 
  6275 ;;		 -> dbuf(80), 
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  2    0[COMMON] unsigned int 
  6278 ;; Registers used:
  6279 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6285 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6286 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6287 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6288 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6289 ;;Total ram usage:        5 bytes
  6290 ;; Hardware stack levels used: 1
  6291 ;; This function calls:
  6292 ;;		Nothing
  6293 ;; This function is called by:
  6294 ;;		_pad
  6295 ;; This function uses a non-reentrant model
  6296 ;;
  6297                           
  6298  1F65                     _strlen:	
  6299                           ;psect for function _strlen
  6300                           
  6301                           
  6302                           ;incstack = 0
  6303                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6304                           ;strlen@s stored from wreg
  6305  1F65  00F4               	movwf	strlen@s
  6306  1F66                     l2671:
  6307  1F66  0874               	movf	strlen@s,w
  6308  1F67  00F2               	movwf	??_strlen
  6309  1F68  0872               	movf	??_strlen,w
  6310  1F69  00F3               	movwf	strlen@a
  6311  1F6A  2F6F               	goto	l2675
  6312  1F6B                     l2673:
  6313  1F6B  3001               	movlw	1
  6314  1F6C  00F2               	movwf	??_strlen
  6315  1F6D  0872               	movf	??_strlen,w
  6316  1F6E  07F4               	addwf	strlen@s,f
  6317  1F6F                     l2675:
  6318  1F6F  0874               	movf	strlen@s,w
  6319  1F70  0086               	movwf	6
  6320  1F71  3001               	movlw	1	; select bank2/3
  6321  1F72  0087               	movwf	7
  6322  1F73  0801               	movf	1,w
  6323  1F74  1D03               	btfss	3,2
  6324  1F75  2F77               	goto	u3211
  6325  1F76  2F78               	goto	u3210
  6326  1F77                     u3211:
  6327  1F77  2F6B               	goto	l2673
  6328  1F78                     u3210:
  6329  1F78                     l2677:
  6330  1F78  0873               	movf	strlen@a,w
  6331  1F79  0274               	subwf	strlen@s,w
  6332  1F7A  00F0               	movwf	?_strlen
  6333  1F7B  01F1               	clrf	?_strlen+1
  6334  1F7C  1BF0               	btfsc	?_strlen,7
  6335  1F7D  03F1               	decf	?_strlen+1,f
  6336  1F7E                     l975:
  6337  1F7E  0008               	return
  6338  1F7F                     __end_of_strlen:
  6339                           
  6340                           	psect	text11
  6341  102B                     __ptext11:	
  6342 ;; *************** function _fputs *****************
  6343 ;; Defined at:
  6344 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  6345 ;; Parameters:    Size  Location     Type
  6346 ;;  s               1    wreg     PTR const unsigned char 
  6347 ;;		 -> dbuf(80), 
  6348 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  6349 ;;		 -> sprintf@f(10), 
  6350 ;; Auto vars:     Size  Location     Type
  6351 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  6352 ;;		 -> dbuf(80), 
  6353 ;;  i               2    1[BANK0 ] int 
  6354 ;;  c               1    0[BANK0 ] unsigned char 
  6355 ;; Return value:  Size  Location     Type
  6356 ;;                  2    8[COMMON] int 
  6357 ;; Registers used:
  6358 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6359 ;; Tracked objects:
  6360 ;;		On entry : 0/0
  6361 ;;		On exit  : 0/0
  6362 ;;		Unchanged: 0/0
  6363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6364 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6365 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6366 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6367 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6368 ;;Total ram usage:        8 bytes
  6369 ;; Hardware stack levels used: 1
  6370 ;; Hardware stack levels required when called: 2
  6371 ;; This function calls:
  6372 ;;		_fputc
  6373 ;; This function is called by:
  6374 ;;		_pad
  6375 ;; This function uses a non-reentrant model
  6376 ;;
  6377                           
  6378  102B                     _fputs:	
  6379                           ;psect for function _fputs
  6380                           
  6381                           
  6382                           ;incstack = 0
  6383                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6384                           ;fputs@s stored from wreg
  6385  102B  0020               	movlb	0	; select bank0
  6386  102C  00A3               	movwf	fputs@s
  6387  102D                     l2663:
  6388  102D  01A1               	clrf	fputs@i
  6389  102E  01A2               	clrf	fputs@i+1
  6390  102F  2843               	goto	l2669
  6391  1030                     l2665:
  6392  1030  0820               	movf	fputs@c,w
  6393  1031  00F9               	movwf	??_fputs
  6394  1032  01FA               	clrf	??_fputs+1
  6395  1033  0879               	movf	??_fputs,w
  6396  1034  00F0               	movwf	fputc@c
  6397  1035  087A               	movf	??_fputs+1,w
  6398  1036  00F1               	movwf	fputc@c+1
  6399  1037  0878               	movf	fputs@fp,w
  6400  1038  00FB               	movwf	??_fputs+2
  6401  1039  087B               	movf	??_fputs+2,w
  6402  103A  00F2               	movwf	fputc@fp
  6403  103B  3191  21DC  3190   	fcall	_fputc
  6404  103E                     l2667:
  6405  103E  3001               	movlw	1
  6406  103F  0020               	movlb	0	; select bank0
  6407  1040  07A1               	addwf	fputs@i,f
  6408  1041  3000               	movlw	0
  6409  1042  3DA2               	addwfc	fputs@i+1,f
  6410  1043                     l2669:
  6411  1043  0821               	movf	fputs@i,w
  6412  1044  0723               	addwf	fputs@s,w
  6413  1045  00F9               	movwf	??_fputs
  6414  1046  0879               	movf	??_fputs,w
  6415  1047  0086               	movwf	6
  6416  1048  3001               	movlw	1	; select bank2/3
  6417  1049  0087               	movwf	7
  6418  104A  0801               	movf	1,w
  6419  104B  00FA               	movwf	??_fputs+1
  6420  104C  087A               	movf	??_fputs+1,w
  6421  104D  00A0               	movwf	fputs@c
  6422  104E  0820               	movf	fputs@c,w
  6423  104F  1D03               	btfss	3,2
  6424  1050  2852               	goto	u3201
  6425  1051  2853               	goto	u3200
  6426  1052                     u3201:
  6427  1052  2830               	goto	l2665
  6428  1053                     u3200:
  6429  1053                     l960:
  6430  1053  0008               	return
  6431  1054                     __end_of_fputs:
  6432                           
  6433                           	psect	text12
  6434  11DC                     __ptext12:	
  6435 ;; *************** function _fputc *****************
  6436 ;; Defined at:
  6437 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  6438 ;; Parameters:    Size  Location     Type
  6439 ;;  c               2    0[COMMON] int 
  6440 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  6441 ;;		 -> sprintf@f(10), 
  6442 ;; Auto vars:     Size  Location     Type
  6443 ;;		None
  6444 ;; Return value:  Size  Location     Type
  6445 ;;                  2    0[COMMON] int 
  6446 ;; Registers used:
  6447 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6448 ;; Tracked objects:
  6449 ;;		On entry : 0/0
  6450 ;;		On exit  : 0/0
  6451 ;;		Unchanged: 0/0
  6452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6453 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6455 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6456 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6457 ;;Total ram usage:        8 bytes
  6458 ;; Hardware stack levels used: 1
  6459 ;; Hardware stack levels required when called: 1
  6460 ;; This function calls:
  6461 ;;		_putch
  6462 ;; This function is called by:
  6463 ;;		_pad
  6464 ;;		_vfpfcnvrt
  6465 ;;		_fputs
  6466 ;; This function uses a non-reentrant model
  6467 ;;
  6468                           
  6469  11DC                     _fputc:	
  6470                           ;psect for function _fputc
  6471                           
  6472  11DC                     l2439:	
  6473                           ;incstack = 0
  6474                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6475                           
  6476  11DC  0872               	movf	fputc@fp,w
  6477  11DD  1903               	btfsc	3,2
  6478  11DE  29E0               	goto	u2701
  6479  11DF  29E1               	goto	u2700
  6480  11E0                     u2701:
  6481  11E0  29E6               	goto	l2443
  6482  11E1                     u2700:
  6483  11E1                     l2441:
  6484  11E1  0872               	movf	fputc@fp,w
  6485  11E2  1D03               	btfss	3,2
  6486  11E3  29E5               	goto	u2711
  6487  11E4  29E6               	goto	u2710
  6488  11E5                     u2711:
  6489  11E5  29EB               	goto	l2445
  6490  11E6                     u2710:
  6491  11E6                     l2443:
  6492  11E6  0870               	movf	fputc@c,w
  6493  11E7  3180  2006  3191   	fcall	_putch
  6494  11EA  2A34               	goto	l952
  6495  11EB                     l2445:
  6496  11EB  0872               	movf	fputc@fp,w
  6497  11EC  3E08               	addlw	8
  6498  11ED  0086               	movwf	6
  6499  11EE  3001               	movlw	1	; select bank2/3
  6500  11EF  0087               	movwf	7
  6501  11F0  0016               	moviw fsr1++
  6502  11F1  0401               	iorwf	1,w
  6503  11F2  1903               	btfsc	3,2
  6504  11F3  29F5               	goto	u2721
  6505  11F4  29F6               	goto	u2720
  6506  11F5                     u2721:
  6507  11F5  2A16               	goto	l2449
  6508  11F6                     u2720:
  6509  11F6                     l2447:
  6510  11F6  0872               	movf	fputc@fp,w
  6511  11F7  3E08               	addlw	8
  6512  11F8  0086               	movwf	6
  6513  11F9  3001               	movlw	1	; select bank2/3
  6514  11FA  0087               	movwf	7
  6515  11FB  3F40               	moviw [0]fsr1
  6516  11FC  00F3               	movwf	??_fputc
  6517  11FD  3F41               	moviw [1]fsr1
  6518  11FE  00F4               	movwf	??_fputc+1
  6519  11FF  0872               	movf	fputc@fp,w
  6520  1200  3E02               	addlw	2
  6521  1201  0086               	movwf	6
  6522  1202  3001               	movlw	1	; select bank2/3
  6523  1203  0087               	movwf	7
  6524  1204  3F40               	moviw [0]fsr1
  6525  1205  00F5               	movwf	??_fputc+2
  6526  1206  3F41               	moviw [1]fsr1
  6527  1207  00F6               	movwf	??_fputc+3
  6528  1208  0876               	movf	??_fputc+3,w
  6529  1209  3A80               	xorlw	128
  6530  120A  00F7               	movwf	??_fputc+4
  6531  120B  0874               	movf	??_fputc+1,w
  6532  120C  3A80               	xorlw	128
  6533  120D  0277               	subwf	??_fputc+4,w
  6534  120E  1D03               	skipz
  6535  120F  2A12               	goto	u2735
  6536  1210  0873               	movf	??_fputc,w
  6537  1211  0275               	subwf	??_fputc+2,w
  6538  1212                     u2735:
  6539  1212  1803               	skipnc
  6540  1213  2A15               	goto	u2731
  6541  1214  2A16               	goto	u2730
  6542  1215                     u2731:
  6543  1215  2A34               	goto	l952
  6544  1216                     u2730:
  6545  1216                     l2449:
  6546  1216  0870               	movf	fputc@c,w
  6547  1217  00F3               	movwf	??_fputc
  6548  1218  0872               	movf	fputc@fp,w
  6549  1219  0086               	movwf	6
  6550  121A  3001               	movlw	1	; select bank2/3
  6551  121B  0087               	movwf	7
  6552  121C  0872               	movf	fputc@fp,w
  6553  121D  3E02               	addlw	2
  6554  121E  0084               	movwf	4
  6555  121F  3001               	movlw	1	; select bank2/3
  6556  1220  0085               	movwf	5
  6557  1221  0800               	movf	0,w
  6558  1222  0701               	addwf	1,w
  6559  1223  00F4               	movwf	??_fputc+1
  6560  1224  0874               	movf	??_fputc+1,w
  6561  1225  0086               	movwf	6
  6562  1226  3002               	movlw	2	; select bank4/5
  6563  1227  0087               	movwf	7
  6564  1228  0873               	movf	??_fputc,w
  6565  1229  0081               	movwf	1
  6566  122A                     l2451:
  6567  122A  0872               	movf	fputc@fp,w
  6568  122B  3E02               	addlw	2
  6569  122C  0086               	movwf	6
  6570  122D  3001               	movlw	1	; select bank2/3
  6571  122E  0087               	movwf	7
  6572  122F  3001               	movlw	1
  6573  1230  0781               	addwf	1,f
  6574  1231  3141               	addfsr 1,1
  6575  1232  1803               	skipnc
  6576  1233  0A81               	incf	1,f
  6577  1234                     l952:
  6578  1234  0008               	return
  6579  1235                     __end_of_fputc:
  6580                           
  6581                           	psect	text13
  6582  0006                     __ptext13:	
  6583 ;; *************** function _putch *****************
  6584 ;; Defined at:
  6585 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;  c               1    wreg     unsigned char 
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;  c               1    0[COMMON] unsigned char 
  6590 ;; Return value:  Size  Location     Type
  6591 ;;                  1    wreg      void 
  6592 ;; Registers used:
  6593 ;;		wreg
  6594 ;; Tracked objects:
  6595 ;;		On entry : 0/0
  6596 ;;		On exit  : 0/0
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6603 ;;Total ram usage:        0 bytes
  6604 ;; Hardware stack levels used: 1
  6605 ;; This function calls:
  6606 ;;		Nothing
  6607 ;; This function is called by:
  6608 ;;		_fputc
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612  0006                     _putch:	
  6613                           ;psect for function _putch
  6614                           
  6615  0006                     l963:	
  6616                           ;incstack = 0
  6617                           ; Regs used in _putch: [wreg]
  6618                           
  6619  0006  0008               	return
  6620  0007                     __end_of_putch:
  6621                           
  6622                           	psect	text14
  6623  1561                     __ptext14:	
  6624 ;; *************** function _floorf *****************
  6625 ;; Defined at:
  6626 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  6627 ;; Parameters:    Size  Location     Type
  6628 ;;  x               4   52[BANK0 ] float 
  6629 ;; Auto vars:     Size  Location     Type
  6630 ;;  u               4   68[BANK0 ] struct .
  6631 ;;  m               4   62[BANK0 ] unsigned long 
  6632 ;;  e               2   66[BANK0 ] int 
  6633 ;; Return value:  Size  Location     Type
  6634 ;;                  4   52[BANK0 ] float 
  6635 ;; Registers used:
  6636 ;;		wreg, status,2, status,0
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 0/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6642 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6643 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6644 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6645 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6646 ;;Total ram usage:       20 bytes
  6647 ;; Hardware stack levels used: 1
  6648 ;; This function calls:
  6649 ;;		Nothing
  6650 ;; This function is called by:
  6651 ;;		_efgtoa
  6652 ;; This function uses a non-reentrant model
  6653 ;;
  6654                           
  6655  1561                     _floorf:	
  6656                           ;psect for function _floorf
  6657                           
  6658  1561                     l3203:	
  6659                           ;incstack = 0
  6660                           ; Regs used in _floorf: [wreg+status,2+status,0]
  6661                           
  6662  1561  0022               	movlb	2	; select bank2
  6663  1562  0839               	movf	(floorf@F526+3)^(0+256),w
  6664  1563  0020               	movlb	0	; select bank0
  6665  1564  00E7               	movwf	floorf@u+3
  6666  1565  0022               	movlb	2	; select bank2
  6667  1566  0838               	movf	(floorf@F526+2)^(0+256),w
  6668  1567  0020               	movlb	0	; select bank0
  6669  1568  00E6               	movwf	floorf@u+2
  6670  1569  0022               	movlb	2	; select bank2
  6671  156A  0837               	movf	(floorf@F526+1)^(0+256),w
  6672  156B  0020               	movlb	0	; select bank0
  6673  156C  00E5               	movwf	floorf@u+1
  6674  156D  0022               	movlb	2	; select bank2
  6675  156E  0836               	movf	floorf@F526^(0+256),w
  6676  156F  0020               	movlb	0	; select bank0
  6677  1570  00E4               	movwf	floorf@u
  6678  1571  0857               	movf	floorf@x+3,w
  6679  1572  00E7               	movwf	floorf@u+3
  6680  1573  0856               	movf	floorf@x+2,w
  6681  1574  00E6               	movwf	floorf@u+2
  6682  1575  0855               	movf	floorf@x+1,w
  6683  1576  00E5               	movwf	floorf@u+1
  6684  1577  0854               	movf	floorf@x,w
  6685  1578  00E4               	movwf	floorf@u
  6686  1579                     l3205:
  6687  1579  0864               	movf	floorf@u,w
  6688  157A  00D8               	movwf	??_floorf
  6689  157B  0865               	movf	floorf@u+1,w
  6690  157C  00D9               	movwf	??_floorf+1
  6691  157D  0866               	movf	floorf@u+2,w
  6692  157E  00DA               	movwf	??_floorf+2
  6693  157F  0867               	movf	floorf@u+3,w
  6694  1580  00DB               	movwf	??_floorf+3
  6695  1581  3017               	movlw	23
  6696  1582                     u4355:
  6697  1582  36DB               	lsrf	??_floorf+3,f
  6698  1583  0CDA               	rrf	??_floorf+2,f
  6699  1584  0CD9               	rrf	??_floorf+1,f
  6700  1585  0CD8               	rrf	??_floorf,f
  6701  1586                     u4350:
  6702  1586  0B89               	decfsz	9,f
  6703  1587  2D82               	goto	u4355
  6704  1588  30FF               	movlw	255
  6705  1589  0558               	andwf	??_floorf,w
  6706  158A  00DC               	movwf	??_floorf+4
  6707  158B  3000               	movlw	0
  6708  158C  0559               	andwf	??_floorf+1,w
  6709  158D  00DD               	movwf	??_floorf+5
  6710  158E  085C               	movf	??_floorf+4,w
  6711  158F  3E81               	addlw	129
  6712  1590  00E2               	movwf	floorf@e
  6713  1591  30FF               	movlw	255
  6714  1592  3D5D               	addwfc	??_floorf+5,w
  6715  1593  00E3               	movwf	floorf@e+1
  6716  1594                     l3207:
  6717  1594  0863               	movf	floorf@e+1,w
  6718  1595  3A80               	xorlw	128
  6719  1596  00D8               	movwf	??_floorf
  6720  1597  3080               	movlw	128
  6721  1598  0258               	subwf	??_floorf,w
  6722  1599  1D03               	skipz
  6723  159A  2D9D               	goto	u4365
  6724  159B  3017               	movlw	23
  6725  159C  0262               	subwf	floorf@e,w
  6726  159D                     u4365:
  6727  159D  1C03               	skipc
  6728  159E  2DA0               	goto	u4361
  6729  159F  2DA1               	goto	u4360
  6730  15A0                     u4361:
  6731  15A0  2DA2               	goto	l912
  6732  15A1                     u4360:
  6733  15A1                     l3209:
  6734  15A1  2E4B               	goto	l913
  6735  15A2                     l912:
  6736  15A2  0020               	movlb	0	; select bank0
  6737  15A3  1BE3               	btfsc	floorf@e+1,7
  6738  15A4  2DA6               	goto	u4371
  6739  15A5  2DA7               	goto	u4370
  6740  15A6                     u4371:
  6741  15A6  2E04               	goto	l3223
  6742  15A7                     u4370:
  6743  15A7                     l3211:
  6744  15A7  30FF               	movlw	255
  6745  15A8  00D8               	movwf	??_floorf
  6746  15A9  30FF               	movlw	255
  6747  15AA  00D9               	movwf	??_floorf+1
  6748  15AB  307F               	movlw	127
  6749  15AC  00DA               	movwf	??_floorf+2
  6750  15AD  3000               	movlw	0
  6751  15AE  00DB               	movwf	??_floorf+3
  6752  15AF  0A62               	incf	floorf@e,w
  6753  15B0  2DB5               	goto	u4380
  6754  15B1                     u4385:
  6755  15B1  37DB               	asrf	??_floorf+3,f
  6756  15B2  0CDA               	rrf	??_floorf+2,f
  6757  15B3  0CD9               	rrf	??_floorf+1,f
  6758  15B4  0CD8               	rrf	??_floorf,f
  6759  15B5                     u4380:
  6760  15B5  0B89               	decfsz	9,f
  6761  15B6  2DB1               	goto	u4385
  6762  15B7  085B               	movf	??_floorf+3,w
  6763  15B8  00E1               	movwf	floorf@m+3
  6764  15B9  085A               	movf	??_floorf+2,w
  6765  15BA  00E0               	movwf	floorf@m+2
  6766  15BB  0859               	movf	??_floorf+1,w
  6767  15BC  00DF               	movwf	floorf@m+1
  6768  15BD  0858               	movf	??_floorf,w
  6769  15BE  00DE               	movwf	floorf@m
  6770  15BF                     l3213:
  6771  15BF  0864               	movf	floorf@u,w
  6772  15C0  055E               	andwf	floorf@m,w
  6773  15C1  00D8               	movwf	??_floorf
  6774  15C2  0865               	movf	floorf@u+1,w
  6775  15C3  055F               	andwf	floorf@m+1,w
  6776  15C4  00D9               	movwf	??_floorf+1
  6777  15C5  0866               	movf	floorf@u+2,w
  6778  15C6  0560               	andwf	floorf@m+2,w
  6779  15C7  00DA               	movwf	??_floorf+2
  6780  15C8  0867               	movf	floorf@u+3,w
  6781  15C9  0561               	andwf	floorf@m+3,w
  6782  15CA  00DB               	movwf	??_floorf+3
  6783  15CB  085B               	movf	??_floorf+3,w
  6784  15CC  045A               	iorwf	??_floorf+2,w
  6785  15CD  0459               	iorwf	??_floorf+1,w
  6786  15CE  0458               	iorwf	??_floorf,w
  6787  15CF  1D03               	skipz
  6788  15D0  2DD2               	goto	u4391
  6789  15D1  2DD3               	goto	u4390
  6790  15D2                     u4391:
  6791  15D2  2DD4               	goto	l3217
  6792  15D3                     u4390:
  6793  15D3  2DA1               	goto	l3209
  6794  15D4                     l3217:
  6795  15D4  0864               	movf	floorf@u,w
  6796  15D5  00D8               	movwf	??_floorf
  6797  15D6  0865               	movf	floorf@u+1,w
  6798  15D7  00D9               	movwf	??_floorf+1
  6799  15D8  0866               	movf	floorf@u+2,w
  6800  15D9  00DA               	movwf	??_floorf+2
  6801  15DA  0867               	movf	floorf@u+3,w
  6802  15DB  00DB               	movwf	??_floorf+3
  6803  15DC  301F               	movlw	31
  6804  15DD                     u4405:
  6805  15DD  36DB               	lsrf	??_floorf+3,f
  6806  15DE  0CDA               	rrf	??_floorf+2,f
  6807  15DF  0CD9               	rrf	??_floorf+1,f
  6808  15E0  0CD8               	rrf	??_floorf,f
  6809  15E1                     u4400:
  6810  15E1  0B89               	decfsz	9,f
  6811  15E2  2DDD               	goto	u4405
  6812  15E3  085B               	movf	??_floorf+3,w
  6813  15E4  045A               	iorwf	??_floorf+2,w
  6814  15E5  0459               	iorwf	??_floorf+1,w
  6815  15E6  0458               	iorwf	??_floorf,w
  6816  15E7  1903               	skipnz
  6817  15E8  2DEA               	goto	u4411
  6818  15E9  2DEB               	goto	u4410
  6819  15EA                     u4411:
  6820  15EA  2DF3               	goto	l3221
  6821  15EB                     u4410:
  6822  15EB                     l3219:
  6823  15EB  085E               	movf	floorf@m,w
  6824  15EC  07E4               	addwf	floorf@u,f
  6825  15ED  085F               	movf	floorf@m+1,w
  6826  15EE  3DE5               	addwfc	floorf@u+1,f
  6827  15EF  0860               	movf	floorf@m+2,w
  6828  15F0  3DE6               	addwfc	floorf@u+2,f
  6829  15F1  0861               	movf	floorf@m+3,w
  6830  15F2  3DE7               	addwfc	floorf@u+3,f
  6831  15F3                     l3221:
  6832  15F3  095E               	comf	floorf@m,w
  6833  15F4  00D8               	movwf	??_floorf
  6834  15F5  095F               	comf	floorf@m+1,w
  6835  15F6  00D9               	movwf	??_floorf+1
  6836  15F7  0960               	comf	floorf@m+2,w
  6837  15F8  00DA               	movwf	??_floorf+2
  6838  15F9  0961               	comf	floorf@m+3,w
  6839  15FA  00DB               	movwf	??_floorf+3
  6840  15FB  0858               	movf	??_floorf,w
  6841  15FC  05E4               	andwf	floorf@u,f
  6842  15FD  0859               	movf	??_floorf+1,w
  6843  15FE  05E5               	andwf	floorf@u+1,f
  6844  15FF  085A               	movf	??_floorf+2,w
  6845  1600  05E6               	andwf	floorf@u+2,f
  6846  1601  085B               	movf	??_floorf+3,w
  6847  1602  05E7               	andwf	floorf@u+3,f
  6848  1603  2E43               	goto	l917
  6849  1604                     l3223:
  6850  1604  0864               	movf	floorf@u,w
  6851  1605  00D8               	movwf	??_floorf
  6852  1606  0865               	movf	floorf@u+1,w
  6853  1607  00D9               	movwf	??_floorf+1
  6854  1608  0866               	movf	floorf@u+2,w
  6855  1609  00DA               	movwf	??_floorf+2
  6856  160A  0867               	movf	floorf@u+3,w
  6857  160B  00DB               	movwf	??_floorf+3
  6858  160C  301F               	movlw	31
  6859  160D                     u4425:
  6860  160D  36DB               	lsrf	??_floorf+3,f
  6861  160E  0CDA               	rrf	??_floorf+2,f
  6862  160F  0CD9               	rrf	??_floorf+1,f
  6863  1610  0CD8               	rrf	??_floorf,f
  6864  1611                     u4420:
  6865  1611  0B89               	decfsz	9,f
  6866  1612  2E0D               	goto	u4425
  6867  1613  085B               	movf	??_floorf+3,w
  6868  1614  045A               	iorwf	??_floorf+2,w
  6869  1615  0459               	iorwf	??_floorf+1,w
  6870  1616  0458               	iorwf	??_floorf,w
  6871  1617  1D03               	skipz
  6872  1618  2E1A               	goto	u4431
  6873  1619  2E1B               	goto	u4430
  6874  161A                     u4431:
  6875  161A  2E24               	goto	l3227
  6876  161B                     u4430:
  6877  161B                     l3225:
  6878  161B  3000               	movlw	0
  6879  161C  00E7               	movwf	floorf@u+3
  6880  161D  3000               	movlw	0
  6881  161E  00E6               	movwf	floorf@u+2
  6882  161F  3000               	movlw	0
  6883  1620  00E5               	movwf	floorf@u+1
  6884  1621  3000               	movlw	0
  6885  1622  00E4               	movwf	floorf@u
  6886  1623  2E43               	goto	l917
  6887  1624                     l3227:
  6888  1624  0864               	movf	floorf@u,w
  6889  1625  00D8               	movwf	??_floorf
  6890  1626  0865               	movf	floorf@u+1,w
  6891  1627  00D9               	movwf	??_floorf+1
  6892  1628  0866               	movf	floorf@u+2,w
  6893  1629  00DA               	movwf	??_floorf+2
  6894  162A  0867               	movf	floorf@u+3,w
  6895  162B  00DB               	movwf	??_floorf+3
  6896  162C  3001               	movlw	1
  6897  162D                     u4445:
  6898  162D  35D8               	lslf	??_floorf,f
  6899  162E  0DD9               	rlf	??_floorf+1,f
  6900  162F  0DDA               	rlf	??_floorf+2,f
  6901  1630  0DDB               	rlf	??_floorf+3,f
  6902  1631                     u4440:
  6903  1631  0B89               	decfsz	9,f
  6904  1632  2E2D               	goto	u4445
  6905  1633  085B               	movf	??_floorf+3,w
  6906  1634  045A               	iorwf	??_floorf+2,w
  6907  1635  0459               	iorwf	??_floorf+1,w
  6908  1636  0458               	iorwf	??_floorf,w
  6909  1637  1903               	skipnz
  6910  1638  2E3A               	goto	u4451
  6911  1639  2E3B               	goto	u4450
  6912  163A                     u4451:
  6913  163A  2E43               	goto	l917
  6914  163B                     u4450:
  6915  163B                     l3229:
  6916  163B  30BF               	movlw	191
  6917  163C  00E7               	movwf	floorf@u+3
  6918  163D  3080               	movlw	128
  6919  163E  00E6               	movwf	floorf@u+2
  6920  163F  3000               	movlw	0
  6921  1640  00E5               	movwf	floorf@u+1
  6922  1641  3000               	movlw	0
  6923  1642  00E4               	movwf	floorf@u
  6924  1643                     l917:
  6925  1643  0867               	movf	floorf@u+3,w
  6926  1644  00D7               	movwf	?_floorf+3
  6927  1645  0866               	movf	floorf@u+2,w
  6928  1646  00D6               	movwf	?_floorf+2
  6929  1647  0865               	movf	floorf@u+1,w
  6930  1648  00D5               	movwf	?_floorf+1
  6931  1649  0864               	movf	floorf@u,w
  6932  164A  00D4               	movwf	?_floorf
  6933  164B                     l913:
  6934  164B  0008               	return
  6935  164C                     __end_of_floorf:
  6936                           
  6937                           	psect	text15
  6938  12ED                     __ptext15:	
  6939 ;; *************** function ___fpclassifyf *****************
  6940 ;; Defined at:
  6941 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  6942 ;; Parameters:    Size  Location     Type
  6943 ;;  x               4    0[COMMON] float 
  6944 ;; Auto vars:     Size  Location     Type
  6945 ;;  u               4    2[BANK0 ] struct .
  6946 ;;  e               2    0[BANK0 ] int 
  6947 ;; Return value:  Size  Location     Type
  6948 ;;                  2    0[COMMON] int 
  6949 ;; Registers used:
  6950 ;;		wreg, status,2, status,0
  6951 ;; Tracked objects:
  6952 ;;		On entry : 0/0
  6953 ;;		On exit  : 0/0
  6954 ;;		Unchanged: 0/0
  6955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6956 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6957 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6958 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6959 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6960 ;;Total ram usage:       16 bytes
  6961 ;; Hardware stack levels used: 1
  6962 ;; This function calls:
  6963 ;;		Nothing
  6964 ;; This function is called by:
  6965 ;;		_efgtoa
  6966 ;; This function uses a non-reentrant model
  6967 ;;
  6968                           
  6969  12ED                     ___fpclassifyf:	
  6970                           ;psect for function ___fpclassifyf
  6971                           
  6972  12ED                     l3165:	
  6973                           ;incstack = 0
  6974                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  6975                           
  6976  12ED  0022               	movlb	2	; select bank2
  6977  12EE  083D               	movf	(___fpclassifyf@F465+3)^(0+256),w
  6978  12EF  0020               	movlb	0	; select bank0
  6979  12F0  00A5               	movwf	___fpclassifyf@u+3
  6980  12F1  0022               	movlb	2	; select bank2
  6981  12F2  083C               	movf	(___fpclassifyf@F465+2)^(0+256),w
  6982  12F3  0020               	movlb	0	; select bank0
  6983  12F4  00A4               	movwf	___fpclassifyf@u+2
  6984  12F5  0022               	movlb	2	; select bank2
  6985  12F6  083B               	movf	(___fpclassifyf@F465+1)^(0+256),w
  6986  12F7  0020               	movlb	0	; select bank0
  6987  12F8  00A3               	movwf	___fpclassifyf@u+1
  6988  12F9  0022               	movlb	2	; select bank2
  6989  12FA  083A               	movf	___fpclassifyf@F465^(0+256),w
  6990  12FB  0020               	movlb	0	; select bank0
  6991  12FC  00A2               	movwf	___fpclassifyf@u
  6992  12FD  0873               	movf	___fpclassifyf@x+3,w
  6993  12FE  00A5               	movwf	___fpclassifyf@u+3
  6994  12FF  0872               	movf	___fpclassifyf@x+2,w
  6995  1300  00A4               	movwf	___fpclassifyf@u+2
  6996  1301  0871               	movf	___fpclassifyf@x+1,w
  6997  1302  00A3               	movwf	___fpclassifyf@u+1
  6998  1303  0870               	movf	___fpclassifyf@x,w
  6999  1304  00A2               	movwf	___fpclassifyf@u
  7000  1305                     l3167:
  7001  1305  0822               	movf	___fpclassifyf@u,w
  7002  1306  00F4               	movwf	??___fpclassifyf
  7003  1307  0823               	movf	___fpclassifyf@u+1,w
  7004  1308  00F5               	movwf	??___fpclassifyf+1
  7005  1309  0824               	movf	___fpclassifyf@u+2,w
  7006  130A  00F6               	movwf	??___fpclassifyf+2
  7007  130B  0825               	movf	___fpclassifyf@u+3,w
  7008  130C  00F7               	movwf	??___fpclassifyf+3
  7009  130D  3017               	movlw	23
  7010  130E                     u4255:
  7011  130E  36F7               	lsrf	??___fpclassifyf+3,f
  7012  130F  0CF6               	rrf	??___fpclassifyf+2,f
  7013  1310  0CF5               	rrf	??___fpclassifyf+1,f
  7014  1311  0CF4               	rrf	??___fpclassifyf,f
  7015  1312                     u4250:
  7016  1312  0B89               	decfsz	9,f
  7017  1313  2B0E               	goto	u4255
  7018  1314  30FF               	movlw	255
  7019  1315  0574               	andwf	??___fpclassifyf,w
  7020  1316  00A0               	movwf	___fpclassifyf@e
  7021  1317  3000               	movlw	0
  7022  1318  0575               	andwf	??___fpclassifyf+1,w
  7023  1319  00A1               	movwf	___fpclassifyf@e+1
  7024  131A                     l3169:
  7025  131A  0820               	movf	___fpclassifyf@e,w
  7026  131B  0421               	iorwf	___fpclassifyf@e+1,w
  7027  131C  1D03               	btfss	3,2
  7028  131D  2B1F               	goto	u4261
  7029  131E  2B20               	goto	u4260
  7030  131F                     u4261:
  7031  131F  2B41               	goto	l3179
  7032  1320                     u4260:
  7033  1320                     l3171:
  7034  1320  0822               	movf	___fpclassifyf@u,w
  7035  1321  00F4               	movwf	??___fpclassifyf
  7036  1322  0823               	movf	___fpclassifyf@u+1,w
  7037  1323  00F5               	movwf	??___fpclassifyf+1
  7038  1324  0824               	movf	___fpclassifyf@u+2,w
  7039  1325  00F6               	movwf	??___fpclassifyf+2
  7040  1326  0825               	movf	___fpclassifyf@u+3,w
  7041  1327  00F7               	movwf	??___fpclassifyf+3
  7042  1328  3001               	movlw	1
  7043  1329                     u4275:
  7044  1329  35F4               	lslf	??___fpclassifyf,f
  7045  132A  0DF5               	rlf	??___fpclassifyf+1,f
  7046  132B  0DF6               	rlf	??___fpclassifyf+2,f
  7047  132C  0DF7               	rlf	??___fpclassifyf+3,f
  7048  132D                     u4270:
  7049  132D  0B89               	decfsz	9,f
  7050  132E  2B29               	goto	u4275
  7051  132F  0877               	movf	??___fpclassifyf+3,w
  7052  1330  0476               	iorwf	??___fpclassifyf+2,w
  7053  1331  0475               	iorwf	??___fpclassifyf+1,w
  7054  1332  0474               	iorwf	??___fpclassifyf,w
  7055  1333  1D03               	skipz
  7056  1334  2B36               	goto	u4281
  7057  1335  2B37               	goto	u4280
  7058  1336                     u4281:
  7059  1336  2B3C               	goto	l3175
  7060  1337                     u4280:
  7061  1337                     l3173:
  7062  1337  3002               	movlw	2
  7063  1338  00F0               	movwf	?___fpclassifyf
  7064  1339  3000               	movlw	0
  7065  133A  00F1               	movwf	?___fpclassifyf+1
  7066  133B  2B6B               	goto	l881
  7067  133C                     l3175:
  7068  133C  3003               	movlw	3
  7069  133D  00F0               	movwf	?___fpclassifyf
  7070  133E  3000               	movlw	0
  7071  133F  00F1               	movwf	?___fpclassifyf+1
  7072  1340  2B6B               	goto	l881
  7073  1341                     l3179:
  7074  1341  0A20               	incf	___fpclassifyf@e,w
  7075  1342  0421               	iorwf	___fpclassifyf@e+1,w
  7076  1343  1D03               	btfss	3,2
  7077  1344  2B46               	goto	u4291
  7078  1345  2B47               	goto	u4290
  7079  1346                     u4291:
  7080  1346  2B67               	goto	l3185
  7081  1347                     u4290:
  7082  1347                     l3181:
  7083  1347  0822               	movf	___fpclassifyf@u,w
  7084  1348  00F4               	movwf	??___fpclassifyf
  7085  1349  0823               	movf	___fpclassifyf@u+1,w
  7086  134A  00F5               	movwf	??___fpclassifyf+1
  7087  134B  0824               	movf	___fpclassifyf@u+2,w
  7088  134C  00F6               	movwf	??___fpclassifyf+2
  7089  134D  0825               	movf	___fpclassifyf@u+3,w
  7090  134E  00F7               	movwf	??___fpclassifyf+3
  7091  134F  3009               	movlw	9
  7092  1350                     u4305:
  7093  1350  35F4               	lslf	??___fpclassifyf,f
  7094  1351  0DF5               	rlf	??___fpclassifyf+1,f
  7095  1352  0DF6               	rlf	??___fpclassifyf+2,f
  7096  1353  0DF7               	rlf	??___fpclassifyf+3,f
  7097  1354                     u4300:
  7098  1354  0B89               	decfsz	9,f
  7099  1355  2B50               	goto	u4305
  7100  1356  0877               	movf	??___fpclassifyf+3,w
  7101  1357  0476               	iorwf	??___fpclassifyf+2,w
  7102  1358  0475               	iorwf	??___fpclassifyf+1,w
  7103  1359  0474               	iorwf	??___fpclassifyf,w
  7104  135A  1903               	skipnz
  7105  135B  2B5D               	goto	u4311
  7106  135C  2B5F               	goto	u4310
  7107  135D                     u4311:
  7108  135D  3001               	movlw	1
  7109  135E  2B60               	goto	u4320
  7110  135F                     u4310:
  7111  135F  3000               	movlw	0
  7112  1360                     u4320:
  7113  1360  00F8               	movwf	??___fpclassifyf+4
  7114  1361  01F9               	clrf	??___fpclassifyf+5
  7115  1362  0878               	movf	??___fpclassifyf+4,w
  7116  1363  00F0               	movwf	?___fpclassifyf
  7117  1364  0879               	movf	??___fpclassifyf+5,w
  7118  1365  00F1               	movwf	?___fpclassifyf+1
  7119  1366  2B6B               	goto	l881
  7120  1367                     l3185:
  7121  1367  3004               	movlw	4
  7122  1368  00F0               	movwf	?___fpclassifyf
  7123  1369  3000               	movlw	0
  7124  136A  00F1               	movwf	?___fpclassifyf+1
  7125  136B                     l881:
  7126  136B  0008               	return
  7127  136C                     __end_of___fpclassifyf:
  7128                           
  7129                           	psect	text16
  7130  000D                     __ptext16:	
  7131 ;; *************** function ___fltol *****************
  7132 ;; Defined at:
  7133 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  7134 ;; Parameters:    Size  Location     Type
  7135 ;;  f1              4    0[COMMON] int 
  7136 ;; Auto vars:     Size  Location     Type
  7137 ;;  exp1            1   10[COMMON] unsigned char 
  7138 ;;  sign1           1    9[COMMON] unsigned char 
  7139 ;; Return value:  Size  Location     Type
  7140 ;;                  4    0[COMMON] long 
  7141 ;; Registers used:
  7142 ;;		wreg, status,2, status,0
  7143 ;; Tracked objects:
  7144 ;;		On entry : 0/0
  7145 ;;		On exit  : 0/0
  7146 ;;		Unchanged: 0/0
  7147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7148 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7149 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7150 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7151 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7152 ;;Total ram usage:       11 bytes
  7153 ;; Hardware stack levels used: 1
  7154 ;; This function calls:
  7155 ;;		Nothing
  7156 ;; This function is called by:
  7157 ;;		_efgtoa
  7158 ;; This function uses a non-reentrant model
  7159 ;;
  7160                           
  7161  000D                     ___fltol:	
  7162                           ;psect for function ___fltol
  7163                           
  7164  000D                     l2821:	
  7165                           ;incstack = 0
  7166                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7167                           
  7168  000D  1003               	clrc
  7169  000E  0D72               	rlf	___fltol@f1+2,w
  7170  000F  0D73               	rlf	___fltol@f1+3,w
  7171  0010  00F4               	movwf	??___fltol
  7172  0011  0874               	movf	??___fltol,w
  7173  0012  00FA               	movwf	___fltol@exp1
  7174  0013  087A               	movf	___fltol@exp1,w
  7175  0014  1D03               	btfss	3,2
  7176  0015  2817               	goto	u3561
  7177  0016  2818               	goto	u3560
  7178  0017                     u3561:
  7179  0017  2821               	goto	l2827
  7180  0018                     u3560:
  7181  0018                     l2823:
  7182  0018  3000               	movlw	0
  7183  0019  00F3               	movwf	?___fltol+3
  7184  001A  3000               	movlw	0
  7185  001B  00F2               	movwf	?___fltol+2
  7186  001C  3000               	movlw	0
  7187  001D  00F1               	movwf	?___fltol+1
  7188  001E  3000               	movlw	0
  7189  001F  00F0               	movwf	?___fltol
  7190  0020  2880               	goto	l434
  7191  0021                     l2827:
  7192  0021  0870               	movf	___fltol@f1,w
  7193  0022  00F4               	movwf	??___fltol
  7194  0023  0871               	movf	___fltol@f1+1,w
  7195  0024  00F5               	movwf	??___fltol+1
  7196  0025  0872               	movf	___fltol@f1+2,w
  7197  0026  00F6               	movwf	??___fltol+2
  7198  0027  0873               	movf	___fltol@f1+3,w
  7199  0028  00F7               	movwf	??___fltol+3
  7200  0029  301F               	movlw	31
  7201  002A                     u3575:
  7202  002A  36F7               	lsrf	??___fltol+3,f
  7203  002B  0CF6               	rrf	??___fltol+2,f
  7204  002C  0CF5               	rrf	??___fltol+1,f
  7205  002D  0CF4               	rrf	??___fltol,f
  7206  002E                     u3570:
  7207  002E  0B89               	decfsz	9,f
  7208  002F  282A               	goto	u3575
  7209  0030  0874               	movf	??___fltol,w
  7210  0031  00F8               	movwf	??___fltol+4
  7211  0032  0878               	movf	??___fltol+4,w
  7212  0033  00F9               	movwf	___fltol@sign1
  7213  0034                     l2829:
  7214  0034  17F2               	bsf	___fltol@f1+2,7
  7215  0035                     l2831:
  7216  0035  30FF               	movlw	255
  7217  0036  05F0               	andwf	___fltol@f1,f
  7218  0037  30FF               	movlw	255
  7219  0038  05F1               	andwf	___fltol@f1+1,f
  7220  0039  30FF               	movlw	255
  7221  003A  05F2               	andwf	___fltol@f1+2,f
  7222  003B  3000               	movlw	0
  7223  003C  05F3               	andwf	___fltol@f1+3,f
  7224  003D                     l2833:
  7225  003D  3096               	movlw	150
  7226  003E  02FA               	subwf	___fltol@exp1,f
  7227  003F                     l2835:
  7228  003F  1FFA               	btfss	___fltol@exp1,7
  7229  0040  2842               	goto	u3581
  7230  0041  2843               	goto	u3580
  7231  0042                     u3581:
  7232  0042  285B               	goto	l2845
  7233  0043                     u3580:
  7234  0043                     l2837:
  7235  0043  087A               	movf	___fltol@exp1,w
  7236  0044  3A80               	xorlw	128
  7237  0045  3E97               	addlw	151
  7238  0046  1803               	skipnc
  7239  0047  2849               	goto	u3591
  7240  0048  284A               	goto	u3590
  7241  0049                     u3591:
  7242  0049  284B               	goto	l2843
  7243  004A                     u3590:
  7244  004A  2818               	goto	l2823
  7245  004B                     l2843:
  7246  004B  3001               	movlw	1
  7247  004C                     u3605:
  7248  004C  36F3               	lsrf	___fltol@f1+3,f
  7249  004D  0CF2               	rrf	___fltol@f1+2,f
  7250  004E  0CF1               	rrf	___fltol@f1+1,f
  7251  004F  0CF0               	rrf	___fltol@f1,f
  7252  0050  0B89               	decfsz	9,f
  7253  0051  284C               	goto	u3605
  7254  0052  3001               	movlw	1
  7255  0053  00F4               	movwf	??___fltol
  7256  0054  0874               	movf	??___fltol,w
  7257  0055  07FA               	addwf	___fltol@exp1,f
  7258  0056  1D03               	btfss	3,2
  7259  0057  2859               	goto	u3611
  7260  0058  285A               	goto	u3610
  7261  0059                     u3611:
  7262  0059  284B               	goto	l2843
  7263  005A                     u3610:
  7264  005A  2870               	goto	l2853
  7265  005B                     l2845:
  7266  005B  3020               	movlw	32
  7267  005C  027A               	subwf	___fltol@exp1,w
  7268  005D  1C03               	skipc
  7269  005E  2860               	goto	u3621
  7270  005F  2861               	goto	u3620
  7271  0060                     u3621:
  7272  0060  286B               	goto	l441
  7273  0061                     u3620:
  7274  0061  2818               	goto	l2823
  7275  0062                     l2851:
  7276  0062  3001               	movlw	1
  7277  0063                     u3635:
  7278  0063  35F0               	lslf	___fltol@f1,f
  7279  0064  0DF1               	rlf	___fltol@f1+1,f
  7280  0065  0DF2               	rlf	___fltol@f1+2,f
  7281  0066  0DF3               	rlf	___fltol@f1+3,f
  7282  0067  0B89               	decfsz	9,f
  7283  0068  2863               	goto	u3635
  7284  0069  3001               	movlw	1
  7285  006A  02FA               	subwf	___fltol@exp1,f
  7286  006B                     l441:
  7287  006B  087A               	movf	___fltol@exp1,w
  7288  006C  1D03               	btfss	3,2
  7289  006D  286F               	goto	u3641
  7290  006E  2870               	goto	u3640
  7291  006F                     u3641:
  7292  006F  2862               	goto	l2851
  7293  0070                     u3640:
  7294  0070                     l2853:
  7295  0070  0879               	movf	___fltol@sign1,w
  7296  0071  1903               	btfsc	3,2
  7297  0072  2874               	goto	u3651
  7298  0073  2875               	goto	u3650
  7299  0074                     u3651:
  7300  0074  2880               	goto	l444
  7301  0075                     u3650:
  7302  0075                     l2855:
  7303  0075  09F0               	comf	___fltol@f1,f
  7304  0076  09F1               	comf	___fltol@f1+1,f
  7305  0077  09F2               	comf	___fltol@f1+2,f
  7306  0078  09F3               	comf	___fltol@f1+3,f
  7307  0079  0AF0               	incf	___fltol@f1,f
  7308  007A  1903               	skipnz
  7309  007B  0AF1               	incf	___fltol@f1+1,f
  7310  007C  1903               	skipnz
  7311  007D  0AF2               	incf	___fltol@f1+2,f
  7312  007E  1903               	skipnz
  7313  007F  0AF3               	incf	___fltol@f1+3,f
  7314  0080                     l444:
  7315  0080                     l434:
  7316  0080  0008               	return
  7317  0081                     __end_of___fltol:
  7318                           
  7319                           	psect	text17
  7320  1F9E                     __ptext17:	
  7321 ;; *************** function ___flsub *****************
  7322 ;; Defined at:
  7323 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;  a               4   26[BANK0 ] long 
  7326 ;;  b               4   30[BANK0 ] long 
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;		None
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  4   26[BANK0 ] long 
  7331 ;; Registers used:
  7332 ;;		wreg, status,2, status,0, pclath, cstack
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7338 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7341 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7342 ;;Total ram usage:        8 bytes
  7343 ;; Hardware stack levels used: 1
  7344 ;; Hardware stack levels required when called: 1
  7345 ;; This function calls:
  7346 ;;		___fladd
  7347 ;; This function is called by:
  7348 ;;		_efgtoa
  7349 ;; This function uses a non-reentrant model
  7350 ;;
  7351                           
  7352  1F9E                     ___flsub:	
  7353                           ;psect for function ___flsub
  7354                           
  7355  1F9E                     l2857:	
  7356                           ;incstack = 0
  7357                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  7358                           
  7359  1F9E  3080               	movlw	128
  7360  1F9F  0020               	movlb	0	; select bank0
  7361  1FA0  06BD               	xorwf	___flsub@a+3,f
  7362  1FA1                     l2859:
  7363  1FA1  0841               	movf	___flsub@b+3,w
  7364  1FA2  00F3               	movwf	___fladd@b+3
  7365  1FA3  0840               	movf	___flsub@b+2,w
  7366  1FA4  00F2               	movwf	___fladd@b+2
  7367  1FA5  083F               	movf	___flsub@b+1,w
  7368  1FA6  00F1               	movwf	___fladd@b+1
  7369  1FA7  083E               	movf	___flsub@b,w
  7370  1FA8  00F0               	movwf	___fladd@b
  7371  1FA9  083D               	movf	___flsub@a+3,w
  7372  1FAA  00F7               	movwf	___fladd@a+3
  7373  1FAB  083C               	movf	___flsub@a+2,w
  7374  1FAC  00F6               	movwf	___fladd@a+2
  7375  1FAD  083B               	movf	___flsub@a+1,w
  7376  1FAE  00F5               	movwf	___fladd@a+1
  7377  1FAF  083A               	movf	___flsub@a,w
  7378  1FB0  00F4               	movwf	___fladd@a
  7379  1FB1  3188  20C4  319F   	fcall	___fladd
  7380  1FB4  0873               	movf	?___fladd+3,w
  7381  1FB5  0020               	movlb	0	; select bank0
  7382  1FB6  00BD               	movwf	?___flsub+3
  7383  1FB7  0872               	movf	?___fladd+2,w
  7384  1FB8  00BC               	movwf	?___flsub+2
  7385  1FB9  0871               	movf	?___fladd+1,w
  7386  1FBA  00BB               	movwf	?___flsub+1
  7387  1FBB  0870               	movf	?___fladd,w
  7388  1FBC  00BA               	movwf	?___flsub
  7389  1FBD                     l587:
  7390  1FBD  0008               	return
  7391  1FBE                     __end_of___flsub:
  7392                           
  7393                           	psect	text18
  7394  08C4                     __ptext18:	
  7395 ;; *************** function ___fladd *****************
  7396 ;; Defined at:
  7397 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  7398 ;; Parameters:    Size  Location     Type
  7399 ;;  b               4    0[COMMON] long 
  7400 ;;  a               4    4[COMMON] long 
  7401 ;; Auto vars:     Size  Location     Type
  7402 ;;  grs             1   11[COMMON] unsigned char 
  7403 ;;  bexp            1   10[COMMON] unsigned char 
  7404 ;;  aexp            1    9[COMMON] unsigned char 
  7405 ;;  signs           1    8[COMMON] unsigned char 
  7406 ;; Return value:  Size  Location     Type
  7407 ;;                  4    0[COMMON] unsigned char 
  7408 ;; Registers used:
  7409 ;;		wreg, status,2, status,0
  7410 ;; Tracked objects:
  7411 ;;		On entry : 0/0
  7412 ;;		On exit  : 0/0
  7413 ;;		Unchanged: 0/0
  7414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7415 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7416 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7417 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7418 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7419 ;;Total ram usage:       20 bytes
  7420 ;; Hardware stack levels used: 1
  7421 ;; This function calls:
  7422 ;;		Nothing
  7423 ;; This function is called by:
  7424 ;;		___flsub
  7425 ;;		_efgtoa
  7426 ;; This function uses a non-reentrant model
  7427 ;;
  7428                           
  7429  08C4                     ___fladd:	
  7430                           ;psect for function ___fladd
  7431                           
  7432  08C4                     l2455:	
  7433                           ;incstack = 0
  7434                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  7435                           
  7436  08C4  0873               	movf	___fladd@b+3,w
  7437  08C5  3980               	andlw	128
  7438  08C6  0020               	movlb	0	; select bank0
  7439  08C7  00A0               	movwf	??___fladd
  7440  08C8  0820               	movf	??___fladd,w
  7441  08C9  00F8               	movwf	___fladd@signs
  7442  08CA                     l2457:
  7443  08CA  3573               	lslf	___fladd@b+3,w
  7444  08CB  00A0               	movwf	??___fladd
  7445  08CC  0820               	movf	??___fladd,w
  7446  08CD  00FA               	movwf	___fladd@bexp
  7447  08CE                     l2459:
  7448  08CE  1FF2               	btfss	___fladd@b+2,7
  7449  08CF  28D1               	goto	u2741
  7450  08D0  28D2               	goto	u2740
  7451  08D1                     u2741:
  7452  08D1  28D3               	goto	l2463
  7453  08D2                     u2740:
  7454  08D2                     l2461:
  7455  08D2  147A               	bsf	___fladd@bexp,0
  7456  08D3                     l2463:
  7457  08D3  087A               	movf	___fladd@bexp,w
  7458  08D4  1903               	btfsc	3,2
  7459  08D5  28D7               	goto	u2751
  7460  08D6  28D8               	goto	u2750
  7461  08D7                     u2751:
  7462  08D7  28E8               	goto	l2473
  7463  08D8                     u2750:
  7464  08D8                     l2465:
  7465  08D8  0A7A               	incf	___fladd@bexp,w
  7466  08D9  1D03               	btfss	3,2
  7467  08DA  28DC               	goto	u2761
  7468  08DB  28DD               	goto	u2760
  7469  08DC                     u2761:
  7470  08DC  28E5               	goto	l2469
  7471  08DD                     u2760:
  7472  08DD                     l2467:
  7473  08DD  3000               	movlw	0
  7474  08DE  00F3               	movwf	___fladd@b+3
  7475  08DF  3000               	movlw	0
  7476  08E0  00F2               	movwf	___fladd@b+2
  7477  08E1  3000               	movlw	0
  7478  08E2  00F1               	movwf	___fladd@b+1
  7479  08E3  3000               	movlw	0
  7480  08E4  00F0               	movwf	___fladd@b
  7481  08E5                     l2469:
  7482  08E5  17F2               	bsf	___fladd@b+2,7
  7483  08E6                     l2471:
  7484  08E6  01F3               	clrf	___fladd@b+3
  7485  08E7  28F0               	goto	l2475
  7486  08E8                     l2473:
  7487  08E8  3000               	movlw	0
  7488  08E9  00F3               	movwf	___fladd@b+3
  7489  08EA  3000               	movlw	0
  7490  08EB  00F2               	movwf	___fladd@b+2
  7491  08EC  3000               	movlw	0
  7492  08ED  00F1               	movwf	___fladd@b+1
  7493  08EE  3000               	movlw	0
  7494  08EF  00F0               	movwf	___fladd@b
  7495  08F0                     l2475:
  7496  08F0  0877               	movf	___fladd@a+3,w
  7497  08F1  3980               	andlw	128
  7498  08F2  00A0               	movwf	??___fladd
  7499  08F3  0820               	movf	??___fladd,w
  7500  08F4  00F9               	movwf	___fladd@aexp
  7501  08F5                     l2477:
  7502  08F5  0879               	movf	___fladd@aexp,w
  7503  08F6  0678               	xorwf	___fladd@signs,w
  7504  08F7  1903               	skipnz
  7505  08F8  28FA               	goto	u2771
  7506  08F9  28FB               	goto	u2770
  7507  08FA                     u2771:
  7508  08FA  28FC               	goto	l2481
  7509  08FB                     u2770:
  7510  08FB                     l2479:
  7511  08FB  1778               	bsf	___fladd@signs,6
  7512  08FC                     l2481:
  7513  08FC  3577               	lslf	___fladd@a+3,w
  7514  08FD  00A0               	movwf	??___fladd
  7515  08FE  0820               	movf	??___fladd,w
  7516  08FF  00F9               	movwf	___fladd@aexp
  7517  0900                     l2483:
  7518  0900  1FF6               	btfss	___fladd@a+2,7
  7519  0901  2903               	goto	u2781
  7520  0902  2904               	goto	u2780
  7521  0903                     u2781:
  7522  0903  2905               	goto	l2487
  7523  0904                     u2780:
  7524  0904                     l2485:
  7525  0904  1479               	bsf	___fladd@aexp,0
  7526  0905                     l2487:
  7527  0905  0879               	movf	___fladd@aexp,w
  7528  0906  1903               	btfsc	3,2
  7529  0907  2909               	goto	u2791
  7530  0908  290A               	goto	u2790
  7531  0909                     u2791:
  7532  0909  291A               	goto	l2497
  7533  090A                     u2790:
  7534  090A                     l2489:
  7535  090A  0A79               	incf	___fladd@aexp,w
  7536  090B  1D03               	btfss	3,2
  7537  090C  290E               	goto	u2801
  7538  090D  290F               	goto	u2800
  7539  090E                     u2801:
  7540  090E  2917               	goto	l2493
  7541  090F                     u2800:
  7542  090F                     l2491:
  7543  090F  3000               	movlw	0
  7544  0910  00F7               	movwf	___fladd@a+3
  7545  0911  3000               	movlw	0
  7546  0912  00F6               	movwf	___fladd@a+2
  7547  0913  3000               	movlw	0
  7548  0914  00F5               	movwf	___fladd@a+1
  7549  0915  3000               	movlw	0
  7550  0916  00F4               	movwf	___fladd@a
  7551  0917                     l2493:
  7552  0917  17F6               	bsf	___fladd@a+2,7
  7553  0918                     l2495:
  7554  0918  01F7               	clrf	___fladd@a+3
  7555  0919  2922               	goto	l541
  7556  091A                     l2497:
  7557  091A  3000               	movlw	0
  7558  091B  00F7               	movwf	___fladd@a+3
  7559  091C  3000               	movlw	0
  7560  091D  00F6               	movwf	___fladd@a+2
  7561  091E  3000               	movlw	0
  7562  091F  00F5               	movwf	___fladd@a+1
  7563  0920  3000               	movlw	0
  7564  0921  00F4               	movwf	___fladd@a
  7565  0922                     l541:
  7566  0922  087A               	movf	___fladd@bexp,w
  7567  0923  0279               	subwf	___fladd@aexp,w
  7568  0924  1803               	skipnc
  7569  0925  2927               	goto	u2811
  7570  0926  2928               	goto	u2810
  7571  0927                     u2811:
  7572  0927  296C               	goto	l2533
  7573  0928                     u2810:
  7574  0928                     l2499:
  7575  0928  1F78               	btfss	___fladd@signs,6
  7576  0929  292B               	goto	u2821
  7577  092A  292C               	goto	u2820
  7578  092B                     u2821:
  7579  092B  2930               	goto	l2503
  7580  092C                     u2820:
  7581  092C                     l2501:
  7582  092C  3080               	movlw	128
  7583  092D  00A0               	movwf	??___fladd
  7584  092E  0820               	movf	??___fladd,w
  7585  092F  06F8               	xorwf	___fladd@signs,f
  7586  0930                     l2503:
  7587  0930  087A               	movf	___fladd@bexp,w
  7588  0931  00A0               	movwf	??___fladd
  7589  0932  0820               	movf	??___fladd,w
  7590  0933  00FB               	movwf	___fladd@grs
  7591  0934                     l2505:
  7592  0934  0879               	movf	___fladd@aexp,w
  7593  0935  00A0               	movwf	??___fladd
  7594  0936  0820               	movf	??___fladd,w
  7595  0937  00FA               	movwf	___fladd@bexp
  7596  0938                     l2507:
  7597  0938  087B               	movf	___fladd@grs,w
  7598  0939  00A0               	movwf	??___fladd
  7599  093A  0820               	movf	??___fladd,w
  7600  093B  00F9               	movwf	___fladd@aexp
  7601  093C                     l2509:
  7602  093C  0870               	movf	___fladd@b,w
  7603  093D  00A0               	movwf	??___fladd
  7604  093E  0820               	movf	??___fladd,w
  7605  093F  00FB               	movwf	___fladd@grs
  7606  0940                     l2511:
  7607  0940  0874               	movf	___fladd@a,w
  7608  0941  00A0               	movwf	??___fladd
  7609  0942  0820               	movf	??___fladd,w
  7610  0943  00F0               	movwf	___fladd@b
  7611  0944                     l2513:
  7612  0944  087B               	movf	___fladd@grs,w
  7613  0945  00A0               	movwf	??___fladd
  7614  0946  0820               	movf	??___fladd,w
  7615  0947  00F4               	movwf	___fladd@a
  7616  0948                     l2515:
  7617  0948  0871               	movf	___fladd@b+1,w
  7618  0949  00A0               	movwf	??___fladd
  7619  094A  0820               	movf	??___fladd,w
  7620  094B  00FB               	movwf	___fladd@grs
  7621  094C                     l2517:
  7622  094C  0875               	movf	___fladd@a+1,w
  7623  094D  00A0               	movwf	??___fladd
  7624  094E  0820               	movf	??___fladd,w
  7625  094F  00F1               	movwf	___fladd@b+1
  7626  0950                     l2519:
  7627  0950  087B               	movf	___fladd@grs,w
  7628  0951  00A0               	movwf	??___fladd
  7629  0952  0820               	movf	??___fladd,w
  7630  0953  00F5               	movwf	___fladd@a+1
  7631  0954                     l2521:
  7632  0954  0872               	movf	___fladd@b+2,w
  7633  0955  00A0               	movwf	??___fladd
  7634  0956  0820               	movf	??___fladd,w
  7635  0957  00FB               	movwf	___fladd@grs
  7636  0958                     l2523:
  7637  0958  0876               	movf	___fladd@a+2,w
  7638  0959  00A0               	movwf	??___fladd
  7639  095A  0820               	movf	??___fladd,w
  7640  095B  00F2               	movwf	___fladd@b+2
  7641  095C                     l2525:
  7642  095C  087B               	movf	___fladd@grs,w
  7643  095D  00A0               	movwf	??___fladd
  7644  095E  0820               	movf	??___fladd,w
  7645  095F  00F6               	movwf	___fladd@a+2
  7646  0960                     l2527:
  7647  0960  0873               	movf	___fladd@b+3,w
  7648  0961  00A0               	movwf	??___fladd
  7649  0962  0820               	movf	??___fladd,w
  7650  0963  00FB               	movwf	___fladd@grs
  7651  0964                     l2529:
  7652  0964  0877               	movf	___fladd@a+3,w
  7653  0965  00A0               	movwf	??___fladd
  7654  0966  0820               	movf	??___fladd,w
  7655  0967  00F3               	movwf	___fladd@b+3
  7656  0968                     l2531:
  7657  0968  087B               	movf	___fladd@grs,w
  7658  0969  00A0               	movwf	??___fladd
  7659  096A  0820               	movf	??___fladd,w
  7660  096B  00F7               	movwf	___fladd@a+3
  7661  096C                     l2533:
  7662  096C  01FB               	clrf	___fladd@grs
  7663  096D                     l2535:
  7664  096D  0879               	movf	___fladd@aexp,w
  7665  096E  00A0               	movwf	??___fladd
  7666  096F  01A1               	clrf	??___fladd+1
  7667  0970  0821               	movf	??___fladd+1,w
  7668  0971  00A3               	movwf	??___fladd+3
  7669  0972  087A               	movf	___fladd@bexp,w
  7670  0973  0220               	subwf	??___fladd,w
  7671  0974  00A2               	movwf	??___fladd+2
  7672  0975  1C03               	skipc
  7673  0976  03A3               	decf	??___fladd+3,f
  7674  0977  0823               	movf	??___fladd+3,w
  7675  0978  3A80               	xorlw	128
  7676  0979  00A4               	movwf	??___fladd+4
  7677  097A  3080               	movlw	128
  7678  097B  0224               	subwf	??___fladd+4,w
  7679  097C  1D03               	skipz
  7680  097D  2980               	goto	u2835
  7681  097E  301A               	movlw	26
  7682  097F  0222               	subwf	??___fladd+2,w
  7683  0980                     u2835:
  7684  0980  1C03               	skipc
  7685  0981  2983               	goto	u2831
  7686  0982  2984               	goto	u2830
  7687  0983                     u2831:
  7688  0983  29BE               	goto	l2551
  7689  0984                     u2830:
  7690  0984                     l2537:
  7691  0984  0873               	movf	___fladd@b+3,w
  7692  0985  0472               	iorwf	___fladd@b+2,w
  7693  0986  0471               	iorwf	___fladd@b+1,w
  7694  0987  0470               	iorwf	___fladd@b,w
  7695  0988  1D03               	skipz
  7696  0989  298B               	goto	u2841
  7697  098A  298D               	goto	u2840
  7698  098B                     u2841:
  7699  098B  3001               	movlw	1
  7700  098C  298E               	goto	u2850
  7701  098D                     u2840:
  7702  098D  3000               	movlw	0
  7703  098E                     u2850:
  7704  098E  0020               	movlb	0	; select bank0
  7705  098F  00A0               	movwf	??___fladd
  7706  0990  0820               	movf	??___fladd,w
  7707  0991  00FB               	movwf	___fladd@grs
  7708  0992  3000               	movlw	0
  7709  0993  00F3               	movwf	___fladd@b+3
  7710  0994  3000               	movlw	0
  7711  0995  00F2               	movwf	___fladd@b+2
  7712  0996  3000               	movlw	0
  7713  0997  00F1               	movwf	___fladd@b+1
  7714  0998  3000               	movlw	0
  7715  0999  00F0               	movwf	___fladd@b
  7716  099A  0879               	movf	___fladd@aexp,w
  7717  099B  00A0               	movwf	??___fladd
  7718  099C  0820               	movf	??___fladd,w
  7719  099D  00FA               	movwf	___fladd@bexp
  7720  099E  29C4               	goto	l545
  7721  099F                     l547:
  7722  099F  1C7B               	btfss	___fladd@grs,0
  7723  09A0  29A2               	goto	u2861
  7724  09A1  29A3               	goto	u2860
  7725  09A2                     u2861:
  7726  09A2  29AA               	goto	l2541
  7727  09A3                     u2860:
  7728  09A3                     l2539:
  7729  09A3  367B               	lsrf	___fladd@grs,w
  7730  09A4  3801               	iorlw	1
  7731  09A5  0020               	movlb	0	; select bank0
  7732  09A6  00A0               	movwf	??___fladd
  7733  09A7  0820               	movf	??___fladd,w
  7734  09A8  00FB               	movwf	___fladd@grs
  7735  09A9  29AC               	goto	l2543
  7736  09AA                     l2541:
  7737  09AA  1003               	clrc
  7738  09AB  0CFB               	rrf	___fladd@grs,f
  7739  09AC                     l2543:
  7740  09AC  1C70               	btfss	___fladd@b,0
  7741  09AD  29AF               	goto	u2871
  7742  09AE  29B0               	goto	u2870
  7743  09AF                     u2871:
  7744  09AF  29B1               	goto	l2547
  7745  09B0                     u2870:
  7746  09B0                     l2545:
  7747  09B0  17FB               	bsf	___fladd@grs,7
  7748  09B1                     l2547:
  7749  09B1  3001               	movlw	1
  7750  09B2  0020               	movlb	0	; select bank0
  7751  09B3  00A0               	movwf	??___fladd
  7752  09B4                     u2885:
  7753  09B4  37F3               	asrf	___fladd@b+3,f
  7754  09B5  0CF2               	rrf	___fladd@b+2,f
  7755  09B6  0CF1               	rrf	___fladd@b+1,f
  7756  09B7  0CF0               	rrf	___fladd@b,f
  7757  09B8  0BA0               	decfsz	??___fladd& (0+127),f
  7758  09B9  29B4               	goto	u2885
  7759  09BA                     l2549:
  7760  09BA  3001               	movlw	1
  7761  09BB  00A0               	movwf	??___fladd
  7762  09BC  0820               	movf	??___fladd,w
  7763  09BD  07FA               	addwf	___fladd@bexp,f
  7764  09BE                     l2551:
  7765  09BE  0879               	movf	___fladd@aexp,w
  7766  09BF  027A               	subwf	___fladd@bexp,w
  7767  09C0  1C03               	skipc
  7768  09C1  29C3               	goto	u2891
  7769  09C2  29C4               	goto	u2890
  7770  09C3                     u2891:
  7771  09C3  299F               	goto	l547
  7772  09C4                     u2890:
  7773  09C4                     l545:
  7774  09C4  1B78               	btfsc	___fladd@signs,6
  7775  09C5  29C7               	goto	u2901
  7776  09C6  29C8               	goto	u2900
  7777  09C7                     u2901:
  7778  09C7  2A02               	goto	l2577
  7779  09C8                     u2900:
  7780  09C8                     l2553:
  7781  09C8  087A               	movf	___fladd@bexp,w
  7782  09C9  1D03               	btfss	3,2
  7783  09CA  29CC               	goto	u2911
  7784  09CB  29CD               	goto	u2910
  7785  09CC                     u2911:
  7786  09CC  29D6               	goto	l2559
  7787  09CD                     u2910:
  7788  09CD                     l2555:
  7789  09CD  3000               	movlw	0
  7790  09CE  00F3               	movwf	?___fladd+3
  7791  09CF  3000               	movlw	0
  7792  09D0  00F2               	movwf	?___fladd+2
  7793  09D1  3000               	movlw	0
  7794  09D2  00F1               	movwf	?___fladd+1
  7795  09D3  3000               	movlw	0
  7796  09D4  00F0               	movwf	?___fladd
  7797  09D5  2B02               	goto	l554
  7798  09D6                     l2559:
  7799  09D6  0874               	movf	___fladd@a,w
  7800  09D7  07F0               	addwf	___fladd@b,f
  7801  09D8  0875               	movf	___fladd@a+1,w
  7802  09D9  3DF1               	addwfc	___fladd@b+1,f
  7803  09DA  0876               	movf	___fladd@a+2,w
  7804  09DB  3DF2               	addwfc	___fladd@b+2,f
  7805  09DC  0877               	movf	___fladd@a+3,w
  7806  09DD  3DF3               	addwfc	___fladd@b+3,f
  7807  09DE                     l2561:
  7808  09DE  1C73               	btfss	___fladd@b+3,0
  7809  09DF  29E1               	goto	u2921
  7810  09E0  29E2               	goto	u2920
  7811  09E1                     u2921:
  7812  09E1  2A8F               	goto	l2611
  7813  09E2                     u2920:
  7814  09E2                     l2563:
  7815  09E2  1C7B               	btfss	___fladd@grs,0
  7816  09E3  29E5               	goto	u2931
  7817  09E4  29E6               	goto	u2930
  7818  09E5                     u2931:
  7819  09E5  29ED               	goto	l2567
  7820  09E6                     u2930:
  7821  09E6                     l2565:
  7822  09E6  367B               	lsrf	___fladd@grs,w
  7823  09E7  3801               	iorlw	1
  7824  09E8  0020               	movlb	0	; select bank0
  7825  09E9  00A0               	movwf	??___fladd
  7826  09EA  0820               	movf	??___fladd,w
  7827  09EB  00FB               	movwf	___fladd@grs
  7828  09EC  29EF               	goto	l2569
  7829  09ED                     l2567:
  7830  09ED  1003               	clrc
  7831  09EE  0CFB               	rrf	___fladd@grs,f
  7832  09EF                     l2569:
  7833  09EF  1C70               	btfss	___fladd@b,0
  7834  09F0  29F2               	goto	u2941
  7835  09F1  29F3               	goto	u2940
  7836  09F2                     u2941:
  7837  09F2  29F4               	goto	l2573
  7838  09F3                     u2940:
  7839  09F3                     l2571:
  7840  09F3  17FB               	bsf	___fladd@grs,7
  7841  09F4                     l2573:
  7842  09F4  3001               	movlw	1
  7843  09F5  0020               	movlb	0	; select bank0
  7844  09F6  00A0               	movwf	??___fladd
  7845  09F7                     u2955:
  7846  09F7  37F3               	asrf	___fladd@b+3,f
  7847  09F8  0CF2               	rrf	___fladd@b+2,f
  7848  09F9  0CF1               	rrf	___fladd@b+1,f
  7849  09FA  0CF0               	rrf	___fladd@b,f
  7850  09FB  0BA0               	decfsz	??___fladd& (0+127),f
  7851  09FC  29F7               	goto	u2955
  7852  09FD                     l2575:
  7853  09FD  3001               	movlw	1
  7854  09FE  00A0               	movwf	??___fladd
  7855  09FF  0820               	movf	??___fladd,w
  7856  0A00  07FA               	addwf	___fladd@bexp,f
  7857  0A01  2A8F               	goto	l2611
  7858  0A02                     l2577:
  7859  0A02  0873               	movf	___fladd@b+3,w
  7860  0A03  3A80               	xorlw	128
  7861  0A04  0020               	movlb	0	; select bank0
  7862  0A05  00A0               	movwf	??___fladd
  7863  0A06  0877               	movf	___fladd@a+3,w
  7864  0A07  3A80               	xorlw	128
  7865  0A08  0220               	subwf	??___fladd,w
  7866  0A09  1D03               	skipz
  7867  0A0A  2A15               	goto	u2963
  7868  0A0B  0876               	movf	___fladd@a+2,w
  7869  0A0C  0272               	subwf	___fladd@b+2,w
  7870  0A0D  1D03               	skipz
  7871  0A0E  2A15               	goto	u2963
  7872  0A0F  0875               	movf	___fladd@a+1,w
  7873  0A10  0271               	subwf	___fladd@b+1,w
  7874  0A11  1D03               	skipz
  7875  0A12  2A15               	goto	u2963
  7876  0A13  0874               	movf	___fladd@a,w
  7877  0A14  0270               	subwf	___fladd@b,w
  7878  0A15                     u2963:
  7879  0A15  1803               	skipnc
  7880  0A16  2A18               	goto	u2961
  7881  0A17  2A19               	goto	u2960
  7882  0A18                     u2961:
  7883  0A18  2A51               	goto	l2587
  7884  0A19                     u2960:
  7885  0A19                     l2579:
  7886  0A19  30FF               	movlw	255
  7887  0A1A  00A0               	movwf	??___fladd
  7888  0A1B  30FF               	movlw	255
  7889  0A1C  00A1               	movwf	??___fladd+1
  7890  0A1D  30FF               	movlw	255
  7891  0A1E  00A2               	movwf	??___fladd+2
  7892  0A1F  30FF               	movlw	255
  7893  0A20  00A3               	movwf	??___fladd+3
  7894  0A21  0870               	movf	___fladd@b,w
  7895  0A22  0274               	subwf	___fladd@a,w
  7896  0A23  00A4               	movwf	??___fladd+4
  7897  0A24  0871               	movf	___fladd@b+1,w
  7898  0A25  3B75               	subwfb	___fladd@a+1,w
  7899  0A26  00A5               	movwf	??___fladd+5
  7900  0A27  0872               	movf	___fladd@b+2,w
  7901  0A28  3B76               	subwfb	___fladd@a+2,w
  7902  0A29  00A6               	movwf	??___fladd+6
  7903  0A2A  0873               	movf	___fladd@b+3,w
  7904  0A2B  3B77               	subwfb	___fladd@a+3,w
  7905  0A2C  00A7               	movwf	??___fladd+7
  7906  0A2D  0824               	movf	??___fladd+4,w
  7907  0A2E  07A0               	addwf	??___fladd,f
  7908  0A2F  0825               	movf	??___fladd+5,w
  7909  0A30  3DA1               	addwfc	??___fladd+1,f
  7910  0A31  0826               	movf	??___fladd+6,w
  7911  0A32  3DA2               	addwfc	??___fladd+2,f
  7912  0A33  0827               	movf	??___fladd+7,w
  7913  0A34  3DA3               	addwfc	??___fladd+3,f
  7914  0A35  0823               	movf	??___fladd+3,w
  7915  0A36  00F3               	movwf	___fladd@b+3
  7916  0A37  0822               	movf	??___fladd+2,w
  7917  0A38  00F2               	movwf	___fladd@b+2
  7918  0A39  0821               	movf	??___fladd+1,w
  7919  0A3A  00F1               	movwf	___fladd@b+1
  7920  0A3B  0820               	movf	??___fladd,w
  7921  0A3C  00F0               	movwf	___fladd@b
  7922  0A3D                     l2581:
  7923  0A3D  3080               	movlw	128
  7924  0A3E  00A0               	movwf	??___fladd
  7925  0A3F  0820               	movf	??___fladd,w
  7926  0A40  06F8               	xorwf	___fladd@signs,f
  7927  0A41  09FB               	comf	___fladd@grs,f
  7928  0A42  0AFB               	incf	___fladd@grs,f
  7929  0A43                     l2583:
  7930  0A43  087B               	movf	___fladd@grs,w
  7931  0A44  1D03               	btfss	3,2
  7932  0A45  2A47               	goto	u2971
  7933  0A46  2A48               	goto	u2970
  7934  0A47                     u2971:
  7935  0A47  2A59               	goto	l562
  7936  0A48                     u2970:
  7937  0A48                     l2585:
  7938  0A48  3001               	movlw	1
  7939  0A49  07F0               	addwf	___fladd@b,f
  7940  0A4A  3000               	movlw	0
  7941  0A4B  3DF1               	addwfc	___fladd@b+1,f
  7942  0A4C  3000               	movlw	0
  7943  0A4D  3DF2               	addwfc	___fladd@b+2,f
  7944  0A4E  3000               	movlw	0
  7945  0A4F  3DF3               	addwfc	___fladd@b+3,f
  7946  0A50  2A59               	goto	l562
  7947  0A51                     l2587:
  7948  0A51  0874               	movf	___fladd@a,w
  7949  0A52  02F0               	subwf	___fladd@b,f
  7950  0A53  0875               	movf	___fladd@a+1,w
  7951  0A54  3BF1               	subwfb	___fladd@b+1,f
  7952  0A55  0876               	movf	___fladd@a+2,w
  7953  0A56  3BF2               	subwfb	___fladd@b+2,f
  7954  0A57  0877               	movf	___fladd@a+3,w
  7955  0A58  3BF3               	subwfb	___fladd@b+3,f
  7956  0A59                     l562:
  7957  0A59  0873               	movf	___fladd@b+3,w
  7958  0A5A  0472               	iorwf	___fladd@b+2,w
  7959  0A5B  0471               	iorwf	___fladd@b+1,w
  7960  0A5C  0470               	iorwf	___fladd@b,w
  7961  0A5D  1D03               	skipz
  7962  0A5E  2A60               	goto	u2981
  7963  0A5F  2A61               	goto	u2980
  7964  0A60                     u2981:
  7965  0A60  2A8B               	goto	l2609
  7966  0A61                     u2980:
  7967  0A61                     l2589:
  7968  0A61  087B               	movf	___fladd@grs,w
  7969  0A62  1D03               	btfss	3,2
  7970  0A63  2A65               	goto	u2991
  7971  0A64  2A66               	goto	u2990
  7972  0A65                     u2991:
  7973  0A65  2A8B               	goto	l2609
  7974  0A66                     u2990:
  7975  0A66                     l2591:
  7976  0A66  3000               	movlw	0
  7977  0A67  00F3               	movwf	?___fladd+3
  7978  0A68  3000               	movlw	0
  7979  0A69  00F2               	movwf	?___fladd+2
  7980  0A6A  3000               	movlw	0
  7981  0A6B  00F1               	movwf	?___fladd+1
  7982  0A6C  3000               	movlw	0
  7983  0A6D  00F0               	movwf	?___fladd
  7984  0A6E  2B02               	goto	l554
  7985  0A6F                     l2595:
  7986  0A6F  3001               	movlw	1
  7987  0A70                     u3005:
  7988  0A70  35F0               	lslf	___fladd@b,f
  7989  0A71  0DF1               	rlf	___fladd@b+1,f
  7990  0A72  0DF2               	rlf	___fladd@b+2,f
  7991  0A73  0DF3               	rlf	___fladd@b+3,f
  7992  0A74  0B89               	decfsz	9,f
  7993  0A75  2A70               	goto	u3005
  7994  0A76                     l2597:
  7995  0A76  1FFB               	btfss	___fladd@grs,7
  7996  0A77  2A79               	goto	u3011
  7997  0A78  2A7A               	goto	u3010
  7998  0A79                     u3011:
  7999  0A79  2A7B               	goto	l566
  8000  0A7A                     u3010:
  8001  0A7A                     l2599:
  8002  0A7A  1470               	bsf	___fladd@b,0
  8003  0A7B                     l566:
  8004  0A7B  1C7B               	btfss	___fladd@grs,0
  8005  0A7C  2A7E               	goto	u3021
  8006  0A7D  2A7F               	goto	u3020
  8007  0A7E                     u3021:
  8008  0A7E  2A82               	goto	l2603
  8009  0A7F                     u3020:
  8010  0A7F                     l2601:
  8011  0A7F  1403               	setc
  8012  0A80  0DFB               	rlf	___fladd@grs,f
  8013  0A81  2A84               	goto	l2605
  8014  0A82                     l2603:
  8015  0A82  1003               	clrc
  8016  0A83  0DFB               	rlf	___fladd@grs,f
  8017  0A84                     l2605:
  8018  0A84  087A               	movf	___fladd@bexp,w
  8019  0A85  1903               	btfsc	3,2
  8020  0A86  2A88               	goto	u3031
  8021  0A87  2A89               	goto	u3030
  8022  0A88                     u3031:
  8023  0A88  2A8B               	goto	l2609
  8024  0A89                     u3030:
  8025  0A89                     l2607:
  8026  0A89  3001               	movlw	1
  8027  0A8A  02FA               	subwf	___fladd@bexp,f
  8028  0A8B                     l2609:
  8029  0A8B  1FF2               	btfss	___fladd@b+2,7
  8030  0A8C  2A8E               	goto	u3041
  8031  0A8D  2A8F               	goto	u3040
  8032  0A8E                     u3041:
  8033  0A8E  2A6F               	goto	l2595
  8034  0A8F                     u3040:
  8035  0A8F                     l2611:
  8036  0A8F  01F9               	clrf	___fladd@aexp
  8037  0A90                     l2613:
  8038  0A90  1FFB               	btfss	___fladd@grs,7
  8039  0A91  2A93               	goto	u3051
  8040  0A92  2A94               	goto	u3050
  8041  0A93                     u3051:
  8042  0A93  2AA2               	goto	l2621
  8043  0A94                     u3050:
  8044  0A94                     l2615:
  8045  0A94  087B               	movf	___fladd@grs,w
  8046  0A95  397F               	andlw	127
  8047  0A96  1903               	btfsc	3,2
  8048  0A97  2A99               	goto	u3061
  8049  0A98  2A9A               	goto	u3060
  8050  0A99                     u3061:
  8051  0A99  2A9D               	goto	l572
  8052  0A9A                     u3060:
  8053  0A9A                     l2617:
  8054  0A9A  01F9               	clrf	___fladd@aexp
  8055  0A9B  0AF9               	incf	___fladd@aexp,f
  8056  0A9C  2AA2               	goto	l2621
  8057  0A9D                     l572:
  8058  0A9D  1C70               	btfss	___fladd@b,0
  8059  0A9E  2AA0               	goto	u3071
  8060  0A9F  2AA1               	goto	u3070
  8061  0AA0                     u3071:
  8062  0AA0  2AA2               	goto	l2621
  8063  0AA1                     u3070:
  8064  0AA1  2A9A               	goto	l2617
  8065  0AA2                     l2621:
  8066  0AA2  0879               	movf	___fladd@aexp,w
  8067  0AA3  1903               	btfsc	3,2
  8068  0AA4  2AA6               	goto	u3081
  8069  0AA5  2AA7               	goto	u3080
  8070  0AA6                     u3081:
  8071  0AA6  2AD5               	goto	l575
  8072  0AA7                     u3080:
  8073  0AA7                     l2623:
  8074  0AA7  3001               	movlw	1
  8075  0AA8  07F0               	addwf	___fladd@b,f
  8076  0AA9  3000               	movlw	0
  8077  0AAA  3DF1               	addwfc	___fladd@b+1,f
  8078  0AAB  3000               	movlw	0
  8079  0AAC  3DF2               	addwfc	___fladd@b+2,f
  8080  0AAD  3000               	movlw	0
  8081  0AAE  3DF3               	addwfc	___fladd@b+3,f
  8082  0AAF                     l2625:
  8083  0AAF  1C73               	btfss	___fladd@b+3,0
  8084  0AB0  2AB2               	goto	u3091
  8085  0AB1  2AB3               	goto	u3090
  8086  0AB2                     u3091:
  8087  0AB2  2AD5               	goto	l575
  8088  0AB3                     u3090:
  8089  0AB3                     l2627:
  8090  0AB3  0870               	movf	___fladd@b,w
  8091  0AB4  0020               	movlb	0	; select bank0
  8092  0AB5  00A0               	movwf	??___fladd
  8093  0AB6  0871               	movf	___fladd@b+1,w
  8094  0AB7  00A1               	movwf	??___fladd+1
  8095  0AB8  0872               	movf	___fladd@b+2,w
  8096  0AB9  00A2               	movwf	??___fladd+2
  8097  0ABA  0873               	movf	___fladd@b+3,w
  8098  0ABB  00A3               	movwf	??___fladd+3
  8099  0ABC  3001               	movlw	1
  8100  0ABD  00A4               	movwf	??___fladd+4
  8101  0ABE                     u3105:
  8102  0ABE  37A3               	asrf	??___fladd+3,f
  8103  0ABF  0CA2               	rrf	??___fladd+2,f
  8104  0AC0  0CA1               	rrf	??___fladd+1,f
  8105  0AC1  0CA0               	rrf	??___fladd,f
  8106  0AC2                     u3100:
  8107  0AC2  0BA4               	decfsz	??___fladd+4,f
  8108  0AC3  2ABE               	goto	u3105
  8109  0AC4  0823               	movf	??___fladd+3,w
  8110  0AC5  00F3               	movwf	___fladd@b+3
  8111  0AC6  0822               	movf	??___fladd+2,w
  8112  0AC7  00F2               	movwf	___fladd@b+2
  8113  0AC8  0821               	movf	??___fladd+1,w
  8114  0AC9  00F1               	movwf	___fladd@b+1
  8115  0ACA  0820               	movf	??___fladd,w
  8116  0ACB  00F0               	movwf	___fladd@b
  8117  0ACC  0A7A               	incf	___fladd@bexp,w
  8118  0ACD  1903               	btfsc	3,2
  8119  0ACE  2AD0               	goto	u3111
  8120  0ACF  2AD1               	goto	u3110
  8121  0AD0                     u3111:
  8122  0AD0  2AD5               	goto	l575
  8123  0AD1                     u3110:
  8124  0AD1                     l2629:
  8125  0AD1  3001               	movlw	1
  8126  0AD2  00A0               	movwf	??___fladd
  8127  0AD3  0820               	movf	??___fladd,w
  8128  0AD4  07FA               	addwf	___fladd@bexp,f
  8129  0AD5                     l575:
  8130  0AD5  0A7A               	incf	___fladd@bexp,w
  8131  0AD6  1903               	btfsc	3,2
  8132  0AD7  2AD9               	goto	u3121
  8133  0AD8  2ADA               	goto	u3120
  8134  0AD9                     u3121:
  8135  0AD9  2ADF               	goto	l2633
  8136  0ADA                     u3120:
  8137  0ADA                     l2631:
  8138  0ADA  087A               	movf	___fladd@bexp,w
  8139  0ADB  1D03               	btfss	3,2
  8140  0ADC  2ADE               	goto	u3131
  8141  0ADD  2ADF               	goto	u3130
  8142  0ADE                     u3131:
  8143  0ADE  2AED               	goto	l2639
  8144  0ADF                     u3130:
  8145  0ADF                     l2633:
  8146  0ADF  3000               	movlw	0
  8147  0AE0  00F3               	movwf	___fladd@b+3
  8148  0AE1  3000               	movlw	0
  8149  0AE2  00F2               	movwf	___fladd@b+2
  8150  0AE3  3000               	movlw	0
  8151  0AE4  00F1               	movwf	___fladd@b+1
  8152  0AE5  3000               	movlw	0
  8153  0AE6  00F0               	movwf	___fladd@b
  8154  0AE7                     l2635:
  8155  0AE7  087A               	movf	___fladd@bexp,w
  8156  0AE8  1D03               	btfss	3,2
  8157  0AE9  2AEB               	goto	u3141
  8158  0AEA  2AEC               	goto	u3140
  8159  0AEB                     u3141:
  8160  0AEB  2AED               	goto	l2639
  8161  0AEC                     u3140:
  8162  0AEC                     l2637:
  8163  0AEC  01F8               	clrf	___fladd@signs
  8164  0AED                     l2639:
  8165  0AED  1C7A               	btfss	___fladd@bexp,0
  8166  0AEE  2AF0               	goto	u3151
  8167  0AEF  2AF1               	goto	u3150
  8168  0AF0                     u3151:
  8169  0AF0  2AF3               	goto	l2643
  8170  0AF1                     u3150:
  8171  0AF1                     l2641:
  8172  0AF1  17F2               	bsf	___fladd@b+2,7
  8173  0AF2  2AF8               	goto	l583
  8174  0AF3                     l2643:
  8175  0AF3  307F               	movlw	127
  8176  0AF4  0020               	movlb	0	; select bank0
  8177  0AF5  00A0               	movwf	??___fladd
  8178  0AF6  0820               	movf	??___fladd,w
  8179  0AF7  05F2               	andwf	___fladd@b+2,f
  8180  0AF8                     l583:
  8181  0AF8  367A               	lsrf	___fladd@bexp,w
  8182  0AF9  0020               	movlb	0	; select bank0
  8183  0AFA  00A0               	movwf	??___fladd
  8184  0AFB  0820               	movf	??___fladd,w
  8185  0AFC  00F3               	movwf	___fladd@b+3
  8186  0AFD                     l2645:
  8187  0AFD  1FF8               	btfss	___fladd@signs,7
  8188  0AFE  2B00               	goto	u3161
  8189  0AFF  2B01               	goto	u3160
  8190  0B00                     u3161:
  8191  0B00  2B02               	goto	l584
  8192  0B01                     u3160:
  8193  0B01                     l2647:
  8194  0B01  17F3               	bsf	___fladd@b+3,7
  8195  0B02                     l584:
  8196  0B02                     l554:
  8197  0B02  0008               	return
  8198  0B03                     __end_of___fladd:
  8199                           
  8200                           	psect	text19
  8201  1EF1                     __ptext19:	
  8202 ;; *************** function ___flneg *****************
  8203 ;; Defined at:
  8204 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  8205 ;; Parameters:    Size  Location     Type
  8206 ;;  f1              4    0[COMMON] unsigned char 
  8207 ;; Auto vars:     Size  Location     Type
  8208 ;;		None
  8209 ;; Return value:  Size  Location     Type
  8210 ;;                  4    0[COMMON] unsigned char 
  8211 ;; Registers used:
  8212 ;;		wreg
  8213 ;; Tracked objects:
  8214 ;;		On entry : 0/0
  8215 ;;		On exit  : 0/0
  8216 ;;		Unchanged: 0/0
  8217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8218 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8221 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8222 ;;Total ram usage:        4 bytes
  8223 ;; Hardware stack levels used: 1
  8224 ;; This function calls:
  8225 ;;		Nothing
  8226 ;; This function is called by:
  8227 ;;		_efgtoa
  8228 ;; This function uses a non-reentrant model
  8229 ;;
  8230                           
  8231  1EF1                     ___flneg:	
  8232                           ;psect for function ___flneg
  8233                           
  8234  1EF1                     l2813:	
  8235                           ;incstack = 0
  8236                           ; Regs used in ___flneg: [wreg]
  8237                           
  8238  1EF1  0873               	movf	___flneg@f1+3,w
  8239  1EF2  0472               	iorwf	___flneg@f1+2,w
  8240  1EF3  0471               	iorwf	___flneg@f1+1,w
  8241  1EF4  0470               	iorwf	___flneg@f1,w
  8242  1EF5  1903               	skipnz
  8243  1EF6  2EF8               	goto	u3551
  8244  1EF7  2EF9               	goto	u3550
  8245  1EF8                     u3551:
  8246  1EF8  2EFB               	goto	l2817
  8247  1EF9                     u3550:
  8248  1EF9                     l2815:
  8249  1EF9  3080               	movlw	128
  8250  1EFA  06F3               	xorwf	___flneg@f1+3,f
  8251  1EFB                     l2817:
  8252  1EFB                     l430:
  8253  1EFB  0008               	return
  8254  1EFC                     __end_of___flneg:
  8255                           
  8256                           	psect	text20
  8257  0B03                     __ptext20:	
  8258 ;; *************** function ___flmul *****************
  8259 ;; Defined at:
  8260 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  8261 ;; Parameters:    Size  Location     Type
  8262 ;;  b               4    0[BANK0 ] unsigned char 
  8263 ;;  a               4    4[BANK0 ] unsigned char 
  8264 ;; Auto vars:     Size  Location     Type
  8265 ;;  prod            4   20[BANK0 ] struct .
  8266 ;;  grs             4   14[BANK0 ] unsigned long 
  8267 ;;  temp            2   24[BANK0 ] struct .
  8268 ;;  bexp            1   19[BANK0 ] unsigned char 
  8269 ;;  aexp            1   18[BANK0 ] unsigned char 
  8270 ;;  sign            1   13[BANK0 ] unsigned char 
  8271 ;; Return value:  Size  Location     Type
  8272 ;;                  4    0[BANK0 ] unsigned char 
  8273 ;; Registers used:
  8274 ;;		wreg, status,2, status,0, pclath, cstack
  8275 ;; Tracked objects:
  8276 ;;		On entry : 0/0
  8277 ;;		On exit  : 0/0
  8278 ;;		Unchanged: 0/0
  8279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8280 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8281 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8282 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8283 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8284 ;;Total ram usage:       26 bytes
  8285 ;; Hardware stack levels used: 1
  8286 ;; Hardware stack levels required when called: 1
  8287 ;; This function calls:
  8288 ;;		__Umul8_16
  8289 ;; This function is called by:
  8290 ;;		_main
  8291 ;;		_efgtoa
  8292 ;; This function uses a non-reentrant model
  8293 ;;
  8294                           
  8295  0B03                     ___flmul:	
  8296                           ;psect for function ___flmul
  8297                           
  8298  0B03                     l3003:	
  8299                           ;incstack = 0
  8300                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8301                           
  8302  0B03  0020               	movlb	0	; select bank0
  8303  0B04  0823               	movf	___flmul@b+3,w
  8304  0B05  3980               	andlw	128
  8305  0B06  00A8               	movwf	??___flmul
  8306  0B07  0828               	movf	??___flmul,w
  8307  0B08  00AD               	movwf	___flmul@sign
  8308  0B09                     l3005:
  8309  0B09  3523               	lslf	___flmul@b+3,w
  8310  0B0A  00A8               	movwf	??___flmul
  8311  0B0B  0828               	movf	??___flmul,w
  8312  0B0C  00B3               	movwf	___flmul@bexp
  8313  0B0D                     l3007:
  8314  0B0D  1FA2               	btfss	___flmul@b+2,7
  8315  0B0E  2B10               	goto	u3951
  8316  0B0F  2B11               	goto	u3950
  8317  0B10                     u3951:
  8318  0B10  2B12               	goto	l3011
  8319  0B11                     u3950:
  8320  0B11                     l3009:
  8321  0B11  1433               	bsf	___flmul@bexp,0
  8322  0B12                     l3011:
  8323  0B12  0833               	movf	___flmul@bexp,w
  8324  0B13  1903               	btfsc	3,2
  8325  0B14  2B16               	goto	u3961
  8326  0B15  2B17               	goto	u3960
  8327  0B16                     u3961:
  8328  0B16  2B26               	goto	l3019
  8329  0B17                     u3960:
  8330  0B17                     l3013:
  8331  0B17  0A33               	incf	___flmul@bexp,w
  8332  0B18  1D03               	btfss	3,2
  8333  0B19  2B1B               	goto	u3971
  8334  0B1A  2B1C               	goto	u3970
  8335  0B1B                     u3971:
  8336  0B1B  2B24               	goto	l3017
  8337  0B1C                     u3970:
  8338  0B1C                     l3015:
  8339  0B1C  3000               	movlw	0
  8340  0B1D  00A3               	movwf	___flmul@b+3
  8341  0B1E  3000               	movlw	0
  8342  0B1F  00A2               	movwf	___flmul@b+2
  8343  0B20  3000               	movlw	0
  8344  0B21  00A1               	movwf	___flmul@b+1
  8345  0B22  3000               	movlw	0
  8346  0B23  00A0               	movwf	___flmul@b
  8347  0B24                     l3017:
  8348  0B24  17A2               	bsf	___flmul@b+2,7
  8349  0B25  2B2E               	goto	l3021
  8350  0B26                     l3019:
  8351  0B26  3000               	movlw	0
  8352  0B27  00A3               	movwf	___flmul@b+3
  8353  0B28  3000               	movlw	0
  8354  0B29  00A2               	movwf	___flmul@b+2
  8355  0B2A  3000               	movlw	0
  8356  0B2B  00A1               	movwf	___flmul@b+1
  8357  0B2C  3000               	movlw	0
  8358  0B2D  00A0               	movwf	___flmul@b
  8359  0B2E                     l3021:
  8360  0B2E  0827               	movf	___flmul@a+3,w
  8361  0B2F  3980               	andlw	128
  8362  0B30  00A8               	movwf	??___flmul
  8363  0B31  0828               	movf	??___flmul,w
  8364  0B32  06AD               	xorwf	___flmul@sign,f
  8365  0B33                     l3023:
  8366  0B33  3527               	lslf	___flmul@a+3,w
  8367  0B34  00A8               	movwf	??___flmul
  8368  0B35  0828               	movf	??___flmul,w
  8369  0B36  00B2               	movwf	___flmul@aexp
  8370  0B37                     l3025:
  8371  0B37  1FA6               	btfss	___flmul@a+2,7
  8372  0B38  2B3A               	goto	u3981
  8373  0B39  2B3B               	goto	u3980
  8374  0B3A                     u3981:
  8375  0B3A  2B3C               	goto	l3029
  8376  0B3B                     u3980:
  8377  0B3B                     l3027:
  8378  0B3B  1432               	bsf	___flmul@aexp,0
  8379  0B3C                     l3029:
  8380  0B3C  0832               	movf	___flmul@aexp,w
  8381  0B3D  1903               	btfsc	3,2
  8382  0B3E  2B40               	goto	u3991
  8383  0B3F  2B41               	goto	u3990
  8384  0B40                     u3991:
  8385  0B40  2B50               	goto	l3037
  8386  0B41                     u3990:
  8387  0B41                     l3031:
  8388  0B41  0A32               	incf	___flmul@aexp,w
  8389  0B42  1D03               	btfss	3,2
  8390  0B43  2B45               	goto	u4001
  8391  0B44  2B46               	goto	u4000
  8392  0B45                     u4001:
  8393  0B45  2B4E               	goto	l3035
  8394  0B46                     u4000:
  8395  0B46                     l3033:
  8396  0B46  3000               	movlw	0
  8397  0B47  00A7               	movwf	___flmul@a+3
  8398  0B48  3000               	movlw	0
  8399  0B49  00A6               	movwf	___flmul@a+2
  8400  0B4A  3000               	movlw	0
  8401  0B4B  00A5               	movwf	___flmul@a+1
  8402  0B4C  3000               	movlw	0
  8403  0B4D  00A4               	movwf	___flmul@a
  8404  0B4E                     l3035:
  8405  0B4E  17A6               	bsf	___flmul@a+2,7
  8406  0B4F  2B58               	goto	l3039
  8407  0B50                     l3037:
  8408  0B50  3000               	movlw	0
  8409  0B51  00A7               	movwf	___flmul@a+3
  8410  0B52  3000               	movlw	0
  8411  0B53  00A6               	movwf	___flmul@a+2
  8412  0B54  3000               	movlw	0
  8413  0B55  00A5               	movwf	___flmul@a+1
  8414  0B56  3000               	movlw	0
  8415  0B57  00A4               	movwf	___flmul@a
  8416  0B58                     l3039:
  8417  0B58  0832               	movf	___flmul@aexp,w
  8418  0B59  1903               	btfsc	3,2
  8419  0B5A  2B5C               	goto	u4011
  8420  0B5B  2B5D               	goto	u4010
  8421  0B5C                     u4011:
  8422  0B5C  2B62               	goto	l3043
  8423  0B5D                     u4010:
  8424  0B5D                     l3041:
  8425  0B5D  0833               	movf	___flmul@bexp,w
  8426  0B5E  1D03               	btfss	3,2
  8427  0B5F  2B61               	goto	u4021
  8428  0B60  2B62               	goto	u4020
  8429  0B61                     u4021:
  8430  0B61  2B6B               	goto	l3047
  8431  0B62                     u4020:
  8432  0B62                     l3043:
  8433  0B62  3000               	movlw	0
  8434  0B63  00A3               	movwf	?___flmul+3
  8435  0B64  3000               	movlw	0
  8436  0B65  00A2               	movwf	?___flmul+2
  8437  0B66  3000               	movlw	0
  8438  0B67  00A1               	movwf	?___flmul+1
  8439  0B68  3000               	movlw	0
  8440  0B69  00A0               	movwf	?___flmul
  8441  0B6A  2D59               	goto	l637
  8442  0B6B                     l3047:
  8443  0B6B  0820               	movf	___flmul@b,w
  8444  0B6C  00A8               	movwf	??___flmul
  8445  0B6D  0828               	movf	??___flmul,w
  8446  0B6E  00F0               	movwf	__Umul8_16@multiplicand
  8447  0B6F  0826               	movf	___flmul@a+2,w
  8448  0B70  3190  2008  318B   	fcall	__Umul8_16
  8449  0B73  0871               	movf	?__Umul8_16+1,w
  8450  0B74  0020               	movlb	0	; select bank0
  8451  0B75  00B9               	movwf	___flmul@temp+1
  8452  0B76  0870               	movf	?__Umul8_16,w
  8453  0B77  00B8               	movwf	___flmul@temp
  8454  0B78                     l3049:
  8455  0B78  0838               	movf	___flmul@temp,w
  8456  0B79  00A8               	movwf	??___flmul
  8457  0B7A  01A9               	clrf	??___flmul+1
  8458  0B7B  01AA               	clrf	??___flmul+2
  8459  0B7C  01AB               	clrf	??___flmul+3
  8460  0B7D  082B               	movf	??___flmul+3,w
  8461  0B7E  00B1               	movwf	___flmul@grs+3
  8462  0B7F  082A               	movf	??___flmul+2,w
  8463  0B80  00B0               	movwf	___flmul@grs+2
  8464  0B81  0829               	movf	??___flmul+1,w
  8465  0B82  00AF               	movwf	___flmul@grs+1
  8466  0B83  0828               	movf	??___flmul,w
  8467  0B84  00AE               	movwf	___flmul@grs
  8468  0B85                     l3051:
  8469  0B85  0839               	movf	___flmul@temp+1,w
  8470  0B86  00A8               	movwf	??___flmul
  8471  0B87  01A9               	clrf	??___flmul+1
  8472  0B88  01AA               	clrf	??___flmul+2
  8473  0B89  01AB               	clrf	??___flmul+3
  8474  0B8A  082B               	movf	??___flmul+3,w
  8475  0B8B  00B7               	movwf	___flmul@prod+3
  8476  0B8C  082A               	movf	??___flmul+2,w
  8477  0B8D  00B6               	movwf	___flmul@prod+2
  8478  0B8E  0829               	movf	??___flmul+1,w
  8479  0B8F  00B5               	movwf	___flmul@prod+1
  8480  0B90  0828               	movf	??___flmul,w
  8481  0B91  00B4               	movwf	___flmul@prod
  8482  0B92  0821               	movf	___flmul@b+1,w
  8483  0B93  00A8               	movwf	??___flmul
  8484  0B94  0828               	movf	??___flmul,w
  8485  0B95  00F0               	movwf	__Umul8_16@multiplicand
  8486  0B96  0825               	movf	___flmul@a+1,w
  8487  0B97  3190  2008  318B   	fcall	__Umul8_16
  8488  0B9A  0871               	movf	?__Umul8_16+1,w
  8489  0B9B  0020               	movlb	0	; select bank0
  8490  0B9C  00B9               	movwf	___flmul@temp+1
  8491  0B9D  0870               	movf	?__Umul8_16,w
  8492  0B9E  00B8               	movwf	___flmul@temp
  8493  0B9F                     l3053:
  8494  0B9F  0838               	movf	___flmul@temp,w
  8495  0BA0  00A8               	movwf	??___flmul
  8496  0BA1  01A9               	clrf	??___flmul+1
  8497  0BA2  01AA               	clrf	??___flmul+2
  8498  0BA3  01AB               	clrf	??___flmul+3
  8499  0BA4  0828               	movf	??___flmul,w
  8500  0BA5  07AE               	addwf	___flmul@grs,f
  8501  0BA6  0829               	movf	??___flmul+1,w
  8502  0BA7  3DAF               	addwfc	___flmul@grs+1,f
  8503  0BA8  082A               	movf	??___flmul+2,w
  8504  0BA9  3DB0               	addwfc	___flmul@grs+2,f
  8505  0BAA  082B               	movf	??___flmul+3,w
  8506  0BAB  3DB1               	addwfc	___flmul@grs+3,f
  8507  0BAC                     l3055:
  8508  0BAC  0839               	movf	___flmul@temp+1,w
  8509  0BAD  00A8               	movwf	??___flmul
  8510  0BAE  01A9               	clrf	??___flmul+1
  8511  0BAF  01AA               	clrf	??___flmul+2
  8512  0BB0  01AB               	clrf	??___flmul+3
  8513  0BB1  0828               	movf	??___flmul,w
  8514  0BB2  07B4               	addwf	___flmul@prod,f
  8515  0BB3  0829               	movf	??___flmul+1,w
  8516  0BB4  3DB5               	addwfc	___flmul@prod+1,f
  8517  0BB5  082A               	movf	??___flmul+2,w
  8518  0BB6  3DB6               	addwfc	___flmul@prod+2,f
  8519  0BB7  082B               	movf	??___flmul+3,w
  8520  0BB8  3DB7               	addwfc	___flmul@prod+3,f
  8521  0BB9  0822               	movf	___flmul@b+2,w
  8522  0BBA  00A8               	movwf	??___flmul
  8523  0BBB  0828               	movf	??___flmul,w
  8524  0BBC  00F0               	movwf	__Umul8_16@multiplicand
  8525  0BBD  0824               	movf	___flmul@a,w
  8526  0BBE  3190  2008  318B   	fcall	__Umul8_16
  8527  0BC1  0871               	movf	?__Umul8_16+1,w
  8528  0BC2  0020               	movlb	0	; select bank0
  8529  0BC3  00B9               	movwf	___flmul@temp+1
  8530  0BC4  0870               	movf	?__Umul8_16,w
  8531  0BC5  00B8               	movwf	___flmul@temp
  8532  0BC6                     l3057:
  8533  0BC6  0838               	movf	___flmul@temp,w
  8534  0BC7  00A8               	movwf	??___flmul
  8535  0BC8  01A9               	clrf	??___flmul+1
  8536  0BC9  01AA               	clrf	??___flmul+2
  8537  0BCA  01AB               	clrf	??___flmul+3
  8538  0BCB  0828               	movf	??___flmul,w
  8539  0BCC  07AE               	addwf	___flmul@grs,f
  8540  0BCD  0829               	movf	??___flmul+1,w
  8541  0BCE  3DAF               	addwfc	___flmul@grs+1,f
  8542  0BCF  082A               	movf	??___flmul+2,w
  8543  0BD0  3DB0               	addwfc	___flmul@grs+2,f
  8544  0BD1  082B               	movf	??___flmul+3,w
  8545  0BD2  3DB1               	addwfc	___flmul@grs+3,f
  8546  0BD3                     l3059:
  8547  0BD3  0839               	movf	___flmul@temp+1,w
  8548  0BD4  00A8               	movwf	??___flmul
  8549  0BD5  01A9               	clrf	??___flmul+1
  8550  0BD6  01AA               	clrf	??___flmul+2
  8551  0BD7  01AB               	clrf	??___flmul+3
  8552  0BD8  0828               	movf	??___flmul,w
  8553  0BD9  07B4               	addwf	___flmul@prod,f
  8554  0BDA  0829               	movf	??___flmul+1,w
  8555  0BDB  3DB5               	addwfc	___flmul@prod+1,f
  8556  0BDC  082A               	movf	??___flmul+2,w
  8557  0BDD  3DB6               	addwfc	___flmul@prod+2,f
  8558  0BDE  082B               	movf	??___flmul+3,w
  8559  0BDF  3DB7               	addwfc	___flmul@prod+3,f
  8560  0BE0                     l3061:
  8561  0BE0  3008               	movlw	8
  8562  0BE1                     u4035:
  8563  0BE1  35AE               	lslf	___flmul@grs,f
  8564  0BE2  0DAF               	rlf	___flmul@grs+1,f
  8565  0BE3  0DB0               	rlf	___flmul@grs+2,f
  8566  0BE4  0DB1               	rlf	___flmul@grs+3,f
  8567  0BE5  0B89               	decfsz	9,f
  8568  0BE6  2BE1               	goto	u4035
  8569  0BE7                     l3063:
  8570  0BE7  0821               	movf	___flmul@b+1,w
  8571  0BE8  00A8               	movwf	??___flmul
  8572  0BE9  0828               	movf	??___flmul,w
  8573  0BEA  00F0               	movwf	__Umul8_16@multiplicand
  8574  0BEB  0824               	movf	___flmul@a,w
  8575  0BEC  3190  2008  318B   	fcall	__Umul8_16
  8576  0BEF  0871               	movf	?__Umul8_16+1,w
  8577  0BF0  0020               	movlb	0	; select bank0
  8578  0BF1  00B9               	movwf	___flmul@temp+1
  8579  0BF2  0870               	movf	?__Umul8_16,w
  8580  0BF3  00B8               	movwf	___flmul@temp
  8581  0BF4                     l3065:
  8582  0BF4  0838               	movf	___flmul@temp,w
  8583  0BF5  07AE               	addwf	___flmul@grs,f
  8584  0BF6  0839               	movf	___flmul@temp+1,w
  8585  0BF7  3DAF               	addwfc	___flmul@grs+1,f
  8586  0BF8  3000               	movlw	0
  8587  0BF9  3DB0               	addwfc	___flmul@grs+2,f
  8588  0BFA  3DB1               	addwfc	___flmul@grs+3,f
  8589  0BFB                     l3067:
  8590  0BFB  0820               	movf	___flmul@b,w
  8591  0BFC  00A8               	movwf	??___flmul
  8592  0BFD  0828               	movf	??___flmul,w
  8593  0BFE  00F0               	movwf	__Umul8_16@multiplicand
  8594  0BFF  0825               	movf	___flmul@a+1,w
  8595  0C00  3190  2008  318B   	fcall	__Umul8_16
  8596  0C03  0871               	movf	?__Umul8_16+1,w
  8597  0C04  0020               	movlb	0	; select bank0
  8598  0C05  00B9               	movwf	___flmul@temp+1
  8599  0C06  0870               	movf	?__Umul8_16,w
  8600  0C07  00B8               	movwf	___flmul@temp
  8601  0C08                     l3069:
  8602  0C08  0838               	movf	___flmul@temp,w
  8603  0C09  07AE               	addwf	___flmul@grs,f
  8604  0C0A  0839               	movf	___flmul@temp+1,w
  8605  0C0B  3DAF               	addwfc	___flmul@grs+1,f
  8606  0C0C  3000               	movlw	0
  8607  0C0D  3DB0               	addwfc	___flmul@grs+2,f
  8608  0C0E  3DB1               	addwfc	___flmul@grs+3,f
  8609  0C0F                     l3071:
  8610  0C0F  3008               	movlw	8
  8611  0C10                     u4045:
  8612  0C10  35AE               	lslf	___flmul@grs,f
  8613  0C11  0DAF               	rlf	___flmul@grs+1,f
  8614  0C12  0DB0               	rlf	___flmul@grs+2,f
  8615  0C13  0DB1               	rlf	___flmul@grs+3,f
  8616  0C14  0B89               	decfsz	9,f
  8617  0C15  2C10               	goto	u4045
  8618  0C16  0820               	movf	___flmul@b,w
  8619  0C17  00A8               	movwf	??___flmul
  8620  0C18  0828               	movf	??___flmul,w
  8621  0C19  00F0               	movwf	__Umul8_16@multiplicand
  8622  0C1A  0824               	movf	___flmul@a,w
  8623  0C1B  3190  2008  318B   	fcall	__Umul8_16
  8624  0C1E  0871               	movf	?__Umul8_16+1,w
  8625  0C1F  0020               	movlb	0	; select bank0
  8626  0C20  00B9               	movwf	___flmul@temp+1
  8627  0C21  0870               	movf	?__Umul8_16,w
  8628  0C22  00B8               	movwf	___flmul@temp
  8629  0C23                     l3073:
  8630  0C23  0838               	movf	___flmul@temp,w
  8631  0C24  07AE               	addwf	___flmul@grs,f
  8632  0C25  0839               	movf	___flmul@temp+1,w
  8633  0C26  3DAF               	addwfc	___flmul@grs+1,f
  8634  0C27  3000               	movlw	0
  8635  0C28  3DB0               	addwfc	___flmul@grs+2,f
  8636  0C29  3DB1               	addwfc	___flmul@grs+3,f
  8637  0C2A                     l3075:
  8638  0C2A  0821               	movf	___flmul@b+1,w
  8639  0C2B  00A8               	movwf	??___flmul
  8640  0C2C  0828               	movf	??___flmul,w
  8641  0C2D  00F0               	movwf	__Umul8_16@multiplicand
  8642  0C2E  0826               	movf	___flmul@a+2,w
  8643  0C2F  3190  2008  318B   	fcall	__Umul8_16
  8644  0C32  0871               	movf	?__Umul8_16+1,w
  8645  0C33  0020               	movlb	0	; select bank0
  8646  0C34  00B9               	movwf	___flmul@temp+1
  8647  0C35  0870               	movf	?__Umul8_16,w
  8648  0C36  00B8               	movwf	___flmul@temp
  8649  0C37  0838               	movf	___flmul@temp,w
  8650  0C38  07B4               	addwf	___flmul@prod,f
  8651  0C39  0839               	movf	___flmul@temp+1,w
  8652  0C3A  3DB5               	addwfc	___flmul@prod+1,f
  8653  0C3B  3000               	movlw	0
  8654  0C3C  3DB6               	addwfc	___flmul@prod+2,f
  8655  0C3D  3DB7               	addwfc	___flmul@prod+3,f
  8656  0C3E                     l3077:
  8657  0C3E  0822               	movf	___flmul@b+2,w
  8658  0C3F  00A8               	movwf	??___flmul
  8659  0C40  0828               	movf	??___flmul,w
  8660  0C41  00F0               	movwf	__Umul8_16@multiplicand
  8661  0C42  0825               	movf	___flmul@a+1,w
  8662  0C43  3190  2008  318B   	fcall	__Umul8_16
  8663  0C46  0871               	movf	?__Umul8_16+1,w
  8664  0C47  0020               	movlb	0	; select bank0
  8665  0C48  00B9               	movwf	___flmul@temp+1
  8666  0C49  0870               	movf	?__Umul8_16,w
  8667  0C4A  00B8               	movwf	___flmul@temp
  8668  0C4B                     l3079:
  8669  0C4B  0838               	movf	___flmul@temp,w
  8670  0C4C  07B4               	addwf	___flmul@prod,f
  8671  0C4D  0839               	movf	___flmul@temp+1,w
  8672  0C4E  3DB5               	addwfc	___flmul@prod+1,f
  8673  0C4F  3000               	movlw	0
  8674  0C50  3DB6               	addwfc	___flmul@prod+2,f
  8675  0C51  3DB7               	addwfc	___flmul@prod+3,f
  8676  0C52  0822               	movf	___flmul@b+2,w
  8677  0C53  00A8               	movwf	??___flmul
  8678  0C54  0828               	movf	??___flmul,w
  8679  0C55  00F0               	movwf	__Umul8_16@multiplicand
  8680  0C56  0826               	movf	___flmul@a+2,w
  8681  0C57  3190  2008  318B   	fcall	__Umul8_16
  8682  0C5A  0871               	movf	?__Umul8_16+1,w
  8683  0C5B  0020               	movlb	0	; select bank0
  8684  0C5C  00B9               	movwf	___flmul@temp+1
  8685  0C5D  0870               	movf	?__Umul8_16,w
  8686  0C5E  00B8               	movwf	___flmul@temp
  8687  0C5F                     l3081:
  8688  0C5F  0838               	movf	___flmul@temp,w
  8689  0C60  00A8               	movwf	??___flmul
  8690  0C61  0839               	movf	___flmul@temp+1,w
  8691  0C62  00A9               	movwf	??___flmul+1
  8692  0C63  01AA               	clrf	??___flmul+2
  8693  0C64  01AB               	clrf	??___flmul+3
  8694  0C65  3008               	movlw	8
  8695  0C66                     u4055:
  8696  0C66  35A8               	lslf	??___flmul,f
  8697  0C67  0DA9               	rlf	??___flmul+1,f
  8698  0C68  0DAA               	rlf	??___flmul+2,f
  8699  0C69  0DAB               	rlf	??___flmul+3,f
  8700  0C6A                     u4050:
  8701  0C6A  0B89               	decfsz	9,f
  8702  0C6B  2C66               	goto	u4055
  8703  0C6C  0828               	movf	??___flmul,w
  8704  0C6D  07B4               	addwf	___flmul@prod,f
  8705  0C6E  0829               	movf	??___flmul+1,w
  8706  0C6F  3DB5               	addwfc	___flmul@prod+1,f
  8707  0C70  082A               	movf	??___flmul+2,w
  8708  0C71  3DB6               	addwfc	___flmul@prod+2,f
  8709  0C72  082B               	movf	??___flmul+3,w
  8710  0C73  3DB7               	addwfc	___flmul@prod+3,f
  8711  0C74                     l3083:
  8712  0C74  082E               	movf	___flmul@grs,w
  8713  0C75  00A8               	movwf	??___flmul
  8714  0C76  082F               	movf	___flmul@grs+1,w
  8715  0C77  00A9               	movwf	??___flmul+1
  8716  0C78  0830               	movf	___flmul@grs+2,w
  8717  0C79  00AA               	movwf	??___flmul+2
  8718  0C7A  0831               	movf	___flmul@grs+3,w
  8719  0C7B  00AB               	movwf	??___flmul+3
  8720  0C7C  3018               	movlw	24
  8721  0C7D                     u4065:
  8722  0C7D  36AB               	lsrf	??___flmul+3,f
  8723  0C7E  0CAA               	rrf	??___flmul+2,f
  8724  0C7F  0CA9               	rrf	??___flmul+1,f
  8725  0C80  0CA8               	rrf	??___flmul,f
  8726  0C81                     u4060:
  8727  0C81  0B89               	decfsz	9,f
  8728  0C82  2C7D               	goto	u4065
  8729  0C83  0828               	movf	??___flmul,w
  8730  0C84  07B4               	addwf	___flmul@prod,f
  8731  0C85  0829               	movf	??___flmul+1,w
  8732  0C86  3DB5               	addwfc	___flmul@prod+1,f
  8733  0C87  082A               	movf	??___flmul+2,w
  8734  0C88  3DB6               	addwfc	___flmul@prod+2,f
  8735  0C89  082B               	movf	??___flmul+3,w
  8736  0C8A  3DB7               	addwfc	___flmul@prod+3,f
  8737  0C8B                     l3085:
  8738  0C8B  3008               	movlw	8
  8739  0C8C                     u4075:
  8740  0C8C  35AE               	lslf	___flmul@grs,f
  8741  0C8D  0DAF               	rlf	___flmul@grs+1,f
  8742  0C8E  0DB0               	rlf	___flmul@grs+2,f
  8743  0C8F  0DB1               	rlf	___flmul@grs+3,f
  8744  0C90  0B89               	decfsz	9,f
  8745  0C91  2C8C               	goto	u4075
  8746  0C92                     l3087:
  8747  0C92  0833               	movf	___flmul@bexp,w
  8748  0C93  0732               	addwf	___flmul@aexp,w
  8749  0C94  00A8               	movwf	??___flmul
  8750  0C95  01A9               	clrf	??___flmul+1
  8751  0C96  0DA9               	rlf	??___flmul+1,f
  8752  0C97  0828               	movf	??___flmul,w
  8753  0C98  3E82               	addlw	130
  8754  0C99  00B8               	movwf	___flmul@temp
  8755  0C9A  30FF               	movlw	255
  8756  0C9B  3D29               	addwfc	??___flmul+1,w
  8757  0C9C  00B9               	movwf	___flmul@temp+1
  8758  0C9D  2CB5               	goto	l3099
  8759  0C9E                     l3089:
  8760  0C9E  3001               	movlw	1
  8761  0C9F                     u4085:
  8762  0C9F  35B4               	lslf	___flmul@prod,f
  8763  0CA0  0DB5               	rlf	___flmul@prod+1,f
  8764  0CA1  0DB6               	rlf	___flmul@prod+2,f
  8765  0CA2  0DB7               	rlf	___flmul@prod+3,f
  8766  0CA3  0B89               	decfsz	9,f
  8767  0CA4  2C9F               	goto	u4085
  8768  0CA5                     l3091:
  8769  0CA5  1FB1               	btfss	___flmul@grs+3,7
  8770  0CA6  2CA8               	goto	u4091
  8771  0CA7  2CA9               	goto	u4090
  8772  0CA8                     u4091:
  8773  0CA8  2CAA               	goto	l3095
  8774  0CA9                     u4090:
  8775  0CA9                     l3093:
  8776  0CA9  1434               	bsf	___flmul@prod,0
  8777  0CAA                     l3095:
  8778  0CAA  3001               	movlw	1
  8779  0CAB                     u4105:
  8780  0CAB  35AE               	lslf	___flmul@grs,f
  8781  0CAC  0DAF               	rlf	___flmul@grs+1,f
  8782  0CAD  0DB0               	rlf	___flmul@grs+2,f
  8783  0CAE  0DB1               	rlf	___flmul@grs+3,f
  8784  0CAF  0B89               	decfsz	9,f
  8785  0CB0  2CAB               	goto	u4105
  8786  0CB1                     l3097:
  8787  0CB1  30FF               	movlw	255
  8788  0CB2  07B8               	addwf	___flmul@temp,f
  8789  0CB3  30FF               	movlw	255
  8790  0CB4  3DB9               	addwfc	___flmul@temp+1,f
  8791  0CB5                     l3099:
  8792  0CB5  1FB6               	btfss	___flmul@prod+2,7
  8793  0CB6  2CB8               	goto	u4111
  8794  0CB7  2CB9               	goto	u4110
  8795  0CB8                     u4111:
  8796  0CB8  2C9E               	goto	l3089
  8797  0CB9                     u4110:
  8798  0CB9                     l3101:
  8799  0CB9  01B2               	clrf	___flmul@aexp
  8800  0CBA                     l3103:
  8801  0CBA  1FB1               	btfss	___flmul@grs+3,7
  8802  0CBB  2CBD               	goto	u4121
  8803  0CBC  2CBE               	goto	u4120
  8804  0CBD                     u4121:
  8805  0CBD  2CDA               	goto	l3111
  8806  0CBE                     u4120:
  8807  0CBE                     l3105:
  8808  0CBE  30FF               	movlw	255
  8809  0CBF  052E               	andwf	___flmul@grs,w
  8810  0CC0  00A8               	movwf	??___flmul
  8811  0CC1  30FF               	movlw	255
  8812  0CC2  052F               	andwf	___flmul@grs+1,w
  8813  0CC3  00A9               	movwf	??___flmul+1
  8814  0CC4  30FF               	movlw	255
  8815  0CC5  0530               	andwf	___flmul@grs+2,w
  8816  0CC6  00AA               	movwf	??___flmul+2
  8817  0CC7  307F               	movlw	127
  8818  0CC8  0531               	andwf	___flmul@grs+3,w
  8819  0CC9  00AB               	movwf	??___flmul+3
  8820  0CCA  082B               	movf	??___flmul+3,w
  8821  0CCB  042A               	iorwf	??___flmul+2,w
  8822  0CCC  0429               	iorwf	??___flmul+1,w
  8823  0CCD  0428               	iorwf	??___flmul,w
  8824  0CCE  1903               	skipnz
  8825  0CCF  2CD1               	goto	u4131
  8826  0CD0  2CD2               	goto	u4130
  8827  0CD1                     u4131:
  8828  0CD1  2CD5               	goto	l643
  8829  0CD2                     u4130:
  8830  0CD2                     l3107:
  8831  0CD2  01B2               	clrf	___flmul@aexp
  8832  0CD3  0AB2               	incf	___flmul@aexp,f
  8833  0CD4  2CDA               	goto	l3111
  8834  0CD5                     l643:
  8835  0CD5  1C34               	btfss	___flmul@prod,0
  8836  0CD6  2CD8               	goto	u4141
  8837  0CD7  2CD9               	goto	u4140
  8838  0CD8                     u4141:
  8839  0CD8  2CDA               	goto	l3111
  8840  0CD9                     u4140:
  8841  0CD9  2CD2               	goto	l3107
  8842  0CDA                     l3111:
  8843  0CDA  0832               	movf	___flmul@aexp,w
  8844  0CDB  1903               	btfsc	3,2
  8845  0CDC  2CDE               	goto	u4151
  8846  0CDD  2CDF               	goto	u4150
  8847  0CDE                     u4151:
  8848  0CDE  2D07               	goto	l3121
  8849  0CDF                     u4150:
  8850  0CDF                     l3113:
  8851  0CDF  3001               	movlw	1
  8852  0CE0  07B4               	addwf	___flmul@prod,f
  8853  0CE1  3000               	movlw	0
  8854  0CE2  3DB5               	addwfc	___flmul@prod+1,f
  8855  0CE3  3000               	movlw	0
  8856  0CE4  3DB6               	addwfc	___flmul@prod+2,f
  8857  0CE5  3000               	movlw	0
  8858  0CE6  3DB7               	addwfc	___flmul@prod+3,f
  8859  0CE7                     l3115:
  8860  0CE7  1C37               	btfss	___flmul@prod+3,0
  8861  0CE8  2CEA               	goto	u4161
  8862  0CE9  2CEB               	goto	u4160
  8863  0CEA                     u4161:
  8864  0CEA  2D07               	goto	l3121
  8865  0CEB                     u4160:
  8866  0CEB                     l3117:
  8867  0CEB  0834               	movf	___flmul@prod,w
  8868  0CEC  00A8               	movwf	??___flmul
  8869  0CED  0835               	movf	___flmul@prod+1,w
  8870  0CEE  00A9               	movwf	??___flmul+1
  8871  0CEF  0836               	movf	___flmul@prod+2,w
  8872  0CF0  00AA               	movwf	??___flmul+2
  8873  0CF1  0837               	movf	___flmul@prod+3,w
  8874  0CF2  00AB               	movwf	??___flmul+3
  8875  0CF3  3001               	movlw	1
  8876  0CF4  00AC               	movwf	??___flmul+4
  8877  0CF5                     u4175:
  8878  0CF5  37AB               	asrf	??___flmul+3,f
  8879  0CF6  0CAA               	rrf	??___flmul+2,f
  8880  0CF7  0CA9               	rrf	??___flmul+1,f
  8881  0CF8  0CA8               	rrf	??___flmul,f
  8882  0CF9                     u4170:
  8883  0CF9  0BAC               	decfsz	??___flmul+4,f
  8884  0CFA  2CF5               	goto	u4175
  8885  0CFB  082B               	movf	??___flmul+3,w
  8886  0CFC  00B7               	movwf	___flmul@prod+3
  8887  0CFD  082A               	movf	??___flmul+2,w
  8888  0CFE  00B6               	movwf	___flmul@prod+2
  8889  0CFF  0829               	movf	??___flmul+1,w
  8890  0D00  00B5               	movwf	___flmul@prod+1
  8891  0D01  0828               	movf	??___flmul,w
  8892  0D02  00B4               	movwf	___flmul@prod
  8893  0D03                     l3119:
  8894  0D03  3001               	movlw	1
  8895  0D04  07B8               	addwf	___flmul@temp,f
  8896  0D05  3000               	movlw	0
  8897  0D06  3DB9               	addwfc	___flmul@temp+1,f
  8898  0D07                     l3121:
  8899  0D07  0839               	movf	___flmul@temp+1,w
  8900  0D08  3A80               	xorlw	128
  8901  0D09  00A8               	movwf	??___flmul
  8902  0D0A  3080               	movlw	128
  8903  0D0B  0228               	subwf	??___flmul,w
  8904  0D0C  1D03               	skipz
  8905  0D0D  2D10               	goto	u4185
  8906  0D0E  30FF               	movlw	255
  8907  0D0F  0238               	subwf	___flmul@temp,w
  8908  0D10                     u4185:
  8909  0D10  1C03               	skipc
  8910  0D11  2D13               	goto	u4181
  8911  0D12  2D14               	goto	u4180
  8912  0D13                     u4181:
  8913  0D13  2D1E               	goto	l3125
  8914  0D14                     u4180:
  8915  0D14                     l3123:
  8916  0D14  307F               	movlw	127
  8917  0D15  0020               	movlb	0	; select bank0
  8918  0D16  00B7               	movwf	___flmul@prod+3
  8919  0D17  3080               	movlw	128
  8920  0D18  00B6               	movwf	___flmul@prod+2
  8921  0D19  3000               	movlw	0
  8922  0D1A  00B5               	movwf	___flmul@prod+1
  8923  0D1B  3000               	movlw	0
  8924  0D1C  00B4               	movwf	___flmul@prod
  8925  0D1D  2D4D               	goto	l649
  8926  0D1E                     l3125:
  8927  0D1E  0020               	movlb	0	; select bank0
  8928  0D1F  0839               	movf	___flmul@temp+1,w
  8929  0D20  3A80               	xorlw	128
  8930  0D21  00A8               	movwf	??___flmul
  8931  0D22  3080               	movlw	128
  8932  0D23  0228               	subwf	??___flmul,w
  8933  0D24  1D03               	skipz
  8934  0D25  2D28               	goto	u4195
  8935  0D26  3001               	movlw	1
  8936  0D27  0238               	subwf	___flmul@temp,w
  8937  0D28                     u4195:
  8938  0D28  1803               	skipnc
  8939  0D29  2D2B               	goto	u4191
  8940  0D2A  2D2C               	goto	u4190
  8941  0D2B                     u4191:
  8942  0D2B  2D37               	goto	l3131
  8943  0D2C                     u4190:
  8944  0D2C                     l3127:
  8945  0D2C  3000               	movlw	0
  8946  0D2D  0020               	movlb	0	; select bank0
  8947  0D2E  00B7               	movwf	___flmul@prod+3
  8948  0D2F  3000               	movlw	0
  8949  0D30  00B6               	movwf	___flmul@prod+2
  8950  0D31  3000               	movlw	0
  8951  0D32  00B5               	movwf	___flmul@prod+1
  8952  0D33  3000               	movlw	0
  8953  0D34  00B4               	movwf	___flmul@prod
  8954  0D35                     l3129:
  8955  0D35  01AD               	clrf	___flmul@sign
  8956  0D36  2D4D               	goto	l649
  8957  0D37                     l3131:
  8958  0D37  0020               	movlb	0	; select bank0
  8959  0D38  0838               	movf	___flmul@temp,w
  8960  0D39  00A8               	movwf	??___flmul
  8961  0D3A  0828               	movf	??___flmul,w
  8962  0D3B  00B3               	movwf	___flmul@bexp
  8963  0D3C  30FF               	movlw	255
  8964  0D3D  05B4               	andwf	___flmul@prod,f
  8965  0D3E  30FF               	movlw	255
  8966  0D3F  05B5               	andwf	___flmul@prod+1,f
  8967  0D40  307F               	movlw	127
  8968  0D41  05B6               	andwf	___flmul@prod+2,f
  8969  0D42  3000               	movlw	0
  8970  0D43  05B7               	andwf	___flmul@prod+3,f
  8971  0D44                     l3133:
  8972  0D44  1C33               	btfss	___flmul@bexp,0
  8973  0D45  2D47               	goto	u4201
  8974  0D46  2D48               	goto	u4200
  8975  0D47                     u4201:
  8976  0D47  2D49               	goto	l3137
  8977  0D48                     u4200:
  8978  0D48                     l3135:
  8979  0D48  17B6               	bsf	___flmul@prod+2,7
  8980  0D49                     l3137:
  8981  0D49  3633               	lsrf	___flmul@bexp,w
  8982  0D4A  00A8               	movwf	??___flmul
  8983  0D4B  0828               	movf	??___flmul,w
  8984  0D4C  00B7               	movwf	___flmul@prod+3
  8985  0D4D                     l649:
  8986  0D4D  082D               	movf	___flmul@sign,w
  8987  0D4E  00A8               	movwf	??___flmul
  8988  0D4F  0828               	movf	??___flmul,w
  8989  0D50  04B7               	iorwf	___flmul@prod+3,f
  8990  0D51                     l3139:
  8991  0D51  0837               	movf	___flmul@prod+3,w
  8992  0D52  00A3               	movwf	?___flmul+3
  8993  0D53  0836               	movf	___flmul@prod+2,w
  8994  0D54  00A2               	movwf	?___flmul+2
  8995  0D55  0835               	movf	___flmul@prod+1,w
  8996  0D56  00A1               	movwf	?___flmul+1
  8997  0D57  0834               	movf	___flmul@prod,w
  8998  0D58  00A0               	movwf	?___flmul
  8999  0D59                     l637:
  9000  0D59  0008               	return
  9001  0D5A                     __end_of___flmul:
  9002                           
  9003                           	psect	text21
  9004  1008                     __ptext21:	
  9005 ;; *************** function __Umul8_16 *****************
  9006 ;; Defined at:
  9007 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul8_16.c"
  9008 ;; Parameters:    Size  Location     Type
  9009 ;;  multiplier      1    wreg     unsigned char 
  9010 ;;  multiplicand    1    0[COMMON] unsigned char 
  9011 ;; Auto vars:     Size  Location     Type
  9012 ;;  multiplier      1    8[COMMON] unsigned char 
  9013 ;;  word_mpld       2    6[COMMON] unsigned int 
  9014 ;;  product         2    4[COMMON] unsigned int 
  9015 ;; Return value:  Size  Location     Type
  9016 ;;                  2    0[COMMON] unsigned int 
  9017 ;; Registers used:
  9018 ;;		wreg, status,2, status,0
  9019 ;; Tracked objects:
  9020 ;;		On entry : 0/0
  9021 ;;		On exit  : 0/0
  9022 ;;		Unchanged: 0/0
  9023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9024 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9025 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9026 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9027 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9028 ;;Total ram usage:        9 bytes
  9029 ;; Hardware stack levels used: 1
  9030 ;; This function calls:
  9031 ;;		Nothing
  9032 ;; This function is called by:
  9033 ;;		___flmul
  9034 ;; This function uses a non-reentrant model
  9035 ;;
  9036                           
  9037  1008                     __Umul8_16:	
  9038                           ;psect for function __Umul8_16
  9039                           
  9040                           
  9041                           ;incstack = 0
  9042                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9043                           ;__Umul8_16@multiplier stored from wreg
  9044  1008  00F8               	movwf	__Umul8_16@multiplier
  9045  1009                     l2649:
  9046  1009  01F4               	clrf	__Umul8_16@product
  9047  100A  01F5               	clrf	__Umul8_16@product+1
  9048  100B                     l2651:
  9049  100B  0870               	movf	__Umul8_16@multiplicand,w
  9050  100C  00F2               	movwf	??__Umul8_16
  9051  100D  01F3               	clrf	??__Umul8_16+1
  9052  100E  0872               	movf	??__Umul8_16,w
  9053  100F  00F6               	movwf	__Umul8_16@word_mpld
  9054  1010  0873               	movf	??__Umul8_16+1,w
  9055  1011  00F7               	movwf	__Umul8_16@word_mpld+1
  9056  1012                     l2653:
  9057  1012  1C78               	btfss	__Umul8_16@multiplier,0
  9058  1013  2815               	goto	u3171
  9059  1014  2816               	goto	u3170
  9060  1015                     u3171:
  9061  1015  281A               	goto	l656
  9062  1016                     u3170:
  9063  1016                     l2655:
  9064  1016  0876               	movf	__Umul8_16@word_mpld,w
  9065  1017  07F4               	addwf	__Umul8_16@product,f
  9066  1018  0877               	movf	__Umul8_16@word_mpld+1,w
  9067  1019  3DF5               	addwfc	__Umul8_16@product+1,f
  9068  101A                     l656:
  9069  101A  3001               	movlw	1
  9070  101B                     u3185:
  9071  101B  35F6               	lslf	__Umul8_16@word_mpld,f
  9072  101C  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9073  101D  0B89               	decfsz	9,f
  9074  101E  281B               	goto	u3185
  9075  101F  1003               	clrc
  9076  1020  0CF8               	rrf	__Umul8_16@multiplier,f
  9077  1021                     l2657:
  9078  1021  0878               	movf	__Umul8_16@multiplier,w
  9079  1022  1D03               	btfss	3,2
  9080  1023  2825               	goto	u3191
  9081  1024  2826               	goto	u3190
  9082  1025                     u3191:
  9083  1025  2812               	goto	l2653
  9084  1026                     u3190:
  9085  1026                     l2659:
  9086  1026  0875               	movf	__Umul8_16@product+1,w
  9087  1027  00F1               	movwf	?__Umul8_16+1
  9088  1028  0874               	movf	__Umul8_16@product,w
  9089  1029  00F0               	movwf	?__Umul8_16
  9090  102A                     l658:
  9091  102A  0008               	return
  9092  102B                     __end_of__Umul8_16:
  9093                           
  9094                           	psect	text22
  9095  136C                     __ptext22:	
  9096 ;; *************** function ___flge *****************
  9097 ;; Defined at:
  9098 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  9099 ;; Parameters:    Size  Location     Type
  9100 ;;  ff1             4   26[BANK0 ] unsigned int 
  9101 ;;  ff2             4   30[BANK0 ] unsigned int 
  9102 ;; Auto vars:     Size  Location     Type
  9103 ;;		None
  9104 ;; Return value:  Size  Location     Type
  9105 ;;		None               void
  9106 ;; Registers used:
  9107 ;;		wreg, status,2, status,0
  9108 ;; Tracked objects:
  9109 ;;		On entry : 0/0
  9110 ;;		On exit  : 0/0
  9111 ;;		Unchanged: 0/0
  9112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9113 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9115 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9116 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9117 ;;Total ram usage:       12 bytes
  9118 ;; Hardware stack levels used: 1
  9119 ;; This function calls:
  9120 ;;		Nothing
  9121 ;; This function is called by:
  9122 ;;		_efgtoa
  9123 ;; This function uses a non-reentrant model
  9124 ;;
  9125                           
  9126  136C                     ___flge:	
  9127                           ;psect for function ___flge
  9128                           
  9129  136C                     l2793:	
  9130                           ;incstack = 0
  9131                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9132                           
  9133  136C  3000               	movlw	0
  9134  136D  0020               	movlb	0	; select bank0
  9135  136E  053A               	andwf	___flge@ff1,w
  9136  136F  00C2               	movwf	??___flge
  9137  1370  3000               	movlw	0
  9138  1371  053B               	andwf	___flge@ff1+1,w
  9139  1372  00C3               	movwf	??___flge+1
  9140  1373  3080               	movlw	128
  9141  1374  053C               	andwf	___flge@ff1+2,w
  9142  1375  00C4               	movwf	??___flge+2
  9143  1376  307F               	movlw	127
  9144  1377  053D               	andwf	___flge@ff1+3,w
  9145  1378  00C5               	movwf	??___flge+3
  9146  1379  0845               	movf	??___flge+3,w
  9147  137A  0444               	iorwf	??___flge+2,w
  9148  137B  0443               	iorwf	??___flge+1,w
  9149  137C  0442               	iorwf	??___flge,w
  9150  137D  1D03               	skipz
  9151  137E  2B80               	goto	u3501
  9152  137F  2B81               	goto	u3500
  9153  1380                     u3501:
  9154  1380  2B89               	goto	l418
  9155  1381                     u3500:
  9156  1381                     l2795:
  9157  1381  3000               	movlw	0
  9158  1382  00BD               	movwf	___flge@ff1+3
  9159  1383  3000               	movlw	0
  9160  1384  00BC               	movwf	___flge@ff1+2
  9161  1385  3000               	movlw	0
  9162  1386  00BB               	movwf	___flge@ff1+1
  9163  1387  3000               	movlw	0
  9164  1388  00BA               	movwf	___flge@ff1
  9165  1389                     l418:
  9166  1389  3000               	movlw	0
  9167  138A  053E               	andwf	___flge@ff2,w
  9168  138B  00C2               	movwf	??___flge
  9169  138C  3000               	movlw	0
  9170  138D  053F               	andwf	___flge@ff2+1,w
  9171  138E  00C3               	movwf	??___flge+1
  9172  138F  3080               	movlw	128
  9173  1390  0540               	andwf	___flge@ff2+2,w
  9174  1391  00C4               	movwf	??___flge+2
  9175  1392  307F               	movlw	127
  9176  1393  0541               	andwf	___flge@ff2+3,w
  9177  1394  00C5               	movwf	??___flge+3
  9178  1395  0845               	movf	??___flge+3,w
  9179  1396  0444               	iorwf	??___flge+2,w
  9180  1397  0443               	iorwf	??___flge+1,w
  9181  1398  0442               	iorwf	??___flge,w
  9182  1399  1D03               	skipz
  9183  139A  2B9C               	goto	u3511
  9184  139B  2B9D               	goto	u3510
  9185  139C                     u3511:
  9186  139C  2BA5               	goto	l2799
  9187  139D                     u3510:
  9188  139D                     l2797:
  9189  139D  3000               	movlw	0
  9190  139E  00C1               	movwf	___flge@ff2+3
  9191  139F  3000               	movlw	0
  9192  13A0  00C0               	movwf	___flge@ff2+2
  9193  13A1  3000               	movlw	0
  9194  13A2  00BF               	movwf	___flge@ff2+1
  9195  13A3  3000               	movlw	0
  9196  13A4  00BE               	movwf	___flge@ff2
  9197  13A5                     l2799:
  9198  13A5  1FBD               	btfss	___flge@ff1+3,7
  9199  13A6  2BA8               	goto	u3521
  9200  13A7  2BA9               	goto	u3520
  9201  13A8                     u3521:
  9202  13A8  2BC1               	goto	l2803
  9203  13A9                     u3520:
  9204  13A9                     l2801:
  9205  13A9  3000               	movlw	0
  9206  13AA  00C2               	movwf	??___flge
  9207  13AB  3000               	movlw	0
  9208  13AC  00C3               	movwf	??___flge+1
  9209  13AD  3000               	movlw	0
  9210  13AE  00C4               	movwf	??___flge+2
  9211  13AF  3080               	movlw	128
  9212  13B0  00C5               	movwf	??___flge+3
  9213  13B1  083A               	movf	___flge@ff1,w
  9214  13B2  02C2               	subwf	??___flge,f
  9215  13B3  083B               	movf	___flge@ff1+1,w
  9216  13B4  3BC3               	subwfb	??___flge+1,f
  9217  13B5  083C               	movf	___flge@ff1+2,w
  9218  13B6  3BC4               	subwfb	??___flge+2,f
  9219  13B7  083D               	movf	___flge@ff1+3,w
  9220  13B8  3BC5               	subwfb	??___flge+3,f
  9221  13B9  0845               	movf	??___flge+3,w
  9222  13BA  00BD               	movwf	___flge@ff1+3
  9223  13BB  0844               	movf	??___flge+2,w
  9224  13BC  00BC               	movwf	___flge@ff1+2
  9225  13BD  0843               	movf	??___flge+1,w
  9226  13BE  00BB               	movwf	___flge@ff1+1
  9227  13BF  0842               	movf	??___flge,w
  9228  13C0  00BA               	movwf	___flge@ff1
  9229  13C1                     l2803:
  9230  13C1  1FC1               	btfss	___flge@ff2+3,7
  9231  13C2  2BC4               	goto	u3531
  9232  13C3  2BC5               	goto	u3530
  9233  13C4                     u3531:
  9234  13C4  2BDD               	goto	l421
  9235  13C5                     u3530:
  9236  13C5                     l2805:
  9237  13C5  3000               	movlw	0
  9238  13C6  00C2               	movwf	??___flge
  9239  13C7  3000               	movlw	0
  9240  13C8  00C3               	movwf	??___flge+1
  9241  13C9  3000               	movlw	0
  9242  13CA  00C4               	movwf	??___flge+2
  9243  13CB  3080               	movlw	128
  9244  13CC  00C5               	movwf	??___flge+3
  9245  13CD  083E               	movf	___flge@ff2,w
  9246  13CE  02C2               	subwf	??___flge,f
  9247  13CF  083F               	movf	___flge@ff2+1,w
  9248  13D0  3BC3               	subwfb	??___flge+1,f
  9249  13D1  0840               	movf	___flge@ff2+2,w
  9250  13D2  3BC4               	subwfb	??___flge+2,f
  9251  13D3  0841               	movf	___flge@ff2+3,w
  9252  13D4  3BC5               	subwfb	??___flge+3,f
  9253  13D5  0845               	movf	??___flge+3,w
  9254  13D6  00C1               	movwf	___flge@ff2+3
  9255  13D7  0844               	movf	??___flge+2,w
  9256  13D8  00C0               	movwf	___flge@ff2+2
  9257  13D9  0843               	movf	??___flge+1,w
  9258  13DA  00BF               	movwf	___flge@ff2+1
  9259  13DB  0842               	movf	??___flge,w
  9260  13DC  00BE               	movwf	___flge@ff2
  9261  13DD                     l421:
  9262  13DD  3080               	movlw	128
  9263  13DE  06BD               	xorwf	___flge@ff1+3,f
  9264  13DF  3080               	movlw	128
  9265  13E0  06C1               	xorwf	___flge@ff2+3,f
  9266  13E1  0841               	movf	___flge@ff2+3,w
  9267  13E2  023D               	subwf	___flge@ff1+3,w
  9268  13E3  1D03               	skipz
  9269  13E4  2BEF               	goto	u3545
  9270  13E5  0840               	movf	___flge@ff2+2,w
  9271  13E6  023C               	subwf	___flge@ff1+2,w
  9272  13E7  1D03               	skipz
  9273  13E8  2BEF               	goto	u3545
  9274  13E9  083F               	movf	___flge@ff2+1,w
  9275  13EA  023B               	subwf	___flge@ff1+1,w
  9276  13EB  1D03               	skipz
  9277  13EC  2BEF               	goto	u3545
  9278  13ED  083E               	movf	___flge@ff2,w
  9279  13EE  023A               	subwf	___flge@ff1,w
  9280  13EF                     u3545:
  9281  13EF  1803               	skipnc
  9282  13F0  2BF2               	goto	u3541
  9283  13F1  2BF3               	goto	u3540
  9284  13F2                     u3541:
  9285  13F2  2BF5               	goto	l2809
  9286  13F3                     u3540:
  9287  13F3                     l2807:
  9288  13F3  1003               	clrc
  9289  13F4  2BF6               	goto	l426
  9290  13F5                     l2809:
  9291  13F5  1403               	setc
  9292  13F6                     l426:
  9293  13F6  0008               	return
  9294  13F7                     __end_of___flge:
  9295                           
  9296                           	psect	text23
  9297  10E3                     __ptext23:	
  9298 ;; *************** function ___fleq *****************
  9299 ;; Defined at:
  9300 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  9301 ;; Parameters:    Size  Location     Type
  9302 ;;  ff1             4    0[COMMON] unsigned int 
  9303 ;;  ff2             4    4[COMMON] unsigned int 
  9304 ;; Auto vars:     Size  Location     Type
  9305 ;;		None
  9306 ;; Return value:  Size  Location     Type
  9307 ;;		None               void
  9308 ;; Registers used:
  9309 ;;		wreg, status,2, status,0
  9310 ;; Tracked objects:
  9311 ;;		On entry : 0/0
  9312 ;;		On exit  : 0/0
  9313 ;;		Unchanged: 0/0
  9314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9315 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9317 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9318 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9319 ;;Total ram usage:       12 bytes
  9320 ;; Hardware stack levels used: 1
  9321 ;; This function calls:
  9322 ;;		Nothing
  9323 ;; This function is called by:
  9324 ;;		_efgtoa
  9325 ;; This function uses a non-reentrant model
  9326 ;;
  9327                           
  9328  10E3                     ___fleq:	
  9329                           ;psect for function ___fleq
  9330                           
  9331  10E3                     l2781:	
  9332                           ;incstack = 0
  9333                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9334                           
  9335  10E3  3000               	movlw	0
  9336  10E4  0570               	andwf	___fleq@ff1,w
  9337  10E5  00F8               	movwf	??___fleq
  9338  10E6  3000               	movlw	0
  9339  10E7  0571               	andwf	___fleq@ff1+1,w
  9340  10E8  00F9               	movwf	??___fleq+1
  9341  10E9  3080               	movlw	128
  9342  10EA  0572               	andwf	___fleq@ff1+2,w
  9343  10EB  00FA               	movwf	??___fleq+2
  9344  10EC  307F               	movlw	127
  9345  10ED  0573               	andwf	___fleq@ff1+3,w
  9346  10EE  00FB               	movwf	??___fleq+3
  9347  10EF  087B               	movf	??___fleq+3,w
  9348  10F0  047A               	iorwf	??___fleq+2,w
  9349  10F1  0479               	iorwf	??___fleq+1,w
  9350  10F2  0478               	iorwf	??___fleq,w
  9351  10F3  1D03               	skipz
  9352  10F4  28F6               	goto	u3471
  9353  10F5  28F7               	goto	u3470
  9354  10F6                     u3471:
  9355  10F6  28FF               	goto	l409
  9356  10F7                     u3470:
  9357  10F7                     l2783:
  9358  10F7  3000               	movlw	0
  9359  10F8  00F3               	movwf	___fleq@ff1+3
  9360  10F9  3000               	movlw	0
  9361  10FA  00F2               	movwf	___fleq@ff1+2
  9362  10FB  3000               	movlw	0
  9363  10FC  00F1               	movwf	___fleq@ff1+1
  9364  10FD  3000               	movlw	0
  9365  10FE  00F0               	movwf	___fleq@ff1
  9366  10FF                     l409:
  9367  10FF  3000               	movlw	0
  9368  1100  0574               	andwf	___fleq@ff2,w
  9369  1101  00F8               	movwf	??___fleq
  9370  1102  3000               	movlw	0
  9371  1103  0575               	andwf	___fleq@ff2+1,w
  9372  1104  00F9               	movwf	??___fleq+1
  9373  1105  3080               	movlw	128
  9374  1106  0576               	andwf	___fleq@ff2+2,w
  9375  1107  00FA               	movwf	??___fleq+2
  9376  1108  307F               	movlw	127
  9377  1109  0577               	andwf	___fleq@ff2+3,w
  9378  110A  00FB               	movwf	??___fleq+3
  9379  110B  087B               	movf	??___fleq+3,w
  9380  110C  047A               	iorwf	??___fleq+2,w
  9381  110D  0479               	iorwf	??___fleq+1,w
  9382  110E  0478               	iorwf	??___fleq,w
  9383  110F  1D03               	skipz
  9384  1110  2912               	goto	u3481
  9385  1111  2913               	goto	u3480
  9386  1112                     u3481:
  9387  1112  291B               	goto	l410
  9388  1113                     u3480:
  9389  1113                     l2785:
  9390  1113  3000               	movlw	0
  9391  1114  00F7               	movwf	___fleq@ff2+3
  9392  1115  3000               	movlw	0
  9393  1116  00F6               	movwf	___fleq@ff2+2
  9394  1117  3000               	movlw	0
  9395  1118  00F5               	movwf	___fleq@ff2+1
  9396  1119  3000               	movlw	0
  9397  111A  00F4               	movwf	___fleq@ff2
  9398  111B                     l410:
  9399  111B  0877               	movf	___fleq@ff2+3,w
  9400  111C  0673               	xorwf	___fleq@ff1+3,w
  9401  111D  1D03               	skipz
  9402  111E  2929               	goto	u3495
  9403  111F  0876               	movf	___fleq@ff2+2,w
  9404  1120  0672               	xorwf	___fleq@ff1+2,w
  9405  1121  1D03               	skipz
  9406  1122  2929               	goto	u3495
  9407  1123  0875               	movf	___fleq@ff2+1,w
  9408  1124  0671               	xorwf	___fleq@ff1+1,w
  9409  1125  1D03               	skipz
  9410  1126  2929               	goto	u3495
  9411  1127  0874               	movf	___fleq@ff2,w
  9412  1128  0670               	xorwf	___fleq@ff1,w
  9413  1129                     u3495:
  9414  1129  1903               	skipnz
  9415  112A  292C               	goto	u3491
  9416  112B  292D               	goto	u3490
  9417  112C                     u3491:
  9418  112C  292F               	goto	l2789
  9419  112D                     u3490:
  9420  112D                     l2787:
  9421  112D  1003               	clrc
  9422  112E  2930               	goto	l415
  9423  112F                     l2789:
  9424  112F  1403               	setc
  9425  1130                     l415:
  9426  1130  0008               	return
  9427  1131                     __end_of___fleq:
  9428                           
  9429                           	psect	text24
  9430  164C                     __ptext24:	
  9431 ;; *************** function ___fldiv *****************
  9432 ;; Defined at:
  9433 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  9434 ;; Parameters:    Size  Location     Type
  9435 ;;  a               4   26[BANK0 ] unsigned int 
  9436 ;;  b               4   30[BANK0 ] unsigned int 
  9437 ;; Auto vars:     Size  Location     Type
  9438 ;;  grs             4   46[BANK0 ] unsigned long 
  9439 ;;  rem             4   39[BANK0 ] unsigned long 
  9440 ;;  new_exp         2   44[BANK0 ] int 
  9441 ;;  aexp            1   51[BANK0 ] unsigned char 
  9442 ;;  bexp            1   50[BANK0 ] unsigned char 
  9443 ;;  sign            1   43[BANK0 ] unsigned char 
  9444 ;; Return value:  Size  Location     Type
  9445 ;;                  4   26[BANK0 ] unsigned char 
  9446 ;; Registers used:
  9447 ;;		wreg, status,2, status,0
  9448 ;; Tracked objects:
  9449 ;;		On entry : 0/0
  9450 ;;		On exit  : 0/0
  9451 ;;		Unchanged: 0/0
  9452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9453 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9454 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9455 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9456 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9457 ;;Total ram usage:       26 bytes
  9458 ;; Hardware stack levels used: 1
  9459 ;; This function calls:
  9460 ;;		Nothing
  9461 ;; This function is called by:
  9462 ;;		_main
  9463 ;;		_efgtoa
  9464 ;; This function uses a non-reentrant model
  9465 ;;
  9466                           
  9467  164C                     ___fldiv:	
  9468                           ;psect for function ___fldiv
  9469                           
  9470  164C                     l2863:	
  9471                           ;incstack = 0
  9472                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  9473                           
  9474  164C  0020               	movlb	0	; select bank0
  9475  164D  0841               	movf	___fldiv@b+3,w
  9476  164E  3980               	andlw	128
  9477  164F  00C2               	movwf	??___fldiv
  9478  1650  0842               	movf	??___fldiv,w
  9479  1651  00CB               	movwf	___fldiv@sign
  9480  1652                     l2865:
  9481  1652  3541               	lslf	___fldiv@b+3,w
  9482  1653  00C2               	movwf	??___fldiv
  9483  1654  0842               	movf	??___fldiv,w
  9484  1655  00D2               	movwf	___fldiv@bexp
  9485  1656                     l2867:
  9486  1656  1FC0               	btfss	___fldiv@b+2,7
  9487  1657  2E59               	goto	u3661
  9488  1658  2E5A               	goto	u3660
  9489  1659                     u3661:
  9490  1659  2E5B               	goto	l2871
  9491  165A                     u3660:
  9492  165A                     l2869:
  9493  165A  1452               	bsf	___fldiv@bexp,0
  9494  165B                     l2871:
  9495  165B  0852               	movf	___fldiv@bexp,w
  9496  165C  1903               	btfsc	3,2
  9497  165D  2E5F               	goto	u3671
  9498  165E  2E60               	goto	u3670
  9499  165F                     u3671:
  9500  165F  2E70               	goto	l2881
  9501  1660                     u3670:
  9502  1660                     l2873:
  9503  1660  0A52               	incf	___fldiv@bexp,w
  9504  1661  1D03               	btfss	3,2
  9505  1662  2E64               	goto	u3681
  9506  1663  2E65               	goto	u3680
  9507  1664                     u3681:
  9508  1664  2E6D               	goto	l2877
  9509  1665                     u3680:
  9510  1665                     l2875:
  9511  1665  3000               	movlw	0
  9512  1666  00C1               	movwf	___fldiv@b+3
  9513  1667  3000               	movlw	0
  9514  1668  00C0               	movwf	___fldiv@b+2
  9515  1669  3000               	movlw	0
  9516  166A  00BF               	movwf	___fldiv@b+1
  9517  166B  3000               	movlw	0
  9518  166C  00BE               	movwf	___fldiv@b
  9519  166D                     l2877:
  9520  166D  17C0               	bsf	___fldiv@b+2,7
  9521  166E                     l2879:
  9522  166E  01C1               	clrf	___fldiv@b+3
  9523  166F  2E78               	goto	l2883
  9524  1670                     l2881:
  9525  1670  3000               	movlw	0
  9526  1671  00C1               	movwf	___fldiv@b+3
  9527  1672  3000               	movlw	0
  9528  1673  00C0               	movwf	___fldiv@b+2
  9529  1674  3000               	movlw	0
  9530  1675  00BF               	movwf	___fldiv@b+1
  9531  1676  3000               	movlw	0
  9532  1677  00BE               	movwf	___fldiv@b
  9533  1678                     l2883:
  9534  1678  083D               	movf	___fldiv@a+3,w
  9535  1679  3980               	andlw	128
  9536  167A  00C2               	movwf	??___fldiv
  9537  167B  0842               	movf	??___fldiv,w
  9538  167C  06CB               	xorwf	___fldiv@sign,f
  9539  167D                     l2885:
  9540  167D  353D               	lslf	___fldiv@a+3,w
  9541  167E  00C2               	movwf	??___fldiv
  9542  167F  0842               	movf	??___fldiv,w
  9543  1680  00D3               	movwf	___fldiv@aexp
  9544  1681                     l2887:
  9545  1681  1FBC               	btfss	___fldiv@a+2,7
  9546  1682  2E84               	goto	u3691
  9547  1683  2E85               	goto	u3690
  9548  1684                     u3691:
  9549  1684  2E86               	goto	l2891
  9550  1685                     u3690:
  9551  1685                     l2889:
  9552  1685  1453               	bsf	___fldiv@aexp,0
  9553  1686                     l2891:
  9554  1686  0853               	movf	___fldiv@aexp,w
  9555  1687  1903               	btfsc	3,2
  9556  1688  2E8A               	goto	u3701
  9557  1689  2E8B               	goto	u3700
  9558  168A                     u3701:
  9559  168A  2E9B               	goto	l2901
  9560  168B                     u3700:
  9561  168B                     l2893:
  9562  168B  0A53               	incf	___fldiv@aexp,w
  9563  168C  1D03               	btfss	3,2
  9564  168D  2E8F               	goto	u3711
  9565  168E  2E90               	goto	u3710
  9566  168F                     u3711:
  9567  168F  2E98               	goto	l2897
  9568  1690                     u3710:
  9569  1690                     l2895:
  9570  1690  3000               	movlw	0
  9571  1691  00BD               	movwf	___fldiv@a+3
  9572  1692  3000               	movlw	0
  9573  1693  00BC               	movwf	___fldiv@a+2
  9574  1694  3000               	movlw	0
  9575  1695  00BB               	movwf	___fldiv@a+1
  9576  1696  3000               	movlw	0
  9577  1697  00BA               	movwf	___fldiv@a
  9578  1698                     l2897:
  9579  1698  17BC               	bsf	___fldiv@a+2,7
  9580  1699                     l2899:
  9581  1699  01BD               	clrf	___fldiv@a+3
  9582  169A  2EA3               	goto	l597
  9583  169B                     l2901:
  9584  169B  3000               	movlw	0
  9585  169C  00BD               	movwf	___fldiv@a+3
  9586  169D  3000               	movlw	0
  9587  169E  00BC               	movwf	___fldiv@a+2
  9588  169F  3000               	movlw	0
  9589  16A0  00BB               	movwf	___fldiv@a+1
  9590  16A1  3000               	movlw	0
  9591  16A2  00BA               	movwf	___fldiv@a
  9592  16A3                     l597:
  9593  16A3  083D               	movf	___fldiv@a+3,w
  9594  16A4  043C               	iorwf	___fldiv@a+2,w
  9595  16A5  043B               	iorwf	___fldiv@a+1,w
  9596  16A6  043A               	iorwf	___fldiv@a,w
  9597  16A7  1D03               	skipz
  9598  16A8  2EAA               	goto	u3721
  9599  16A9  2EAB               	goto	u3720
  9600  16AA                     u3721:
  9601  16AA  2EC4               	goto	l2911
  9602  16AB                     u3720:
  9603  16AB                     l2903:
  9604  16AB  3000               	movlw	0
  9605  16AC  00C1               	movwf	___fldiv@b+3
  9606  16AD  3000               	movlw	0
  9607  16AE  00C0               	movwf	___fldiv@b+2
  9608  16AF  3000               	movlw	0
  9609  16B0  00BF               	movwf	___fldiv@b+1
  9610  16B1  3000               	movlw	0
  9611  16B2  00BE               	movwf	___fldiv@b
  9612  16B3  3080               	movlw	128
  9613  16B4  04C0               	iorwf	___fldiv@b+2,f
  9614  16B5  307F               	movlw	127
  9615  16B6  04C1               	iorwf	___fldiv@b+3,f
  9616  16B7                     l2905:
  9617  16B7  084B               	movf	___fldiv@sign,w
  9618  16B8  00C2               	movwf	??___fldiv
  9619  16B9  0842               	movf	??___fldiv,w
  9620  16BA  04C1               	iorwf	___fldiv@b+3,f
  9621  16BB                     l2907:
  9622  16BB  0841               	movf	___fldiv@b+3,w
  9623  16BC  00BD               	movwf	?___fldiv+3
  9624  16BD  0840               	movf	___fldiv@b+2,w
  9625  16BE  00BC               	movwf	?___fldiv+2
  9626  16BF  083F               	movf	___fldiv@b+1,w
  9627  16C0  00BB               	movwf	?___fldiv+1
  9628  16C1  083E               	movf	___fldiv@b,w
  9629  16C2  00BA               	movwf	?___fldiv
  9630  16C3  2FFF               	goto	l599
  9631  16C4                     l2911:
  9632  16C4  0852               	movf	___fldiv@bexp,w
  9633  16C5  1D03               	btfss	3,2
  9634  16C6  2EC8               	goto	u3731
  9635  16C7  2EC9               	goto	u3730
  9636  16C8                     u3731:
  9637  16C8  2ED2               	goto	l2917
  9638  16C9                     u3730:
  9639  16C9                     l2913:
  9640  16C9  3000               	movlw	0
  9641  16CA  00BD               	movwf	?___fldiv+3
  9642  16CB  3000               	movlw	0
  9643  16CC  00BC               	movwf	?___fldiv+2
  9644  16CD  3000               	movlw	0
  9645  16CE  00BB               	movwf	?___fldiv+1
  9646  16CF  3000               	movlw	0
  9647  16D0  00BA               	movwf	?___fldiv
  9648  16D1  2FFF               	goto	l599
  9649  16D2                     l2917:
  9650  16D2  0852               	movf	___fldiv@bexp,w
  9651  16D3  00C2               	movwf	??___fldiv
  9652  16D4  01C3               	clrf	??___fldiv+1
  9653  16D5  0843               	movf	??___fldiv+1,w
  9654  16D6  00C5               	movwf	??___fldiv+3
  9655  16D7  0853               	movf	___fldiv@aexp,w
  9656  16D8  0242               	subwf	??___fldiv,w
  9657  16D9  00C4               	movwf	??___fldiv+2
  9658  16DA  1C03               	skipc
  9659  16DB  03C5               	decf	??___fldiv+3,f
  9660  16DC  0844               	movf	??___fldiv+2,w
  9661  16DD  3E7F               	addlw	127
  9662  16DE  00CC               	movwf	___fldiv@new_exp
  9663  16DF  3000               	movlw	0
  9664  16E0  3D45               	addwfc	??___fldiv+3,w
  9665  16E1  00CD               	movwf	___fldiv@new_exp+1
  9666  16E2                     l2919:
  9667  16E2  0841               	movf	___fldiv@b+3,w
  9668  16E3  00CA               	movwf	___fldiv@rem+3
  9669  16E4  0840               	movf	___fldiv@b+2,w
  9670  16E5  00C9               	movwf	___fldiv@rem+2
  9671  16E6  083F               	movf	___fldiv@b+1,w
  9672  16E7  00C8               	movwf	___fldiv@rem+1
  9673  16E8  083E               	movf	___fldiv@b,w
  9674  16E9  00C7               	movwf	___fldiv@rem
  9675  16EA                     l2921:
  9676  16EA  3000               	movlw	0
  9677  16EB  00C1               	movwf	___fldiv@b+3
  9678  16EC  3000               	movlw	0
  9679  16ED  00C0               	movwf	___fldiv@b+2
  9680  16EE  3000               	movlw	0
  9681  16EF  00BF               	movwf	___fldiv@b+1
  9682  16F0  3000               	movlw	0
  9683  16F1  00BE               	movwf	___fldiv@b
  9684  16F2                     l2923:
  9685  16F2  3000               	movlw	0
  9686  16F3  00D1               	movwf	___fldiv@grs+3
  9687  16F4  3000               	movlw	0
  9688  16F5  00D0               	movwf	___fldiv@grs+2
  9689  16F6  3000               	movlw	0
  9690  16F7  00CF               	movwf	___fldiv@grs+1
  9691  16F8  3000               	movlw	0
  9692  16F9  00CE               	movwf	___fldiv@grs
  9693  16FA                     l2925:
  9694  16FA  01D3               	clrf	___fldiv@aexp
  9695  16FB  2F3A               	goto	l2945
  9696  16FC                     l2927:
  9697  16FC  0853               	movf	___fldiv@aexp,w
  9698  16FD  1903               	btfsc	3,2
  9699  16FE  2F00               	goto	u3741
  9700  16FF  2F01               	goto	u3740
  9701  1700                     u3741:
  9702  1700  2F1B               	goto	l2937
  9703  1701                     u3740:
  9704  1701                     l2929:
  9705  1701  3001               	movlw	1
  9706  1702                     u3755:
  9707  1702  35C7               	lslf	___fldiv@rem,f
  9708  1703  0DC8               	rlf	___fldiv@rem+1,f
  9709  1704  0DC9               	rlf	___fldiv@rem+2,f
  9710  1705  0DCA               	rlf	___fldiv@rem+3,f
  9711  1706  0B89               	decfsz	9,f
  9712  1707  2F02               	goto	u3755
  9713  1708  3001               	movlw	1
  9714  1709                     u3765:
  9715  1709  35BE               	lslf	___fldiv@b,f
  9716  170A  0DBF               	rlf	___fldiv@b+1,f
  9717  170B  0DC0               	rlf	___fldiv@b+2,f
  9718  170C  0DC1               	rlf	___fldiv@b+3,f
  9719  170D  0B89               	decfsz	9,f
  9720  170E  2F09               	goto	u3765
  9721  170F                     l2931:
  9722  170F  1FD1               	btfss	___fldiv@grs+3,7
  9723  1710  2F12               	goto	u3771
  9724  1711  2F13               	goto	u3770
  9725  1712                     u3771:
  9726  1712  2F14               	goto	l2935
  9727  1713                     u3770:
  9728  1713                     l2933:
  9729  1713  143E               	bsf	___fldiv@b,0
  9730  1714                     l2935:
  9731  1714  3001               	movlw	1
  9732  1715                     u3785:
  9733  1715  35CE               	lslf	___fldiv@grs,f
  9734  1716  0DCF               	rlf	___fldiv@grs+1,f
  9735  1717  0DD0               	rlf	___fldiv@grs+2,f
  9736  1718  0DD1               	rlf	___fldiv@grs+3,f
  9737  1719  0B89               	decfsz	9,f
  9738  171A  2F15               	goto	u3785
  9739  171B                     l2937:
  9740  171B  083D               	movf	___fldiv@a+3,w
  9741  171C  024A               	subwf	___fldiv@rem+3,w
  9742  171D  1D03               	skipz
  9743  171E  2F29               	goto	u3795
  9744  171F  083C               	movf	___fldiv@a+2,w
  9745  1720  0249               	subwf	___fldiv@rem+2,w
  9746  1721  1D03               	skipz
  9747  1722  2F29               	goto	u3795
  9748  1723  083B               	movf	___fldiv@a+1,w
  9749  1724  0248               	subwf	___fldiv@rem+1,w
  9750  1725  1D03               	skipz
  9751  1726  2F29               	goto	u3795
  9752  1727  083A               	movf	___fldiv@a,w
  9753  1728  0247               	subwf	___fldiv@rem,w
  9754  1729                     u3795:
  9755  1729  1C03               	skipc
  9756  172A  2F2C               	goto	u3791
  9757  172B  2F2D               	goto	u3790
  9758  172C                     u3791:
  9759  172C  2F36               	goto	l2943
  9760  172D                     u3790:
  9761  172D                     l2939:
  9762  172D  1751               	bsf	___fldiv@grs+3,6
  9763  172E                     l2941:
  9764  172E  083A               	movf	___fldiv@a,w
  9765  172F  02C7               	subwf	___fldiv@rem,f
  9766  1730  083B               	movf	___fldiv@a+1,w
  9767  1731  3BC8               	subwfb	___fldiv@rem+1,f
  9768  1732  083C               	movf	___fldiv@a+2,w
  9769  1733  3BC9               	subwfb	___fldiv@rem+2,f
  9770  1734  083D               	movf	___fldiv@a+3,w
  9771  1735  3BCA               	subwfb	___fldiv@rem+3,f
  9772  1736                     l2943:
  9773  1736  3001               	movlw	1
  9774  1737  00C2               	movwf	??___fldiv
  9775  1738  0842               	movf	??___fldiv,w
  9776  1739  07D3               	addwf	___fldiv@aexp,f
  9777  173A                     l2945:
  9778  173A  301A               	movlw	26
  9779  173B  0253               	subwf	___fldiv@aexp,w
  9780  173C  1C03               	skipc
  9781  173D  2F3F               	goto	u3801
  9782  173E  2F40               	goto	u3800
  9783  173F                     u3801:
  9784  173F  2EFC               	goto	l2927
  9785  1740                     u3800:
  9786  1740                     l2947:
  9787  1740  084A               	movf	___fldiv@rem+3,w
  9788  1741  0449               	iorwf	___fldiv@rem+2,w
  9789  1742  0448               	iorwf	___fldiv@rem+1,w
  9790  1743  0447               	iorwf	___fldiv@rem,w
  9791  1744  1903               	skipnz
  9792  1745  2F47               	goto	u3811
  9793  1746  2F48               	goto	u3810
  9794  1747                     u3811:
  9795  1747  2F61               	goto	l2961
  9796  1748                     u3810:
  9797  1748                     l2949:
  9798  1748  144E               	bsf	___fldiv@grs,0
  9799  1749  2F61               	goto	l2961
  9800  174A                     l2951:
  9801  174A  3001               	movlw	1
  9802  174B                     u3825:
  9803  174B  35BE               	lslf	___fldiv@b,f
  9804  174C  0DBF               	rlf	___fldiv@b+1,f
  9805  174D  0DC0               	rlf	___fldiv@b+2,f
  9806  174E  0DC1               	rlf	___fldiv@b+3,f
  9807  174F  0B89               	decfsz	9,f
  9808  1750  2F4B               	goto	u3825
  9809  1751                     l2953:
  9810  1751  1FD1               	btfss	___fldiv@grs+3,7
  9811  1752  2F54               	goto	u3831
  9812  1753  2F55               	goto	u3830
  9813  1754                     u3831:
  9814  1754  2F56               	goto	l2957
  9815  1755                     u3830:
  9816  1755                     l2955:
  9817  1755  143E               	bsf	___fldiv@b,0
  9818  1756                     l2957:
  9819  1756  3001               	movlw	1
  9820  1757                     u3845:
  9821  1757  35CE               	lslf	___fldiv@grs,f
  9822  1758  0DCF               	rlf	___fldiv@grs+1,f
  9823  1759  0DD0               	rlf	___fldiv@grs+2,f
  9824  175A  0DD1               	rlf	___fldiv@grs+3,f
  9825  175B  0B89               	decfsz	9,f
  9826  175C  2F57               	goto	u3845
  9827  175D                     l2959:
  9828  175D  30FF               	movlw	255
  9829  175E  07CC               	addwf	___fldiv@new_exp,f
  9830  175F  30FF               	movlw	255
  9831  1760  3DCD               	addwfc	___fldiv@new_exp+1,f
  9832  1761                     l2961:
  9833  1761  1FC0               	btfss	___fldiv@b+2,7
  9834  1762  2F64               	goto	u3851
  9835  1763  2F65               	goto	u3850
  9836  1764                     u3851:
  9837  1764  2F4A               	goto	l2951
  9838  1765                     u3850:
  9839  1765                     l2963:
  9840  1765  01D3               	clrf	___fldiv@aexp
  9841  1766                     l2965:
  9842  1766  1FD1               	btfss	___fldiv@grs+3,7
  9843  1767  2F69               	goto	u3861
  9844  1768  2F6A               	goto	u3860
  9845  1769                     u3861:
  9846  1769  2F86               	goto	l2973
  9847  176A                     u3860:
  9848  176A                     l2967:
  9849  176A  30FF               	movlw	255
  9850  176B  054E               	andwf	___fldiv@grs,w
  9851  176C  00C2               	movwf	??___fldiv
  9852  176D  30FF               	movlw	255
  9853  176E  054F               	andwf	___fldiv@grs+1,w
  9854  176F  00C3               	movwf	??___fldiv+1
  9855  1770  30FF               	movlw	255
  9856  1771  0550               	andwf	___fldiv@grs+2,w
  9857  1772  00C4               	movwf	??___fldiv+2
  9858  1773  307F               	movlw	127
  9859  1774  0551               	andwf	___fldiv@grs+3,w
  9860  1775  00C5               	movwf	??___fldiv+3
  9861  1776  0845               	movf	??___fldiv+3,w
  9862  1777  0444               	iorwf	??___fldiv+2,w
  9863  1778  0443               	iorwf	??___fldiv+1,w
  9864  1779  0442               	iorwf	??___fldiv,w
  9865  177A  1903               	skipnz
  9866  177B  2F7D               	goto	u3871
  9867  177C  2F7E               	goto	u3870
  9868  177D                     u3871:
  9869  177D  2F81               	goto	l613
  9870  177E                     u3870:
  9871  177E                     l2969:
  9872  177E  01D3               	clrf	___fldiv@aexp
  9873  177F  0AD3               	incf	___fldiv@aexp,f
  9874  1780  2F86               	goto	l2973
  9875  1781                     l613:
  9876  1781  1C3E               	btfss	___fldiv@b,0
  9877  1782  2F84               	goto	u3881
  9878  1783  2F85               	goto	u3880
  9879  1784                     u3881:
  9880  1784  2F86               	goto	l2973
  9881  1785                     u3880:
  9882  1785  2F7E               	goto	l2969
  9883  1786                     l2973:
  9884  1786  0853               	movf	___fldiv@aexp,w
  9885  1787  1903               	btfsc	3,2
  9886  1788  2F8A               	goto	u3891
  9887  1789  2F8B               	goto	u3890
  9888  178A                     u3891:
  9889  178A  2FB3               	goto	l2983
  9890  178B                     u3890:
  9891  178B                     l2975:
  9892  178B  3001               	movlw	1
  9893  178C  07BE               	addwf	___fldiv@b,f
  9894  178D  3000               	movlw	0
  9895  178E  3DBF               	addwfc	___fldiv@b+1,f
  9896  178F  3000               	movlw	0
  9897  1790  3DC0               	addwfc	___fldiv@b+2,f
  9898  1791  3000               	movlw	0
  9899  1792  3DC1               	addwfc	___fldiv@b+3,f
  9900  1793                     l2977:
  9901  1793  1C41               	btfss	___fldiv@b+3,0
  9902  1794  2F96               	goto	u3901
  9903  1795  2F97               	goto	u3900
  9904  1796                     u3901:
  9905  1796  2FB3               	goto	l2983
  9906  1797                     u3900:
  9907  1797                     l2979:
  9908  1797  083E               	movf	___fldiv@b,w
  9909  1798  00C2               	movwf	??___fldiv
  9910  1799  083F               	movf	___fldiv@b+1,w
  9911  179A  00C3               	movwf	??___fldiv+1
  9912  179B  0840               	movf	___fldiv@b+2,w
  9913  179C  00C4               	movwf	??___fldiv+2
  9914  179D  0841               	movf	___fldiv@b+3,w
  9915  179E  00C5               	movwf	??___fldiv+3
  9916  179F  3001               	movlw	1
  9917  17A0  00C6               	movwf	??___fldiv+4
  9918  17A1                     u3915:
  9919  17A1  37C5               	asrf	??___fldiv+3,f
  9920  17A2  0CC4               	rrf	??___fldiv+2,f
  9921  17A3  0CC3               	rrf	??___fldiv+1,f
  9922  17A4  0CC2               	rrf	??___fldiv,f
  9923  17A5                     u3910:
  9924  17A5  0BC6               	decfsz	??___fldiv+4,f
  9925  17A6  2FA1               	goto	u3915
  9926  17A7  0845               	movf	??___fldiv+3,w
  9927  17A8  00C1               	movwf	___fldiv@b+3
  9928  17A9  0844               	movf	??___fldiv+2,w
  9929  17AA  00C0               	movwf	___fldiv@b+2
  9930  17AB  0843               	movf	??___fldiv+1,w
  9931  17AC  00BF               	movwf	___fldiv@b+1
  9932  17AD  0842               	movf	??___fldiv,w
  9933  17AE  00BE               	movwf	___fldiv@b
  9934  17AF                     l2981:
  9935  17AF  3001               	movlw	1
  9936  17B0  07CC               	addwf	___fldiv@new_exp,f
  9937  17B1  3000               	movlw	0
  9938  17B2  3DCD               	addwfc	___fldiv@new_exp+1,f
  9939  17B3                     l2983:
  9940  17B3  084D               	movf	___fldiv@new_exp+1,w
  9941  17B4  3A80               	xorlw	128
  9942  17B5  00C2               	movwf	??___fldiv
  9943  17B6  3080               	movlw	128
  9944  17B7  0242               	subwf	??___fldiv,w
  9945  17B8  1D03               	skipz
  9946  17B9  2FBC               	goto	u3925
  9947  17BA  30FF               	movlw	255
  9948  17BB  024C               	subwf	___fldiv@new_exp,w
  9949  17BC                     u3925:
  9950  17BC  1C03               	skipc
  9951  17BD  2FBF               	goto	u3921
  9952  17BE  2FC0               	goto	u3920
  9953  17BF                     u3921:
  9954  17BF  2FCD               	goto	l618
  9955  17C0                     u3920:
  9956  17C0                     l2985:
  9957  17C0  30FF               	movlw	255
  9958  17C1  0020               	movlb	0	; select bank0
  9959  17C2  00CC               	movwf	___fldiv@new_exp
  9960  17C3  3000               	movlw	0
  9961  17C4  00CD               	movwf	___fldiv@new_exp+1
  9962  17C5  3000               	movlw	0
  9963  17C6  00C1               	movwf	___fldiv@b+3
  9964  17C7  3000               	movlw	0
  9965  17C8  00C0               	movwf	___fldiv@b+2
  9966  17C9  3000               	movlw	0
  9967  17CA  00BF               	movwf	___fldiv@b+1
  9968  17CB  3000               	movlw	0
  9969  17CC  00BE               	movwf	___fldiv@b
  9970  17CD                     l618:
  9971  17CD  0020               	movlb	0	; select bank0
  9972  17CE  084D               	movf	___fldiv@new_exp+1,w
  9973  17CF  3A80               	xorlw	128
  9974  17D0  00C2               	movwf	??___fldiv
  9975  17D1  3080               	movlw	128
  9976  17D2  0242               	subwf	??___fldiv,w
  9977  17D3  1D03               	skipz
  9978  17D4  2FD7               	goto	u3935
  9979  17D5  3001               	movlw	1
  9980  17D6  024C               	subwf	___fldiv@new_exp,w
  9981  17D7                     u3935:
  9982  17D7  1803               	skipnc
  9983  17D8  2FDA               	goto	u3931
  9984  17D9  2FDB               	goto	u3930
  9985  17DA                     u3931:
  9986  17DA  2FE7               	goto	l619
  9987  17DB                     u3930:
  9988  17DB                     l2987:
  9989  17DB  0020               	movlb	0	; select bank0
  9990  17DC  01CC               	clrf	___fldiv@new_exp
  9991  17DD  01CD               	clrf	___fldiv@new_exp+1
  9992  17DE                     l2989:
  9993  17DE  3000               	movlw	0
  9994  17DF  00C1               	movwf	___fldiv@b+3
  9995  17E0  3000               	movlw	0
  9996  17E1  00C0               	movwf	___fldiv@b+2
  9997  17E2  3000               	movlw	0
  9998  17E3  00BF               	movwf	___fldiv@b+1
  9999  17E4  3000               	movlw	0
 10000  17E5  00BE               	movwf	___fldiv@b
 10001  17E6                     l2991:
 10002  17E6  01CB               	clrf	___fldiv@sign
 10003  17E7                     l619:
 10004  17E7  0020               	movlb	0	; select bank0
 10005  17E8  084C               	movf	___fldiv@new_exp,w
 10006  17E9  00C2               	movwf	??___fldiv
 10007  17EA  0842               	movf	??___fldiv,w
 10008  17EB  00D2               	movwf	___fldiv@bexp
 10009  17EC                     l2993:
 10010  17EC  1C52               	btfss	___fldiv@bexp,0
 10011  17ED  2FEF               	goto	u3941
 10012  17EE  2FF0               	goto	u3940
 10013  17EF                     u3941:
 10014  17EF  2FF2               	goto	l2997
 10015  17F0                     u3940:
 10016  17F0                     l2995:
 10017  17F0  17C0               	bsf	___fldiv@b+2,7
 10018  17F1  2FF6               	goto	l621
 10019  17F2                     l2997:
 10020  17F2  307F               	movlw	127
 10021  17F3  00C2               	movwf	??___fldiv
 10022  17F4  0842               	movf	??___fldiv,w
 10023  17F5  05C0               	andwf	___fldiv@b+2,f
 10024  17F6                     l621:
 10025  17F6  3652               	lsrf	___fldiv@bexp,w
 10026  17F7  00C2               	movwf	??___fldiv
 10027  17F8  0842               	movf	??___fldiv,w
 10028  17F9  00C1               	movwf	___fldiv@b+3
 10029  17FA  084B               	movf	___fldiv@sign,w
 10030  17FB  00C2               	movwf	??___fldiv
 10031  17FC  0842               	movf	??___fldiv,w
 10032  17FD  04C1               	iorwf	___fldiv@b+3,f
 10033  17FE  2EBB               	goto	l2907
 10034  17FF                     l599:
 10035  17FF  0008               	return
 10036  1800                     __end_of___fldiv:
 10037                           
 10038                           	psect	text25
 10039  1131                     __ptext25:	
 10040 ;; *************** function ___awmod *****************
 10041 ;; Defined at:
 10042 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
 10043 ;; Parameters:    Size  Location     Type
 10044 ;;  divisor         2    0[COMMON] int 
 10045 ;;  dividend        2    2[COMMON] int 
 10046 ;; Auto vars:     Size  Location     Type
 10047 ;;  sign            1    6[COMMON] unsigned char 
 10048 ;;  counter         1    5[COMMON] unsigned char 
 10049 ;; Return value:  Size  Location     Type
 10050 ;;                  2    0[COMMON] int 
 10051 ;; Registers used:
 10052 ;;		wreg, status,2, status,0
 10053 ;; Tracked objects:
 10054 ;;		On entry : 0/0
 10055 ;;		On exit  : 0/0
 10056 ;;		Unchanged: 0/0
 10057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10058 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10059 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10060 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10061 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10062 ;;Total ram usage:        7 bytes
 10063 ;; Hardware stack levels used: 1
 10064 ;; This function calls:
 10065 ;;		Nothing
 10066 ;; This function is called by:
 10067 ;;		_efgtoa
 10068 ;; This function uses a non-reentrant model
 10069 ;;
 10070                           
 10071  1131                     ___awmod:	
 10072                           ;psect for function ___awmod
 10073                           
 10074  1131                     l2743:	
 10075                           ;incstack = 0
 10076                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10077                           
 10078  1131  01F6               	clrf	___awmod@sign
 10079  1132                     l2745:
 10080  1132  1FF3               	btfss	___awmod@dividend+1,7
 10081  1133  2935               	goto	u3381
 10082  1134  2936               	goto	u3380
 10083  1135                     u3381:
 10084  1135  293D               	goto	l2751
 10085  1136                     u3380:
 10086  1136                     l2747:
 10087  1136  09F2               	comf	___awmod@dividend,f
 10088  1137  09F3               	comf	___awmod@dividend+1,f
 10089  1138  0AF2               	incf	___awmod@dividend,f
 10090  1139  1903               	skipnz
 10091  113A  0AF3               	incf	___awmod@dividend+1,f
 10092  113B                     l2749:
 10093  113B  01F6               	clrf	___awmod@sign
 10094  113C  0AF6               	incf	___awmod@sign,f
 10095  113D                     l2751:
 10096  113D  1FF1               	btfss	___awmod@divisor+1,7
 10097  113E  2940               	goto	u3391
 10098  113F  2941               	goto	u3390
 10099  1140                     u3391:
 10100  1140  2946               	goto	l2755
 10101  1141                     u3390:
 10102  1141                     l2753:
 10103  1141  09F0               	comf	___awmod@divisor,f
 10104  1142  09F1               	comf	___awmod@divisor+1,f
 10105  1143  0AF0               	incf	___awmod@divisor,f
 10106  1144  1903               	skipnz
 10107  1145  0AF1               	incf	___awmod@divisor+1,f
 10108  1146                     l2755:
 10109  1146  0870               	movf	___awmod@divisor,w
 10110  1147  0471               	iorwf	___awmod@divisor+1,w
 10111  1148  1903               	btfsc	3,2
 10112  1149  294B               	goto	u3401
 10113  114A  294C               	goto	u3400
 10114  114B                     u3401:
 10115  114B  2975               	goto	l2773
 10116  114C                     u3400:
 10117  114C                     l2757:
 10118  114C  01F5               	clrf	___awmod@counter
 10119  114D  0AF5               	incf	___awmod@counter,f
 10120  114E  2958               	goto	l2763
 10121  114F                     l2759:
 10122  114F  3001               	movlw	1
 10123  1150                     u3415:
 10124  1150  35F0               	lslf	___awmod@divisor,f
 10125  1151  0DF1               	rlf	___awmod@divisor+1,f
 10126  1152  0B89               	decfsz	9,f
 10127  1153  2950               	goto	u3415
 10128  1154                     l2761:
 10129  1154  3001               	movlw	1
 10130  1155  00F4               	movwf	??___awmod
 10131  1156  0874               	movf	??___awmod,w
 10132  1157  07F5               	addwf	___awmod@counter,f
 10133  1158                     l2763:
 10134  1158  1FF1               	btfss	___awmod@divisor+1,7
 10135  1159  295B               	goto	u3421
 10136  115A  295C               	goto	u3420
 10137  115B                     u3421:
 10138  115B  294F               	goto	l2759
 10139  115C                     u3420:
 10140  115C                     l2765:
 10141  115C  0871               	movf	___awmod@divisor+1,w
 10142  115D  0273               	subwf	___awmod@dividend+1,w
 10143  115E  1D03               	skipz
 10144  115F  2962               	goto	u3435
 10145  1160  0870               	movf	___awmod@divisor,w
 10146  1161  0272               	subwf	___awmod@dividend,w
 10147  1162                     u3435:
 10148  1162  1C03               	skipc
 10149  1163  2965               	goto	u3431
 10150  1164  2966               	goto	u3430
 10151  1165                     u3431:
 10152  1165  296A               	goto	l2769
 10153  1166                     u3430:
 10154  1166                     l2767:
 10155  1166  0870               	movf	___awmod@divisor,w
 10156  1167  02F2               	subwf	___awmod@dividend,f
 10157  1168  0871               	movf	___awmod@divisor+1,w
 10158  1169  3BF3               	subwfb	___awmod@dividend+1,f
 10159  116A                     l2769:
 10160  116A  3001               	movlw	1
 10161  116B                     u3445:
 10162  116B  36F1               	lsrf	___awmod@divisor+1,f
 10163  116C  0CF0               	rrf	___awmod@divisor,f
 10164  116D  0B89               	decfsz	9,f
 10165  116E  296B               	goto	u3445
 10166  116F                     l2771:
 10167  116F  3001               	movlw	1
 10168  1170  02F5               	subwf	___awmod@counter,f
 10169  1171  1D03               	btfss	3,2
 10170  1172  2974               	goto	u3451
 10171  1173  2975               	goto	u3450
 10172  1174                     u3451:
 10173  1174  295C               	goto	l2765
 10174  1175                     u3450:
 10175  1175                     l2773:
 10176  1175  0876               	movf	___awmod@sign,w
 10177  1176  1903               	btfsc	3,2
 10178  1177  2979               	goto	u3461
 10179  1178  297A               	goto	u3460
 10180  1179                     u3461:
 10181  1179  297F               	goto	l2777
 10182  117A                     u3460:
 10183  117A                     l2775:
 10184  117A  09F2               	comf	___awmod@dividend,f
 10185  117B  09F3               	comf	___awmod@dividend+1,f
 10186  117C  0AF2               	incf	___awmod@dividend,f
 10187  117D  1903               	skipnz
 10188  117E  0AF3               	incf	___awmod@dividend+1,f
 10189  117F                     l2777:
 10190  117F  0873               	movf	___awmod@dividend+1,w
 10191  1180  00F1               	movwf	?___awmod+1
 10192  1181  0872               	movf	___awmod@dividend,w
 10193  1182  00F0               	movwf	?___awmod
 10194  1183                     l406:
 10195  1183  0008               	return
 10196  1184                     __end_of___awmod:
 10197                           
 10198                           	psect	text26
 10199  128E                     __ptext26:	
 10200 ;; *************** function ___awdiv *****************
 10201 ;; Defined at:
 10202 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
 10203 ;; Parameters:    Size  Location     Type
 10204 ;;  divisor         2    0[COMMON] int 
 10205 ;;  dividend        2    2[COMMON] int 
 10206 ;; Auto vars:     Size  Location     Type
 10207 ;;  quotient        2    7[COMMON] int 
 10208 ;;  sign            1    6[COMMON] unsigned char 
 10209 ;;  counter         1    5[COMMON] unsigned char 
 10210 ;; Return value:  Size  Location     Type
 10211 ;;                  2    0[COMMON] int 
 10212 ;; Registers used:
 10213 ;;		wreg, status,2, status,0
 10214 ;; Tracked objects:
 10215 ;;		On entry : 0/0
 10216 ;;		On exit  : 0/0
 10217 ;;		Unchanged: 0/0
 10218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10219 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10220 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10221 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10222 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10223 ;;Total ram usage:        9 bytes
 10224 ;; Hardware stack levels used: 1
 10225 ;; This function calls:
 10226 ;;		Nothing
 10227 ;; This function is called by:
 10228 ;;		_efgtoa
 10229 ;; This function uses a non-reentrant model
 10230 ;;
 10231                           
 10232  128E                     ___awdiv:	
 10233                           ;psect for function ___awdiv
 10234                           
 10235  128E                     l2699:	
 10236                           ;incstack = 0
 10237                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10238                           
 10239  128E  01F6               	clrf	___awdiv@sign
 10240  128F                     l2701:
 10241  128F  1FF1               	btfss	___awdiv@divisor+1,7
 10242  1290  2A92               	goto	u3281
 10243  1291  2A93               	goto	u3280
 10244  1292                     u3281:
 10245  1292  2A9A               	goto	l2707
 10246  1293                     u3280:
 10247  1293                     l2703:
 10248  1293  09F0               	comf	___awdiv@divisor,f
 10249  1294  09F1               	comf	___awdiv@divisor+1,f
 10250  1295  0AF0               	incf	___awdiv@divisor,f
 10251  1296  1903               	skipnz
 10252  1297  0AF1               	incf	___awdiv@divisor+1,f
 10253  1298                     l2705:
 10254  1298  01F6               	clrf	___awdiv@sign
 10255  1299  0AF6               	incf	___awdiv@sign,f
 10256  129A                     l2707:
 10257  129A  1FF3               	btfss	___awdiv@dividend+1,7
 10258  129B  2A9D               	goto	u3291
 10259  129C  2A9E               	goto	u3290
 10260  129D                     u3291:
 10261  129D  2AA7               	goto	l2713
 10262  129E                     u3290:
 10263  129E                     l2709:
 10264  129E  09F2               	comf	___awdiv@dividend,f
 10265  129F  09F3               	comf	___awdiv@dividend+1,f
 10266  12A0  0AF2               	incf	___awdiv@dividend,f
 10267  12A1  1903               	skipnz
 10268  12A2  0AF3               	incf	___awdiv@dividend+1,f
 10269  12A3                     l2711:
 10270  12A3  3001               	movlw	1
 10271  12A4  00F4               	movwf	??___awdiv
 10272  12A5  0874               	movf	??___awdiv,w
 10273  12A6  06F6               	xorwf	___awdiv@sign,f
 10274  12A7                     l2713:
 10275  12A7  01F7               	clrf	___awdiv@quotient
 10276  12A8  01F8               	clrf	___awdiv@quotient+1
 10277  12A9                     l2715:
 10278  12A9  0870               	movf	___awdiv@divisor,w
 10279  12AA  0471               	iorwf	___awdiv@divisor+1,w
 10280  12AB  1903               	btfsc	3,2
 10281  12AC  2AAE               	goto	u3301
 10282  12AD  2AAF               	goto	u3300
 10283  12AE                     u3301:
 10284  12AE  2ADE               	goto	l2735
 10285  12AF                     u3300:
 10286  12AF                     l2717:
 10287  12AF  01F5               	clrf	___awdiv@counter
 10288  12B0  0AF5               	incf	___awdiv@counter,f
 10289  12B1  2ABB               	goto	l2723
 10290  12B2                     l2719:
 10291  12B2  3001               	movlw	1
 10292  12B3                     u3315:
 10293  12B3  35F0               	lslf	___awdiv@divisor,f
 10294  12B4  0DF1               	rlf	___awdiv@divisor+1,f
 10295  12B5  0B89               	decfsz	9,f
 10296  12B6  2AB3               	goto	u3315
 10297  12B7                     l2721:
 10298  12B7  3001               	movlw	1
 10299  12B8  00F4               	movwf	??___awdiv
 10300  12B9  0874               	movf	??___awdiv,w
 10301  12BA  07F5               	addwf	___awdiv@counter,f
 10302  12BB                     l2723:
 10303  12BB  1FF1               	btfss	___awdiv@divisor+1,7
 10304  12BC  2ABE               	goto	u3321
 10305  12BD  2ABF               	goto	u3320
 10306  12BE                     u3321:
 10307  12BE  2AB2               	goto	l2719
 10308  12BF                     u3320:
 10309  12BF                     l2725:
 10310  12BF  3001               	movlw	1
 10311  12C0                     u3335:
 10312  12C0  35F7               	lslf	___awdiv@quotient,f
 10313  12C1  0DF8               	rlf	___awdiv@quotient+1,f
 10314  12C2  0B89               	decfsz	9,f
 10315  12C3  2AC0               	goto	u3335
 10316  12C4  0871               	movf	___awdiv@divisor+1,w
 10317  12C5  0273               	subwf	___awdiv@dividend+1,w
 10318  12C6  1D03               	skipz
 10319  12C7  2ACA               	goto	u3345
 10320  12C8  0870               	movf	___awdiv@divisor,w
 10321  12C9  0272               	subwf	___awdiv@dividend,w
 10322  12CA                     u3345:
 10323  12CA  1C03               	skipc
 10324  12CB  2ACD               	goto	u3341
 10325  12CC  2ACE               	goto	u3340
 10326  12CD                     u3341:
 10327  12CD  2AD3               	goto	l2731
 10328  12CE                     u3340:
 10329  12CE                     l2727:
 10330  12CE  0870               	movf	___awdiv@divisor,w
 10331  12CF  02F2               	subwf	___awdiv@dividend,f
 10332  12D0  0871               	movf	___awdiv@divisor+1,w
 10333  12D1  3BF3               	subwfb	___awdiv@dividend+1,f
 10334  12D2                     l2729:
 10335  12D2  1477               	bsf	___awdiv@quotient,0
 10336  12D3                     l2731:
 10337  12D3  3001               	movlw	1
 10338  12D4                     u3355:
 10339  12D4  36F1               	lsrf	___awdiv@divisor+1,f
 10340  12D5  0CF0               	rrf	___awdiv@divisor,f
 10341  12D6  0B89               	decfsz	9,f
 10342  12D7  2AD4               	goto	u3355
 10343  12D8                     l2733:
 10344  12D8  3001               	movlw	1
 10345  12D9  02F5               	subwf	___awdiv@counter,f
 10346  12DA  1D03               	btfss	3,2
 10347  12DB  2ADD               	goto	u3361
 10348  12DC  2ADE               	goto	u3360
 10349  12DD                     u3361:
 10350  12DD  2ABF               	goto	l2725
 10351  12DE                     u3360:
 10352  12DE                     l2735:
 10353  12DE  0876               	movf	___awdiv@sign,w
 10354  12DF  1903               	btfsc	3,2
 10355  12E0  2AE2               	goto	u3371
 10356  12E1  2AE3               	goto	u3370
 10357  12E2                     u3371:
 10358  12E2  2AE8               	goto	l2739
 10359  12E3                     u3370:
 10360  12E3                     l2737:
 10361  12E3  09F7               	comf	___awdiv@quotient,f
 10362  12E4  09F8               	comf	___awdiv@quotient+1,f
 10363  12E5  0AF7               	incf	___awdiv@quotient,f
 10364  12E6  1903               	skipnz
 10365  12E7  0AF8               	incf	___awdiv@quotient+1,f
 10366  12E8                     l2739:
 10367  12E8  0878               	movf	___awdiv@quotient+1,w
 10368  12E9  00F1               	movwf	?___awdiv+1
 10369  12EA  0877               	movf	___awdiv@quotient,w
 10370  12EB  00F0               	movwf	?___awdiv
 10371  12EC                     l393:
 10372  12EC  0008               	return
 10373  12ED                     __end_of___awdiv:
 10374                           
 10375                           	psect	text27
 10376  13F7                     __ptext27:	
 10377 ;; *************** function _atoi *****************
 10378 ;; Defined at:
 10379 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
 10380 ;; Parameters:    Size  Location     Type
 10381 ;;  s               2    6[COMMON] PTR const unsigned char 
 10382 ;;		 -> STR_1(16), 
 10383 ;; Auto vars:     Size  Location     Type
 10384 ;;  n               2    2[BANK0 ] int 
 10385 ;;  neg             2    0[BANK0 ] int 
 10386 ;; Return value:  Size  Location     Type
 10387 ;;                  2    6[COMMON] int 
 10388 ;; Registers used:
 10389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10390 ;; Tracked objects:
 10391 ;;		On entry : 0/0
 10392 ;;		On exit  : 0/0
 10393 ;;		Unchanged: 0/0
 10394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10396 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10397 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10398 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10399 ;;Total ram usage:        9 bytes
 10400 ;; Hardware stack levels used: 1
 10401 ;; Hardware stack levels required when called: 1
 10402 ;; This function calls:
 10403 ;;		___wmul
 10404 ;;		_isdigit
 10405 ;;		_isspace
 10406 ;; This function is called by:
 10407 ;;		_vfpfcnvrt
 10408 ;; This function uses a non-reentrant model
 10409 ;;
 10410                           
 10411  13F7                     _atoi:	
 10412                           ;psect for function _atoi
 10413                           
 10414  13F7                     l3547:	
 10415                           ;incstack = 0
 10416                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10417                           
 10418  13F7  0020               	movlb	0	; select bank0
 10419  13F8  01A2               	clrf	atoi@n
 10420  13F9  01A3               	clrf	atoi@n+1
 10421  13FA  01A0               	clrf	atoi@neg
 10422  13FB  01A1               	clrf	atoi@neg+1
 10423  13FC  2C01               	goto	l3553
 10424  13FD                     l3549:
 10425  13FD  3001               	movlw	1
 10426  13FE  07F6               	addwf	atoi@s,f
 10427  13FF  3000               	movlw	0
 10428  1400  3DF7               	addwfc	atoi@s+1,f
 10429  1401                     l3553:
 10430  1401  0876               	movf	atoi@s,w
 10431  1402  0084               	movwf	4
 10432  1403  0877               	movf	atoi@s+1,w
 10433  1404  0085               	movwf	5
 10434  1405  0012               	moviw fsr0++
 10435  1406  3A20               	xorlw	32
 10436  1407  1903               	btfsc	3,2
 10437  1408  2C0A               	goto	u4981
 10438  1409  2C0B               	goto	u4980
 10439  140A                     u4981:
 10440  140A  2BFD               	goto	l3549
 10441  140B                     u4980:
 10442  140B                     l3555:
 10443  140B  0876               	movf	atoi@s,w
 10444  140C  0084               	movwf	4
 10445  140D  0877               	movf	atoi@s+1,w
 10446  140E  0085               	movwf	5
 10447  140F  0800               	movf	0,w	;code access
 10448  1410  3EF7               	addlw	247
 10449  1411  00F8               	movwf	??_atoi
 10450  1412  30FF               	movlw	255
 10451  1413  1803               	skipnc
 10452  1414  3000               	movlw	0
 10453  1415  00F9               	movwf	??_atoi+1
 10454  1416  3000               	movlw	0
 10455  1417  0279               	subwf	??_atoi+1,w
 10456  1418  3005               	movlw	5
 10457  1419  1903               	skipnz
 10458  141A  0278               	subwf	??_atoi,w
 10459  141B  1C03               	skipc
 10460  141C  2C1E               	goto	u4991
 10461  141D  2C1F               	goto	u4990
 10462  141E                     u4991:
 10463  141E  2BFD               	goto	l3549
 10464  141F                     u4990:
 10465  141F  2C2A               	goto	l3559
 10466  1420                     l3557:
 10467  1420  3001               	movlw	1
 10468  1421  0020               	movlb	0	; select bank0
 10469  1422  00A0               	movwf	atoi@neg
 10470  1423  3000               	movlw	0
 10471  1424  00A1               	movwf	atoi@neg+1
 10472  1425                     l896:
 10473  1425  3001               	movlw	1
 10474  1426  07F6               	addwf	atoi@s,f
 10475  1427  3000               	movlw	0
 10476  1428  3DF7               	addwfc	atoi@s+1,f
 10477  1429  2C5F               	goto	l3567
 10478  142A                     l3559:
 10479  142A  0876               	movf	atoi@s,w
 10480  142B  0084               	movwf	4
 10481  142C  0877               	movf	atoi@s+1,w
 10482  142D  0085               	movwf	5
 10483  142E  0800               	movf	0,w	;code access
 10484  142F  00F8               	movwf	??_atoi
 10485  1430  01F9               	clrf	??_atoi+1
 10486                           
 10487                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10488                           ; Switch size 1, requested type "simple"
 10489                           ; Number of cases is 1, Range of values is 0 to 0
 10490                           ; switch strategies available:
 10491                           ; Name         Instructions Cycles
 10492                           ; simple_byte            4     3 (average)
 10493                           ; direct_byte            8     6 (fixed)
 10494                           ; jumptable            260     6 (fixed)
 10495                           ;	Chosen strategy is simple_byte
 10496  1431  0879               	movf	??_atoi+1,w
 10497  1432  3A00               	xorlw	0	; case 0
 10498  1433  1903               	skipnz
 10499  1434  2C36               	goto	l3875
 10500  1435  2C5F               	goto	l3567
 10501  1436                     l3875:
 10502                           
 10503                           ; Switch size 1, requested type "simple"
 10504                           ; Number of cases is 2, Range of values is 43 to 45
 10505                           ; switch strategies available:
 10506                           ; Name         Instructions Cycles
 10507                           ; simple_byte            7     4 (average)
 10508                           ; direct_byte           15     9 (fixed)
 10509                           ; jumptable            263     9 (fixed)
 10510                           ;	Chosen strategy is simple_byte
 10511  1436  0878               	movf	??_atoi,w
 10512  1437  3A2B               	xorlw	43	; case 43
 10513  1438  1903               	skipnz
 10514  1439  2C25               	goto	l896
 10515  143A  3A06               	xorlw	6	; case 45
 10516  143B  1903               	skipnz
 10517  143C  2C20               	goto	l3557
 10518  143D  2C5F               	goto	l3567
 10519  143E                     l3561:
 10520  143E  0876               	movf	atoi@s,w
 10521  143F  0084               	movwf	4
 10522  1440  0877               	movf	atoi@s+1,w
 10523  1441  0085               	movwf	5
 10524  1442  0800               	movf	0,w	;code access
 10525  1443  00F8               	movwf	??_atoi
 10526  1444  0020               	movlb	0	; select bank0
 10527  1445  0823               	movf	atoi@n+1,w
 10528  1446  00F1               	movwf	___wmul@multiplier+1
 10529  1447  0822               	movf	atoi@n,w
 10530  1448  00F0               	movwf	___wmul@multiplier
 10531  1449  300A               	movlw	10
 10532  144A  00F2               	movwf	___wmul@multiplicand
 10533  144B  3000               	movlw	0
 10534  144C  00F3               	movwf	___wmul@multiplicand+1
 10535  144D  319F  277F  3193   	fcall	___wmul
 10536  1450  0871               	movf	?___wmul+1,w
 10537  1451  00FA               	movwf	??_atoi+2
 10538  1452  0878               	movf	??_atoi,w
 10539  1453  0270               	subwf	?___wmul,w
 10540  1454  00F9               	movwf	??_atoi+1
 10541  1455  1C03               	skipc
 10542  1456  03FA               	decf	??_atoi+2,f
 10543  1457  0879               	movf	??_atoi+1,w
 10544  1458  3E30               	addlw	48
 10545  1459  0020               	movlb	0	; select bank0
 10546  145A  00A2               	movwf	atoi@n
 10547  145B  3000               	movlw	0
 10548  145C  3D7A               	addwfc	??_atoi+2,w
 10549  145D  00A3               	movwf	atoi@n+1
 10550  145E  2C25               	goto	l896
 10551  145F                     l3567:
 10552  145F  0876               	movf	atoi@s,w
 10553  1460  0084               	movwf	4
 10554  1461  0877               	movf	atoi@s+1,w
 10555  1462  0085               	movwf	5
 10556  1463  0800               	movf	0,w	;code access
 10557  1464  3ED0               	addlw	208
 10558  1465  00F8               	movwf	??_atoi
 10559  1466  30FF               	movlw	255
 10560  1467  1803               	skipnc
 10561  1468  3000               	movlw	0
 10562  1469  00F9               	movwf	??_atoi+1
 10563  146A  3000               	movlw	0
 10564  146B  0279               	subwf	??_atoi+1,w
 10565  146C  300A               	movlw	10
 10566  146D  1903               	skipnz
 10567  146E  0278               	subwf	??_atoi,w
 10568  146F  1C03               	skipc
 10569  1470  2C72               	goto	u5001
 10570  1471  2C73               	goto	u5000
 10571  1472                     u5001:
 10572  1472  2C3E               	goto	l3561
 10573  1473                     u5000:
 10574  1473                     l3569:
 10575  1473  0020               	movlb	0	; select bank0
 10576  1474  0820               	movf	atoi@neg,w
 10577  1475  0421               	iorwf	atoi@neg+1,w
 10578  1476  1D03               	btfss	3,2
 10579  1477  2C79               	goto	u5011
 10580  1478  2C7A               	goto	u5010
 10581  1479                     u5011:
 10582  1479  2C86               	goto	l3573
 10583  147A                     u5010:
 10584  147A                     l3571:
 10585  147A  0922               	comf	atoi@n,w
 10586  147B  00F8               	movwf	??_atoi
 10587  147C  0923               	comf	atoi@n+1,w
 10588  147D  00F9               	movwf	??_atoi+1
 10589  147E  0AF8               	incf	??_atoi,f
 10590  147F  1903               	skipnz
 10591  1480  0AF9               	incf	??_atoi+1,f
 10592  1481  0878               	movf	??_atoi,w
 10593  1482  00F6               	movwf	?_atoi
 10594  1483  0879               	movf	??_atoi+1,w
 10595  1484  00F7               	movwf	?_atoi+1
 10596  1485  2C8A               	goto	l907
 10597  1486                     l3573:
 10598  1486  0823               	movf	atoi@n+1,w
 10599  1487  00F7               	movwf	?_atoi+1
 10600  1488  0822               	movf	atoi@n,w
 10601  1489  00F6               	movwf	?_atoi
 10602  148A                     l907:
 10603  148A  0008               	return
 10604  148B                     __end_of_atoi:
 10605                           
 10606                           	psect	text28
 10607  1FBE                     __ptext28:	
 10608 ;; *************** function _isspace *****************
 10609 ;; Defined at:
 10610 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
 10611 ;; Parameters:    Size  Location     Type
 10612 ;;  c               2    0[COMMON] int 
 10613 ;; Auto vars:     Size  Location     Type
 10614 ;;		None
 10615 ;; Return value:  Size  Location     Type
 10616 ;;                  2    0[COMMON] int 
 10617 ;; Registers used:
 10618 ;;		wreg, status,2, status,0
 10619 ;; Tracked objects:
 10620 ;;		On entry : 0/0
 10621 ;;		On exit  : 0/0
 10622 ;;		Unchanged: 0/0
 10623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10624 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10626 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10627 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10628 ;;Total ram usage:        5 bytes
 10629 ;; Hardware stack levels used: 1
 10630 ;; This function calls:
 10631 ;;		Nothing
 10632 ;; This function is called by:
 10633 ;;		_atoi
 10634 ;; This function uses a non-reentrant model
 10635 ;;
 10636                           
 10637  1FBE                     _isspace:	
 10638                           ;psect for function _isspace
 10639                           
 10640  1FBE                     l3237:	
 10641                           ;incstack = 0
 10642                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10643                           
 10644  1FBE  01F4               	clrf	_isspace$977
 10645  1FBF  0AF4               	incf	_isspace$977,f
 10646  1FC0                     l3239:
 10647  1FC0  3020               	movlw	32
 10648  1FC1  0670               	xorwf	isspace@c,w
 10649  1FC2  0471               	iorwf	isspace@c+1,w
 10650  1FC3  1903               	btfsc	3,2
 10651  1FC4  2FC6               	goto	u4481
 10652  1FC5  2FC7               	goto	u4480
 10653  1FC6                     u4481:
 10654  1FC6  2FD7               	goto	l3245
 10655  1FC7                     u4480:
 10656  1FC7                     l3241:
 10657  1FC7  0870               	movf	isspace@c,w
 10658  1FC8  3EF7               	addlw	247
 10659  1FC9  00F2               	movwf	??_isspace
 10660  1FCA  30FF               	movlw	255
 10661  1FCB  3D71               	addwfc	isspace@c+1,w
 10662  1FCC  00F3               	movwf	??_isspace+1
 10663  1FCD  3000               	movlw	0
 10664  1FCE  0273               	subwf	??_isspace+1,w
 10665  1FCF  3005               	movlw	5
 10666  1FD0  1903               	skipnz
 10667  1FD1  0272               	subwf	??_isspace,w
 10668  1FD2  1C03               	skipc
 10669  1FD3  2FD5               	goto	u4491
 10670  1FD4  2FD6               	goto	u4490
 10671  1FD5                     u4491:
 10672  1FD5  2FD7               	goto	l3245
 10673  1FD6                     u4490:
 10674  1FD6                     l3243:
 10675  1FD6  01F4               	clrf	_isspace$977
 10676  1FD7                     l3245:
 10677  1FD7  0874               	movf	_isspace$977,w
 10678  1FD8  00F2               	movwf	??_isspace
 10679  1FD9  01F3               	clrf	??_isspace+1
 10680  1FDA  0872               	movf	??_isspace,w
 10681  1FDB  00F0               	movwf	?_isspace
 10682  1FDC  0873               	movf	??_isspace+1,w
 10683  1FDD  00F1               	movwf	?_isspace+1
 10684  1FDE                     l931:
 10685  1FDE  0008               	return
 10686  1FDF                     __end_of_isspace:
 10687                           
 10688                           	psect	text29
 10689  1F4D                     __ptext29:	
 10690 ;; *************** function _isdigit *****************
 10691 ;; Defined at:
 10692 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
 10693 ;; Parameters:    Size  Location     Type
 10694 ;;  c               2    0[COMMON] int 
 10695 ;; Auto vars:     Size  Location     Type
 10696 ;;		None
 10697 ;; Return value:  Size  Location     Type
 10698 ;;                  2    0[COMMON] int 
 10699 ;; Registers used:
 10700 ;;		wreg, status,2, status,0
 10701 ;; Tracked objects:
 10702 ;;		On entry : 0/0
 10703 ;;		On exit  : 0/0
 10704 ;;		Unchanged: 0/0
 10705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10706 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10708 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10709 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10710 ;;Total ram usage:        6 bytes
 10711 ;; Hardware stack levels used: 1
 10712 ;; This function calls:
 10713 ;;		Nothing
 10714 ;; This function is called by:
 10715 ;;		_vfpfcnvrt
 10716 ;;		_atoi
 10717 ;; This function uses a non-reentrant model
 10718 ;;
 10719                           
 10720  1F4D                     _isdigit:	
 10721                           ;psect for function _isdigit
 10722                           
 10723  1F4D                     l3233:	
 10724                           ;incstack = 0
 10725                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10726                           
 10727  1F4D  0870               	movf	isdigit@c,w
 10728  1F4E  3ED0               	addlw	208
 10729  1F4F  00F2               	movwf	??_isdigit
 10730  1F50  30FF               	movlw	255
 10731  1F51  3D71               	addwfc	isdigit@c+1,w
 10732  1F52  00F3               	movwf	??_isdigit+1
 10733  1F53  3000               	movlw	0
 10734  1F54  0273               	subwf	??_isdigit+1,w
 10735  1F55  300A               	movlw	10
 10736  1F56  1903               	skipnz
 10737  1F57  0272               	subwf	??_isdigit,w
 10738  1F58  1C03               	skipc
 10739  1F59  2F5B               	goto	u4461
 10740  1F5A  2F5D               	goto	u4460
 10741  1F5B                     u4461:
 10742  1F5B  3001               	movlw	1
 10743  1F5C  2F5E               	goto	u4470
 10744  1F5D                     u4460:
 10745  1F5D  3000               	movlw	0
 10746  1F5E                     u4470:
 10747  1F5E  00F4               	movwf	??_isdigit+2
 10748  1F5F  01F5               	clrf	??_isdigit+3
 10749  1F60  0874               	movf	??_isdigit+2,w
 10750  1F61  00F0               	movwf	?_isdigit
 10751  1F62  0875               	movf	??_isdigit+3,w
 10752  1F63  00F1               	movwf	?_isdigit+1
 10753  1F64                     l923:
 10754  1F64  0008               	return
 10755  1F65                     __end_of_isdigit:
 10756                           
 10757                           	psect	text30
 10758  1F7F                     __ptext30:	
 10759 ;; *************** function ___wmul *****************
 10760 ;; Defined at:
 10761 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 10762 ;; Parameters:    Size  Location     Type
 10763 ;;  multiplier      2    0[COMMON] unsigned int 
 10764 ;;  multiplicand    2    2[COMMON] unsigned int 
 10765 ;; Auto vars:     Size  Location     Type
 10766 ;;  product         2    4[COMMON] unsigned int 
 10767 ;; Return value:  Size  Location     Type
 10768 ;;                  2    0[COMMON] unsigned int 
 10769 ;; Registers used:
 10770 ;;		wreg, status,2, status,0
 10771 ;; Tracked objects:
 10772 ;;		On entry : 0/0
 10773 ;;		On exit  : 0/0
 10774 ;;		Unchanged: 0/0
 10775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10776 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10777 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10779 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10780 ;;Total ram usage:        6 bytes
 10781 ;; Hardware stack levels used: 1
 10782 ;; This function calls:
 10783 ;;		Nothing
 10784 ;; This function is called by:
 10785 ;;		_atoi
 10786 ;; This function uses a non-reentrant model
 10787 ;;
 10788                           
 10789  1F7F                     ___wmul:	
 10790                           ;psect for function ___wmul
 10791                           
 10792  1F7F                     l2685:	
 10793                           ;incstack = 0
 10794                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10795                           
 10796  1F7F  01F4               	clrf	___wmul@product
 10797  1F80  01F5               	clrf	___wmul@product+1
 10798  1F81                     l2687:
 10799  1F81  1C70               	btfss	___wmul@multiplier,0
 10800  1F82  2F84               	goto	u3241
 10801  1F83  2F85               	goto	u3240
 10802  1F84                     u3241:
 10803  1F84  2F89               	goto	l240
 10804  1F85                     u3240:
 10805  1F85                     l2689:
 10806  1F85  0872               	movf	___wmul@multiplicand,w
 10807  1F86  07F4               	addwf	___wmul@product,f
 10808  1F87  0873               	movf	___wmul@multiplicand+1,w
 10809  1F88  3DF5               	addwfc	___wmul@product+1,f
 10810  1F89                     l240:
 10811  1F89  3001               	movlw	1
 10812  1F8A                     u3255:
 10813  1F8A  35F2               	lslf	___wmul@multiplicand,f
 10814  1F8B  0DF3               	rlf	___wmul@multiplicand+1,f
 10815  1F8C  0B89               	decfsz	9,f
 10816  1F8D  2F8A               	goto	u3255
 10817  1F8E                     l2691:
 10818  1F8E  3001               	movlw	1
 10819  1F8F                     u3265:
 10820  1F8F  36F1               	lsrf	___wmul@multiplier+1,f
 10821  1F90  0CF0               	rrf	___wmul@multiplier,f
 10822  1F91  0B89               	decfsz	9,f
 10823  1F92  2F8F               	goto	u3265
 10824  1F93                     l2693:
 10825  1F93  0870               	movf	___wmul@multiplier,w
 10826  1F94  0471               	iorwf	___wmul@multiplier+1,w
 10827  1F95  1D03               	btfss	3,2
 10828  1F96  2F98               	goto	u3271
 10829  1F97  2F99               	goto	u3270
 10830  1F98                     u3271:
 10831  1F98  2F81               	goto	l2687
 10832  1F99                     u3270:
 10833  1F99                     l2695:
 10834  1F99  0875               	movf	___wmul@product+1,w
 10835  1F9A  00F1               	movwf	?___wmul+1
 10836  1F9B  0874               	movf	___wmul@product,w
 10837  1F9C  00F0               	movwf	?___wmul
 10838  1F9D                     l242:
 10839  1F9D  0008               	return
 10840  1F9E                     __end_of___wmul:
 10841                           
 10842                           	psect	text31
 10843  0818                     __ptext31:	
 10844 ;; *************** function ___xxtofl *****************
 10845 ;; Defined at:
 10846 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
 10847 ;; Parameters:    Size  Location     Type
 10848 ;;  sign            1    wreg     unsigned char 
 10849 ;;  val             4    0[COMMON] long 
 10850 ;; Auto vars:     Size  Location     Type
 10851 ;;  sign            1    8[COMMON] unsigned char 
 10852 ;;  arg             4   10[COMMON] unsigned long 
 10853 ;;  exp             1    9[COMMON] unsigned char 
 10854 ;; Return value:  Size  Location     Type
 10855 ;;                  4    0[COMMON] unsigned char 
 10856 ;; Registers used:
 10857 ;;		wreg, status,2, status,0
 10858 ;; Tracked objects:
 10859 ;;		On entry : 0/0
 10860 ;;		On exit  : 0/0
 10861 ;;		Unchanged: 0/0
 10862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10863 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10864 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10865 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10866 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10867 ;;Total ram usage:       14 bytes
 10868 ;; Hardware stack levels used: 1
 10869 ;; This function calls:
 10870 ;;		Nothing
 10871 ;; This function is called by:
 10872 ;;		_main
 10873 ;; This function uses a non-reentrant model
 10874 ;;
 10875                           
 10876  0818                     ___xxtofl:	
 10877                           ;psect for function ___xxtofl
 10878                           
 10879                           
 10880                           ;incstack = 0
 10881                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 10882                           ;___xxtofl@sign stored from wreg
 10883  0818  00F8               	movwf	___xxtofl@sign
 10884  0819                     l3785:
 10885  0819  0878               	movf	___xxtofl@sign,w
 10886  081A  1903               	btfsc	3,2
 10887  081B  281D               	goto	u5241
 10888  081C  281E               	goto	u5240
 10889  081D                     u5241:
 10890  081D  2832               	goto	l3791
 10891  081E                     u5240:
 10892  081E                     l3787:
 10893  081E  1FF3               	btfss	___xxtofl@val+3,7
 10894  081F  2821               	goto	u5251
 10895  0820  2822               	goto	u5250
 10896  0821                     u5251:
 10897  0821  2832               	goto	l3791
 10898  0822                     u5250:
 10899  0822                     l3789:
 10900  0822  0970               	comf	___xxtofl@val,w
 10901  0823  00FA               	movwf	___xxtofl@arg
 10902  0824  0971               	comf	___xxtofl@val+1,w
 10903  0825  00FB               	movwf	___xxtofl@arg+1
 10904  0826  0972               	comf	___xxtofl@val+2,w
 10905  0827  00FC               	movwf	___xxtofl@arg+2
 10906  0828  0973               	comf	___xxtofl@val+3,w
 10907  0829  00FD               	movwf	___xxtofl@arg+3
 10908  082A  0AFA               	incf	___xxtofl@arg,f
 10909  082B  1903               	skipnz
 10910  082C  0AFB               	incf	___xxtofl@arg+1,f
 10911  082D  1903               	skipnz
 10912  082E  0AFC               	incf	___xxtofl@arg+2,f
 10913  082F  1903               	skipnz
 10914  0830  0AFD               	incf	___xxtofl@arg+3,f
 10915  0831  283A               	goto	l681
 10916  0832                     l3791:
 10917  0832  0873               	movf	___xxtofl@val+3,w
 10918  0833  00FD               	movwf	___xxtofl@arg+3
 10919  0834  0872               	movf	___xxtofl@val+2,w
 10920  0835  00FC               	movwf	___xxtofl@arg+2
 10921  0836  0871               	movf	___xxtofl@val+1,w
 10922  0837  00FB               	movwf	___xxtofl@arg+1
 10923  0838  0870               	movf	___xxtofl@val,w
 10924  0839  00FA               	movwf	___xxtofl@arg
 10925  083A                     l681:
 10926  083A  0873               	movf	___xxtofl@val+3,w
 10927  083B  0472               	iorwf	___xxtofl@val+2,w
 10928  083C  0471               	iorwf	___xxtofl@val+1,w
 10929  083D  0470               	iorwf	___xxtofl@val,w
 10930  083E  1D03               	skipz
 10931  083F  2841               	goto	u5261
 10932  0840  2842               	goto	u5260
 10933  0841                     u5261:
 10934  0841  284B               	goto	l3797
 10935  0842                     u5260:
 10936  0842                     l3793:
 10937  0842  3000               	movlw	0
 10938  0843  00F3               	movwf	?___xxtofl+3
 10939  0844  3000               	movlw	0
 10940  0845  00F2               	movwf	?___xxtofl+2
 10941  0846  3000               	movlw	0
 10942  0847  00F1               	movwf	?___xxtofl+1
 10943  0848  3000               	movlw	0
 10944  0849  00F0               	movwf	?___xxtofl
 10945  084A  28C3               	goto	l683
 10946  084B                     l3797:
 10947  084B  3096               	movlw	150
 10948  084C  00F4               	movwf	??___xxtofl
 10949  084D  0874               	movf	??___xxtofl,w
 10950  084E  00F9               	movwf	___xxtofl@exp
 10951  084F  285B               	goto	l3801
 10952  0850                     l3799:
 10953  0850  3001               	movlw	1
 10954  0851  00F4               	movwf	??___xxtofl
 10955  0852  0874               	movf	??___xxtofl,w
 10956  0853  07F9               	addwf	___xxtofl@exp,f
 10957  0854  3001               	movlw	1
 10958  0855                     u5275:
 10959  0855  36FD               	lsrf	___xxtofl@arg+3,f
 10960  0856  0CFC               	rrf	___xxtofl@arg+2,f
 10961  0857  0CFB               	rrf	___xxtofl@arg+1,f
 10962  0858  0CFA               	rrf	___xxtofl@arg,f
 10963  0859  0B89               	decfsz	9,f
 10964  085A  2855               	goto	u5275
 10965  085B                     l3801:
 10966  085B  30FE               	movlw	254
 10967  085C  057D               	andwf	___xxtofl@arg+3,w
 10968  085D  1D03               	btfss	3,2
 10969  085E  2860               	goto	u5281
 10970  085F  2861               	goto	u5280
 10971  0860                     u5281:
 10972  0860  2850               	goto	l3799
 10973  0861                     u5280:
 10974  0861  2875               	goto	l687
 10975  0862                     l3803:
 10976  0862  3001               	movlw	1
 10977  0863  00F4               	movwf	??___xxtofl
 10978  0864  0874               	movf	??___xxtofl,w
 10979  0865  07F9               	addwf	___xxtofl@exp,f
 10980  0866                     l3805:
 10981  0866  3001               	movlw	1
 10982  0867  07FA               	addwf	___xxtofl@arg,f
 10983  0868  3000               	movlw	0
 10984  0869  3DFB               	addwfc	___xxtofl@arg+1,f
 10985  086A  3000               	movlw	0
 10986  086B  3DFC               	addwfc	___xxtofl@arg+2,f
 10987  086C  3000               	movlw	0
 10988  086D  3DFD               	addwfc	___xxtofl@arg+3,f
 10989  086E                     l3807:
 10990  086E  3001               	movlw	1
 10991  086F                     u5295:
 10992  086F  36FD               	lsrf	___xxtofl@arg+3,f
 10993  0870  0CFC               	rrf	___xxtofl@arg+2,f
 10994  0871  0CFB               	rrf	___xxtofl@arg+1,f
 10995  0872  0CFA               	rrf	___xxtofl@arg,f
 10996  0873  0B89               	decfsz	9,f
 10997  0874  286F               	goto	u5295
 10998  0875                     l687:
 10999  0875  30FF               	movlw	255
 11000  0876  057D               	andwf	___xxtofl@arg+3,w
 11001  0877  1D03               	btfss	3,2
 11002  0878  287A               	goto	u5301
 11003  0879  287B               	goto	u5300
 11004  087A                     u5301:
 11005  087A  2862               	goto	l3803
 11006  087B                     u5300:
 11007  087B  2885               	goto	l3811
 11008  087C                     l3809:
 11009  087C  3001               	movlw	1
 11010  087D  02F9               	subwf	___xxtofl@exp,f
 11011  087E  3001               	movlw	1
 11012  087F                     u5315:
 11013  087F  35FA               	lslf	___xxtofl@arg,f
 11014  0880  0DFB               	rlf	___xxtofl@arg+1,f
 11015  0881  0DFC               	rlf	___xxtofl@arg+2,f
 11016  0882  0DFD               	rlf	___xxtofl@arg+3,f
 11017  0883  0B89               	decfsz	9,f
 11018  0884  287F               	goto	u5315
 11019  0885                     l3811:
 11020  0885  1BFC               	btfsc	___xxtofl@arg+2,7
 11021  0886  2888               	goto	u5321
 11022  0887  2889               	goto	u5320
 11023  0888                     u5321:
 11024  0888  288F               	goto	l694
 11025  0889                     u5320:
 11026  0889                     l3813:
 11027  0889  3002               	movlw	2
 11028  088A  0279               	subwf	___xxtofl@exp,w
 11029  088B  1803               	skipnc
 11030  088C  288E               	goto	u5331
 11031  088D  288F               	goto	u5330
 11032  088E                     u5331:
 11033  088E  287C               	goto	l3809
 11034  088F                     u5330:
 11035  088F                     l694:
 11036  088F  1879               	btfsc	___xxtofl@exp,0
 11037  0890  2892               	goto	u5341
 11038  0891  2893               	goto	u5340
 11039  0892                     u5341:
 11040  0892  289B               	goto	l695
 11041  0893                     u5340:
 11042  0893                     l3815:
 11043  0893  30FF               	movlw	255
 11044  0894  05FA               	andwf	___xxtofl@arg,f
 11045  0895  30FF               	movlw	255
 11046  0896  05FB               	andwf	___xxtofl@arg+1,f
 11047  0897  307F               	movlw	127
 11048  0898  05FC               	andwf	___xxtofl@arg+2,f
 11049  0899  30FF               	movlw	255
 11050  089A  05FD               	andwf	___xxtofl@arg+3,f
 11051  089B                     l695:
 11052  089B  1003               	clrc
 11053  089C  0CF9               	rrf	___xxtofl@exp,f
 11054  089D                     l3817:
 11055  089D  0879               	movf	___xxtofl@exp,w
 11056  089E  00F4               	movwf	??___xxtofl
 11057  089F  01F5               	clrf	??___xxtofl+1
 11058  08A0  01F6               	clrf	??___xxtofl+2
 11059  08A1  01F7               	clrf	??___xxtofl+3
 11060  08A2  3018               	movlw	24
 11061  08A3                     u5355:
 11062  08A3  35F4               	lslf	??___xxtofl,f
 11063  08A4  0DF5               	rlf	??___xxtofl+1,f
 11064  08A5  0DF6               	rlf	??___xxtofl+2,f
 11065  08A6  0DF7               	rlf	??___xxtofl+3,f
 11066  08A7                     u5350:
 11067  08A7  0B89               	decfsz	9,f
 11068  08A8  28A3               	goto	u5355
 11069  08A9  0874               	movf	??___xxtofl,w
 11070  08AA  04FA               	iorwf	___xxtofl@arg,f
 11071  08AB  0875               	movf	??___xxtofl+1,w
 11072  08AC  04FB               	iorwf	___xxtofl@arg+1,f
 11073  08AD  0876               	movf	??___xxtofl+2,w
 11074  08AE  04FC               	iorwf	___xxtofl@arg+2,f
 11075  08AF  0877               	movf	??___xxtofl+3,w
 11076  08B0  04FD               	iorwf	___xxtofl@arg+3,f
 11077  08B1                     l3819:
 11078  08B1  0878               	movf	___xxtofl@sign,w
 11079  08B2  1903               	btfsc	3,2
 11080  08B3  28B5               	goto	u5361
 11081  08B4  28B6               	goto	u5360
 11082  08B5                     u5361:
 11083  08B5  28BB               	goto	l3825
 11084  08B6                     u5360:
 11085  08B6                     l3821:
 11086  08B6  1FF3               	btfss	___xxtofl@val+3,7
 11087  08B7  28B9               	goto	u5371
 11088  08B8  28BA               	goto	u5370
 11089  08B9                     u5371:
 11090  08B9  28BB               	goto	l3825
 11091  08BA                     u5370:
 11092  08BA                     l3823:
 11093  08BA  17FD               	bsf	___xxtofl@arg+3,7
 11094  08BB                     l3825:
 11095  08BB  087D               	movf	___xxtofl@arg+3,w
 11096  08BC  00F3               	movwf	?___xxtofl+3
 11097  08BD  087C               	movf	___xxtofl@arg+2,w
 11098  08BE  00F2               	movwf	?___xxtofl+2
 11099  08BF  087B               	movf	___xxtofl@arg+1,w
 11100  08C0  00F1               	movwf	?___xxtofl+1
 11101  08C1  087A               	movf	___xxtofl@arg,w
 11102  08C2  00F0               	movwf	?___xxtofl
 11103  08C3                     l683:
 11104  08C3  0008               	return
 11105  08C4                     __end_of___xxtofl:
 11106                           
 11107                           	psect	text32
 11108  1F35                     __ptext32:	
 11109 ;; *************** function _UART_Write_Text *****************
 11110 ;; Defined at:
 11111 ;;		line 26 in file "UART.c"
 11112 ;; Parameters:    Size  Location     Type
 11113 ;;  c               1    wreg     PTR unsigned char 
 11114 ;;		 -> bufferTx(50), 
 11115 ;; Auto vars:     Size  Location     Type
 11116 ;;  c               1    2[COMMON] PTR unsigned char 
 11117 ;;		 -> bufferTx(50), 
 11118 ;; Return value:  Size  Location     Type
 11119 ;;                  1    wreg      void 
 11120 ;; Registers used:
 11121 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11122 ;; Tracked objects:
 11123 ;;		On entry : 0/0
 11124 ;;		On exit  : 0/0
 11125 ;;		Unchanged: 0/0
 11126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11128 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11129 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11130 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11131 ;;Total ram usage:        2 bytes
 11132 ;; Hardware stack levels used: 1
 11133 ;; Hardware stack levels required when called: 1
 11134 ;; This function calls:
 11135 ;;		_UART_Write
 11136 ;; This function is called by:
 11137 ;;		_main
 11138 ;; This function uses a non-reentrant model
 11139 ;;
 11140                           
 11141  1F35                     _UART_Write_Text:	
 11142                           ;psect for function _UART_Write_Text
 11143                           
 11144                           
 11145                           ;incstack = 0
 11146                           ; Regs used in _UART_Write_Text: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11147                           ;UART_Write_Text@c stored from wreg
 11148  1F35  00F2               	movwf	UART_Write_Text@c
 11149  1F36                     l3777:
 11150                           
 11151                           ;UART.c: 27:     while(*c){
 11152  1F36  2F43               	goto	l3783
 11153  1F37                     l3779:
 11154                           
 11155                           ;UART.c: 28:         UART_Write(*c);
 11156  1F37  0872               	movf	UART_Write_Text@c,w
 11157  1F38  0086               	movwf	6
 11158  1F39  3002               	movlw	2	; select bank4/5
 11159  1F3A  0087               	movwf	7
 11160  1F3B  0801               	movf	1,w
 11161  1F3C  319E  26DC  319F   	fcall	_UART_Write
 11162  1F3F                     l3781:
 11163                           
 11164                           ;UART.c: 29:         c++;
 11165  1F3F  3001               	movlw	1
 11166  1F40  00F1               	movwf	??_UART_Write_Text
 11167  1F41  0871               	movf	??_UART_Write_Text,w
 11168  1F42  07F2               	addwf	UART_Write_Text@c,f
 11169  1F43                     l3783:
 11170                           
 11171                           ;UART.c: 27:     while(*c){
 11172  1F43  0872               	movf	UART_Write_Text@c,w
 11173  1F44  0086               	movwf	6
 11174  1F45  3002               	movlw	2	; select bank4/5
 11175  1F46  0087               	movwf	7
 11176  1F47  0801               	movf	1,w
 11177  1F48  1D03               	btfss	3,2
 11178  1F49  2F4B               	goto	u5231
 11179  1F4A  2F4C               	goto	u5230
 11180  1F4B                     u5231:
 11181  1F4B  2F37               	goto	l3779
 11182  1F4C                     u5230:
 11183  1F4C                     l67:
 11184  1F4C  0008               	return
 11185  1F4D                     __end_of_UART_Write_Text:
 11186                           
 11187                           	psect	text33
 11188  1EDC                     __ptext33:	
 11189 ;; *************** function _UART_Write *****************
 11190 ;; Defined at:
 11191 ;;		line 21 in file "UART.c"
 11192 ;; Parameters:    Size  Location     Type
 11193 ;;  c               1    wreg     unsigned char 
 11194 ;; Auto vars:     Size  Location     Type
 11195 ;;  c               1    0[COMMON] unsigned char 
 11196 ;; Return value:  Size  Location     Type
 11197 ;;                  1    wreg      void 
 11198 ;; Registers used:
 11199 ;;		wreg
 11200 ;; Tracked objects:
 11201 ;;		On entry : 0/0
 11202 ;;		On exit  : 0/0
 11203 ;;		Unchanged: 0/0
 11204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11206 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11208 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11209 ;;Total ram usage:        1 bytes
 11210 ;; Hardware stack levels used: 1
 11211 ;; This function calls:
 11212 ;;		Nothing
 11213 ;; This function is called by:
 11214 ;;		_UART_Write_Text
 11215 ;; This function uses a non-reentrant model
 11216 ;;
 11217                           
 11218  1EDC                     _UART_Write:	
 11219                           ;psect for function _UART_Write
 11220                           
 11221                           
 11222                           ;incstack = 0
 11223                           ; Regs used in _UART_Write: [wreg]
 11224                           ;UART_Write@c stored from wreg
 11225  1EDC  00F0               	movwf	UART_Write@c
 11226  1EDD                     l3719:
 11227  1EDD                     l58:	
 11228                           ;UART.c: 22:     while(!TXIF);
 11229                           
 11230  1EDD  0020               	movlb	0	; select bank0
 11231  1EDE  1E11               	btfss	17,4	;volatile
 11232  1EDF  2EE1               	goto	u5201
 11233  1EE0  2EE2               	goto	u5200
 11234  1EE1                     u5201:
 11235  1EE1  2EDD               	goto	l58
 11236  1EE2                     u5200:
 11237  1EE2                     l3721:
 11238                           
 11239                           ;UART.c: 23:     TXREG = c;
 11240  1EE2  0870               	movf	UART_Write@c,w
 11241  1EE3  0023               	movlb	3	; select bank3
 11242  1EE4  009A               	movwf	26	;volatile
 11243  1EE5                     l61:
 11244  1EE5  0008               	return
 11245  1EE6                     __end_of_UART_Write:
 11246                           
 11247                           	psect	text34
 11248  1EFC                     __ptext34:	
 11249 ;; *************** function _UART_Init *****************
 11250 ;; Defined at:
 11251 ;;		line 6 in file "UART.c"
 11252 ;; Parameters:    Size  Location     Type
 11253 ;;		None
 11254 ;; Auto vars:     Size  Location     Type
 11255 ;;		None
 11256 ;; Return value:  Size  Location     Type
 11257 ;;                  1    wreg      void 
 11258 ;; Registers used:
 11259 ;;		wreg
 11260 ;; Tracked objects:
 11261 ;;		On entry : 0/0
 11262 ;;		On exit  : 0/0
 11263 ;;		Unchanged: 0/0
 11264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11269 ;;Total ram usage:        0 bytes
 11270 ;; Hardware stack levels used: 1
 11271 ;; This function calls:
 11272 ;;		Nothing
 11273 ;; This function is called by:
 11274 ;;		_main
 11275 ;; This function uses a non-reentrant model
 11276 ;;
 11277                           
 11278  1EFC                     _UART_Init:	
 11279                           ;psect for function _UART_Init
 11280                           
 11281  1EFC                     l3743:	
 11282                           ;incstack = 0
 11283                           ; Regs used in _UART_Init: [wreg]
 11284                           
 11285                           
 11286                           ;UART.c: 7:     TRISCbits.TRISC6 = 0;
 11287  1EFC  0021               	movlb	1	; select bank1
 11288  1EFD  130E               	bcf	14,6	;volatile
 11289                           
 11290                           ;UART.c: 8:     TRISCbits.TRISC7 = 1;
 11291  1EFE  178E               	bsf	14,7	;volatile
 11292  1EFF                     l3745:
 11293                           
 11294                           ;UART.c: 11:     SPBRG = 129;
 11295  1EFF  3081               	movlw	129
 11296  1F00  0023               	movlb	3	; select bank3
 11297  1F01  009B               	movwf	27	;volatile
 11298  1F02                     l3747:
 11299                           
 11300                           ;UART.c: 13:     TXSTAbits.SYNC = 0;
 11301  1F02  121E               	bcf	30,4	;volatile
 11302  1F03                     l3749:
 11303                           
 11304                           ;UART.c: 14:     TXSTAbits.BRGH = 1;
 11305  1F03  151E               	bsf	30,2	;volatile
 11306  1F04                     l3751:
 11307                           
 11308                           ;UART.c: 16:     TXSTAbits.TXEN = 1;
 11309  1F04  169E               	bsf	30,5	;volatile
 11310  1F05                     l3753:
 11311                           
 11312                           ;UART.c: 17:     RCSTAbits.SPEN = 1;
 11313  1F05  179D               	bsf	29,7	;volatile
 11314  1F06                     l3755:
 11315                           
 11316                           ;UART.c: 18:     RCSTAbits.CREN = 1;
 11317  1F06  161D               	bsf	29,4	;volatile
 11318  1F07                     l55:
 11319  1F07  0008               	return
 11320  1F08                     __end_of_UART_Init:
 11321                           
 11322                           	psect	text35
 11323  1F08                     __ptext35:	
 11324 ;; *************** function _ADC_Read *****************
 11325 ;; Defined at:
 11326 ;;		line 11 in file "ADC_LIB.c"
 11327 ;; Parameters:    Size  Location     Type
 11328 ;;  ch              1    wreg     unsigned char 
 11329 ;; Auto vars:     Size  Location     Type
 11330 ;;  ch              1    3[COMMON] unsigned char 
 11331 ;; Return value:  Size  Location     Type
 11332 ;;                  2    0[COMMON] int 
 11333 ;; Registers used:
 11334 ;;		wreg, status,2, status,0
 11335 ;; Tracked objects:
 11336 ;;		On entry : 0/0
 11337 ;;		On exit  : 0/0
 11338 ;;		Unchanged: 0/0
 11339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11340 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11341 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11342 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11343 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11344 ;;Total ram usage:        4 bytes
 11345 ;; Hardware stack levels used: 1
 11346 ;; This function calls:
 11347 ;;		Nothing
 11348 ;; This function is called by:
 11349 ;;		_main
 11350 ;; This function uses a non-reentrant model
 11351 ;;
 11352                           
 11353  1F08                     _ADC_Read:	
 11354                           ;psect for function _ADC_Read
 11355                           
 11356                           
 11357                           ;incstack = 0
 11358                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
 11359                           ;ADC_Read@ch stored from wreg
 11360  1F08  00F3               	movwf	ADC_Read@ch
 11361  1F09                     l3757:
 11362                           
 11363                           ;ADC_LIB.c: 12:     ADCON0bits.CHS = ch&0b11111;
 11364  1F09  0873               	movf	ADC_Read@ch,w
 11365  1F0A  391F               	andlw	31
 11366  1F0B  00F2               	movwf	??_ADC_Read
 11367  1F0C  0DF2               	rlf	??_ADC_Read,f
 11368  1F0D  0DF2               	rlf	??_ADC_Read,f
 11369  1F0E  0021               	movlb	1	; select bank1
 11370  1F0F  081D               	movf	29,w	;volatile
 11371  1F10  0672               	xorwf	??_ADC_Read,w
 11372  1F11  3983               	andlw	-125
 11373  1F12  0672               	xorwf	??_ADC_Read,w
 11374  1F13  009D               	movwf	29	;volatile
 11375  1F14                     l3759:
 11376                           
 11377                           ;ADC_LIB.c: 13:     ADCON0bits.GO_nDONE = 1;
 11378  1F14  149D               	bsf	29,1	;volatile
 11379  1F15                     l87:	
 11380                           ;ADC_LIB.c: 14:     while(ADCON0bits.GO_nDONE == 1);
 11381                           
 11382  1F15  189D               	btfsc	29,1	;volatile
 11383  1F16  2F18               	goto	u5221
 11384  1F17  2F19               	goto	u5220
 11385  1F18                     u5221:
 11386  1F18  2F15               	goto	l87
 11387  1F19                     u5220:
 11388  1F19                     l3761:
 11389                           
 11390                           ;ADC_LIB.c: 15:     return (ADRESH<<8 | ADRESL);
 11391  1F19  081C               	movf	28,w	;volatile
 11392  1F1A  00F1               	movwf	?_ADC_Read+1
 11393  1F1B  081B               	movf	27,w	;volatile
 11394  1F1C  00F0               	movwf	?_ADC_Read
 11395  1F1D                     l90:
 11396  1F1D  0008               	return
 11397  1F1E                     __end_of_ADC_Read:
 11398                           
 11399                           	psect	text36
 11400  1EE6                     __ptext36:	
 11401 ;; *************** function _ADC_Init *****************
 11402 ;; Defined at:
 11403 ;;		line 3 in file "ADC_LIB.c"
 11404 ;; Parameters:    Size  Location     Type
 11405 ;;		None
 11406 ;; Auto vars:     Size  Location     Type
 11407 ;;		None
 11408 ;; Return value:  Size  Location     Type
 11409 ;;                  1    wreg      void 
 11410 ;; Registers used:
 11411 ;;		wreg, status,2, status,0
 11412 ;; Tracked objects:
 11413 ;;		On entry : 0/0
 11414 ;;		On exit  : 0/0
 11415 ;;		Unchanged: 0/0
 11416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11421 ;;Total ram usage:        0 bytes
 11422 ;; Hardware stack levels used: 1
 11423 ;; This function calls:
 11424 ;;		Nothing
 11425 ;; This function is called by:
 11426 ;;		_main
 11427 ;; This function uses a non-reentrant model
 11428 ;;
 11429                           
 11430  1EE6                     _ADC_Init:	
 11431                           ;psect for function _ADC_Init
 11432                           
 11433  1EE6                     l3735:	
 11434                           ;incstack = 0
 11435                           ; Regs used in _ADC_Init: [wreg+status,2+status,0]
 11436                           
 11437                           
 11438                           ;ADC_LIB.c: 4:     ADCON1bits.ADCS = 0b110;
 11439  1EE6  0021               	movlb	1	; select bank1
 11440  1EE7  081E               	movf	30,w	;volatile
 11441  1EE8  398F               	andlw	-113
 11442  1EE9  3860               	iorlw	96
 11443  1EEA  009E               	movwf	30	;volatile
 11444  1EEB                     l3737:
 11445                           
 11446                           ;ADC_LIB.c: 5:     ADCON1bits.ADNREF = 0;
 11447  1EEB  111E               	bcf	30,2	;volatile
 11448                           
 11449                           ;ADC_LIB.c: 6:     ADCON1bits.ADPREF = 0b00;
 11450  1EEC  30FC               	movlw	-4
 11451  1EED  059E               	andwf	30,f	;volatile
 11452  1EEE                     l3739:
 11453                           
 11454                           ;ADC_LIB.c: 7:     ADCON0bits.ADON = 1;
 11455  1EEE  141D               	bsf	29,0	;volatile
 11456  1EEF                     l3741:
 11457                           
 11458                           ;ADC_LIB.c: 8:     ADCON1bits.ADFM = 1;
 11459  1EEF  179E               	bsf	30,7	;volatile
 11460  1EF0                     l84:
 11461  1EF0  0008               	return
 11462  1EF1                     __end_of_ADC_Init:
 11463  007E                     btemp	set	126	;btemp
 11464  007E                     wtemp0	set	126
 11465                           
 11466                           	psect	idloc
 11467                           
 11468                           ;Config register IDLOC0 @ 0x8000
 11469                           ;	unspecified, using default values
 11470  8000                     	org	32768
 11471  8000  3FFF               	dw	16383
 11472                           
 11473                           ;Config register IDLOC1 @ 0x8001
 11474                           ;	unspecified, using default values
 11475  8001                     	org	32769
 11476  8001  3FFF               	dw	16383
 11477                           
 11478                           ;Config register IDLOC2 @ 0x8002
 11479                           ;	unspecified, using default values
 11480  8002                     	org	32770
 11481  8002  3FFF               	dw	16383
 11482                           
 11483                           ;Config register IDLOC3 @ 0x8003
 11484                           ;	unspecified, using default values
 11485  8003                     	org	32771
 11486  8003  3FFF               	dw	16383
 11487                           
 11488                           	psect	config
 11489                           
 11490                           ;Config register CONFIG1 @ 0x8007
 11491                           ;	Oscillator Selection
 11492                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
 11493                           ;	Watchdog Timer Enable
 11494                           ;	WDTE = OFF, WDT disabled
 11495                           ;	Power-up Timer Enable
 11496                           ;	PWRTE = OFF, PWRT disabled
 11497                           ;	MCLR Pin Function Select
 11498                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 11499                           ;	Flash Program Memory Code Protection
 11500                           ;	CP = OFF, Program memory code protection is disabled
 11501                           ;	Data Memory Code Protection
 11502                           ;	CPD = OFF, Data memory code protection is disabled
 11503                           ;	Brown-out Reset Enable
 11504                           ;	BOREN = OFF, Brown-out Reset disabled
 11505                           ;	Clock Out Enable
 11506                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11507                           ;	Internal/External Switchover
 11508                           ;	IESO = ON, Internal/External Switchover mode is enabled
 11509                           ;	Fail-Safe Clock Monitor Enable
 11510                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 11511  8007                     	org	32775
 11512  8007  39E2               	dw	14818
 11513                           
 11514                           ;Config register CONFIG2 @ 0x8008
 11515                           ;	Flash Memory Self-Write Protection
 11516                           ;	WRT = OFF, Write protection off
 11517                           ;	Voltage Regulator Capacitor Enable
 11518                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
 11519                           ;	PLL Enable
 11520                           ;	PLLEN = OFF, 4x PLL disabled
 11521                           ;	Stack Overflow/Underflow Reset Enable
 11522                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 11523                           ;	Brown-out Reset Voltage Selection
 11524                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11525                           ;	Low-Voltage Programming Enable
 11526                           ;	LVP = ON, Low-voltage programming enabled
 11527  8008                     	org	32776
 11528  8008  3EFF               	dw	16127

Data Sizes:
    Strings     35
    Constant    0
    Data        50
    BSS         96
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     77      79
    BANK2            80     22      46
    BANK3            80      0      80
    BANK4            80      0      50
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK1[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK1[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 50
		 -> bufferTx(BANK4[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK2[2]), 

    S756$source	PTR const unsigned char  size(1) Largest target is 0

    f...source	PTR const unsigned char  size(1) Largest target is 0

    S756$buffer	PTR unsigned char  size(1) Largest target is 0

    f...buffer	PTR unsigned char  size(1) Largest target is 0

    UART_Write_Text@c	PTR unsigned char  size(1) Largest target is 50
		 -> bufferTx(BANK4[50]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _atoi->___wmul
    _atoi->_isdigit
    _UART_Write_Text->_UART_Write

Critical Paths under _main in BANK0

    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK2

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   34561
                                             76 BANK1      1     1      0
                           _ADC_Init
                           _ADC_Read
                          _UART_Init
                    _UART_Write_Text
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    15     10   28147
                                             75 BANK1      1     1      0
                                              0 BANK2     22    12     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   27831
                                             67 BANK1      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2   27494
                                             51 BANK1     16    14      2
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     5      4     410
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              59    54      5   22110
                                             72 BANK0      8     3      5
                                              0 BANK1     51    51      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              4     2      2     920
                                              6 COMMON     4     2      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     6      2     641
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2907
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             52 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     287
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             11     7      4     381
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2637
                                             26 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    2288
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    3633
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     942
                                             26 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    2185
                                             26 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1165
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      2     2      0     100
                                              1 COMMON     2     2      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _UART_Init
   _UART_Write_Text
     _UART_Write
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4D      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     16      2E       9       57.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      32      13       62.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     15D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     15D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Oct 27 09:53:52 2023

           ___fldiv@aexp 0053             ___fldiv@bexp 0052             ___fldiv@sign 004B  
                     l61 1EE5                       l55 1F07                       l90 1F1D  
                     l58 1EDD                       l67 1F4C                       l84 1EF0  
                     l87 1F15             ___awdiv@sign 0076      ___wmul@multiplicand 0072  
    __Umul8_16@word_mpld 0076                      l240 1F89                      l242 1F9D  
                    l410 111B                      l421 13DD                      l406 1183  
                    l430 1EFB                      l415 1130                      l409 10FF  
                    l441 006B                      l426 13F6                      l418 1389  
                    l434 0080                      l444 0080                      l621 17F6  
                    l613 1781                      l541 0922                      l703 107F  
                    l393 12EC                      l545 09C4                      l618 17CD  
                    l562 0A59                      l554 0B02                      l619 17E7  
                    l643 0CD5                      l547 099F                      l572 0A9D  
                    l804 0553                      l637 0D59                      l566 0A7B  
                    l583 0AF8                      l575 0AD5                      l656 101A  
                    l584 0B02                      l912 15A2                      l744 1251  
                    l681 083A                      l649 0D4D                      l913 164B  
                    l809 0569                      l658 102A                      l683 08C3  
                    l923 1F64                      l931 1FDE                      l907 148A  
                    l587 1FBD                      l747 1273                      l597 16A3  
                    l917 1643                      l749 128D                      l765 07DD  
                    l694 088F                      l695 089B                      l687 0875  
                    l599 17FF                      l871 10B0                      l952 1234  
                    l960 1053                      l881 136B                      l937 0817  
                    l778 02D4                      l963 0006                      l779 02B6  
                    l859 0FFF                      l789 0318                      l975 1F7E  
                    l896 1425                      l992 1F34                      l969 1FFF  
                    l979 11DB                      l989 1F34                      _pad 1235  
           ___awmod@sign 0076                      wreg 0009             ___flmul@aexp 0032  
           ___flmul@bexp 0033             ___flmul@sign 002D             ___flmul@temp 0038  
           ___flmul@prod 0034             ___fltol@exp1 007A                     l3011 0B12  
                   l3003 0B03                     l3101 0CB9                     l3021 0B2E  
                   l3013 0B17                     l3005 0B09                     l3111 0CDA  
                   l3103 0CBA                     l3031 0B41                     l3023 0B33  
                   l3015 0B1C                     l3007 0B0D                     l3113 0CDF  
                   l3121 0D07                     l3105 0CBE                     l3041 0B5D  
                   l3033 0B46                     l3025 0B37                     l3017 0B24  
                   l3009 0B11                     l3131 0D37                     l3123 0D14  
                   l3115 0CE7                     l3107 0CD2                     l3051 0B85  
                   l3043 0B62                     l3035 0B4E                     l3027 0B3B  
                   l3019 0B26                     l3211 15A7                     l3203 1561  
                   l3133 0D44                     l3125 0D1E                     l3117 0CEB  
                   l3061 0BE0                     l3053 0B9F                     l3037 0B50  
                   l3029 0B3C                     l2501 092C                     l3221 15F3  
                   l3213 15BF                     l3205 1579                     l3135 0D48  
                   l3127 0D2C                     l3119 0D03                     l3071 0C0F  
                   l3063 0BE7                     l3055 0BAC                     l3047 0B6B  
                   l3039 0B58                     l2511 0940                     l2503 0930  
                   l3223 1604                     l3207 1594                     l3151 124F  
                   l3143 1237                     l3311 0190                     l3303 0165  
                   l3233 1F4D                     l3241 1FC7                     l3137 0D49  
                   l3129 0D35                     l3081 0C5F                     l3073 0C23  
                   l3065 0BF4                     l3057 0BC6                     l3049 0B78  
                   l2601 0A7F                     l2521 0954                     l2513 0944  
                   l2505 0934                     l3225 161B                     l3217 15D4  
                   l3209 15A1                     l2441 11E1                     l3161 1281  
                   l3153 1254                     l3145 123C                     l3401 04B4  
                   l3305 0176                     l3243 1FD6                     l3139 0D51  
                   l3091 0CA5                     l3083 0C74                     l3075 0C2A  
                   l3067 0BFB                     l3059 0BD3                     l2603 0A82  
                   l2611 0A8F                     l2531 0968                     l2523 0958  
                   l2515 0948                     l2507 0938                     l3171 1320  
                   l3227 1624                     l3219 15EB                     l2451 122A  
                   l2443 11E6                     l3155 1260                     l3147 1245  
                   l3411 051D                     l3403 04B9                     l3331 0263  
                   l3323 01CB                     l3307 0181                     l3315 01A8  
                   l3251 0085                     l3245 1FD7                     l3237 1FBE  
                   l2701 128F                     l3093 0CA9                     l3085 0C8B  
                   l3077 0C3E                     l3069 0C08                     l2621 0AA2  
                   l2613 0A90                     l2605 0A84                     l2541 09AA  
                   l2525 095C                     l2517 094C                     l2509 093C  
                   l2533 096C                     l2461 08D2                     l3181 1347  
                   l3173 1337                     l3165 12ED                     l3229 163B  
                   l2445 11EB                     l3157 1265                     l3149 124A  
                   l3501 071B                     l3421 0567                     l3413 0549  
                   l3405 04C1                     l3341 02AB                     l3333 0267  
                   l3325 01F7                     l3317 01B1                     l3309 018B  
                   l3261 00CF                     l3253 0095                     l3239 1FC0  
                   l2711 12A3                     l2703 1293                     l3095 0CAA  
                   l3087 0C92                     l3079 0C4B                     l2631 0ADA  
                   l2623 0AA7                     l2615 0A94                     l2607 0A89  
                   l2543 09AC                     l2551 09BE                     l2535 096D  
                   l2527 0960                     l2519 0950                     l2471 08E6  
                   l2463 08D3                     l2455 08C4                     l3175 133C  
                   l3167 1305                     l2447 11F6                     l2439 11DC  
                   l3159 1278                     l3191 1FE8                     l3503 0720  
                   l3511 0751                     l3431 05CF                     l3423 0570  
                   l3415 054F                     l3407 04DE                     l3343 02B2  
                   l3327 01FB                     l3335 028E                     l3319 01B3  
                   l3271 00EC                     l3263 00D7                     l3255 00B3  
                   l2721 12B7                     l2713 12A7                     l2705 1298  
                   l2801 13A9                     l3097 0CB1                     l3089 0C9E  
                   l2641 0AF1                     l2633 0ADF                     l2625 0AAF  
                   l2617 0A9A                     l2609 0A8B                     l2561 09DE  
                   l2553 09C8                     l2545 09B0                     l2537 0984  
                   l2529 0964                     l2481 08FC                     l2465 08D8  
                   l2473 08E8                     l2457 08CA                     l3185 1367  
                   l3169 131A                     l2449 1216                     l3193 1F1E  
                   l3521 0776                     l3513 0757                     l3505 0738  
                   l3441 05EE                     l3433 05D3                     l3425 05BF  
                   l3417 055C                     l3409 0518                     l3361 0312  
                   l3353 02DA                     l3345 02C5                     l3337 029F  
                   l3329 0237                     l3273 00F0                     l3265 00DD  
                   l3257 00B8                     l3249 0083                     l3601 11BF  
                   l2731 12D3                     l2723 12BB                     l2715 12A9  
                   l2707 129A                     l2803 13C1                     l2651 100B  
                   l3099 0CB5                     l2643 0AF3                     l2635 0AE7  
                   l2627 0AB3                     l2571 09F3                     l2563 09E2  
                   l2555 09CD                     l2547 09B1                     l2539 09A3  
                   l2491 090F                     l2483 0900                     l2475 08F0  
                   l2467 08DD                     l2459 08CE                     l3179 1341  
                   l3531 078F                     l3523 077A                     l3515 0766  
                   l3507 0749                     l3451 060D                     l3443 05F3  
                   l3427 05C3                     l3435 05D8                     l3419 0562  
                   l3371 0330                     l3363 031C                     l3355 02E0  
                   l3347 02CB                     l3339 02A5                     l3291 0136  
                   l3275 00F6                     l3267 00E1                     l3259 00CC  
                   l3603 11CE                     l3611 0D75                     l2733 12D8  
                   l2725 12BF                     l2717 12AF                     l2709 129E  
                   l2901 169B                     l2805 13C5                     l2653 1012  
                   l2813 1EF1                     l2645 0AFD                     l2637 0AEC  
                   l2629 0AD1                     l2581 0A3D                     l2573 09F4  
                   l2565 09E6                     l2549 09BA                     l2493 0917  
                   l2485 0904                     l2477 08F5                     l2469 08E5  
                   l2821 000D                     l3189 1FE0                     l3197 1F1E  
                   l3541 07BC                     l3533 07A0                     l3525 0786  
                   l3517 076B                     l3509 074D                     l3461 062D  
                   l3453 0611                     l3445 05F7                     l3437 05DE  
                   l3429 05C9                     l3381 034A                     l3373 0336  
                   l3365 0322                     l3357 02EF                     l3293 013B  
                   l3285 0110                     l3277 00FB                     l3269 00E7  
                   l3701 0FCB                     l3621 0DA9                     l3613 0D7B  
                   l2727 12CE                     l2719 12B2                     l2735 12DE  
                   l2751 113D                     l2743 1131                     l2903 16AB  
                   l2911 16C4                     l2807 13F3                     l2655 1016  
                   l2815 1EF9                     l2647 0B01                     l2639 0AED  
                   l2591 0A66                     l2583 0A43                     l2575 09FD  
                   l2567 09ED                     l2559 09D6                     l2495 0918  
                   l2487 0905                     l2479 08FB                     l2831 0035  
                   l2823 0018                     l2663 102D                     l2671 1F66  
                   l3199 1F2D                     l3535 07A6                     l3527 078B  
                   l3519 0771                     l3543 07C6                     l3447 05FC  
                   l3439 05E2                     l3455 0615                     l3463 0631  
                   l3471 06B3                     l3391 042A                     l3375 033A  
                   l3383 034E                     l3367 0328                     l3359 030B  
                   l3287 0121                     l3279 00FF                     l3623 0DAD  
                   l3615 0D80                     l3711 0FDC                     l3607 0D5C  
                   l3721 1EE2                     l3801 085B                     l3561 143E  
                   l3553 1401                     l2737 12E3                     l2729 12D2  
                   l2761 1154                     l2753 1141                     l2745 1132  
                   l2921 16EA                     l2913 16C9                     l2905 16B7  
                   l2809 13F5                     l2657 1021                     l2649 1009  
                   l2817 1EFB                     l2585 0A48                     l2569 09EF  
                   l2577 0A02                     l2489 090A                     l2497 091A  
                   l2833 003D                     l2665 1030                     l2673 1F6B  
                   l2681 0800                     l3537 07AB                     l3481 06EC  
                   l3473 06C5                     l3465 067F                     l3457 061B  
                   l3449 0608                     l3393 042E                     l3385 0350  
                   l3377 0342                     l3369 032C                     l3289 012C  
                   l3297 0153                     l3713 0FF5                     l3705 0FD1  
                   l3641 0E08                     l3633 0DCE                     l3625 0DAF  
                   l3617 0D92                     l3609 0D6D                     l3811 0885  
                   l3803 0862                     l2691 1F8E                     l3571 147A  
                   l3555 140B                     l3547 13F7                     l2739 12E8  
                   l2771 116F                     l2763 1158                     l2755 1146  
                   l2747 1136                     l2931 170F                     l2923 16F2  
                   l2907 16BB                     l2659 1026                     l2595 0A6F  
                   l2579 0A19                     l2587 0A51                     l2499 0928  
                   l2851 0062                     l2843 004B                     l2835 003F  
                   l2827 0021                     l2667 103E                     l2675 1F6F  
                   l3539 07B7                     l3491 0707                     l3483 06F1  
                   l3475 06D5                     l3467 06AB                     l3459 0628  
                   l3395 0440                     l3387 0358                     l3379 0344  
                   l3707 0FD9                     l3643 0E19                     l3635 0DEA  
                   l3619 0D9A                     l3627 0DB6                     l3731 10A8  
                   l3723 1082                     l3741 1EEF                     l3821 08B6  
                   l3813 0889                     l3805 0866                     l2693 1F93  
                   l2685 1F7F                     l3573 1486                     l3557 1420  
                   l3549 13FD                     l2765 115C                     l2757 114C  
                   l2773 1175                     l2749 113B                     l2941 172E  
                   l2933 1713                     l2925 16FA                     l2917 16D2  
                   l2781 10E3                     l2597 0A76                     l2589 0A61  
                   l2853 0070                     l2837 0043                     l2845 005B  
                   l2829 0034                     l2669 1043                     l2677 1F78  
                   l3493 0709                     l3485 06F7                     l3477 06DC  
                   l3469 06AF                     l3397 0492                     l3389 0361  
                   l3581 1185                     l3661 0EA2                     l3653 0E49  
                   l3645 0E21                     l3637 0DFC                     l3629 0DC6  
                   l3725 1086                     ?_pad 0024                     l3735 1EE6  
                   l3751 1F04                     l3743 1EFC                     l3719 1EDD  
                   l3823 08BA                     l3815 0893                     l3807 086E  
                   l2695 1F99                     l2687 1F81                     l3567 145F  
                   l3559 142A                     l2775 117A                     l2767 1166  
                   l2759 114F                     l2951 174A                     l2943 1736  
                   l2935 1714                     l2927 16FC                     l2919 16E2  
                   l2871 165B                     l2863 164C                     l2783 10F7  
                   l2599 0A7A                     l2855 0075                     l3495 070D  
                   l3487 06FD                     l3479 06E0                     l3399 049C  
                   l3591 11A0                     l3583 118D                     l3671 0EE1  
                   l3663 0EA7                     l3647 0E31                     l3639 0DFF  
                   l3655 0E65                     l3727 108A                     l3831 148E  
                   l3737 1EEB                     l3761 1F19                     l3753 1F05  
                   l3745 1EFF                     l3825 08BB                     l3817 089D  
                   l3809 087C                     l2689 1F85                     l3569 1473  
                   l2777 117F                     l2769 116A                     l2953 1751  
                   l2961 1761                     l2929 1701                     l2937 171B  
                   l2945 173A                     l2873 1660                     l2881 1670  
                   l2865 1652                     l2785 1113                     l2793 136C  
                   l2857 1F9E                     l3497 0711                     l3489 0701  
                   l3593 11A4                     l3585 1199                     l3673 0EF3  
                   l3665 0EC4                     l3657 0E80                     l3649 0E41  
                   l3729 109E                     l3841 1499                     l3833 148F  
                   l3739 1EEE                     l3755 1F06                     l3747 1F02  
                   l3819 08B1                     l2699 128E                     l2963 1765  
                   l2955 1755                     l2947 1740                     l2939 172D  
                   l2891 1686                     l2883 1678                     l2875 1665  
                   l2867 1656                     l2787 112D                     l2795 1381  
                   l2859 1FA1                     l3499 0716                     l3595 11A8  
                   l3691 0F83                     l3683 0F3B                     l3667 0ECA  
                   l3659 0E85                     l3771 1066                     l3851 1551  
                   l3843 14A2                     l3835 1491                     l3757 1F09  
                   l3749 1F03                     l3781 1F3F                     l2981 17AF  
                   l2973 1786                     l2965 1766                     l2957 1756  
                   l2949 1748                     l2893 168B                     l2885 167D  
                   l2877 166D                     l2869 165A                     l2789 112F  
                   l2797 139D                     l3597 11B0                     l3589 119C  
                   l3685 0F56                     l3669 0ED9                     l3677 0F16  
                   l3773 1075                     l3765 1056                     l3853 1555  
                   l3845 14E9                     l3837 1493                     l3829 148B  
                   l3759 1F14                     l3783 1F43                     l3791 0832  
                   l2991 17E6                     l2975 178B                     l2983 17B3  
                   l2967 176A                     l2959 175D                     l2895 1690  
                   l2887 1681                     l2879 166E                     l2799 13A5  
                   l3599 11B9                     l3687 0F69                     l3679 0F28  
                   l3695 0FA6                     l3767 1062                     l3847 14F2  
                   l3839 1496                     l3777 1F36                     l3793 0842  
                   l3785 0819                     l2993 17EC                     l2985 17C0  
                   l2977 1793                     l2969 177E                     l2897 1698  
                   l2889 1685                     l3697 0FB8                     l3689 0F7B  
                   l3769 1064                     l3849 1539                     l3779 1F37  
                   l3787 081E                     l3875 1436                     l2995 17F0  
                   l2987 17DB                     l2979 1797                     l2899 1699  
                   l3699 0FC0                     l3797 084B                     l3789 0822  
                   l2997 17F2                     l2989 17DE                     l3799 0850  
                   STR_1 2000                     STR_2 2010                     STR_3 2018  
                   STR_6 2014                     STR_7 201C                     u3010 0A7A  
                   u3011 0A79                     u3100 0AC2                     u3020 0A7F  
                   u3021 0A7E                     u3005 0A70                     u3110 0AD1  
                   u3030 0A89                     u3111 0AD0                     u3031 0A88  
                   u4000 0B46                     u3120 0ADA                     u3040 0A8F  
                   u3200 1053                     u4001 0B45                     u3121 0AD9  
                   u3105 0ABE                     u3041 0A8E                     u3201 1052  
                   u4010 0B5D                     u3130 0ADF                     u3050 0A94  
                   u3210 1F78                     u4011 0B5C                     u3131 0ADE  
                   u3051 0A93                     u3211 1F77                     u3300 12AF  
                   u4020 0B62                     u3140 0AEC                     u3060 0A9A  
                   u3220 0810                     u3301 12AE                     u4021 0B61  
                   u3141 0AEB                     u3061 0A99                     u3221 080E  
                   u4110 0CB9                     u3150 0AF1                     u3070 0AA1  
                   u3230 0811                     u4111 0CB8                     u3151 0AF0  
                   u3071 0AA0                     u3240 1F85                     u5000 1473  
                   u3320 12BF                     u3400 114C                     u4200 0D48  
                   u4120 0CBE                     u3160 0B01                     u3080 0AA7  
                   u3241 1F84                     u5001 1472                     u3321 12BE  
                   u3401 114B                     u4201 0D47                     u4121 0CBD  
                   u4105 0CAB                     u3161 0B00                     u3081 0AA6  
                   u5010 147A                     u3170 1016                     u4130 0CD2  
                   u4050 0C6A                     u3090 0AB3                     u4210 123C  
                   u5011 1479                     u3315 12B3                     u3171 1015  
                   u4131 0CD1                     u4035 0BE1                     u3091 0AB2  
                   u4211 123B                     u3340 12CE                     u3420 115C  
                   u3500 1381                     u4140 0CD9                     u4060 0C81  
                   u4300 1354                     u2700 11E1                     u4220 124A  
                   u5020 1199                     u5100 0DEA                     u3341 12CD  
                   u3421 115B                     u3501 1380                     u4141 0CD8  
                   u4045 0C10                     u2701 11E0                     u4221 1249  
                   u5021 1198                     u5101 0DE9                     u3270 1F99  
                   u3430 1166                     u3510 139D                     u3190 1026  
                   u4150 0CDF                     u4310 135F                     u2710 11E6  
                   u4230 1273                     u5030 11B0                     u5110 0DFC  
                   u3271 1F98                     u3255 1F8A                     u3335 12C0  
                   u3431 1165                     u3415 1150                     u3511 139C  
                   u3191 1025                     u4151 0CDE                     u4055 0C66  
                   u4311 135D                     u2711 11E5                     u4231 1272  
                   u5031 11AF                     u5111 0DFB                     u5200 1EE2  
                   u3360 12DE                     u3280 1293                     u3520 13A9  
                   u4160 0CEB                     u2800 090F                     u4320 1360  
                   u4400 15E1                     u2720 11F6                     u4240 1278  
                   u5040 11B9                     u5120 0E19                     u5201 1EE1  
                   u3265 1F8F                     u3361 12DD                     u3345 12CA  
                   u3281 1292                     u3521 13A8                     u3185 101B  
                   u4161 0CEA                     u4065 0C7D                     u2801 090E  
                   u4305 1350                     u2721 11F5                     u4241 1277  
                   u5041 11B8                     u5121 0E18                     u3370 12E3  
                   u3290 129E                     u3450 1175                     u3530 13C5  
                   u4170 0CF9                     u4090 0CA9                     u2810 0928  
                   u3610 005A                     u4250 1312                     u4410 15EB  
                   u2730 1216                     u4330 1FFF                     u5050 11BF  
                   u5130 0E65                     u5210 10A8                     u3371 12E2  
                   u3355 12D4                     u3291 129D                     u3451 1174  
                   u3435 1162                     u3531 13C4                     u4091 0CA8  
                   u4075 0C8C                     u2811 0927                     u3611 0059  
                   u4411 15EA                     u2731 1215                     u4235 126F  
                   u4331 1FFE                     u5051 11BE                     u5131 0E64  
                   u5211 10A7                     u5220 1F19                     u5300 087B  
                   u3460 117A                     u3380 1136                     u3700 168B  
                   u3540 13F3                     u4180 0D14                     u2900 09C8  
                   u2820 092C                     u2740 08D2                     u3620 0061  
                   u4260 1320                     u4420 1611                     u4340 1F2D  
                   u4500 00B3                     u5060 11CE                     u5140 0E85  
                   u5221 1F18                     u5301 087A                     u3461 1179  
                   u3445 116B                     u3381 1135                     u3701 168A  
                   u3541 13F2                     u4181 0D13                     u4085 0C9F  
                   u2901 09C7                     u2821 092B                     u2741 08D1  
                   u3621 0060                     u3605 004C                     u4261 131F  
                   u4405 15DD                     u4341 1F2C                     u4501 00B2  
                   u5061 11CD                     u5141 0E84                     u5230 1F4C  
                   u3390 1141                     u3710 1690                     u3470 10F7  
                   u4190 0D2C                     u3550 1EF9                     u2910 09CD  
                   u2830 0984                     u2750 08D8                     u4270 132D  
                   u4430 161B                     u4350 1586                     u4510 00DD  
                   u5150 0EA7                     u5070 0D6D                     u5231 1F4B  
                   u3391 1140                     u3711 168F                     u3471 10F6  
                   u4191 0D2B                     u4175 0CF5                     u3551 1EF8  
                   u2911 09CC                     u2831 0983                     u2751 08D7  
                   u4255 130E                     u4431 161A                     u2735 1212  
                   u4511 00DC                     u5151 0EA6                     u5071 0D6C  
                   u5320 0889                     u5240 081E                     u3800 1740  
                   u3720 16AB                     u3480 1113                     u2920 09E2  
                   u2840 098D                     u2760 08DD                     u3640 0070  
                   u3560 0018                     u4280 1337                     u4440 1631  
                   u4360 15A1                     u4600 028E                     u4520 00E1  
                   u5160 0ECA                     u5080 0D92                     u5321 0888  
                   u5241 081D                     u3801 173F                     u3721 16AA  
                   u3481 1112                     u3545 13EF                     u4185 0D10  
                   u2921 09E1                     u2841 098B                     u2761 08DC  
                   u3641 006F                     u3561 0017                     u4281 1336  
                   u4425 160D                     u4361 15A0                     u4601 028D  
                   u4521 00E0                     u5161 0EC9                     u5081 0D91  
                   u5330 088F                     u5250 0822                     u3810 1748  
                   u3730 16C9                     u3490 112D                     u2930 09E6  
                   u2850 098E                     u2770 08FB                     u3650 0075  
                   u3570 002E                     u4290 1347                     u4450 163B  
                   u4370 15A7                     u4610 02AB                     u4530 00E7  
                   u5170 0F28                     u5090 0DAD                     u5331 088E  
                   u5315 087F                     u5251 0821                     u3811 1747  
                   u3731 16C8                     u3491 112C                     u4195 0D28  
                   u2931 09E5                     u2835 0980                     u2771 08FA  
                   u3651 0074                     u3635 0063                     u4291 1346  
                   u4275 1329                     u4451 163A                     u4371 15A6  
                   u4355 1582                     u4611 02AA                     u4531 00E6  
                   u5171 0F27                     u5091 0DAC                     u5340 0893  
                   u5260 0842                     u4460 1F5D                     u3900 1797  
                   u3740 1701                     u3660 165A                     u2940 09F3  
                   u2860 09A3                     u2780 0904                     u3580 0043  
                   u4380 15B5                     u4700 032C                     u4620 02B2  
                   u4540 0110                     u5180 0F56                     u5341 0892  
                   u5261 0841                     u4461 1F5B                     u3901 1796  
                   u3741 1700                     u3661 1659                     u2941 09F2  
                   u2861 09A2                     u2781 0903                     u3581 0042  
                   u4445 162D                     u4365 159D                     u4701 032B  
                   u4621 02B1                     u4541 010F                     u5181 0F55  
                   u5350 08A7                     u4470 1F5E                     u3910 17A5  
                   u3830 1755                     u3670 1660                     u2870 09B0  
                   u2790 090A                     u3590 004A                     u4390 15D3  
                   u4710 0336                     u4630 02C5                     u4550 0121  
                   u5190 0FB8                     u3831 1754                     u3671 165F  
                   u3495 1129                     u2871 09AF                     u2791 0909  
                   u3591 0049                     u3575 002A                     u4391 15D2  
                   u4711 0335                     u4631 02C4                     u4551 0120  
                   u5191 0FB7                     u5360 08B6                     u5280 0861  
                   u4480 1FC7                     u3920 17C0                     u3680 1665  
                   u2960 0A19                     u4800 0562                     u4720 033A  
                   u4640 02D9                     u4560 0165                     u5361 08B5  
                   u5281 0860                     u4481 1FC6                     u3921 17BF  
                   u3825 174B                     u3681 1664                     u2961 0A18  
                   u4385 15B1                     u4801 0561                     u4721 0339  
                   u4641 02D8                     u4561 0164                     u5370 08BA  
                   u4490 1FD6                     u3930 17DB                     u3850 1765  
                   u3770 1713                     u3690 1685                     u2970 0A48  
                   u2890 09C4                     u4810 05C3                     u4730 034A  
                   u4650 02E0                     u4570 0176                     u5371 08B9  
                   u5355 08A3                     u5275 0855                     u4491 1FD5  
                   u3931 17DA                     u3915 17A1                     u3851 1764  
                   u3771 1712                     u3755 1702                     u3691 1684  
                   u2971 0A47                     u2963 0A15                     u2955 09F7  
                   u2891 09C3                     u4811 05C2                     u4731 0349  
                   u4651 02DF                     u4635 02C1                     u4571 0175  
                   u3940 17F0                     u3860 176A                     u2980 0A61  
                   u4900 06DC                     u4820 05C9                     u4740 0440  
                   u4660 02EF                     u4580 01CA                     _RCIF 008D  
                   u3941 17EF                     u3925 17BC                     u3861 1769  
                   u3845 1757                     u3765 1709                     u2981 0A60  
                   u2885 09B4                     u4901 06DB                     u4821 05C8  
                   u4741 043F                     u4661 02EE                     u4581 01C9  
                   u3870 177E                     u3790 172D                     u3950 0B11  
                   u2990 0A66                     u4910 06E0                     u4830 05CF  
                   u4750 0492                     u4670 030B                     u4590 0236  
                   u5295 086F                     u3935 17D7                     u3871 177D  
                   u3791 172C                     u3951 0B10                     u2991 0A65  
                   u4911 06DF                     u4831 05CE                     u4751 0491  
                   u4671 030A                     u4591 0235                     u3880 1785  
                   u3960 0B17                     u4920 06FD                     u4840 05D3  
                   u4760 04B4                     u4680 0322                     u3881 1784  
                   u3785 1715                     u3961 0B16                     u4921 06FC  
                   u4841 05D2                     u4761 04B3                     u4745 043C  
                   u4681 0321                     u4665 02EB                     u3890 178B  
                   u3970 0B1C                     u4930 070D                     u4850 05DE  
                   u4770 04B9                     u4690 0328                     u3891 178A  
                   u3795 1729                     u3971 0B1B                     u4931 070C  
                   u4851 05DD                     u4771 04B8                     u4691 0327  
                   u4675 0307                     u5387 1559                     u3980 0B3B  
                   u4940 0757                     u4860 05E2                     u4780 0518  
                   u3981 0B3A                     u4941 0756                     u4861 05E1  
                   u4781 0517                     u3990 0B41                     u4950 0766  
                   u4870 061B                     u4790 054F                     u3991 0B40  
                   u4951 0765                     u4871 061A                     u4791 054E  
                   u4960 0771                     u4880 06C5                     u4961 0770  
                   u4881 06C4                     u4970 07A0                     u4890 06D5  
                   u4971 079F                     u4955 0762                     u4891 06D4  
                   u4980 140B                     u4981 140A                     u4885 06C1  
                   u4990 141F                     u4991 141E                     u4895 06D1  
                   _TXIF 008C                     _dbuf 01A0                     _atoi 13F7  
                   _main 148B                     _pot1 0148                     _pot2 0144  
                   _prec 0142                     _nout 013E                     pad@i 0027  
                   pad@p 0025                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     pad@w 0029                     btemp 007E  
       __end_of_ADC_Init 1EF1         __end_of_ADC_Read 1F1E            ___fpclassifyf 12ED  
                   start 0002          ___fldiv@new_exp 004C  __end_of_UART_Write_Text 1F4D  
                  ??_pad 007C            ___fltol@sign1 0079                    ?_atoi 0076  
        __end_of___fladd 0B03                    ?_main 0070          __end_of___fldiv 1800  
        __end_of___awdiv 12ED          __end_of___flneg 1EFC                    STR_10 2020  
                  STR_12 2020          __end_of___awmod 1184          __end_of___flmul 0D5A  
        __end_of___flsub 1FBE          __end_of___fltol 0081          ___awdiv@divisor 0070  
        ___awdiv@counter 0075                    _RCREG 0199             vfpfcnvrt@fmt 00D3  
                  _SPBRG 019B                    _TXREG 019A              ?_UART_Write 0070  
                  _flags 00ED                    _fputc 11DC                    _fputs 102B  
        __end_of_isdigit 1F65                    atoi@n 0022                    pad@fp 002B  
                  atoi@s 0076                    _width 0140                    _putch 0006  
        __end_of_isspace 1FDF          __end_of_isupper 0818                    status 0003  
                  wtemp0 007E          __end_of_sprintf 1080           ?___fpclassifyf 0070  
        __end_of_tolower 1F35          __end_of_strncmp 11DC          __initialization 07DE  
           __end_of_atoi 148B             __end_of_main 1561                   ??_atoi 0078  
                 ??_main 00EC                   ?_fputc 0070                   ?_fputs 0078  
                 _ADRESH 009C                   _ADRESL 009B         ___awdiv@dividend 0072  
                 ?_putch 0070                   _BORCON 0116                   _OSCCON 0099  
       __end_of___xxtofl 08C4             vfprintf@cfmt 00E9        __end_of_UART_Init 1F08  
                 ___flge 136C                   ___fleq 10E3                ??___fladd 0020  
                 ___wmul 1F7F                ??___fldiv 0042                ??___awdiv 0074  
              ??___flneg 0074                ??___awmod 0074                ??___flmul 0028  
       ?_UART_Write_Text 0070                ??___flsub 007E                ??___fltol 0074  
                 _efgtoa 0081                   _conver 014C                   _floorf 1561  
       ___awdiv@quotient 0077          ___awmod@divisor 0070          ___awmod@counter 0075  
                 pad@buf 0024                   _strcpy 1FDF                   _strlen 1F65  
                 fputc@c 0070                   fputs@c 0020                   fputs@i 0021  
                 fputs@s 0023                ??_isdigit 0072          ___fpclassifyf@e 0020  
              ?_ADC_Init 0070          ___fpclassifyf@u 0022                ?_ADC_Read 0070  
        ___fpclassifyf@x 0070                ??_isspace 0072                ??_isupper 0072  
                 putch@c 0070         __end_of_vfprintf 10B1                ??_sprintf 00EB  
              ??_tolower 0078                ??_strncmp 0074               ___flge@ff1 003A  
             ___flge@ff2 003E          ??___fpclassifyf 0074             ___xxtofl@arg 007A  
           ___xxtofl@exp 0079             ___xxtofl@val 0070               ___fleq@ff1 0070  
             ___fleq@ff2 0074  __end_of__initialization 07FD               ___flneg@f1 0070  
             ___fltol@f1 0070           __pcstackCOMMON 0070             __pidataBANK4 10B1  
          __end_of_fputc 1235            __end_of_fputs 1054            __end_of_putch 0007  
             ??_ADC_Init 0070               ??_ADC_Read 0072                  ??_fputc 0073  
                ??_fputs 0079                  ??_putch 0070               __pbssBANK1 00ED  
             __pbssBANK2 0136               __pbssBANK3 01A0        __end_of__Umul8_16 102B  
             _efgtoa$890 00A0               _efgtoa$898 00A2               _efgtoa$899 00A4  
             __pmaintext 148B                  ?___flge 003A                  ?___fleq 0070  
                ?___wmul 0070                  ?_efgtoa 0068                  ?_floorf 0054  
             ADC_Read@ch 0073                  ?_strcpy 0070                  ?_strlen 0070  
              ?___xxtofl 0070             ??_UART_Write 0070                  _OSCTUNE 0098  
                ___fladd 08C4                  ___fldiv 164C                  ___awdiv 128E  
                ___flneg 1EF1                  ___awmod 1131                  ___flmul 0B03  
                ___flsub 1F9E                  ___fltol 000D       __end_of_UART_Write 1EE6  
              ?_vfprintf 00E3                  __ptext1 1054                  __ptext2 1080  
                __ptext3 0D5A                  __ptext4 1184                  __ptext5 0081  
                __ptext6 1F1E                  __ptext7 0800                  __ptext8 1FDF  
                __ptext9 1235                  _isdigit 1F4D               ??___xxtofl 0074  
       ___awmod@dividend 0072                  _isspace 1FBE                  _isupper 0800  
                efgtoa@c 006C                  efgtoa@d 00B2                  efgtoa@e 00CB  
                efgtoa@f 0068                  efgtoa@g 00C7                  efgtoa@h 00BD  
                efgtoa@i 00C5                  efgtoa@l 00C1                  efgtoa@m 00AC  
                efgtoa@n 00CD                  efgtoa@p 00B7                  efgtoa@t 00A6  
                efgtoa@u 00CF                  efgtoa@w 00B9              UART_Write@c 0070  
                atoi@neg 0020                  _sprintf 1054                  _tolower 1F1E  
                clrloop0 1003                  _strncmp 1184     end_of_initialization 07FD  
                floorf@e 0062                  floorf@m 005E                  floorf@u 0064  
                floorf@x 0054                  fputc@fp 0072                  init_ram 0007  
                fputs@fp 0078                  initloop 0008        __end_of_vfpfcnvrt 1000  
             efgtoa@mode 00BC               efgtoa@sign 00B4                _RCSTAbits 019D  
             ??_vfprintf 00E6                  strcpy@d 0076                  strlen@a 0073  
                strcpy@s 0074                  strlen@s 0074                _UART_Init 1EFC  
            ___fladd@grs 007B            ___xxtofl@sign 0078                _TRISCbits 008E  
            ___fldiv@grs 004E              ___fldiv@rem 0047              ___flmul@grs 002E  
              _TXSTAbits 019E           __end_of___flge 13F7           __end_of___fleq 1131  
            vfpfcnvrt@ap 00D4              vfpfcnvrt@ct 00DE              vfpfcnvrt@fp 00E2  
         __end_of___wmul 1F9E               ?_UART_Init 0070           __end_of_efgtoa 07DE  
         __end_of_floorf 164C               floorf@F526 0136           __end_of_strcpy 2000  
         __end_of_strlen 1F7F      start_initialization 07DE              __end_of_pad 128E  
  __end_of___fpclassifyf 136C              vfprintf@fmt 00E3                 ??___flge 0042  
               ??___fleq 0078                 ??___wmul 0074                 ??_efgtoa 006D  
              __Umul8_16 1008              __pdataBANK4 0220                 ??_floorf 0058  
               ??_strcpy 0072                 ??_strlen 0072                ___fladd@a 0074  
              ___fladd@b 0070                ___fldiv@a 003A                ___fldiv@b 003E  
              ___flmul@a 0024                ___flmul@b 0020                ___flsub@a 003A  
              ___flsub@b 003E                ___latbits 0003            __pcstackBANK0 0020  
          __pcstackBANK1 00A0            __pcstackBANK2 0120                __pnvBANK2 0144  
               ?___fladd 0070                 ?___fldiv 003A                 ?___awdiv 0070  
               ?___flneg 0070                 ?___awmod 0070                 ?___flmul 0020  
               ?___flsub 003A                 ?___fltol 0070               ?__Umul8_16 0070  
            ??_UART_Init 0070                 ?_isdigit 0070                 _ADC_Init 1EE6  
               _ADC_Read 1F08                 ?_isspace 0070                 ?_isupper 0070  
               ?_sprintf 0120                 ?_tolower 0076                 ?_strncmp 0070  
      ??_UART_Write_Text 0071           ___wmul@product 0074                clear_ram0 1002  
              _vfpfcnvrt 0D5A               _ADCON0bits 009D               _ADCON1bits 009E  
      ___wmul@multiplier 0070               vfpfcnvrt@c 00E1               vfpfcnvrt@f 00DA  
             vfprintf@ap 00E5               vfprintf@fp 00E8              ??__Umul8_16 0072  
             ?_vfpfcnvrt 00D3               _ANSELAbits 018C       ___fpclassifyf@F465 013A  
             sprintf@fmt 0120                 ___xxtofl 0818                 __ptext10 1F65  
               __ptext11 102B                 __ptext20 0B03                 __ptext12 11DC  
               __ptext21 1008                 __ptext13 0006                 __ptext30 1F7F  
               __ptext22 136C                 __ptext14 1561                 __ptext31 0818  
               __ptext23 10E3                 __ptext15 12ED                 __ptext32 1F35  
               __ptext24 164C                 __ptext16 000D                 __ptext33 1EDC  
               __ptext25 1131                 __ptext17 1F9E                 __ptext34 1EFC  
               __ptext26 128E                 __ptext18 08C4                 __ptext35 1F08  
               __ptext27 13F7                 __ptext19 1EF1                 __ptext36 1EE6  
               __ptext28 1FBE                 __ptext29 1F4D                 _bufferTx 0220  
             strcpy@dest 0077                 efgtoa@fp 00B6                 efgtoa@ne 00AA  
               efgtoa@pp 00A8                 efgtoa@ou 00AE                 _vfprintf 1080  
            _isspace$977 0074                 isdigit@c 0070                sprintf@ap 012B  
               isspace@c 0070                strcpy@src 0070                 isupper@c 0070  
              strncmp@_l 0075                strncmp@_r 0070              efgtoa@nmode 00BB  
            ??_vfpfcnvrt 00D5            __pstringtext1 2000            __pstringtext2 2010  
          __pstringtext3 2014            __pstringtext4 2018            __pstringtext5 201C  
          __pstringtext6 2020            __pstringtext7 0000   __Umul8_16@multiplicand 0070  
        _UART_Write_Text 1F35                 sprintf@f 012C                 tolower@c 0076  
               sprintf@s 012A                 strncmp@l 0078                 strncmp@n 0072  
               strncmp@r 0076               _UART_Write 1EDC            ___fladd@signs 0078  
       UART_Write_Text@c 0072             ___fladd@aexp 0079             ___fladd@bexp 007A  
   __Umul8_16@multiplier 0078        __Umul8_16@product 0074  
