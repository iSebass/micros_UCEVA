

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Sep 20 15:37:18 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1939
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2,group=3
    51                           	psect	text28,local,class=CODE,merge=1,delta=2,group=3
    52                           	psect	text29,local,class=CODE,merge=1,delta=2,group=3
    53                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    66                           	dabs	1,0x7E,2
    67  0000                     
    68                           ; Version 2.40
    69                           ; Generated 17/11/2021 GMT
    70                           ; 
    71                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution. Publication is not required when
    85                           ;        this file is used in an embedded application.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC16F1939 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     	;# 
   104  0001                     	;# 
   105  0002                     	;# 
   106  0003                     	;# 
   107  0004                     	;# 
   108  0005                     	;# 
   109  0006                     	;# 
   110  0007                     	;# 
   111  0008                     	;# 
   112  0009                     	;# 
   113  000A                     	;# 
   114  000B                     	;# 
   115  000C                     	;# 
   116  000D                     	;# 
   117  000E                     	;# 
   118  000F                     	;# 
   119  0010                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0013                     	;# 
   123  0015                     	;# 
   124  0016                     	;# 
   125  0016                     	;# 
   126  0017                     	;# 
   127  0018                     	;# 
   128  0019                     	;# 
   129  001A                     	;# 
   130  001B                     	;# 
   131  001C                     	;# 
   132  001E                     	;# 
   133  001F                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  008F                     	;# 
   138  0090                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0095                     	;# 
   143  0096                     	;# 
   144  0097                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009A                     	;# 
   148  009B                     	;# 
   149  009B                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  010F                     	;# 
   157  0110                     	;# 
   158  0111                     	;# 
   159  0112                     	;# 
   160  0113                     	;# 
   161  0114                     	;# 
   162  0115                     	;# 
   163  0116                     	;# 
   164  0117                     	;# 
   165  0118                     	;# 
   166  0119                     	;# 
   167  011A                     	;# 
   168  011B                     	;# 
   169  011D                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172  018F                     	;# 
   173  0190                     	;# 
   174  0191                     	;# 
   175  0191                     	;# 
   176  0192                     	;# 
   177  0193                     	;# 
   178  0193                     	;# 
   179  0193                     	;# 
   180  0194                     	;# 
   181  0195                     	;# 
   182  0196                     	;# 
   183  0199                     	;# 
   184  019A                     	;# 
   185  019B                     	;# 
   186  019B                     	;# 
   187  019B                     	;# 
   188  019B                     	;# 
   189  019C                     	;# 
   190  019C                     	;# 
   191  019D                     	;# 
   192  019E                     	;# 
   193  019F                     	;# 
   194  020D                     	;# 
   195  0210                     	;# 
   196  0211                     	;# 
   197  0212                     	;# 
   198  0213                     	;# 
   199  0214                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0216                     	;# 
   203  0217                     	;# 
   204  0291                     	;# 
   205  0291                     	;# 
   206  0292                     	;# 
   207  0293                     	;# 
   208  0294                     	;# 
   209  0295                     	;# 
   210  0295                     	;# 
   211  0296                     	;# 
   212  0298                     	;# 
   213  0298                     	;# 
   214  0299                     	;# 
   215  029A                     	;# 
   216  029B                     	;# 
   217  029C                     	;# 
   218  029C                     	;# 
   219  029D                     	;# 
   220  029E                     	;# 
   221  029F                     	;# 
   222  0311                     	;# 
   223  0311                     	;# 
   224  0312                     	;# 
   225  0313                     	;# 
   226  0314                     	;# 
   227  0315                     	;# 
   228  0315                     	;# 
   229  0316                     	;# 
   230  0318                     	;# 
   231  0318                     	;# 
   232  0319                     	;# 
   233  031A                     	;# 
   234  031C                     	;# 
   235  031C                     	;# 
   236  031D                     	;# 
   237  031E                     	;# 
   238  0394                     	;# 
   239  0395                     	;# 
   240  0396                     	;# 
   241  0415                     	;# 
   242  0416                     	;# 
   243  0417                     	;# 
   244  041C                     	;# 
   245  041D                     	;# 
   246  041E                     	;# 
   247  0791                     	;# 
   248  0792                     	;# 
   249  0793                     	;# 
   250  0794                     	;# 
   251  0795                     	;# 
   252  0798                     	;# 
   253  0799                     	;# 
   254  079A                     	;# 
   255  07A0                     	;# 
   256  07A1                     	;# 
   257  07A2                     	;# 
   258  07A3                     	;# 
   259  07A4                     	;# 
   260  07A5                     	;# 
   261  07A6                     	;# 
   262  07A7                     	;# 
   263  07A8                     	;# 
   264  07A9                     	;# 
   265  07AA                     	;# 
   266  07AB                     	;# 
   267  0FE4                     	;# 
   268  0FE5                     	;# 
   269  0FE6                     	;# 
   270  0FE7                     	;# 
   271  0FE8                     	;# 
   272  0FE9                     	;# 
   273  0FEA                     	;# 
   274  0FEB                     	;# 
   275  0FED                     	;# 
   276  0FEE                     	;# 
   277  0FEF                     	;# 
   278  0000                     	;# 
   279  0001                     	;# 
   280  0002                     	;# 
   281  0003                     	;# 
   282  0004                     	;# 
   283  0005                     	;# 
   284  0006                     	;# 
   285  0007                     	;# 
   286  0008                     	;# 
   287  0009                     	;# 
   288  000A                     	;# 
   289  000B                     	;# 
   290  000C                     	;# 
   291  000D                     	;# 
   292  000E                     	;# 
   293  000F                     	;# 
   294  0010                     	;# 
   295  0011                     	;# 
   296  0012                     	;# 
   297  0013                     	;# 
   298  0015                     	;# 
   299  0016                     	;# 
   300  0016                     	;# 
   301  0017                     	;# 
   302  0018                     	;# 
   303  0019                     	;# 
   304  001A                     	;# 
   305  001B                     	;# 
   306  001C                     	;# 
   307  001E                     	;# 
   308  001F                     	;# 
   309  008C                     	;# 
   310  008D                     	;# 
   311  008E                     	;# 
   312  008F                     	;# 
   313  0090                     	;# 
   314  0091                     	;# 
   315  0092                     	;# 
   316  0093                     	;# 
   317  0095                     	;# 
   318  0096                     	;# 
   319  0097                     	;# 
   320  0098                     	;# 
   321  0099                     	;# 
   322  009A                     	;# 
   323  009B                     	;# 
   324  009B                     	;# 
   325  009C                     	;# 
   326  009D                     	;# 
   327  009E                     	;# 
   328  010C                     	;# 
   329  010D                     	;# 
   330  010E                     	;# 
   331  010F                     	;# 
   332  0110                     	;# 
   333  0111                     	;# 
   334  0112                     	;# 
   335  0113                     	;# 
   336  0114                     	;# 
   337  0115                     	;# 
   338  0116                     	;# 
   339  0117                     	;# 
   340  0118                     	;# 
   341  0119                     	;# 
   342  011A                     	;# 
   343  011B                     	;# 
   344  011D                     	;# 
   345  018C                     	;# 
   346  018D                     	;# 
   347  018F                     	;# 
   348  0190                     	;# 
   349  0191                     	;# 
   350  0191                     	;# 
   351  0192                     	;# 
   352  0193                     	;# 
   353  0193                     	;# 
   354  0193                     	;# 
   355  0194                     	;# 
   356  0195                     	;# 
   357  0196                     	;# 
   358  0199                     	;# 
   359  019A                     	;# 
   360  019B                     	;# 
   361  019B                     	;# 
   362  019B                     	;# 
   363  019B                     	;# 
   364  019C                     	;# 
   365  019C                     	;# 
   366  019D                     	;# 
   367  019E                     	;# 
   368  019F                     	;# 
   369  020D                     	;# 
   370  0210                     	;# 
   371  0211                     	;# 
   372  0212                     	;# 
   373  0213                     	;# 
   374  0214                     	;# 
   375  0215                     	;# 
   376  0215                     	;# 
   377  0216                     	;# 
   378  0217                     	;# 
   379  0291                     	;# 
   380  0291                     	;# 
   381  0292                     	;# 
   382  0293                     	;# 
   383  0294                     	;# 
   384  0295                     	;# 
   385  0295                     	;# 
   386  0296                     	;# 
   387  0298                     	;# 
   388  0298                     	;# 
   389  0299                     	;# 
   390  029A                     	;# 
   391  029B                     	;# 
   392  029C                     	;# 
   393  029C                     	;# 
   394  029D                     	;# 
   395  029E                     	;# 
   396  029F                     	;# 
   397  0311                     	;# 
   398  0311                     	;# 
   399  0312                     	;# 
   400  0313                     	;# 
   401  0314                     	;# 
   402  0315                     	;# 
   403  0315                     	;# 
   404  0316                     	;# 
   405  0318                     	;# 
   406  0318                     	;# 
   407  0319                     	;# 
   408  031A                     	;# 
   409  031C                     	;# 
   410  031C                     	;# 
   411  031D                     	;# 
   412  031E                     	;# 
   413  0394                     	;# 
   414  0395                     	;# 
   415  0396                     	;# 
   416  0415                     	;# 
   417  0416                     	;# 
   418  0417                     	;# 
   419  041C                     	;# 
   420  041D                     	;# 
   421  041E                     	;# 
   422  0791                     	;# 
   423  0792                     	;# 
   424  0793                     	;# 
   425  0794                     	;# 
   426  0795                     	;# 
   427  0798                     	;# 
   428  0799                     	;# 
   429  079A                     	;# 
   430  07A0                     	;# 
   431  07A1                     	;# 
   432  07A2                     	;# 
   433  07A3                     	;# 
   434  07A4                     	;# 
   435  07A5                     	;# 
   436  07A6                     	;# 
   437  07A7                     	;# 
   438  07A8                     	;# 
   439  07A9                     	;# 
   440  07AA                     	;# 
   441  07AB                     	;# 
   442  0FE4                     	;# 
   443  0FE5                     	;# 
   444  0FE6                     	;# 
   445  0FE7                     	;# 
   446  0FE8                     	;# 
   447  0FE9                     	;# 
   448  0FEA                     	;# 
   449  0FEB                     	;# 
   450  0FED                     	;# 
   451  0FEE                     	;# 
   452  0FEF                     	;# 
   453  0000                     	;# 
   454  0001                     	;# 
   455  0002                     	;# 
   456  0003                     	;# 
   457  0004                     	;# 
   458  0005                     	;# 
   459  0006                     	;# 
   460  0007                     	;# 
   461  0008                     	;# 
   462  0009                     	;# 
   463  000A                     	;# 
   464  000B                     	;# 
   465  000C                     	;# 
   466  000D                     	;# 
   467  000E                     	;# 
   468  000F                     	;# 
   469  0010                     	;# 
   470  0011                     	;# 
   471  0012                     	;# 
   472  0013                     	;# 
   473  0015                     	;# 
   474  0016                     	;# 
   475  0016                     	;# 
   476  0017                     	;# 
   477  0018                     	;# 
   478  0019                     	;# 
   479  001A                     	;# 
   480  001B                     	;# 
   481  001C                     	;# 
   482  001E                     	;# 
   483  001F                     	;# 
   484  008C                     	;# 
   485  008D                     	;# 
   486  008E                     	;# 
   487  008F                     	;# 
   488  0090                     	;# 
   489  0091                     	;# 
   490  0092                     	;# 
   491  0093                     	;# 
   492  0095                     	;# 
   493  0096                     	;# 
   494  0097                     	;# 
   495  0098                     	;# 
   496  0099                     	;# 
   497  009A                     	;# 
   498  009B                     	;# 
   499  009B                     	;# 
   500  009C                     	;# 
   501  009D                     	;# 
   502  009E                     	;# 
   503  010C                     	;# 
   504  010D                     	;# 
   505  010E                     	;# 
   506  010F                     	;# 
   507  0110                     	;# 
   508  0111                     	;# 
   509  0112                     	;# 
   510  0113                     	;# 
   511  0114                     	;# 
   512  0115                     	;# 
   513  0116                     	;# 
   514  0117                     	;# 
   515  0118                     	;# 
   516  0119                     	;# 
   517  011A                     	;# 
   518  011B                     	;# 
   519  011D                     	;# 
   520  018C                     	;# 
   521  018D                     	;# 
   522  018F                     	;# 
   523  0190                     	;# 
   524  0191                     	;# 
   525  0191                     	;# 
   526  0192                     	;# 
   527  0193                     	;# 
   528  0193                     	;# 
   529  0193                     	;# 
   530  0194                     	;# 
   531  0195                     	;# 
   532  0196                     	;# 
   533  0199                     	;# 
   534  019A                     	;# 
   535  019B                     	;# 
   536  019B                     	;# 
   537  019B                     	;# 
   538  019B                     	;# 
   539  019C                     	;# 
   540  019C                     	;# 
   541  019D                     	;# 
   542  019E                     	;# 
   543  019F                     	;# 
   544  020D                     	;# 
   545  0210                     	;# 
   546  0211                     	;# 
   547  0212                     	;# 
   548  0213                     	;# 
   549  0214                     	;# 
   550  0215                     	;# 
   551  0215                     	;# 
   552  0216                     	;# 
   553  0217                     	;# 
   554  0291                     	;# 
   555  0291                     	;# 
   556  0292                     	;# 
   557  0293                     	;# 
   558  0294                     	;# 
   559  0295                     	;# 
   560  0295                     	;# 
   561  0296                     	;# 
   562  0298                     	;# 
   563  0298                     	;# 
   564  0299                     	;# 
   565  029A                     	;# 
   566  029B                     	;# 
   567  029C                     	;# 
   568  029C                     	;# 
   569  029D                     	;# 
   570  029E                     	;# 
   571  029F                     	;# 
   572  0311                     	;# 
   573  0311                     	;# 
   574  0312                     	;# 
   575  0313                     	;# 
   576  0314                     	;# 
   577  0315                     	;# 
   578  0315                     	;# 
   579  0316                     	;# 
   580  0318                     	;# 
   581  0318                     	;# 
   582  0319                     	;# 
   583  031A                     	;# 
   584  031C                     	;# 
   585  031C                     	;# 
   586  031D                     	;# 
   587  031E                     	;# 
   588  0394                     	;# 
   589  0395                     	;# 
   590  0396                     	;# 
   591  0415                     	;# 
   592  0416                     	;# 
   593  0417                     	;# 
   594  041C                     	;# 
   595  041D                     	;# 
   596  041E                     	;# 
   597  0791                     	;# 
   598  0792                     	;# 
   599  0793                     	;# 
   600  0794                     	;# 
   601  0795                     	;# 
   602  0798                     	;# 
   603  0799                     	;# 
   604  079A                     	;# 
   605  07A0                     	;# 
   606  07A1                     	;# 
   607  07A2                     	;# 
   608  07A3                     	;# 
   609  07A4                     	;# 
   610  07A5                     	;# 
   611  07A6                     	;# 
   612  07A7                     	;# 
   613  07A8                     	;# 
   614  07A9                     	;# 
   615  07AA                     	;# 
   616  07AB                     	;# 
   617  0FE4                     	;# 
   618  0FE5                     	;# 
   619  0FE6                     	;# 
   620  0FE7                     	;# 
   621  0FE8                     	;# 
   622  0FE9                     	;# 
   623  0FEA                     	;# 
   624  0FEB                     	;# 
   625  0FED                     	;# 
   626  0FEE                     	;# 
   627  0FEF                     	;# 
   628  0000                     	;# 
   629  0001                     	;# 
   630  0002                     	;# 
   631  0003                     	;# 
   632  0004                     	;# 
   633  0005                     	;# 
   634  0006                     	;# 
   635  0007                     	;# 
   636  0008                     	;# 
   637  0009                     	;# 
   638  000A                     	;# 
   639  000B                     	;# 
   640  000C                     	;# 
   641  000D                     	;# 
   642  000E                     	;# 
   643  000F                     	;# 
   644  0010                     	;# 
   645  0011                     	;# 
   646  0012                     	;# 
   647  0013                     	;# 
   648  0015                     	;# 
   649  0016                     	;# 
   650  0016                     	;# 
   651  0017                     	;# 
   652  0018                     	;# 
   653  0019                     	;# 
   654  001A                     	;# 
   655  001B                     	;# 
   656  001C                     	;# 
   657  001E                     	;# 
   658  001F                     	;# 
   659  008C                     	;# 
   660  008D                     	;# 
   661  008E                     	;# 
   662  008F                     	;# 
   663  0090                     	;# 
   664  0091                     	;# 
   665  0092                     	;# 
   666  0093                     	;# 
   667  0095                     	;# 
   668  0096                     	;# 
   669  0097                     	;# 
   670  0098                     	;# 
   671  0099                     	;# 
   672  009A                     	;# 
   673  009B                     	;# 
   674  009B                     	;# 
   675  009C                     	;# 
   676  009D                     	;# 
   677  009E                     	;# 
   678  010C                     	;# 
   679  010D                     	;# 
   680  010E                     	;# 
   681  010F                     	;# 
   682  0110                     	;# 
   683  0111                     	;# 
   684  0112                     	;# 
   685  0113                     	;# 
   686  0114                     	;# 
   687  0115                     	;# 
   688  0116                     	;# 
   689  0117                     	;# 
   690  0118                     	;# 
   691  0119                     	;# 
   692  011A                     	;# 
   693  011B                     	;# 
   694  011D                     	;# 
   695  018C                     	;# 
   696  018D                     	;# 
   697  018F                     	;# 
   698  0190                     	;# 
   699  0191                     	;# 
   700  0191                     	;# 
   701  0192                     	;# 
   702  0193                     	;# 
   703  0193                     	;# 
   704  0193                     	;# 
   705  0194                     	;# 
   706  0195                     	;# 
   707  0196                     	;# 
   708  0199                     	;# 
   709  019A                     	;# 
   710  019B                     	;# 
   711  019B                     	;# 
   712  019B                     	;# 
   713  019B                     	;# 
   714  019C                     	;# 
   715  019C                     	;# 
   716  019D                     	;# 
   717  019E                     	;# 
   718  019F                     	;# 
   719  020D                     	;# 
   720  0210                     	;# 
   721  0211                     	;# 
   722  0212                     	;# 
   723  0213                     	;# 
   724  0214                     	;# 
   725  0215                     	;# 
   726  0215                     	;# 
   727  0216                     	;# 
   728  0217                     	;# 
   729  0291                     	;# 
   730  0291                     	;# 
   731  0292                     	;# 
   732  0293                     	;# 
   733  0294                     	;# 
   734  0295                     	;# 
   735  0295                     	;# 
   736  0296                     	;# 
   737  0298                     	;# 
   738  0298                     	;# 
   739  0299                     	;# 
   740  029A                     	;# 
   741  029B                     	;# 
   742  029C                     	;# 
   743  029C                     	;# 
   744  029D                     	;# 
   745  029E                     	;# 
   746  029F                     	;# 
   747  0311                     	;# 
   748  0311                     	;# 
   749  0312                     	;# 
   750  0313                     	;# 
   751  0314                     	;# 
   752  0315                     	;# 
   753  0315                     	;# 
   754  0316                     	;# 
   755  0318                     	;# 
   756  0318                     	;# 
   757  0319                     	;# 
   758  031A                     	;# 
   759  031C                     	;# 
   760  031C                     	;# 
   761  031D                     	;# 
   762  031E                     	;# 
   763  0394                     	;# 
   764  0395                     	;# 
   765  0396                     	;# 
   766  0415                     	;# 
   767  0416                     	;# 
   768  0417                     	;# 
   769  041C                     	;# 
   770  041D                     	;# 
   771  041E                     	;# 
   772  0791                     	;# 
   773  0792                     	;# 
   774  0793                     	;# 
   775  0794                     	;# 
   776  0795                     	;# 
   777  0798                     	;# 
   778  0799                     	;# 
   779  079A                     	;# 
   780  07A0                     	;# 
   781  07A1                     	;# 
   782  07A2                     	;# 
   783  07A3                     	;# 
   784  07A4                     	;# 
   785  07A5                     	;# 
   786  07A6                     	;# 
   787  07A7                     	;# 
   788  07A8                     	;# 
   789  07A9                     	;# 
   790  07AA                     	;# 
   791  07AB                     	;# 
   792  0FE4                     	;# 
   793  0FE5                     	;# 
   794  0FE6                     	;# 
   795  0FE7                     	;# 
   796  0FE8                     	;# 
   797  0FE9                     	;# 
   798  0FEA                     	;# 
   799  0FEB                     	;# 
   800  0FED                     	;# 
   801  0FEE                     	;# 
   802  0FEF                     	;# 
   803  0000                     	;# 
   804  0001                     	;# 
   805  0002                     	;# 
   806  0003                     	;# 
   807  0004                     	;# 
   808  0005                     	;# 
   809  0006                     	;# 
   810  0007                     	;# 
   811  0008                     	;# 
   812  0009                     	;# 
   813  000A                     	;# 
   814  000B                     	;# 
   815  000C                     	;# 
   816  000D                     	;# 
   817  000E                     	;# 
   818  000F                     	;# 
   819  0010                     	;# 
   820  0011                     	;# 
   821  0012                     	;# 
   822  0013                     	;# 
   823  0015                     	;# 
   824  0016                     	;# 
   825  0016                     	;# 
   826  0017                     	;# 
   827  0018                     	;# 
   828  0019                     	;# 
   829  001A                     	;# 
   830  001B                     	;# 
   831  001C                     	;# 
   832  001E                     	;# 
   833  001F                     	;# 
   834  008C                     	;# 
   835  008D                     	;# 
   836  008E                     	;# 
   837  008F                     	;# 
   838  0090                     	;# 
   839  0091                     	;# 
   840  0092                     	;# 
   841  0093                     	;# 
   842  0095                     	;# 
   843  0096                     	;# 
   844  0097                     	;# 
   845  0098                     	;# 
   846  0099                     	;# 
   847  009A                     	;# 
   848  009B                     	;# 
   849  009B                     	;# 
   850  009C                     	;# 
   851  009D                     	;# 
   852  009E                     	;# 
   853  010C                     	;# 
   854  010D                     	;# 
   855  010E                     	;# 
   856  010F                     	;# 
   857  0110                     	;# 
   858  0111                     	;# 
   859  0112                     	;# 
   860  0113                     	;# 
   861  0114                     	;# 
   862  0115                     	;# 
   863  0116                     	;# 
   864  0117                     	;# 
   865  0118                     	;# 
   866  0119                     	;# 
   867  011A                     	;# 
   868  011B                     	;# 
   869  011D                     	;# 
   870  018C                     	;# 
   871  018D                     	;# 
   872  018F                     	;# 
   873  0190                     	;# 
   874  0191                     	;# 
   875  0191                     	;# 
   876  0192                     	;# 
   877  0193                     	;# 
   878  0193                     	;# 
   879  0193                     	;# 
   880  0194                     	;# 
   881  0195                     	;# 
   882  0196                     	;# 
   883  0199                     	;# 
   884  019A                     	;# 
   885  019B                     	;# 
   886  019B                     	;# 
   887  019B                     	;# 
   888  019B                     	;# 
   889  019C                     	;# 
   890  019C                     	;# 
   891  019D                     	;# 
   892  019E                     	;# 
   893  019F                     	;# 
   894  020D                     	;# 
   895  0210                     	;# 
   896  0211                     	;# 
   897  0212                     	;# 
   898  0213                     	;# 
   899  0214                     	;# 
   900  0215                     	;# 
   901  0215                     	;# 
   902  0216                     	;# 
   903  0217                     	;# 
   904  0291                     	;# 
   905  0291                     	;# 
   906  0292                     	;# 
   907  0293                     	;# 
   908  0294                     	;# 
   909  0295                     	;# 
   910  0295                     	;# 
   911  0296                     	;# 
   912  0298                     	;# 
   913  0298                     	;# 
   914  0299                     	;# 
   915  029A                     	;# 
   916  029B                     	;# 
   917  029C                     	;# 
   918  029C                     	;# 
   919  029D                     	;# 
   920  029E                     	;# 
   921  029F                     	;# 
   922  0311                     	;# 
   923  0311                     	;# 
   924  0312                     	;# 
   925  0313                     	;# 
   926  0314                     	;# 
   927  0315                     	;# 
   928  0315                     	;# 
   929  0316                     	;# 
   930  0318                     	;# 
   931  0318                     	;# 
   932  0319                     	;# 
   933  031A                     	;# 
   934  031C                     	;# 
   935  031C                     	;# 
   936  031D                     	;# 
   937  031E                     	;# 
   938  0394                     	;# 
   939  0395                     	;# 
   940  0396                     	;# 
   941  0415                     	;# 
   942  0416                     	;# 
   943  0417                     	;# 
   944  041C                     	;# 
   945  041D                     	;# 
   946  041E                     	;# 
   947  0791                     	;# 
   948  0792                     	;# 
   949  0793                     	;# 
   950  0794                     	;# 
   951  0795                     	;# 
   952  0798                     	;# 
   953  0799                     	;# 
   954  079A                     	;# 
   955  07A0                     	;# 
   956  07A1                     	;# 
   957  07A2                     	;# 
   958  07A3                     	;# 
   959  07A4                     	;# 
   960  07A5                     	;# 
   961  07A6                     	;# 
   962  07A7                     	;# 
   963  07A8                     	;# 
   964  07A9                     	;# 
   965  07AA                     	;# 
   966  07AB                     	;# 
   967  0FE4                     	;# 
   968  0FE5                     	;# 
   969  0FE6                     	;# 
   970  0FE7                     	;# 
   971  0FE8                     	;# 
   972  0FE9                     	;# 
   973  0FEA                     	;# 
   974  0FEB                     	;# 
   975  0FED                     	;# 
   976  0FEE                     	;# 
   977  0FEF                     	;# 
   978                           
   979                           	psect	idataBANK2
   980  1D97                     __pidataBANK2:
   981                           
   982                           ;initializer for _strLCD
   983  1D97  3420               	retlw	32
   984  1D98  3400               	retlw	0
   985  1D99  3400               	retlw	0
   986  1D9A  3400               	retlw	0
   987  1D9B  3400               	retlw	0
   988  1D9C  3400               	retlw	0
   989  1D9D  3400               	retlw	0
   990  1D9E  3400               	retlw	0
   991  1D9F  3400               	retlw	0
   992  1DA0  3400               	retlw	0
   993  1DA1  3400               	retlw	0
   994  1DA2  3400               	retlw	0
   995  1DA3  3400               	retlw	0
   996  1DA4  3400               	retlw	0
   997  1DA5  3400               	retlw	0
   998  1DA6  3400               	retlw	0
   999  1DA7  3400               	retlw	0
  1000  1DA8  3400               	retlw	0
  1001  1DA9  3400               	retlw	0
  1002  1DAA  3400               	retlw	0
  1003  008F                     _TRISDbits	set	143
  1004  009B                     _ADRESL	set	155
  1005  009C                     _ADRESH	set	156
  1006  009D                     _ADCON0bits	set	157
  1007  009E                     _ADCON1bits	set	158
  1008  008C                     _TRISAbits	set	140
  1009  0098                     _OSCTUNE	set	152
  1010  0099                     _OSCCON	set	153
  1011  010F                     _LATDbits	set	271
  1012  0116                     _BORCON	set	278
  1013  018C                     _ANSELAbits	set	396
  1014                           
  1015                           	psect	stringtext1
  1016  2000                     __pstringtext1:
  1017  2000                     STR_2:
  1018  2000  344C               	retlw	76	;'L'
  1019  2001  344D               	retlw	77	;'M'
  1020  2002  3433               	retlw	51	;'3'
  1021  2003  3435               	retlw	53	;'5'
  1022  2004  343A               	retlw	58	;':'
  1023  2005  3420               	retlw	32	;' '
  1024  2006  3425               	retlw	37	;'%'
  1025  2007  3430               	retlw	48	;'0'
  1026  2008  342E               	retlw	46	;'.'
  1027  2009  3431               	retlw	49	;'1'
  1028  200A  3466               	retlw	102	;'f'
  1029  200B  3400               	retlw	0
  1030                           
  1031                           	psect	stringtext2
  1032  200C                     __pstringtext2:
  1033  200C                     STR_3:
  1034  200C  344D               	retlw	77	;'M'
  1035  200D  3443               	retlw	67	;'C'
  1036  200E  3450               	retlw	80	;'P'
  1037  200F  343A               	retlw	58	;':'
  1038  2010  3420               	retlw	32	;' '
  1039  2011  3425               	retlw	37	;'%'
  1040  2012  3430               	retlw	48	;'0'
  1041  2013  342E               	retlw	46	;'.'
  1042  2014  3431               	retlw	49	;'1'
  1043  2015  3466               	retlw	102	;'f'
  1044  2016  3400               	retlw	0
  1045                           
  1046                           	psect	stringtext3
  1047  2017                     __pstringtext3:
  1048  2017                     STR_1:
  1049  2017  344C               	retlw	76	;'L'
  1050  2018  3444               	retlw	68	;'D'
  1051  2019  3452               	retlw	82	;'R'
  1052  201A  343A               	retlw	58	;':'
  1053  201B  3420               	retlw	32	;' '
  1054  201C  3425               	retlw	37	;'%'
  1055  201D  3435               	retlw	53	;'5'
  1056  201E  342E               	retlw	46	;'.'
  1057  201F  3431               	retlw	49	;'1'
  1058  2020  3466               	retlw	102	;'f'
  1059  2021  3400               	retlw	0
  1060                           
  1061                           	psect	stringtext4
  1062  2022                     __pstringtext4:
  1063  2022                     STR_4:
  1064  2022  3449               	retlw	73	;'I'
  1065  2023  344E               	retlw	78	;'N'
  1066  2024  3446               	retlw	70	;'F'
  1067  2025  3400               	retlw	0
  1068                           
  1069                           	psect	stringtext5
  1070  2026                     __pstringtext5:
  1071  2026                     STR_8:
  1072  2026  344E               	retlw	78	;'N'
  1073  2027  3441               	retlw	65	;'A'
  1074  2028  344E               	retlw	78	;'N'
  1075  2029  3400               	retlw	0
  1076                           
  1077                           	psect	stringtext6
  1078  202A                     __pstringtext6:
  1079  202A                     STR_5:
  1080  202A  3469               	retlw	105	;'i'
  1081  202B  346E               	retlw	110	;'n'
  1082  202C  3466               	retlw	102	;'f'
  1083  202D  3400               	retlw	0
  1084                           
  1085                           	psect	stringtext7
  1086  202E                     __pstringtext7:
  1087  202E                     STR_9:
  1088  202E  346E               	retlw	110	;'n'
  1089  202F  3461               	retlw	97	;'a'
  1090  2030  346E               	retlw	110	;'n'
  1091  2031  3400               	retlw	0
  1092                           
  1093                           	psect	stringtext8
  1094  2032                     __pstringtext8:
  1095  2032                     STR_12:
  1096  2032  346C               	retlw	108	;'l'
  1097  2033  3466               	retlw	102	;'f'
  1098  2034  3400               	retlw	0
  1099                           
  1100                           	psect	stringtext9
  1101  0000                     __pstringtext9:
  1102  2032                     
  1103                           	psect	cinit
  1104  07E1                     start_initialization:	
  1105                           ; #config settings
  1106                           
  1107  07E1                     __initialization:
  1108                           
  1109                           ; Initialize objects allocated to BANK2
  1110  07E1  3097               	movlw	low __pidataBANK2
  1111  07E2  0084               	movwf	4
  1112  07E3  309D               	movlw	(high __pidataBANK2)| (0+128)
  1113  07E4  0085               	movwf	5
  1114  07E5  303E               	movlw	low __pdataBANK2
  1115  07E6  0086               	movwf	6
  1116  07E7  3001               	movlw	high __pdataBANK2
  1117  07E8  0087               	movwf	7
  1118  07E9  3014               	movlw	20
  1119  07EA  3190  2000  3187   	fcall	init_ram
  1120                           
  1121                           ; Clear objects allocated to BANK2
  1122  07ED  3020               	movlw	low __pbssBANK2
  1123  07EE  0084               	movwf	4
  1124  07EF  3001               	movlw	high __pbssBANK2
  1125  07F0  0085               	movwf	5
  1126  07F1  301E               	movlw	30
  1127  07F2  319D  2586  3187   	fcall	clear_ram0
  1128                           
  1129                           ; Clear objects allocated to BANK3
  1130  07F5  30A0               	movlw	low __pbssBANK3
  1131  07F6  0084               	movwf	4
  1132  07F7  3001               	movlw	high __pbssBANK3
  1133  07F8  0085               	movwf	5
  1134  07F9  3050               	movlw	80
  1135  07FA  319D  2586  3187   	fcall	clear_ram0
  1136  07FD                     end_of_initialization:	
  1137                           ;End of C runtime variable initialization code
  1138                           
  1139  07FD                     __end_of__initialization:
  1140  07FD  0020               	movlb	0
  1141  07FE  3194  2CEC         	ljmp	_main	;jump to C main() function
  1142                           
  1143                           	psect	bssBANK2
  1144  0120                     __pbssBANK2:
  1145  0120                     floorf@F526:
  1146  0120                     	ds	4
  1147  0124                     ___fpclassifyf@F465:
  1148  0124                     	ds	4
  1149  0128                     _ldr:
  1150  0128                     	ds	4
  1151  012C                     _mcp:
  1152  012C                     	ds	4
  1153  0130                     _lm35:
  1154  0130                     	ds	4
  1155  0134                     _nout:
  1156  0134                     	ds	2
  1157  0136                     _width:
  1158  0136                     	ds	2
  1159  0138                     _prec:
  1160  0138                     	ds	2
  1161  013A                     _flags:
  1162  013A                     	ds	2
  1163  013C                     _conver:
  1164  013C                     	ds	2
  1165                           
  1166                           	psect	dataBANK2
  1167  013E                     __pdataBANK2:
  1168  013E                     _strLCD:
  1169  013E                     	ds	20
  1170                           
  1171                           	psect	bssBANK3
  1172  01A0                     __pbssBANK3:
  1173  01A0                     _dbuf:
  1174  01A0                     	ds	80
  1175                           
  1176                           	psect	inittext
  1177  1000                     init_ram:
  1178  1000  00FE               	movwf	btemp
  1179  1001                     initloop:
  1180  1001  0012               	moviw fsr0++
  1181  1002  001E               	movwi fsr1++
  1182  1003  0BFE               	decfsz	btemp,f
  1183  1004  2801               	goto	initloop
  1184  1005  3400               	retlw	0
  1185                           
  1186                           	psect	clrtext
  1187  1D86                     clear_ram0:	
  1188                           ;	Called with FSR0 containing the base address, and
  1189                           ;	WREG with the size to clear
  1190                           
  1191  1D86  0064               	clrwdt	;clear the watchdog before getting into this loop
  1192  1D87                     clrloop0:
  1193  1D87  0180               	clrf	0	;clear RAM location pointed to by FSR
  1194  1D88  3101               	addfsr 0,1
  1195  1D89  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1196  1D8A  2D87               	goto	clrloop0	;have we reached the end yet?
  1197  1D8B  3400               	retlw	0	;all done for this memory range, return
  1198                           
  1199                           	psect	cstackBANK1
  1200  00A0                     __pcstackBANK1:
  1201  00A0                     _efgtoa$930:
  1202                           
  1203                           ; 2 bytes @ 0x0
  1204  00A0                     	ds	2
  1205  00A2                     _efgtoa$938:
  1206                           
  1207                           ; 2 bytes @ 0x2
  1208  00A2                     	ds	2
  1209  00A4                     _efgtoa$939:
  1210                           
  1211                           ; 2 bytes @ 0x4
  1212  00A4                     	ds	2
  1213  00A6                     efgtoa@t:
  1214                           
  1215                           ; 2 bytes @ 0x6
  1216  00A6                     	ds	2
  1217  00A8                     efgtoa@pp:
  1218                           
  1219                           ; 2 bytes @ 0x8
  1220  00A8                     	ds	2
  1221  00AA                     efgtoa@ne:
  1222                           
  1223                           ; 2 bytes @ 0xA
  1224  00AA                     	ds	2
  1225  00AC                     efgtoa@m:
  1226                           
  1227                           ; 2 bytes @ 0xC
  1228  00AC                     	ds	2
  1229  00AE                     efgtoa@ou:
  1230                           
  1231                           ; 4 bytes @ 0xE
  1232  00AE                     	ds	4
  1233  00B2                     efgtoa@d:
  1234                           
  1235                           ; 2 bytes @ 0x12
  1236  00B2                     	ds	2
  1237  00B4                     efgtoa@sign:
  1238                           
  1239                           ; 2 bytes @ 0x14
  1240  00B4                     	ds	2
  1241  00B6                     efgtoa@fp:
  1242                           
  1243                           ; 1 bytes @ 0x16
  1244  00B6                     	ds	1
  1245  00B7                     efgtoa@p:
  1246                           
  1247                           ; 2 bytes @ 0x17
  1248  00B7                     	ds	2
  1249  00B9                     efgtoa@w:
  1250                           
  1251                           ; 2 bytes @ 0x19
  1252  00B9                     	ds	2
  1253  00BB                     efgtoa@nmode:
  1254                           
  1255                           ; 1 bytes @ 0x1B
  1256  00BB                     	ds	1
  1257  00BC                     efgtoa@mode:
  1258                           
  1259                           ; 1 bytes @ 0x1C
  1260  00BC                     	ds	1
  1261  00BD                     efgtoa@h:
  1262                           
  1263                           ; 4 bytes @ 0x1D
  1264  00BD                     	ds	4
  1265  00C1                     efgtoa@l:
  1266                           
  1267                           ; 4 bytes @ 0x21
  1268  00C1                     	ds	4
  1269  00C5                     efgtoa@i:
  1270                           
  1271                           ; 2 bytes @ 0x25
  1272  00C5                     	ds	2
  1273  00C7                     efgtoa@g:
  1274                           
  1275                           ; 4 bytes @ 0x27
  1276  00C7                     	ds	4
  1277  00CB                     efgtoa@e:
  1278                           
  1279                           ; 2 bytes @ 0x2B
  1280  00CB                     	ds	2
  1281  00CD                     efgtoa@n:
  1282                           
  1283                           ; 2 bytes @ 0x2D
  1284  00CD                     	ds	2
  1285  00CF                     efgtoa@u:
  1286                           
  1287                           ; 4 bytes @ 0x2F
  1288  00CF                     	ds	4
  1289  00D3                     ?_vfprintf:
  1290  00D3                     vfprintf@fmt:	
  1291                           ; 2 bytes @ 0x33
  1292                           
  1293                           
  1294                           ; 2 bytes @ 0x33
  1295  00D3                     	ds	2
  1296  00D5                     vfprintf@ap:
  1297                           
  1298                           ; 1 bytes @ 0x35
  1299  00D5                     	ds	1
  1300  00D6                     ??_vfprintf:
  1301                           
  1302                           ; 1 bytes @ 0x36
  1303  00D6                     	ds	2
  1304  00D8                     vfprintf@fp:
  1305                           
  1306                           ; 1 bytes @ 0x38
  1307  00D8                     	ds	1
  1308  00D9                     vfprintf@cfmt:
  1309                           
  1310                           ; 2 bytes @ 0x39
  1311  00D9                     	ds	2
  1312  00DB                     ?_sprintf:
  1313  00DB                     sprintf@fmt:	
  1314                           ; 2 bytes @ 0x3B
  1315                           
  1316                           
  1317                           ; 2 bytes @ 0x3B
  1318  00DB                     	ds	6
  1319  00E1                     ??_sprintf:
  1320                           
  1321                           ; 1 bytes @ 0x41
  1322  00E1                     	ds	1
  1323  00E2                     sprintf@s:
  1324                           
  1325                           ; 1 bytes @ 0x42
  1326  00E2                     	ds	1
  1327  00E3                     sprintf@ap:
  1328                           
  1329                           ; 1 bytes @ 0x43
  1330  00E3                     	ds	1
  1331  00E4                     sprintf@f:
  1332                           
  1333                           ; 10 bytes @ 0x44
  1334  00E4                     	ds	10
  1335  00EE                     ??_main:
  1336                           
  1337                           ; 1 bytes @ 0x4E
  1338  00EE                     	ds	2
  1339                           
  1340                           	psect	cstackCOMMON
  1341  0070                     __pcstackCOMMON:
  1342  0070                     ?___fleq:
  1343  0070                     ?_ADC_Init:	
  1344                           ; 1 bit 
  1345                           
  1346  0070                     ??_ADC_Init:	
  1347                           ; 1 bytes @ 0x0
  1348                           
  1349  0070                     ?_LCD_Init:	
  1350                           ; 1 bytes @ 0x0
  1351                           
  1352  0070                     ?_LCD_Cmd:	
  1353                           ; 1 bytes @ 0x0
  1354                           
  1355  0070                     ?_LCD_Write_Cp:	
  1356                           ; 1 bytes @ 0x0
  1357                           
  1358  0070                     ?_strcpy:	
  1359                           ; 1 bytes @ 0x0
  1360                           
  1361  0070                     ?_putch:	
  1362                           ; 1 bytes @ 0x0
  1363                           
  1364  0070                     ??_putch:	
  1365                           ; 1 bytes @ 0x0
  1366                           
  1367  0070                     ?_main:	
  1368                           ; 1 bytes @ 0x0
  1369                           
  1370  0070                     ?_Load_Cmd:	
  1371                           ; 1 bytes @ 0x0
  1372                           
  1373  0070                     ??_Load_Cmd:	
  1374                           ; 1 bytes @ 0x0
  1375                           
  1376  0070                     ?_Load_Data:	
  1377                           ; 1 bytes @ 0x0
  1378                           
  1379  0070                     ??_Load_Data:	
  1380                           ; 1 bytes @ 0x0
  1381                           
  1382  0070                     ?_ADC_Get_Value:	
  1383                           ; 1 bytes @ 0x0
  1384                           
  1385  0070                     ?__Umul8_16:	
  1386                           ; 2 bytes @ 0x0
  1387                           
  1388  0070                     ?_fputc:	
  1389                           ; 2 bytes @ 0x0
  1390                           
  1391  0070                     ?_strlen:	
  1392                           ; 2 bytes @ 0x0
  1393                           
  1394  0070                     ?___fpclassifyf:	
  1395                           ; 2 bytes @ 0x0
  1396                           
  1397  0070                     ?_isupper:	
  1398                           ; 2 bytes @ 0x0
  1399                           
  1400  0070                     ?_isdigit:	
  1401                           ; 2 bytes @ 0x0
  1402                           
  1403  0070                     ?_strncmp:	
  1404                           ; 2 bytes @ 0x0
  1405                           
  1406  0070                     ?_isspace:	
  1407                           ; 2 bytes @ 0x0
  1408                           
  1409  0070                     ?___wmul:	
  1410                           ; 2 bytes @ 0x0
  1411                           
  1412  0070                     ?___awdiv:	
  1413                           ; 2 bytes @ 0x0
  1414                           
  1415  0070                     ?___awmod:	
  1416                           ; 2 bytes @ 0x0
  1417                           
  1418  0070                     ?___flneg:	
  1419                           ; 2 bytes @ 0x0
  1420                           
  1421  0070                     ?___fltol:	
  1422                           ; 4 bytes @ 0x0
  1423                           
  1424  0070                     ?___fldiv:	
  1425                           ; 4 bytes @ 0x0
  1426                           
  1427  0070                     ?___xxtofl:	
  1428                           ; 4 bytes @ 0x0
  1429                           
  1430  0070                     Load_Cmd@cmd:	
  1431                           ; 4 bytes @ 0x0
  1432                           
  1433  0070                     Load_Data@data:	
  1434                           ; 1 bytes @ 0x0
  1435                           
  1436  0070                     __Umul8_16@multiplicand:	
  1437                           ; 1 bytes @ 0x0
  1438                           
  1439  0070                     putch@c:	
  1440                           ; 1 bytes @ 0x0
  1441                           
  1442  0070                     ___wmul@multiplier:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445  0070                     ___awdiv@divisor:	
  1446                           ; 2 bytes @ 0x0
  1447                           
  1448  0070                     ___awmod@divisor:	
  1449                           ; 2 bytes @ 0x0
  1450                           
  1451  0070                     isdigit@c:	
  1452                           ; 2 bytes @ 0x0
  1453                           
  1454  0070                     isspace@c:	
  1455                           ; 2 bytes @ 0x0
  1456                           
  1457  0070                     isupper@c:	
  1458                           ; 2 bytes @ 0x0
  1459                           
  1460  0070                     fputc@c:	
  1461                           ; 2 bytes @ 0x0
  1462                           
  1463  0070                     strcpy@src:	
  1464                           ; 2 bytes @ 0x0
  1465                           
  1466  0070                     strncmp@_r:	
  1467                           ; 2 bytes @ 0x0
  1468                           
  1469  0070                     ___fleq@ff1:	
  1470                           ; 2 bytes @ 0x0
  1471                           
  1472  0070                     ___flneg@f1:	
  1473                           ; 4 bytes @ 0x0
  1474                           
  1475  0070                     ___fltol@f1:	
  1476                           ; 4 bytes @ 0x0
  1477                           
  1478  0070                     ___fldiv@a:	
  1479                           ; 4 bytes @ 0x0
  1480                           
  1481  0070                     ___xxtofl@val:	
  1482                           ; 4 bytes @ 0x0
  1483                           
  1484  0070                     ___fpclassifyf@x:	
  1485                           ; 4 bytes @ 0x0
  1486                           
  1487                           
  1488                           ; 4 bytes @ 0x0
  1489  0070                     	ds	1
  1490  0071                     ??_LCD_Init:
  1491  0071                     ??_LCD_Cmd:	
  1492                           ; 1 bytes @ 0x1
  1493                           
  1494  0071                     ??_LCD_Write_Cp:	
  1495                           ; 1 bytes @ 0x1
  1496                           
  1497                           
  1498                           ; 1 bytes @ 0x1
  1499  0071                     	ds	1
  1500  0072                     ??_ADC_Get_Value:
  1501  0072                     ??__Umul8_16:	
  1502                           ; 1 bytes @ 0x2
  1503                           
  1504  0072                     ??_strlen:	
  1505                           ; 1 bytes @ 0x2
  1506                           
  1507  0072                     ??_isupper:	
  1508                           ; 1 bytes @ 0x2
  1509                           
  1510  0072                     ??_strcpy:	
  1511                           ; 1 bytes @ 0x2
  1512                           
  1513  0072                     ??_isdigit:	
  1514                           ; 1 bytes @ 0x2
  1515                           
  1516  0072                     ??_isspace:	
  1517                           ; 1 bytes @ 0x2
  1518                           
  1519  0072                     fputc@fp:	
  1520                           ; 1 bytes @ 0x2
  1521                           
  1522  0072                     ___wmul@multiplicand:	
  1523                           ; 1 bytes @ 0x2
  1524                           
  1525  0072                     ___awdiv@dividend:	
  1526                           ; 2 bytes @ 0x2
  1527                           
  1528  0072                     ___awmod@dividend:	
  1529                           ; 2 bytes @ 0x2
  1530                           
  1531  0072                     strncmp@n:	
  1532                           ; 2 bytes @ 0x2
  1533                           
  1534                           
  1535                           ; 2 bytes @ 0x2
  1536  0072                     	ds	1
  1537  0073                     ??_fputc:
  1538  0073                     ADC_Get_Value@ch:	
  1539                           ; 1 bytes @ 0x3
  1540                           
  1541  0073                     LCD_Cmd@NibbleH:	
  1542                           ; 1 bytes @ 0x3
  1543                           
  1544  0073                     LCD_Write_Cp@NibbleH:	
  1545                           ; 1 bytes @ 0x3
  1546                           
  1547  0073                     strlen@a:	
  1548                           ; 1 bytes @ 0x3
  1549                           
  1550                           
  1551                           ; 1 bytes @ 0x3
  1552  0073                     	ds	1
  1553  0074                     ??___fpclassifyf:
  1554  0074                     ??_strncmp:	
  1555                           ; 1 bytes @ 0x4
  1556                           
  1557  0074                     ??___wmul:	
  1558                           ; 1 bytes @ 0x4
  1559                           
  1560  0074                     ??___awdiv:	
  1561                           ; 1 bytes @ 0x4
  1562                           
  1563  0074                     ??___awmod:	
  1564                           ; 1 bytes @ 0x4
  1565                           
  1566  0074                     ??___flneg:	
  1567                           ; 1 bytes @ 0x4
  1568                           
  1569  0074                     ??___fltol:	
  1570                           ; 1 bytes @ 0x4
  1571                           
  1572  0074                     ??___xxtofl:	
  1573                           ; 1 bytes @ 0x4
  1574                           
  1575  0074                     LCD_Cmd@NibbleL:	
  1576                           ; 1 bytes @ 0x4
  1577                           
  1578  0074                     LCD_Write_Cp@NibbleL:	
  1579                           ; 1 bytes @ 0x4
  1580                           
  1581  0074                     _isspace$1017:	
  1582                           ; 1 bytes @ 0x4
  1583                           
  1584  0074                     strlen@s:	
  1585                           ; 1 bytes @ 0x4
  1586                           
  1587  0074                     ___wmul@product:	
  1588                           ; 1 bytes @ 0x4
  1589                           
  1590  0074                     __Umul8_16@product:	
  1591                           ; 2 bytes @ 0x4
  1592                           
  1593  0074                     strcpy@s:	
  1594                           ; 2 bytes @ 0x4
  1595                           
  1596  0074                     ___fleq@ff2:	
  1597                           ; 2 bytes @ 0x4
  1598                           
  1599  0074                     ___fldiv@b:	
  1600                           ; 4 bytes @ 0x4
  1601                           
  1602                           
  1603                           ; 4 bytes @ 0x4
  1604  0074                     	ds	1
  1605  0075                     LCD_Cmd@cmd:
  1606  0075                     LCD_Write_Cp@letra:	
  1607                           ; 1 bytes @ 0x5
  1608                           
  1609  0075                     ___awdiv@counter:	
  1610                           ; 1 bytes @ 0x5
  1611                           
  1612  0075                     ___awmod@counter:	
  1613                           ; 1 bytes @ 0x5
  1614                           
  1615  0075                     strncmp@_l:	
  1616                           ; 1 bytes @ 0x5
  1617                           
  1618                           
  1619                           ; 1 bytes @ 0x5
  1620  0075                     	ds	1
  1621  0076                     ?_LCD_Set_Cursor:
  1622  0076                     ?_tolower:	
  1623                           ; 1 bytes @ 0x6
  1624                           
  1625  0076                     ?_atoi:	
  1626                           ; 2 bytes @ 0x6
  1627                           
  1628  0076                     LCD_Set_Cursor@col:	
  1629                           ; 2 bytes @ 0x6
  1630                           
  1631  0076                     ___awdiv@sign:	
  1632                           ; 1 bytes @ 0x6
  1633                           
  1634  0076                     ___awmod@sign:	
  1635                           ; 1 bytes @ 0x6
  1636                           
  1637  0076                     strcpy@d:	
  1638                           ; 1 bytes @ 0x6
  1639                           
  1640  0076                     __Umul8_16@word_mpld:	
  1641                           ; 1 bytes @ 0x6
  1642                           
  1643  0076                     atoi@s:	
  1644                           ; 2 bytes @ 0x6
  1645                           
  1646  0076                     strncmp@r:	
  1647                           ; 2 bytes @ 0x6
  1648                           
  1649  0076                     tolower@c:	
  1650                           ; 2 bytes @ 0x6
  1651                           
  1652                           
  1653                           ; 2 bytes @ 0x6
  1654  0076                     	ds	1
  1655  0077                     ??_LCD_Set_Cursor:
  1656  0077                     strcpy@dest:	
  1657                           ; 1 bytes @ 0x7
  1658                           
  1659  0077                     ___awdiv@quotient:	
  1660                           ; 1 bytes @ 0x7
  1661                           
  1662                           
  1663                           ; 2 bytes @ 0x7
  1664  0077                     	ds	1
  1665  0078                     ??_tolower:
  1666  0078                     ??_atoi:	
  1667                           ; 1 bytes @ 0x8
  1668                           
  1669  0078                     ??___fleq:	
  1670                           ; 1 bytes @ 0x8
  1671                           
  1672  0078                     ??___fldiv:	
  1673                           ; 1 bytes @ 0x8
  1674                           
  1675  0078                     ?_fputs:	
  1676                           ; 1 bytes @ 0x8
  1677                           
  1678  0078                     __Umul8_16@multiplier:	
  1679                           ; 2 bytes @ 0x8
  1680                           
  1681  0078                     ___xxtofl@sign:	
  1682                           ; 1 bytes @ 0x8
  1683                           
  1684  0078                     fputs@fp:	
  1685                           ; 1 bytes @ 0x8
  1686                           
  1687  0078                     strncmp@l:	
  1688                           ; 1 bytes @ 0x8
  1689                           
  1690                           
  1691                           ; 1 bytes @ 0x8
  1692  0078                     	ds	1
  1693  0079                     ??_fputs:
  1694  0079                     LCD_Set_Cursor@fila:	
  1695                           ; 1 bytes @ 0x9
  1696                           
  1697  0079                     ___fltol@sign1:	
  1698                           ; 1 bytes @ 0x9
  1699                           
  1700  0079                     ___xxtofl@exp:	
  1701                           ; 1 bytes @ 0x9
  1702                           
  1703                           
  1704                           ; 1 bytes @ 0x9
  1705  0079                     	ds	1
  1706  007A                     LCD_Set_Cursor@pos:
  1707  007A                     ___fltol@exp1:	
  1708                           ; 1 bytes @ 0xA
  1709                           
  1710  007A                     ___xxtofl@arg:	
  1711                           ; 1 bytes @ 0xA
  1712                           
  1713                           
  1714                           ; 4 bytes @ 0xA
  1715  007A                     	ds	1
  1716  007B                     ?_LCD_Write_Text:
  1717  007B                     LCD_Write_Text@col:	
  1718                           ; 1 bytes @ 0xB
  1719                           
  1720                           
  1721                           ; 1 bytes @ 0xB
  1722  007B                     	ds	1
  1723  007C                     ??_pad:
  1724  007C                     LCD_Write_Text@text:	
  1725                           ; 1 bytes @ 0xC
  1726                           
  1727                           
  1728                           ; 1 bytes @ 0xC
  1729  007C                     	ds	1
  1730  007D                     ??_LCD_Write_Text:
  1731                           
  1732                           ; 1 bytes @ 0xD
  1733  007D                     	ds	1
  1734  007E                     ??___flsub:
  1735                           
  1736                           	psect	cstackBANK0
  1737  0020                     __pcstackBANK0:	
  1738                           ; 1 bytes @ 0xE
  1739                           
  1740  0020                     ?___flmul:
  1741  0020                     LCD_Write_Text@fila:	
  1742                           ; 4 bytes @ 0x0
  1743                           
  1744  0020                     fputs@c:	
  1745                           ; 1 bytes @ 0x0
  1746                           
  1747  0020                     ___fpclassifyf@e:	
  1748                           ; 1 bytes @ 0x0
  1749                           
  1750  0020                     atoi@neg:	
  1751                           ; 2 bytes @ 0x0
  1752                           
  1753  0020                     ___fldiv@rem:	
  1754                           ; 2 bytes @ 0x0
  1755                           
  1756  0020                     ___flmul@b:	
  1757                           ; 4 bytes @ 0x0
  1758                           
  1759                           
  1760                           ; 4 bytes @ 0x0
  1761  0020                     	ds	1
  1762  0021                     fputs@i:
  1763                           
  1764                           ; 2 bytes @ 0x1
  1765  0021                     	ds	1
  1766  0022                     atoi@n:
  1767  0022                     ___fpclassifyf@u:	
  1768                           ; 2 bytes @ 0x2
  1769                           
  1770                           
  1771                           ; 4 bytes @ 0x2
  1772  0022                     	ds	1
  1773  0023                     fputs@s:
  1774                           
  1775                           ; 1 bytes @ 0x3
  1776  0023                     	ds	1
  1777  0024                     ?_pad:
  1778  0024                     ___fldiv@sign:	
  1779                           ; 2 bytes @ 0x4
  1780                           
  1781  0024                     pad@buf:	
  1782                           ; 1 bytes @ 0x4
  1783                           
  1784  0024                     ___flmul@a:	
  1785                           ; 1 bytes @ 0x4
  1786                           
  1787                           
  1788                           ; 4 bytes @ 0x4
  1789  0024                     	ds	1
  1790  0025                     ___fldiv@new_exp:
  1791  0025                     pad@p:	
  1792                           ; 2 bytes @ 0x5
  1793                           
  1794                           
  1795                           ; 2 bytes @ 0x5
  1796  0025                     	ds	2
  1797  0027                     pad@i:
  1798  0027                     ___fldiv@grs:	
  1799                           ; 2 bytes @ 0x7
  1800                           
  1801                           
  1802                           ; 4 bytes @ 0x7
  1803  0027                     	ds	1
  1804  0028                     ??___flmul:
  1805                           
  1806                           ; 1 bytes @ 0x8
  1807  0028                     	ds	1
  1808  0029                     pad@w:
  1809                           
  1810                           ; 2 bytes @ 0x9
  1811  0029                     	ds	2
  1812  002B                     ___fldiv@bexp:
  1813  002B                     pad@fp:	
  1814                           ; 1 bytes @ 0xB
  1815                           
  1816                           
  1817                           ; 1 bytes @ 0xB
  1818  002B                     	ds	1
  1819  002C                     ___fldiv@aexp:
  1820                           
  1821                           ; 1 bytes @ 0xC
  1822  002C                     	ds	1
  1823  002D                     ?_floorf:
  1824  002D                     ___flmul@sign:	
  1825                           ; 4 bytes @ 0xD
  1826                           
  1827  002D                     floorf@x:	
  1828                           ; 1 bytes @ 0xD
  1829                           
  1830                           
  1831                           ; 4 bytes @ 0xD
  1832  002D                     	ds	1
  1833  002E                     ___flmul@grs:
  1834                           
  1835                           ; 4 bytes @ 0xE
  1836  002E                     	ds	3
  1837  0031                     ??_floorf:
  1838                           
  1839                           ; 1 bytes @ 0x11
  1840  0031                     	ds	1
  1841  0032                     ___flmul@aexp:
  1842                           
  1843                           ; 1 bytes @ 0x12
  1844  0032                     	ds	1
  1845  0033                     ___flmul@bexp:
  1846                           
  1847                           ; 1 bytes @ 0x13
  1848  0033                     	ds	1
  1849  0034                     ___flmul@prod:
  1850                           
  1851                           ; 4 bytes @ 0x14
  1852  0034                     	ds	3
  1853  0037                     floorf@m:
  1854                           
  1855                           ; 4 bytes @ 0x17
  1856  0037                     	ds	1
  1857  0038                     ___flmul@temp:
  1858                           
  1859                           ; 2 bytes @ 0x18
  1860  0038                     	ds	2
  1861  003A                     ?___flge:
  1862  003A                     ?___fladd:	
  1863                           ; 1 bit 
  1864                           
  1865  003A                     ___flge@ff1:	
  1866                           ; 4 bytes @ 0x1A
  1867                           
  1868  003A                     ___fladd@b:	
  1869                           ; 4 bytes @ 0x1A
  1870                           
  1871                           
  1872                           ; 4 bytes @ 0x1A
  1873  003A                     	ds	1
  1874  003B                     floorf@e:
  1875                           
  1876                           ; 2 bytes @ 0x1B
  1877  003B                     	ds	2
  1878  003D                     floorf@u:
  1879                           
  1880                           ; 4 bytes @ 0x1D
  1881  003D                     	ds	1
  1882  003E                     ___flge@ff2:
  1883  003E                     ___fladd@a:	
  1884                           ; 4 bytes @ 0x1E
  1885                           
  1886                           
  1887                           ; 4 bytes @ 0x1E
  1888  003E                     	ds	4
  1889  0042                     ??___flge:
  1890  0042                     ??___fladd:	
  1891                           ; 1 bytes @ 0x22
  1892                           
  1893                           
  1894                           ; 1 bytes @ 0x22
  1895  0042                     	ds	8
  1896  004A                     ___fladd@signs:
  1897                           
  1898                           ; 1 bytes @ 0x2A
  1899  004A                     	ds	1
  1900  004B                     ___fladd@aexp:
  1901                           
  1902                           ; 1 bytes @ 0x2B
  1903  004B                     	ds	1
  1904  004C                     ___fladd@bexp:
  1905                           
  1906                           ; 1 bytes @ 0x2C
  1907  004C                     	ds	1
  1908  004D                     ___fladd@grs:
  1909                           
  1910                           ; 1 bytes @ 0x2D
  1911  004D                     	ds	1
  1912  004E                     ?___flsub:
  1913  004E                     ___flsub@a:	
  1914                           ; 4 bytes @ 0x2E
  1915                           
  1916                           
  1917                           ; 4 bytes @ 0x2E
  1918  004E                     	ds	4
  1919  0052                     ___flsub@b:
  1920                           
  1921                           ; 4 bytes @ 0x32
  1922  0052                     	ds	4
  1923  0056                     ?_efgtoa:
  1924  0056                     efgtoa@f:	
  1925                           ; 2 bytes @ 0x36
  1926                           
  1927                           
  1928                           ; 4 bytes @ 0x36
  1929  0056                     	ds	4
  1930  005A                     efgtoa@c:
  1931                           
  1932                           ; 1 bytes @ 0x3A
  1933  005A                     	ds	1
  1934  005B                     ??_efgtoa:
  1935                           
  1936                           ; 1 bytes @ 0x3B
  1937  005B                     	ds	3
  1938  005E                     ?_vfpfcnvrt:
  1939  005E                     vfpfcnvrt@fmt:	
  1940                           ; 2 bytes @ 0x3E
  1941                           
  1942                           
  1943                           ; 1 bytes @ 0x3E
  1944  005E                     	ds	1
  1945  005F                     vfpfcnvrt@ap:
  1946                           
  1947                           ; 1 bytes @ 0x3F
  1948  005F                     	ds	1
  1949  0060                     ??_vfpfcnvrt:
  1950                           
  1951                           ; 1 bytes @ 0x40
  1952  0060                     	ds	5
  1953  0065                     vfpfcnvrt@done:
  1954                           
  1955                           ; 2 bytes @ 0x45
  1956  0065                     	ds	2
  1957  0067                     vfpfcnvrt@f:
  1958                           
  1959                           ; 4 bytes @ 0x47
  1960  0067                     	ds	4
  1961  006B                     vfpfcnvrt@ct:
  1962                           
  1963                           ; 3 bytes @ 0x4B
  1964  006B                     	ds	3
  1965  006E                     vfpfcnvrt@c:
  1966                           
  1967                           ; 1 bytes @ 0x4E
  1968  006E                     	ds	1
  1969  006F                     vfpfcnvrt@fp:
  1970                           
  1971                           ; 1 bytes @ 0x4F
  1972  006F                     	ds	1
  1973                           
  1974                           	psect	maintext
  1975  14EC                     __pmaintext:	
  1976 ;;
  1977 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1978 ;;
  1979 ;; *************** function _main *****************
  1980 ;; Defined at:
  1981 ;;		line 12 in file "main.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;		None
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;		None
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  1    wreg      void 
  1988 ;; Registers used:
  1989 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1990 ;; Tracked objects:
  1991 ;;		On entry : B1F/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1997 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1998 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1999 ;;Total ram usage:        2 bytes
  2000 ;; Hardware stack levels required when called: 8
  2001 ;; This function calls:
  2002 ;;		_ADC_Get_Value
  2003 ;;		_ADC_Init
  2004 ;;		_LCD_Cmd
  2005 ;;		_LCD_Init
  2006 ;;		_LCD_Write_Cp
  2007 ;;		_LCD_Write_Text
  2008 ;;		___fladd
  2009 ;;		___flmul
  2010 ;;		___xxtofl
  2011 ;;		_sprintf
  2012 ;; This function is called by:
  2013 ;;		Startup code after reset
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017  14EC                     _main:	
  2018                           ;psect for function _main
  2019                           
  2020  14EC                     l4171:	
  2021                           ;incstack = 0
  2022                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2023                           
  2024                           
  2025                           ;main.c: 14:     OSCCON = 0x38;
  2026  14EC  3038               	movlw	56
  2027  14ED  0021               	movlb	1	; select bank1
  2028  14EE  0099               	movwf	25	;volatile
  2029  14EF                     l4173:
  2030                           
  2031                           ;main.c: 16:     OSCTUNE = 0x00;
  2032  14EF  0198               	clrf	24	;volatile
  2033  14F0                     l4175:
  2034                           
  2035                           ;main.c: 17:     BORCON = 0x00;
  2036  14F0  0022               	movlb	2	; select bank2
  2037  14F1  0196               	clrf	22	;volatile
  2038  14F2                     l4177:
  2039                           
  2040                           ;main.c: 19:     ANSELAbits.ANSA0 = 1;
  2041  14F2  0023               	movlb	3	; select bank3
  2042  14F3  140C               	bsf	12,0	;volatile
  2043  14F4                     l4179:
  2044                           
  2045                           ;main.c: 20:     ANSELAbits.ANSA1 = 1;
  2046  14F4  148C               	bsf	12,1	;volatile
  2047  14F5                     l4181:
  2048                           
  2049                           ;main.c: 21:     ANSELAbits.ANSA2 = 1;
  2050  14F5  150C               	bsf	12,2	;volatile
  2051  14F6                     l4183:
  2052                           
  2053                           ;main.c: 23:     TRISAbits.TRISA0 = 1;
  2054  14F6  0021               	movlb	1	; select bank1
  2055  14F7  140C               	bsf	12,0	;volatile
  2056  14F8                     l4185:
  2057                           
  2058                           ;main.c: 24:     TRISAbits.TRISA1 = 1;
  2059  14F8  148C               	bsf	12,1	;volatile
  2060  14F9                     l4187:
  2061                           
  2062                           ;main.c: 25:     TRISAbits.TRISA2 = 1;
  2063  14F9  150C               	bsf	12,2	;volatile
  2064  14FA                     l4189:
  2065                           
  2066                           ;main.c: 27:     ADC_Init();
  2067  14FA  319D  258C  3194   	fcall	_ADC_Init
  2068  14FD                     l4191:
  2069                           
  2070                           ;main.c: 28:     LCD_Init();
  2071  14FD  3190  207D  3194   	fcall	_LCD_Init
  2072  1500                     l4193:
  2073                           
  2074                           ;main.c: 29:     LCD_Cmd(12);
  2075  1500  300C               	movlw	12
  2076  1501  319E  265A  3194   	fcall	_LCD_Cmd
  2077  1504                     l4195:
  2078                           
  2079                           ;main.c: 32:         conver = ADC_Get_Value(2);
  2080  1504  3002               	movlw	2
  2081  1505  319D  25AB  3194   	fcall	_ADC_Get_Value
  2082  1508  0871               	movf	?_ADC_Get_Value+1,w
  2083  1509  0022               	movlb	2	; select bank2
  2084  150A  00BD               	movwf	(_conver+1)^(0+256)
  2085  150B  0870               	movf	?_ADC_Get_Value,w
  2086  150C  00BC               	movwf	_conver^(0+256)
  2087  150D                     l4197:
  2088                           
  2089                           ;main.c: 33:         ldr = (100.0/1023.0)*conver;
  2090  150D  303D               	movlw	61
  2091  150E  0020               	movlb	0	; select bank0
  2092  150F  00A3               	movwf	___flmul@b+3
  2093  1510  30C8               	movlw	200
  2094  1511  00A2               	movwf	___flmul@b+2
  2095  1512  3032               	movlw	50
  2096  1513  00A1               	movwf	___flmul@b+1
  2097  1514  300D               	movlw	13
  2098  1515  00A0               	movwf	___flmul@b
  2099  1516  0022               	movlb	2	; select bank2
  2100  1517  083C               	movf	_conver^(0+256),w
  2101  1518  00F0               	movwf	___xxtofl@val
  2102  1519  083D               	movf	(_conver+1)^(0+256),w
  2103  151A  00F1               	movwf	___xxtofl@val+1
  2104  151B  0D89               	rlf	9,f
  2105  151C  3B89               	subwfb	9,f
  2106  151D  0989               	comf	9,f
  2107  151E  00F2               	movwf	___xxtofl@val+2
  2108  151F  00F3               	movwf	___xxtofl@val+3
  2109  1520  3001               	movlw	1
  2110  1521  3180  2007  3194   	fcall	___xxtofl
  2111  1524  0873               	movf	?___xxtofl+3,w
  2112  1525  0020               	movlb	0	; select bank0
  2113  1526  00A7               	movwf	___flmul@a+3
  2114  1527  0872               	movf	?___xxtofl+2,w
  2115  1528  00A6               	movwf	___flmul@a+2
  2116  1529  0871               	movf	?___xxtofl+1,w
  2117  152A  00A5               	movwf	___flmul@a+1
  2118  152B  0870               	movf	?___xxtofl,w
  2119  152C  00A4               	movwf	___flmul@a
  2120  152D  318A  22D7  3194   	fcall	___flmul
  2121  1530  0020               	movlb	0	; select bank0
  2122  1531  0823               	movf	?___flmul+3,w
  2123  1532  0022               	movlb	2	; select bank2
  2124  1533  00AB               	movwf	(_ldr+3)^(0+256)
  2125  1534  0020               	movlb	0	; select bank0
  2126  1535  0822               	movf	?___flmul+2,w
  2127  1536  0022               	movlb	2	; select bank2
  2128  1537  00AA               	movwf	(_ldr+2)^(0+256)
  2129  1538  0020               	movlb	0	; select bank0
  2130  1539  0821               	movf	?___flmul+1,w
  2131  153A  0022               	movlb	2	; select bank2
  2132  153B  00A9               	movwf	(_ldr+1)^(0+256)
  2133  153C  0020               	movlb	0	; select bank0
  2134  153D  0820               	movf	?___flmul,w
  2135  153E  0022               	movlb	2	; select bank2
  2136  153F  00A8               	movwf	_ldr^(0+256)
  2137  1540                     l4199:
  2138                           
  2139                           ;main.c: 34:         sprintf(strLCD,"LDR: %5.1f", ldr);
  2140  1540  3017               	movlw	low (STR_1| (0+32768))
  2141  1541  0021               	movlb	1	; select bank1
  2142  1542  00DB               	movwf	sprintf@fmt^(0+128)
  2143  1543  30A0               	movlw	high (STR_1| (0+32768))
  2144  1544  00DC               	movwf	(sprintf@fmt^(0+128)+1)
  2145  1545  0022               	movlb	2	; select bank2
  2146  1546  082B               	movf	(_ldr+3)^(0+256),w
  2147  1547  0021               	movlb	1	; select bank1
  2148  1548  00E0               	movwf	((?_sprintf+3)^(0+128)+2)
  2149  1549  0022               	movlb	2	; select bank2
  2150  154A  082A               	movf	(_ldr+2)^(0+256),w
  2151  154B  0021               	movlb	1	; select bank1
  2152  154C  00DF               	movwf	((?_sprintf+2)^(0+128)+2)
  2153  154D  0022               	movlb	2	; select bank2
  2154  154E  0829               	movf	(_ldr+1)^(0+256),w
  2155  154F  0021               	movlb	1	; select bank1
  2156  1550  00DE               	movwf	((?_sprintf+1)^(0+128)+2)
  2157  1551  0022               	movlb	2	; select bank2
  2158  1552  0828               	movf	_ldr^(0+256),w
  2159  1553  0021               	movlb	1	; select bank1
  2160  1554  00DD               	movwf	(?_sprintf^(0+128)+2)
  2161  1555  303E               	movlw	(low (_strLCD| (0+256)))& (0+255)
  2162  1556  319F  2720  3194   	fcall	_sprintf
  2163  1559                     l4201:
  2164                           
  2165                           ;main.c: 35:         LCD_Write_Text(3,1,strLCD);
  2166  1559  01FB               	clrf	LCD_Write_Text@col
  2167  155A  0AFB               	incf	LCD_Write_Text@col,f
  2168  155B  303E               	movlw	(low (_strLCD| (0+256)))& (0+255)
  2169  155C  0021               	movlb	1	; select bank1
  2170  155D  00EE               	movwf	??_main^(0+128)
  2171  155E  086E               	movf	??_main^(0+128),w
  2172  155F  00FC               	movwf	LCD_Write_Text@text
  2173  1560  3003               	movlw	3
  2174  1561  319E  269A  3194   	fcall	_LCD_Write_Text
  2175  1564                     l4203:
  2176                           
  2177                           ;main.c: 36:         LCD_Write_Cp('%');
  2178  1564  3025               	movlw	37
  2179  1565  319E  2608  3194   	fcall	_LCD_Write_Cp
  2180  1568                     l4205:
  2181                           
  2182                           ;main.c: 38:         conver = ADC_Get_Value(1);
  2183  1568  3001               	movlw	1
  2184  1569  319D  25AB  3194   	fcall	_ADC_Get_Value
  2185  156C  0871               	movf	?_ADC_Get_Value+1,w
  2186  156D  0022               	movlb	2	; select bank2
  2187  156E  00BD               	movwf	(_conver+1)^(0+256)
  2188  156F  0870               	movf	?_ADC_Get_Value,w
  2189  1570  00BC               	movwf	_conver^(0+256)
  2190  1571                     l4207:
  2191                           
  2192                           ;main.c: 39:         lm35 = (150.0/307.0)*conver;
  2193  1571  303E               	movlw	62
  2194  1572  0020               	movlb	0	; select bank0
  2195  1573  00A3               	movwf	___flmul@b+3
  2196  1574  30FA               	movlw	250
  2197  1575  00A2               	movwf	___flmul@b+2
  2198  1576  3029               	movlw	41
  2199  1577  00A1               	movwf	___flmul@b+1
  2200  1578  30B2               	movlw	178
  2201  1579  00A0               	movwf	___flmul@b
  2202  157A  0022               	movlb	2	; select bank2
  2203  157B  083C               	movf	_conver^(0+256),w
  2204  157C  00F0               	movwf	___xxtofl@val
  2205  157D  083D               	movf	(_conver+1)^(0+256),w
  2206  157E  00F1               	movwf	___xxtofl@val+1
  2207  157F  0D89               	rlf	9,f
  2208  1580  3B89               	subwfb	9,f
  2209  1581  0989               	comf	9,f
  2210  1582  00F2               	movwf	___xxtofl@val+2
  2211  1583  00F3               	movwf	___xxtofl@val+3
  2212  1584  3001               	movlw	1
  2213  1585  3180  2007  3194   	fcall	___xxtofl
  2214  1588  0873               	movf	?___xxtofl+3,w
  2215  1589  0020               	movlb	0	; select bank0
  2216  158A  00A7               	movwf	___flmul@a+3
  2217  158B  0872               	movf	?___xxtofl+2,w
  2218  158C  00A6               	movwf	___flmul@a+2
  2219  158D  0871               	movf	?___xxtofl+1,w
  2220  158E  00A5               	movwf	___flmul@a+1
  2221  158F  0870               	movf	?___xxtofl,w
  2222  1590  00A4               	movwf	___flmul@a
  2223  1591  318A  22D7  3194   	fcall	___flmul
  2224  1594  0020               	movlb	0	; select bank0
  2225  1595  0823               	movf	?___flmul+3,w
  2226  1596  0022               	movlb	2	; select bank2
  2227  1597  00B3               	movwf	(_lm35+3)^(0+256)
  2228  1598  0020               	movlb	0	; select bank0
  2229  1599  0822               	movf	?___flmul+2,w
  2230  159A  0022               	movlb	2	; select bank2
  2231  159B  00B2               	movwf	(_lm35+2)^(0+256)
  2232  159C  0020               	movlb	0	; select bank0
  2233  159D  0821               	movf	?___flmul+1,w
  2234  159E  0022               	movlb	2	; select bank2
  2235  159F  00B1               	movwf	(_lm35+1)^(0+256)
  2236  15A0  0020               	movlb	0	; select bank0
  2237  15A1  0820               	movf	?___flmul,w
  2238  15A2  0022               	movlb	2	; select bank2
  2239  15A3  00B0               	movwf	_lm35^(0+256)
  2240  15A4                     l4209:
  2241                           
  2242                           ;main.c: 41:         sprintf(strLCD,"LM35: %0.1f", lm35);
  2243  15A4  3000               	movlw	low (STR_2| (0+32768))
  2244  15A5  0021               	movlb	1	; select bank1
  2245  15A6  00DB               	movwf	sprintf@fmt^(0+128)
  2246  15A7  30A0               	movlw	high (STR_2| (0+32768))
  2247  15A8  00DC               	movwf	(sprintf@fmt^(0+128)+1)
  2248  15A9  0022               	movlb	2	; select bank2
  2249  15AA  0833               	movf	(_lm35+3)^(0+256),w
  2250  15AB  0021               	movlb	1	; select bank1
  2251  15AC  00E0               	movwf	((?_sprintf+3)^(0+128)+2)
  2252  15AD  0022               	movlb	2	; select bank2
  2253  15AE  0832               	movf	(_lm35+2)^(0+256),w
  2254  15AF  0021               	movlb	1	; select bank1
  2255  15B0  00DF               	movwf	((?_sprintf+2)^(0+128)+2)
  2256  15B1  0022               	movlb	2	; select bank2
  2257  15B2  0831               	movf	(_lm35+1)^(0+256),w
  2258  15B3  0021               	movlb	1	; select bank1
  2259  15B4  00DE               	movwf	((?_sprintf+1)^(0+128)+2)
  2260  15B5  0022               	movlb	2	; select bank2
  2261  15B6  0830               	movf	_lm35^(0+256),w
  2262  15B7  0021               	movlb	1	; select bank1
  2263  15B8  00DD               	movwf	(?_sprintf^(0+128)+2)
  2264  15B9  303E               	movlw	(low (_strLCD| (0+256)))& (0+255)
  2265  15BA  319F  2720  3194   	fcall	_sprintf
  2266  15BD                     l4211:
  2267                           
  2268                           ;main.c: 42:         LCD_Write_Text(1,1,strLCD);
  2269  15BD  01FB               	clrf	LCD_Write_Text@col
  2270  15BE  0AFB               	incf	LCD_Write_Text@col,f
  2271  15BF  303E               	movlw	(low (_strLCD| (0+256)))& (0+255)
  2272  15C0  0021               	movlb	1	; select bank1
  2273  15C1  00EE               	movwf	??_main^(0+128)
  2274  15C2  086E               	movf	??_main^(0+128),w
  2275  15C3  00FC               	movwf	LCD_Write_Text@text
  2276  15C4  3001               	movlw	1
  2277  15C5  319E  269A  3194   	fcall	_LCD_Write_Text
  2278  15C8                     l4213:
  2279                           
  2280                           ;main.c: 44:         conver = ADC_Get_Value(0);
  2281  15C8  3000               	movlw	0
  2282  15C9  319D  25AB  3194   	fcall	_ADC_Get_Value
  2283  15CC  0871               	movf	?_ADC_Get_Value+1,w
  2284  15CD  0022               	movlb	2	; select bank2
  2285  15CE  00BD               	movwf	(_conver+1)^(0+256)
  2286  15CF  0870               	movf	?_ADC_Get_Value,w
  2287  15D0  00BC               	movwf	_conver^(0+256)
  2288  15D1                     l4215:
  2289                           
  2290                           ;main.c: 45:         mcp = (165.0/337.59)*conver-50.0;
  2291  15D1  30C2               	movlw	194
  2292  15D2  0020               	movlb	0	; select bank0
  2293  15D3  00BD               	movwf	___fladd@b+3
  2294  15D4  3048               	movlw	72
  2295  15D5  00BC               	movwf	___fladd@b+2
  2296  15D6  3000               	movlw	0
  2297  15D7  00BB               	movwf	___fladd@b+1
  2298  15D8  3000               	movlw	0
  2299  15D9  00BA               	movwf	___fladd@b
  2300  15DA  303E               	movlw	62
  2301  15DB  00A3               	movwf	___flmul@b+3
  2302  15DC  30FA               	movlw	250
  2303  15DD  00A2               	movwf	___flmul@b+2
  2304  15DE  303E               	movlw	62
  2305  15DF  00A1               	movwf	___flmul@b+1
  2306  15E0  3090               	movlw	144
  2307  15E1  00A0               	movwf	___flmul@b
  2308  15E2  0022               	movlb	2	; select bank2
  2309  15E3  083C               	movf	_conver^(0+256),w
  2310  15E4  00F0               	movwf	___xxtofl@val
  2311  15E5  083D               	movf	(_conver+1)^(0+256),w
  2312  15E6  00F1               	movwf	___xxtofl@val+1
  2313  15E7  0D89               	rlf	9,f
  2314  15E8  3B89               	subwfb	9,f
  2315  15E9  0989               	comf	9,f
  2316  15EA  00F2               	movwf	___xxtofl@val+2
  2317  15EB  00F3               	movwf	___xxtofl@val+3
  2318  15EC  3001               	movlw	1
  2319  15ED  3180  2007  3194   	fcall	___xxtofl
  2320  15F0  0873               	movf	?___xxtofl+3,w
  2321  15F1  0020               	movlb	0	; select bank0
  2322  15F2  00A7               	movwf	___flmul@a+3
  2323  15F3  0872               	movf	?___xxtofl+2,w
  2324  15F4  00A6               	movwf	___flmul@a+2
  2325  15F5  0871               	movf	?___xxtofl+1,w
  2326  15F6  00A5               	movwf	___flmul@a+1
  2327  15F7  0870               	movf	?___xxtofl,w
  2328  15F8  00A4               	movwf	___flmul@a
  2329  15F9  318A  22D7  3194   	fcall	___flmul
  2330  15FC  0020               	movlb	0	; select bank0
  2331  15FD  0823               	movf	?___flmul+3,w
  2332  15FE  00C1               	movwf	___fladd@a+3
  2333  15FF  0822               	movf	?___flmul+2,w
  2334  1600  00C0               	movwf	___fladd@a+2
  2335  1601  0821               	movf	?___flmul+1,w
  2336  1602  00BF               	movwf	___fladd@a+1
  2337  1603  0820               	movf	?___flmul,w
  2338  1604  00BE               	movwf	___fladd@a
  2339  1605  3188  209F  3194   	fcall	___fladd
  2340  1608  0020               	movlb	0	; select bank0
  2341  1609  083D               	movf	?___fladd+3,w
  2342  160A  0022               	movlb	2	; select bank2
  2343  160B  00AF               	movwf	(_mcp+3)^(0+256)
  2344  160C  0020               	movlb	0	; select bank0
  2345  160D  083C               	movf	?___fladd+2,w
  2346  160E  0022               	movlb	2	; select bank2
  2347  160F  00AE               	movwf	(_mcp+2)^(0+256)
  2348  1610  0020               	movlb	0	; select bank0
  2349  1611  083B               	movf	?___fladd+1,w
  2350  1612  0022               	movlb	2	; select bank2
  2351  1613  00AD               	movwf	(_mcp+1)^(0+256)
  2352  1614  0020               	movlb	0	; select bank0
  2353  1615  083A               	movf	?___fladd,w
  2354  1616  0022               	movlb	2	; select bank2
  2355  1617  00AC               	movwf	_mcp^(0+256)
  2356  1618                     l4217:
  2357                           
  2358                           ;main.c: 47:         sprintf(strLCD,"MCP: %0.1f", mcp);
  2359  1618  300C               	movlw	low (STR_3| (0+32768))
  2360  1619  0021               	movlb	1	; select bank1
  2361  161A  00DB               	movwf	sprintf@fmt^(0+128)
  2362  161B  30A0               	movlw	high (STR_3| (0+32768))
  2363  161C  00DC               	movwf	(sprintf@fmt^(0+128)+1)
  2364  161D  0022               	movlb	2	; select bank2
  2365  161E  082F               	movf	(_mcp+3)^(0+256),w
  2366  161F  0021               	movlb	1	; select bank1
  2367  1620  00E0               	movwf	((?_sprintf+3)^(0+128)+2)
  2368  1621  0022               	movlb	2	; select bank2
  2369  1622  082E               	movf	(_mcp+2)^(0+256),w
  2370  1623  0021               	movlb	1	; select bank1
  2371  1624  00DF               	movwf	((?_sprintf+2)^(0+128)+2)
  2372  1625  0022               	movlb	2	; select bank2
  2373  1626  082D               	movf	(_mcp+1)^(0+256),w
  2374  1627  0021               	movlb	1	; select bank1
  2375  1628  00DE               	movwf	((?_sprintf+1)^(0+128)+2)
  2376  1629  0022               	movlb	2	; select bank2
  2377  162A  082C               	movf	_mcp^(0+256),w
  2378  162B  0021               	movlb	1	; select bank1
  2379  162C  00DD               	movwf	(?_sprintf^(0+128)+2)
  2380  162D  303E               	movlw	(low (_strLCD| (0+256)))& (0+255)
  2381  162E  319F  2720  3194   	fcall	_sprintf
  2382  1631                     l4219:
  2383                           
  2384                           ;main.c: 48:         LCD_Write_Text(2,1,strLCD);
  2385  1631  01FB               	clrf	LCD_Write_Text@col
  2386  1632  0AFB               	incf	LCD_Write_Text@col,f
  2387  1633  303E               	movlw	(low (_strLCD| (0+256)))& (0+255)
  2388  1634  0021               	movlb	1	; select bank1
  2389  1635  00EE               	movwf	??_main^(0+128)
  2390  1636  086E               	movf	??_main^(0+128),w
  2391  1637  00FC               	movwf	LCD_Write_Text@text
  2392  1638  3002               	movlw	2
  2393  1639  319E  269A  3194   	fcall	_LCD_Write_Text
  2394                           
  2395                           ;main.c: 50:         _delay((unsigned long)((200)*(20000000UL/4000.0)));
  2396  163C  3006               	movlw	6
  2397  163D  0021               	movlb	1	; select bank1
  2398  163E  00EF               	movwf	(??_main^(0+128)+1)
  2399  163F  3013               	movlw	19
  2400  1640  00EE               	movwf	??_main^(0+128)
  2401  1641  30AD               	movlw	173
  2402  1642                     u5617:
  2403  1642  0B89               	decfsz	9,f
  2404  1643  2E42               	goto	u5617
  2405  1644  0BEE               	decfsz	??_main^(0+128),f
  2406  1645  2E42               	goto	u5617
  2407  1646  0BEF               	decfsz	(??_main^(0+128)+1),f
  2408  1647  2E42               	goto	u5617
  2409  1648  3200               	nop2
  2410  1649  2D04               	goto	l4195
  2411  164A  3180  2802         	ljmp	start
  2412  164C                     __end_of_main:
  2413                           
  2414                           	psect	text1
  2415  1F20                     __ptext1:	
  2416 ;; *************** function _sprintf *****************
  2417 ;; Defined at:
  2418 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;  s               1    wreg     PTR unsigned char 
  2421 ;;		 -> strLCD(20), 
  2422 ;;  fmt             2   59[BANK1 ] PTR const unsigned char 
  2423 ;;		 -> STR_3(11), STR_2(12), STR_1(11), 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  s               1   66[BANK1 ] PTR unsigned char 
  2426 ;;		 -> strLCD(20), 
  2427 ;;  f              10   68[BANK1 ] struct _IO_FILE
  2428 ;;  ret             2    0        int 
  2429 ;;  ap              1   67[BANK1 ] PTR void [1]
  2430 ;;		 -> ?_sprintf(2), 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  2   59[BANK1 ] int 
  2433 ;; Registers used:
  2434 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2440 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2441 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  2442 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2443 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  2444 ;;Total ram usage:       19 bytes
  2445 ;; Hardware stack levels used: 1
  2446 ;; Hardware stack levels required when called: 7
  2447 ;; This function calls:
  2448 ;;		_vfprintf
  2449 ;; This function is called by:
  2450 ;;		_main
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454  1F20                     _sprintf:	
  2455                           ;psect for function _sprintf
  2456                           
  2457                           
  2458                           ;incstack = 0
  2459                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2460                           ;sprintf@s stored from wreg
  2461  1F20  0021               	movlb	1	; select bank1
  2462  1F21  00E2               	movwf	sprintf@s^(0+128)
  2463  1F22                     l4107:
  2464  1F22  30DD               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2465  1F23  00E1               	movwf	??_sprintf^(0+128)
  2466  1F24  0861               	movf	??_sprintf^(0+128),w
  2467  1F25  00E3               	movwf	sprintf@ap^(0+128)
  2468  1F26  0862               	movf	sprintf@s^(0+128),w
  2469  1F27  00E1               	movwf	??_sprintf^(0+128)
  2470  1F28  0861               	movf	??_sprintf^(0+128),w
  2471  1F29  00E4               	movwf	sprintf@f^(0+128)
  2472  1F2A                     l4109:
  2473  1F2A  01E6               	clrf	(sprintf@f^(0+128)+2)
  2474  1F2B  01E7               	clrf	((sprintf@f+1)^(0+128)+2)
  2475  1F2C                     l4111:
  2476  1F2C  01EC               	clrf	(sprintf@f^(0+128)+8)
  2477  1F2D  01ED               	clrf	((sprintf@f+1)^(0+128)+8)
  2478  1F2E                     l4113:
  2479  1F2E  085C               	movf	(sprintf@fmt+1)^(0+128),w
  2480  1F2F  00D4               	movwf	(vfprintf@fmt+1)^(0+128)
  2481  1F30  085B               	movf	sprintf@fmt^(0+128),w
  2482  1F31  00D3               	movwf	vfprintf@fmt^(0+128)
  2483  1F32  30E3               	movlw	(low (sprintf@ap| 0))& (0+255)
  2484  1F33  00E1               	movwf	??_sprintf^(0+128)
  2485  1F34  0861               	movf	??_sprintf^(0+128),w
  2486  1F35  00D5               	movwf	vfprintf@ap^(0+128)
  2487  1F36  30E4               	movlw	(low (sprintf@f| 0))& (0+255)
  2488  1F37  319F  27CB  319F   	fcall	_vfprintf
  2489  1F3A                     l4115:
  2490  1F3A  0021               	movlb	1	; select bank1
  2491  1F3B  0866               	movf	(sprintf@f^(0+128)+2),w
  2492  1F3C  0762               	addwf	sprintf@s^(0+128),w
  2493  1F3D  00E1               	movwf	??_sprintf^(0+128)
  2494  1F3E  0861               	movf	??_sprintf^(0+128),w
  2495  1F3F  0086               	movwf	6
  2496  1F40  3001               	movlw	1	; select bank2/3
  2497  1F41  0087               	movwf	7
  2498  1F42  0181               	clrf	1
  2499  1F43                     l735:
  2500  1F43  0008               	return
  2501  1F44                     __end_of_sprintf:
  2502                           
  2503                           	psect	text2
  2504  1FCB                     __ptext2:	
  2505 ;; *************** function _vfprintf *****************
  2506 ;; Defined at:
  2507 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  fp              1    wreg     PTR struct _IO_FILE
  2510 ;;		 -> sprintf@f(10), 
  2511 ;;  fmt             2   51[BANK1 ] PTR const unsigned char 
  2512 ;;		 -> STR_3(11), STR_2(12), STR_1(11), 
  2513 ;;  ap              1   53[BANK1 ] PTR PTR void 
  2514 ;;		 -> sprintf@ap(1), 
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  fp              1   56[BANK1 ] PTR struct _IO_FILE
  2517 ;;		 -> sprintf@f(10), 
  2518 ;;  cfmt            2   57[BANK1 ] PTR unsigned char 
  2519 ;;		 -> STR_3(11), STR_2(12), STR_1(11), 
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  2   51[BANK1 ] int 
  2522 ;; Registers used:
  2523 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2529 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2530 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2531 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2532 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  2533 ;;Total ram usage:        8 bytes
  2534 ;; Hardware stack levels used: 1
  2535 ;; Hardware stack levels required when called: 6
  2536 ;; This function calls:
  2537 ;;		_vfpfcnvrt
  2538 ;; This function is called by:
  2539 ;;		_sprintf
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543  1FCB                     _vfprintf:	
  2544                           ;psect for function _vfprintf
  2545                           
  2546                           
  2547                           ;incstack = 0
  2548                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2549                           ;vfprintf@fp stored from wreg
  2550  1FCB  0021               	movlb	1	; select bank1
  2551  1FCC  00D8               	movwf	vfprintf@fp^(0+128)
  2552  1FCD                     l4051:
  2553                           
  2554                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2555  1FCD  0854               	movf	(vfprintf@fmt+1)^(0+128),w
  2556  1FCE  00DA               	movwf	(vfprintf@cfmt+1)^(0+128)
  2557  1FCF  0853               	movf	vfprintf@fmt^(0+128),w
  2558  1FD0  00D9               	movwf	vfprintf@cfmt^(0+128)
  2559  1FD1                     l4053:
  2560                           
  2561                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2562  1FD1  0022               	movlb	2	; select bank2
  2563  1FD2  01B4               	clrf	_nout^(0+256)
  2564  1FD3  01B5               	clrf	(_nout+1)^(0+256)
  2565                           
  2566                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2567  1FD4  2FED               	goto	l4057
  2568  1FD5                     l4055:
  2569                           
  2570                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2571  1FD5  30D9               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2572  1FD6  00D6               	movwf	??_vfprintf^(0+128)
  2573  1FD7  0856               	movf	??_vfprintf^(0+128),w
  2574  1FD8  0020               	movlb	0	; select bank0
  2575  1FD9  00DE               	movwf	vfpfcnvrt@fmt
  2576  1FDA  0021               	movlb	1	; select bank1
  2577  1FDB  0855               	movf	vfprintf@ap^(0+128),w
  2578  1FDC  00D7               	movwf	(??_vfprintf+1)^(0+128)
  2579  1FDD  0857               	movf	(??_vfprintf+1)^(0+128),w
  2580  1FDE  0020               	movlb	0	; select bank0
  2581  1FDF  00DF               	movwf	vfpfcnvrt@ap
  2582  1FE0  0021               	movlb	1	; select bank1
  2583  1FE1  0858               	movf	vfprintf@fp^(0+128),w
  2584  1FE2  318D  252E  319F   	fcall	_vfpfcnvrt
  2585  1FE5  0020               	movlb	0	; select bank0
  2586  1FE6  085E               	movf	?_vfpfcnvrt,w
  2587  1FE7  0022               	movlb	2	; select bank2
  2588  1FE8  07B4               	addwf	_nout^(0+256),f
  2589  1FE9  0020               	movlb	0	; select bank0
  2590  1FEA  085F               	movf	?_vfpfcnvrt+1,w
  2591  1FEB  0022               	movlb	2	; select bank2
  2592  1FEC  3DB5               	addwfc	(_nout+1)^(0+256),f
  2593  1FED                     l4057:
  2594                           
  2595                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2596  1FED  0021               	movlb	1	; select bank1
  2597  1FEE  0859               	movf	vfprintf@cfmt^(0+128),w
  2598  1FEF  0084               	movwf	4
  2599  1FF0  085A               	movf	(vfprintf@cfmt+1)^(0+128),w
  2600  1FF1  0085               	movwf	5
  2601  1FF2  0012               	moviw fsr0++
  2602  1FF3  1D03               	btfss	3,2
  2603  1FF4  2FF6               	goto	u5431
  2604  1FF5  2FF7               	goto	u5430
  2605  1FF6                     u5431:
  2606  1FF6  2FD5               	goto	l4055
  2607  1FF7                     u5430:
  2608  1FF7                     l4059:
  2609                           
  2610                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2611  1FF7  0022               	movlb	2	; select bank2
  2612  1FF8  0835               	movf	(_nout+1)^(0+256),w
  2613  1FF9  0021               	movlb	1	; select bank1
  2614  1FFA  00D4               	movwf	(?_vfprintf+1)^(0+128)
  2615  1FFB  0022               	movlb	2	; select bank2
  2616  1FFC  0834               	movf	_nout^(0+256),w
  2617  1FFD  0021               	movlb	1	; select bank1
  2618  1FFE  00D3               	movwf	?_vfprintf^(0+128)
  2619  1FFF                     l915:
  2620  1FFF  0008               	return
  2621  2000                     __end_of_vfprintf:
  2622                           
  2623                           	psect	text3
  2624  0D2E                     __ptext3:	
  2625 ;; *************** function _vfpfcnvrt *****************
  2626 ;; Defined at:
  2627 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;  fp              1    wreg     PTR struct _IO_FILE
  2630 ;;		 -> sprintf@f(10), 
  2631 ;;  fmt             1   62[BANK0 ] PTR PTR unsigned char 
  2632 ;;		 -> vfprintf@cfmt(2), 
  2633 ;;  ap              1   63[BANK0 ] PTR PTR void 
  2634 ;;		 -> sprintf@ap(1), 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;  fp              1   79[BANK0 ] PTR struct _IO_FILE
  2637 ;;		 -> sprintf@f(10), 
  2638 ;;  llu             8    0        unsigned long long 
  2639 ;;  ll              8    0        long long 
  2640 ;;  f               4   71[BANK0 ] long long 
  2641 ;;  ct              3   75[BANK0 ] unsigned char [3]
  2642 ;;  done            2   69[BANK0 ] int 
  2643 ;;  vp              2    0        PTR void 
  2644 ;;  i               2    0        int 
  2645 ;;  cp              2    0        PTR unsigned char 
  2646 ;;  c               1   78[BANK0 ] unsigned char 
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  2   62[BANK0 ] int 
  2649 ;; Registers used:
  2650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2656 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2657 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2658 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2659 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2660 ;;Total ram usage:       18 bytes
  2661 ;; Hardware stack levels used: 1
  2662 ;; Hardware stack levels required when called: 5
  2663 ;; This function calls:
  2664 ;;		_atoi
  2665 ;;		_efgtoa
  2666 ;;		_fputc
  2667 ;;		_isdigit
  2668 ;;		_isupper
  2669 ;;		_strncmp
  2670 ;;		_tolower
  2671 ;; This function is called by:
  2672 ;;		_vfprintf
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676  0D2E                     _vfpfcnvrt:	
  2677                           ;psect for function _vfpfcnvrt
  2678                           
  2679                           
  2680                           ;incstack = 0
  2681                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2682                           ;vfpfcnvrt@fp stored from wreg
  2683  0D2E  0020               	movlb	0	; select bank0
  2684  0D2F  00EF               	movwf	vfpfcnvrt@fp
  2685  0D30                     l3885:
  2686                           
  2687                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2688  0D30  085E               	movf	vfpfcnvrt@fmt,w
  2689  0D31  0086               	movwf	6
  2690  0D32  0187               	clrf	7
  2691  0D33  3F40               	moviw [0]fsr1
  2692  0D34  00E0               	movwf	??_vfpfcnvrt
  2693  0D35  3F41               	moviw [1]fsr1
  2694  0D36  00E1               	movwf	??_vfpfcnvrt+1
  2695  0D37  0860               	movf	??_vfpfcnvrt,w
  2696  0D38  0084               	movwf	4
  2697  0D39  0861               	movf	??_vfpfcnvrt+1,w
  2698  0D3A  0085               	movwf	5
  2699  0D3B  0012               	moviw fsr0++
  2700  0D3C  3A25               	xorlw	37
  2701  0D3D  1D03               	btfss	3,2
  2702  0D3E  2D40               	goto	u5271
  2703  0D3F  2D41               	goto	u5270
  2704  0D40                     u5271:
  2705  0D40  2FDC               	goto	l4011
  2706  0D41                     u5270:
  2707  0D41                     l3887:
  2708                           
  2709                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2710  0D41  085E               	movf	vfpfcnvrt@fmt,w
  2711  0D42  0086               	movwf	6
  2712  0D43  0187               	clrf	7
  2713  0D44  3001               	movlw	1
  2714  0D45  0781               	addwf	1,f
  2715  0D46  3141               	addfsr 1,1
  2716  0D47  1803               	skipnc
  2717  0D48  0A81               	incf	1,f
  2718  0D49                     l3889:
  2719                           
  2720                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2721  0D49  0022               	movlb	2	; select bank2
  2722  0D4A  01B6               	clrf	_width^(0+256)
  2723  0D4B  01B7               	clrf	(_width+1)^(0+256)
  2724  0D4C  01BA               	clrf	_flags^(0+256)
  2725  0D4D  01BB               	clrf	(_flags+1)^(0+256)
  2726  0D4E                     l3891:
  2727                           
  2728                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2729  0D4E  30FF               	movlw	255
  2730  0D4F  00B8               	movwf	_prec^(0+256)
  2731  0D50  30FF               	movlw	255
  2732  0D51  00B9               	movwf	(_prec^(0+256)+1)
  2733  0D52                     l3893:
  2734                           
  2735                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  2736  0D52  0020               	movlb	0	; select bank0
  2737  0D53  01E5               	clrf	vfpfcnvrt@done
  2738  0D54  01E6               	clrf	vfpfcnvrt@done+1
  2739                           
  2740                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2741  0D55  2D97               	goto	l3911
  2742  0D56                     l875:	
  2743                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 713:             
      +                              case '-' :
  2744                           
  2745                           
  2746                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  2747  0D56  0022               	movlb	2	; select bank2
  2748  0D57  143A               	bsf	_flags^(0+256),0
  2749  0D58                     l3895:
  2750                           
  2751                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  2752  0D58  0020               	movlb	0	; select bank0
  2753  0D59  085E               	movf	vfpfcnvrt@fmt,w
  2754  0D5A  0086               	movwf	6
  2755  0D5B  0187               	clrf	7
  2756  0D5C  3001               	movlw	1
  2757  0D5D  0781               	addwf	1,f
  2758  0D5E  3141               	addfsr 1,1
  2759  0D5F  1803               	skipnc
  2760  0D60  0A81               	incf	1,f
  2761                           
  2762                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  2763  0D61  2D97               	goto	l3911
  2764  0D62                     l877:	
  2765                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 717:             
      +                              case '0' :
  2766                           
  2767                           
  2768                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  2769  0D62  0022               	movlb	2	; select bank2
  2770  0D63  14BA               	bsf	_flags^(0+256),1
  2771  0D64  2D58               	goto	l3895
  2772  0D65                     l878:	
  2773                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 721:             
      +                              case '+' :
  2774                           
  2775                           
  2776                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  2777  0D65  0022               	movlb	2	; select bank2
  2778  0D66  153A               	bsf	_flags^(0+256),2
  2779  0D67  2D58               	goto	l3895
  2780  0D68                     l879:	
  2781                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 725:             
      +                              case ' ' :
  2782                           
  2783                           
  2784                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  2785  0D68  0022               	movlb	2	; select bank2
  2786  0D69  15BA               	bsf	_flags^(0+256),3
  2787  0D6A  2D58               	goto	l3895
  2788  0D6B                     l880:	
  2789                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 729:             
      +                              case '#' :
  2790                           
  2791                           
  2792                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  2793  0D6B  0022               	movlb	2	; select bank2
  2794  0D6C  163A               	bsf	_flags^(0+256),4
  2795  0D6D  2D58               	goto	l3895
  2796  0D6E                     l3905:
  2797                           
  2798                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  2799  0D6E  3001               	movlw	1
  2800  0D6F  00E5               	movwf	vfpfcnvrt@done
  2801  0D70  3000               	movlw	0
  2802  0D71  00E6               	movwf	vfpfcnvrt@done+1
  2803                           
  2804                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  2805  0D72  2D97               	goto	l3911
  2806  0D73                     l3909:
  2807  0D73  085E               	movf	vfpfcnvrt@fmt,w
  2808  0D74  0086               	movwf	6
  2809  0D75  0187               	clrf	7
  2810  0D76  3F40               	moviw [0]fsr1
  2811  0D77  00E0               	movwf	??_vfpfcnvrt
  2812  0D78  3F41               	moviw [1]fsr1
  2813  0D79  00E1               	movwf	??_vfpfcnvrt+1
  2814  0D7A  0860               	movf	??_vfpfcnvrt,w
  2815  0D7B  0084               	movwf	4
  2816  0D7C  0861               	movf	??_vfpfcnvrt+1,w
  2817  0D7D  0085               	movwf	5
  2818  0D7E  0800               	movf	0,w	;code access
  2819  0D7F  00E2               	movwf	??_vfpfcnvrt+2
  2820  0D80  01E3               	clrf	??_vfpfcnvrt+3
  2821                           
  2822                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2823                           ; Switch size 1, requested type "simple"
  2824                           ; Number of cases is 1, Range of values is 0 to 0
  2825                           ; switch strategies available:
  2826                           ; Name         Instructions Cycles
  2827                           ; simple_byte            4     3 (average)
  2828                           ; direct_byte            8     6 (fixed)
  2829                           ; jumptable            260     6 (fixed)
  2830                           ;	Chosen strategy is simple_byte
  2831  0D81  0863               	movf	??_vfpfcnvrt+3,w
  2832  0D82  3A00               	xorlw	0	; case 0
  2833  0D83  1903               	skipnz
  2834  0D84  2D86               	goto	l4293
  2835  0D85  2D6E               	goto	l3905
  2836  0D86                     l4293:
  2837                           
  2838                           ; Switch size 1, requested type "simple"
  2839                           ; Number of cases is 5, Range of values is 32 to 48
  2840                           ; switch strategies available:
  2841                           ; Name         Instructions Cycles
  2842                           ; simple_byte           16     9 (average)
  2843                           ; direct_byte           43     9 (fixed)
  2844                           ; jumptable            263     9 (fixed)
  2845                           ;	Chosen strategy is simple_byte
  2846  0D86  0862               	movf	??_vfpfcnvrt+2,w
  2847  0D87  3A20               	xorlw	32	; case 32
  2848  0D88  1903               	skipnz
  2849  0D89  2D68               	goto	l879
  2850  0D8A  3A03               	xorlw	3	; case 35
  2851  0D8B  1903               	skipnz
  2852  0D8C  2D6B               	goto	l880
  2853  0D8D  3A08               	xorlw	8	; case 43
  2854  0D8E  1903               	skipnz
  2855  0D8F  2D65               	goto	l878
  2856  0D90  3A06               	xorlw	6	; case 45
  2857  0D91  1903               	skipnz
  2858  0D92  2D56               	goto	l875
  2859  0D93  3A1D               	xorlw	29	; case 48
  2860  0D94  1903               	skipnz
  2861  0D95  2D62               	goto	l877
  2862  0D96  2D6E               	goto	l3905
  2863  0D97                     l3911:
  2864                           
  2865                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2866  0D97  0865               	movf	vfpfcnvrt@done,w
  2867  0D98  0466               	iorwf	vfpfcnvrt@done+1,w
  2868  0D99  1903               	btfsc	3,2
  2869  0D9A  2D9C               	goto	u5281
  2870  0D9B  2D9D               	goto	u5280
  2871  0D9C                     u5281:
  2872  0D9C  2D73               	goto	l3909
  2873  0D9D                     u5280:
  2874  0D9D                     l882:
  2875                           
  2876                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2877  0D9D  0022               	movlb	2	; select bank2
  2878  0D9E  1C3A               	btfss	_flags^(0+256),0
  2879  0D9F  2DA1               	goto	u5291
  2880  0DA0  2DA2               	goto	u5290
  2881  0DA1                     u5291:
  2882  0DA1  2DA6               	goto	l3915
  2883  0DA2                     u5290:
  2884  0DA2                     l3913:
  2885                           
  2886                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2887  0DA2  30FD               	movlw	253
  2888  0DA3  05BA               	andwf	_flags^(0+256),f
  2889  0DA4  30FF               	movlw	255
  2890  0DA5  05BB               	andwf	(_flags+1)^(0+256),f
  2891  0DA6                     l3915:
  2892                           
  2893                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2894  0DA6  0020               	movlb	0	; select bank0
  2895  0DA7  085E               	movf	vfpfcnvrt@fmt,w
  2896  0DA8  0086               	movwf	6
  2897  0DA9  0187               	clrf	7
  2898  0DAA  3F40               	moviw [0]fsr1
  2899  0DAB  00E0               	movwf	??_vfpfcnvrt
  2900  0DAC  3F41               	moviw [1]fsr1
  2901  0DAD  00E1               	movwf	??_vfpfcnvrt+1
  2902  0DAE  0860               	movf	??_vfpfcnvrt,w
  2903  0DAF  0084               	movwf	4
  2904  0DB0  0861               	movf	??_vfpfcnvrt+1,w
  2905  0DB1  0085               	movwf	5
  2906  0DB2  0012               	moviw fsr0++
  2907  0DB3  3A2A               	xorlw	42
  2908  0DB4  1D03               	btfss	3,2
  2909  0DB5  2DB7               	goto	u5301
  2910  0DB6  2DB8               	goto	u5300
  2911  0DB7                     u5301:
  2912  0DB7  2DD8               	goto	l3927
  2913  0DB8                     u5300:
  2914  0DB8                     l3917:
  2915                           
  2916                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2917  0DB8  085E               	movf	vfpfcnvrt@fmt,w
  2918  0DB9  0086               	movwf	6
  2919  0DBA  0187               	clrf	7
  2920  0DBB  3001               	movlw	1
  2921  0DBC  0781               	addwf	1,f
  2922  0DBD  3141               	addfsr 1,1
  2923  0DBE  1803               	skipnc
  2924  0DBF  0A81               	incf	1,f
  2925  0DC0                     l3919:
  2926                           
  2927                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2928  0DC0  085F               	movf	vfpfcnvrt@ap,w
  2929  0DC1  0086               	movwf	6
  2930  0DC2  0187               	clrf	7
  2931  0DC3  0801               	movf	1,w
  2932  0DC4  0084               	movwf	4
  2933  0DC5  0185               	clrf	5
  2934  0DC6  3002               	movlw	2
  2935  0DC7  0781               	addwf	1,f
  2936  0DC8  3F00               	moviw [0]fsr0
  2937  0DC9  0022               	movlb	2	; select bank2
  2938  0DCA  00B6               	movwf	_width^(0+256)
  2939  0DCB  3F01               	moviw [1]fsr0
  2940  0DCC  00B7               	movwf	(_width+1)^(0+256)
  2941  0DCD                     l3921:
  2942                           
  2943                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2944  0DCD  1FB7               	btfss	(_width+1)^(0+256),7
  2945  0DCE  2DD0               	goto	u5311
  2946  0DCF  2DD1               	goto	u5310
  2947  0DD0                     u5311:
  2948  0DD0  2E0C               	goto	l3935
  2949  0DD1                     u5310:
  2950  0DD1                     l3923:
  2951                           
  2952                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2953  0DD1  143A               	bsf	_flags^(0+256),0
  2954  0DD2                     l3925:
  2955                           
  2956                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2957  0DD2  09B6               	comf	_width^(0+256),f
  2958  0DD3  09B7               	comf	(_width+1)^(0+256),f
  2959  0DD4  0AB6               	incf	_width^(0+256),f
  2960  0DD5  1903               	skipnz
  2961  0DD6  0AB7               	incf	(_width+1)^(0+256),f
  2962  0DD7  2E0C               	goto	l3935
  2963  0DD8                     l3927:
  2964                           
  2965                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2966  0DD8  085E               	movf	vfpfcnvrt@fmt,w
  2967  0DD9  0086               	movwf	6
  2968  0DDA  0187               	clrf	7
  2969  0DDB  3F40               	moviw [0]fsr1
  2970  0DDC  00F6               	movwf	atoi@s
  2971  0DDD  3F41               	moviw [1]fsr1
  2972  0DDE  00F7               	movwf	atoi@s+1
  2973  0DDF  3188  200B  318D   	fcall	_atoi
  2974  0DE2  0877               	movf	?_atoi+1,w
  2975  0DE3  0022               	movlb	2	; select bank2
  2976  0DE4  00B7               	movwf	(_width+1)^(0+256)
  2977  0DE5  0876               	movf	?_atoi,w
  2978  0DE6  00B6               	movwf	_width^(0+256)
  2979                           
  2980                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2981  0DE7  2DF0               	goto	l3933
  2982  0DE8                     l3929:
  2983                           
  2984                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2985  0DE8  085E               	movf	vfpfcnvrt@fmt,w
  2986  0DE9  0086               	movwf	6
  2987  0DEA  0187               	clrf	7
  2988  0DEB  3001               	movlw	1
  2989  0DEC  0781               	addwf	1,f
  2990  0DED  3141               	addfsr 1,1
  2991  0DEE  1803               	skipnc
  2992  0DEF  0A81               	incf	1,f
  2993  0DF0                     l3933:
  2994  0DF0  0020               	movlb	0	; select bank0
  2995  0DF1  085E               	movf	vfpfcnvrt@fmt,w
  2996  0DF2  0086               	movwf	6
  2997  0DF3  0187               	clrf	7
  2998  0DF4  3F40               	moviw [0]fsr1
  2999  0DF5  00E0               	movwf	??_vfpfcnvrt
  3000  0DF6  3F41               	moviw [1]fsr1
  3001  0DF7  00E1               	movwf	??_vfpfcnvrt+1
  3002  0DF8  0860               	movf	??_vfpfcnvrt,w
  3003  0DF9  0084               	movwf	4
  3004  0DFA  0861               	movf	??_vfpfcnvrt+1,w
  3005  0DFB  0085               	movwf	5
  3006  0DFC  0800               	movf	0,w	;code access
  3007  0DFD  3ED0               	addlw	208
  3008  0DFE  00E2               	movwf	??_vfpfcnvrt+2
  3009  0DFF  30FF               	movlw	255
  3010  0E00  1803               	skipnc
  3011  0E01  3000               	movlw	0
  3012  0E02  00E3               	movwf	??_vfpfcnvrt+3
  3013  0E03  3000               	movlw	0
  3014  0E04  0263               	subwf	??_vfpfcnvrt+3,w
  3015  0E05  300A               	movlw	10
  3016  0E06  1903               	skipnz
  3017  0E07  0262               	subwf	??_vfpfcnvrt+2,w
  3018  0E08  1C03               	skipc
  3019  0E09  2E0B               	goto	u5321
  3020  0E0A  2E0C               	goto	u5320
  3021  0E0B                     u5321:
  3022  0E0B  2DE8               	goto	l3929
  3023  0E0C                     u5320:
  3024  0E0C                     l3935:
  3025                           
  3026                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  3027  0E0C  0020               	movlb	0	; select bank0
  3028  0E0D  085E               	movf	vfpfcnvrt@fmt,w
  3029  0E0E  0086               	movwf	6
  3030  0E0F  0187               	clrf	7
  3031  0E10  3F40               	moviw [0]fsr1
  3032  0E11  00E0               	movwf	??_vfpfcnvrt
  3033  0E12  3F41               	moviw [1]fsr1
  3034  0E13  00E1               	movwf	??_vfpfcnvrt+1
  3035  0E14  0860               	movf	??_vfpfcnvrt,w
  3036  0E15  0084               	movwf	4
  3037  0E16  0861               	movf	??_vfpfcnvrt+1,w
  3038  0E17  0085               	movwf	5
  3039  0E18  0012               	moviw fsr0++
  3040  0E19  3A2E               	xorlw	46
  3041  0E1A  1D03               	btfss	3,2
  3042  0E1B  2E1D               	goto	u5331
  3043  0E1C  2E1E               	goto	u5330
  3044  0E1D                     u5331:
  3045  0E1D  2E85               	goto	l3955
  3046  0E1E                     u5330:
  3047  0E1E                     l3937:
  3048                           
  3049                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  3050  0E1E  0022               	movlb	2	; select bank2
  3051  0E1F  01B8               	clrf	_prec^(0+256)
  3052  0E20  01B9               	clrf	(_prec+1)^(0+256)
  3053  0E21                     l3939:
  3054                           
  3055                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  3056  0E21  0020               	movlb	0	; select bank0
  3057  0E22  085E               	movf	vfpfcnvrt@fmt,w
  3058  0E23  0086               	movwf	6
  3059  0E24  0187               	clrf	7
  3060  0E25  3001               	movlw	1
  3061  0E26  0781               	addwf	1,f
  3062  0E27  3141               	addfsr 1,1
  3063  0E28  1803               	skipnc
  3064  0E29  0A81               	incf	1,f
  3065  0E2A                     l3941:
  3066                           
  3067                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  3068  0E2A  085E               	movf	vfpfcnvrt@fmt,w
  3069  0E2B  0086               	movwf	6
  3070  0E2C  0187               	clrf	7
  3071  0E2D  3F40               	moviw [0]fsr1
  3072  0E2E  00E0               	movwf	??_vfpfcnvrt
  3073  0E2F  3F41               	moviw [1]fsr1
  3074  0E30  00E1               	movwf	??_vfpfcnvrt+1
  3075  0E31  0860               	movf	??_vfpfcnvrt,w
  3076  0E32  0084               	movwf	4
  3077  0E33  0861               	movf	??_vfpfcnvrt+1,w
  3078  0E34  0085               	movwf	5
  3079  0E35  0012               	moviw fsr0++
  3080  0E36  3A2A               	xorlw	42
  3081  0E37  1D03               	btfss	3,2
  3082  0E38  2E3A               	goto	u5341
  3083  0E39  2E3B               	goto	u5340
  3084  0E3A                     u5341:
  3085  0E3A  2E51               	goto	l3947
  3086  0E3B                     u5340:
  3087  0E3B                     l3943:
  3088                           
  3089                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  3090  0E3B  085E               	movf	vfpfcnvrt@fmt,w
  3091  0E3C  0086               	movwf	6
  3092  0E3D  0187               	clrf	7
  3093  0E3E  3001               	movlw	1
  3094  0E3F  0781               	addwf	1,f
  3095  0E40  3141               	addfsr 1,1
  3096  0E41  1803               	skipnc
  3097  0E42  0A81               	incf	1,f
  3098  0E43                     l3945:
  3099                           
  3100                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3101  0E43  085F               	movf	vfpfcnvrt@ap,w
  3102  0E44  0086               	movwf	6
  3103  0E45  0187               	clrf	7
  3104  0E46  0801               	movf	1,w
  3105  0E47  0084               	movwf	4
  3106  0E48  0185               	clrf	5
  3107  0E49  3002               	movlw	2
  3108  0E4A  0781               	addwf	1,f
  3109  0E4B  3F00               	moviw [0]fsr0
  3110  0E4C  0022               	movlb	2	; select bank2
  3111  0E4D  00B8               	movwf	_prec^(0+256)
  3112  0E4E  3F01               	moviw [1]fsr0
  3113  0E4F  00B9               	movwf	(_prec+1)^(0+256)
  3114                           
  3115                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  3116  0E50  2E85               	goto	l3955
  3117  0E51                     l3947:
  3118                           
  3119                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  3120  0E51  085E               	movf	vfpfcnvrt@fmt,w
  3121  0E52  0086               	movwf	6
  3122  0E53  0187               	clrf	7
  3123  0E54  3F40               	moviw [0]fsr1
  3124  0E55  00F6               	movwf	atoi@s
  3125  0E56  3F41               	moviw [1]fsr1
  3126  0E57  00F7               	movwf	atoi@s+1
  3127  0E58  3188  200B  318D   	fcall	_atoi
  3128  0E5B  0877               	movf	?_atoi+1,w
  3129  0E5C  0022               	movlb	2	; select bank2
  3130  0E5D  00B9               	movwf	(_prec+1)^(0+256)
  3131  0E5E  0876               	movf	?_atoi,w
  3132  0E5F  00B8               	movwf	_prec^(0+256)
  3133                           
  3134                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  3135  0E60  2E69               	goto	l3953
  3136  0E61                     l3949:
  3137                           
  3138                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  3139  0E61  085E               	movf	vfpfcnvrt@fmt,w
  3140  0E62  0086               	movwf	6
  3141  0E63  0187               	clrf	7
  3142  0E64  3001               	movlw	1
  3143  0E65  0781               	addwf	1,f
  3144  0E66  3141               	addfsr 1,1
  3145  0E67  1803               	skipnc
  3146  0E68  0A81               	incf	1,f
  3147  0E69                     l3953:
  3148  0E69  0020               	movlb	0	; select bank0
  3149  0E6A  085E               	movf	vfpfcnvrt@fmt,w
  3150  0E6B  0086               	movwf	6
  3151  0E6C  0187               	clrf	7
  3152  0E6D  3F40               	moviw [0]fsr1
  3153  0E6E  00E0               	movwf	??_vfpfcnvrt
  3154  0E6F  3F41               	moviw [1]fsr1
  3155  0E70  00E1               	movwf	??_vfpfcnvrt+1
  3156  0E71  0860               	movf	??_vfpfcnvrt,w
  3157  0E72  0084               	movwf	4
  3158  0E73  0861               	movf	??_vfpfcnvrt+1,w
  3159  0E74  0085               	movwf	5
  3160  0E75  0800               	movf	0,w	;code access
  3161  0E76  3ED0               	addlw	208
  3162  0E77  00E2               	movwf	??_vfpfcnvrt+2
  3163  0E78  30FF               	movlw	255
  3164  0E79  1803               	skipnc
  3165  0E7A  3000               	movlw	0
  3166  0E7B  00E3               	movwf	??_vfpfcnvrt+3
  3167  0E7C  3000               	movlw	0
  3168  0E7D  0263               	subwf	??_vfpfcnvrt+3,w
  3169  0E7E  300A               	movlw	10
  3170  0E7F  1903               	skipnz
  3171  0E80  0262               	subwf	??_vfpfcnvrt+2,w
  3172  0E81  1C03               	skipc
  3173  0E82  2E84               	goto	u5351
  3174  0E83  2E85               	goto	u5350
  3175  0E84                     u5351:
  3176  0E84  2E61               	goto	l3949
  3177  0E85                     u5350:
  3178  0E85                     l3955:
  3179                           
  3180                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3181  0E85  0020               	movlb	0	; select bank0
  3182  0E86  085E               	movf	vfpfcnvrt@fmt,w
  3183  0E87  0086               	movwf	6
  3184  0E88  0187               	clrf	7
  3185  0E89  3F40               	moviw [0]fsr1
  3186  0E8A  00E0               	movwf	??_vfpfcnvrt
  3187  0E8B  3F41               	moviw [1]fsr1
  3188  0E8C  00E1               	movwf	??_vfpfcnvrt+1
  3189  0E8D  0860               	movf	??_vfpfcnvrt,w
  3190  0E8E  0084               	movwf	4
  3191  0E8F  0861               	movf	??_vfpfcnvrt+1,w
  3192  0E90  0085               	movwf	5
  3193  0E91  0800               	movf	0,w	;code access
  3194  0E92  00E2               	movwf	??_vfpfcnvrt+2
  3195  0E93  01E3               	clrf	??_vfpfcnvrt+3
  3196  0E94  0862               	movf	??_vfpfcnvrt+2,w
  3197  0E95  00F6               	movwf	tolower@c
  3198  0E96  0863               	movf	??_vfpfcnvrt+3,w
  3199  0E97  00F7               	movwf	tolower@c+1
  3200  0E98  319D  25C1  318D   	fcall	_tolower
  3201  0E9B  0876               	movf	?_tolower,w
  3202  0E9C  0020               	movlb	0	; select bank0
  3203  0E9D  00E4               	movwf	??_vfpfcnvrt+4
  3204  0E9E  0864               	movf	??_vfpfcnvrt+4,w
  3205  0E9F  00EB               	movwf	vfpfcnvrt@ct
  3206  0EA0                     l3957:
  3207                           
  3208                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3209  0EA0  086B               	movf	vfpfcnvrt@ct,w
  3210  0EA1  1903               	btfsc	3,2
  3211  0EA2  2EA4               	goto	u5361
  3212  0EA3  2EA5               	goto	u5360
  3213  0EA4                     u5361:
  3214  0EA4  2EE4               	goto	l3965
  3215  0EA5                     u5360:
  3216  0EA5                     l3959:
  3217                           
  3218                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3219  0EA5  085E               	movf	vfpfcnvrt@fmt,w
  3220  0EA6  0086               	movwf	6
  3221  0EA7  0187               	clrf	7
  3222  0EA8  3F40               	moviw [0]fsr1
  3223  0EA9  00E0               	movwf	??_vfpfcnvrt
  3224  0EAA  3F41               	moviw [1]fsr1
  3225  0EAB  00E1               	movwf	??_vfpfcnvrt+1
  3226  0EAC  3001               	movlw	1
  3227  0EAD  0760               	addwf	??_vfpfcnvrt,w
  3228  0EAE  0084               	movwf	4
  3229  0EAF  0861               	movf	??_vfpfcnvrt+1,w
  3230  0EB0  1803               	skipnc
  3231  0EB1  0A61               	incf	??_vfpfcnvrt+1,w
  3232  0EB2  0085               	movwf	5
  3233  0EB3  0800               	movf	0,w	;code access
  3234  0EB4  00E2               	movwf	??_vfpfcnvrt+2
  3235  0EB5  01E3               	clrf	??_vfpfcnvrt+3
  3236  0EB6  0862               	movf	??_vfpfcnvrt+2,w
  3237  0EB7  00F6               	movwf	tolower@c
  3238  0EB8  0863               	movf	??_vfpfcnvrt+3,w
  3239  0EB9  00F7               	movwf	tolower@c+1
  3240  0EBA  319D  25C1  318D   	fcall	_tolower
  3241  0EBD  0876               	movf	?_tolower,w
  3242  0EBE  0020               	movlb	0	; select bank0
  3243  0EBF  00E4               	movwf	??_vfpfcnvrt+4
  3244  0EC0  0864               	movf	??_vfpfcnvrt+4,w
  3245  0EC1  00EC               	movwf	vfpfcnvrt@ct+1
  3246  0EC2                     l3961:
  3247                           
  3248                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3249  0EC2  086C               	movf	vfpfcnvrt@ct+1,w
  3250  0EC3  1903               	btfsc	3,2
  3251  0EC4  2EC6               	goto	u5371
  3252  0EC5  2EC7               	goto	u5370
  3253  0EC6                     u5371:
  3254  0EC6  2EE4               	goto	l3965
  3255  0EC7                     u5370:
  3256  0EC7                     l3963:
  3257                           
  3258                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3259  0EC7  085E               	movf	vfpfcnvrt@fmt,w
  3260  0EC8  0086               	movwf	6
  3261  0EC9  0187               	clrf	7
  3262  0ECA  3F40               	moviw [0]fsr1
  3263  0ECB  00E0               	movwf	??_vfpfcnvrt
  3264  0ECC  3F41               	moviw [1]fsr1
  3265  0ECD  00E1               	movwf	??_vfpfcnvrt+1
  3266  0ECE  3002               	movlw	2
  3267  0ECF  0760               	addwf	??_vfpfcnvrt,w
  3268  0ED0  0084               	movwf	4
  3269  0ED1  0861               	movf	??_vfpfcnvrt+1,w
  3270  0ED2  1803               	skipnc
  3271  0ED3  0A61               	incf	??_vfpfcnvrt+1,w
  3272  0ED4  0085               	movwf	5
  3273  0ED5  0800               	movf	0,w	;code access
  3274  0ED6  00E2               	movwf	??_vfpfcnvrt+2
  3275  0ED7  01E3               	clrf	??_vfpfcnvrt+3
  3276  0ED8  0862               	movf	??_vfpfcnvrt+2,w
  3277  0ED9  00F6               	movwf	tolower@c
  3278  0EDA  0863               	movf	??_vfpfcnvrt+3,w
  3279  0EDB  00F7               	movwf	tolower@c+1
  3280  0EDC  319D  25C1  318D   	fcall	_tolower
  3281  0EDF  0876               	movf	?_tolower,w
  3282  0EE0  0020               	movlb	0	; select bank0
  3283  0EE1  00E4               	movwf	??_vfpfcnvrt+4
  3284  0EE2  0864               	movf	??_vfpfcnvrt+4,w
  3285  0EE3  00ED               	movwf	vfpfcnvrt@ct+2
  3286  0EE4                     l3965:
  3287                           
  3288                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3289  0EE4  3066               	movlw	102
  3290  0EE5  066B               	xorwf	vfpfcnvrt@ct,w
  3291  0EE6  1D03               	btfss	3,2
  3292  0EE7  2EE9               	goto	u5381
  3293  0EE8  2EEA               	goto	u5380
  3294  0EE9                     u5381:
  3295  0EE9  2F27               	goto	l3977
  3296  0EEA                     u5380:
  3297  0EEA                     l3967:
  3298                           
  3299                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3300  0EEA  085E               	movf	vfpfcnvrt@fmt,w
  3301  0EEB  0086               	movwf	6
  3302  0EEC  0187               	clrf	7
  3303  0EED  3F40               	moviw [0]fsr1
  3304  0EEE  00E0               	movwf	??_vfpfcnvrt
  3305  0EEF  3F41               	moviw [1]fsr1
  3306  0EF0  00E1               	movwf	??_vfpfcnvrt+1
  3307  0EF1  0860               	movf	??_vfpfcnvrt,w
  3308  0EF2  0084               	movwf	4
  3309  0EF3  0861               	movf	??_vfpfcnvrt+1,w
  3310  0EF4  0085               	movwf	5
  3311  0EF5  0800               	movf	0,w	;code access
  3312  0EF6  00E2               	movwf	??_vfpfcnvrt+2
  3313  0EF7  0862               	movf	??_vfpfcnvrt+2,w
  3314  0EF8  00EE               	movwf	vfpfcnvrt@c
  3315  0EF9                     l3969:
  3316                           
  3317                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3318  0EF9  085E               	movf	vfpfcnvrt@fmt,w
  3319  0EFA  0086               	movwf	6
  3320  0EFB  0187               	clrf	7
  3321  0EFC  3001               	movlw	1
  3322  0EFD  0781               	addwf	1,f
  3323  0EFE  3141               	addfsr 1,1
  3324  0EFF  1803               	skipnc
  3325  0F00  0A81               	incf	1,f
  3326  0F01                     l3971:
  3327                           
  3328                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3329  0F01  085F               	movf	vfpfcnvrt@ap,w
  3330  0F02  0086               	movwf	6
  3331  0F03  0187               	clrf	7
  3332  0F04  0801               	movf	1,w
  3333  0F05  0084               	movwf	4
  3334  0F06  0185               	clrf	5
  3335  0F07  3004               	movlw	4
  3336  0F08  0781               	addwf	1,f
  3337  0F09  3F00               	moviw [0]fsr0
  3338  0F0A  00E7               	movwf	vfpfcnvrt@f
  3339  0F0B  3F01               	moviw [1]fsr0
  3340  0F0C  00E8               	movwf	vfpfcnvrt@f+1
  3341  0F0D  3F02               	moviw [2]fsr0
  3342  0F0E  00E9               	movwf	vfpfcnvrt@f+2
  3343  0F0F  3F03               	moviw [3]fsr0
  3344  0F10  00EA               	movwf	vfpfcnvrt@f+3
  3345  0F11                     l3973:
  3346                           
  3347                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3348  0F11  086A               	movf	vfpfcnvrt@f+3,w
  3349  0F12  00D9               	movwf	efgtoa@f+3
  3350  0F13  0869               	movf	vfpfcnvrt@f+2,w
  3351  0F14  00D8               	movwf	efgtoa@f+2
  3352  0F15  0868               	movf	vfpfcnvrt@f+1,w
  3353  0F16  00D7               	movwf	efgtoa@f+1
  3354  0F17  0867               	movf	vfpfcnvrt@f,w
  3355  0F18  00D6               	movwf	efgtoa@f
  3356  0F19  086E               	movf	vfpfcnvrt@c,w
  3357  0F1A  00E0               	movwf	??_vfpfcnvrt
  3358  0F1B  0860               	movf	??_vfpfcnvrt,w
  3359  0F1C  00DA               	movwf	efgtoa@c
  3360  0F1D  086F               	movf	vfpfcnvrt@fp,w
  3361  0F1E  3180  20B3  318D   	fcall	_efgtoa
  3362  0F21  0020               	movlb	0	; select bank0
  3363  0F22  0857               	movf	?_efgtoa+1,w
  3364  0F23  00DF               	movwf	?_vfpfcnvrt+1
  3365  0F24  0856               	movf	?_efgtoa,w
  3366  0F25  00DE               	movwf	?_vfpfcnvrt
  3367  0F26  2FFF               	goto	l903
  3368  0F27                     l3977:
  3369                           
  3370                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3371  0F27  3032               	movlw	low (STR_12| (0+32768))
  3372  0F28  00F0               	movwf	strncmp@_r
  3373  0F29  30A0               	movlw	high (STR_12| (0+32768))
  3374  0F2A  00F1               	movwf	strncmp@_r+1
  3375  0F2B  3002               	movlw	2
  3376  0F2C  00F2               	movwf	strncmp@n
  3377  0F2D  3000               	movlw	0
  3378  0F2E  00F3               	movwf	strncmp@n+1
  3379  0F2F  306B               	movlw	(low (vfpfcnvrt@ct| 0))& (0+255)
  3380  0F30  3191  2173  318D   	fcall	_strncmp
  3381  0F33  0870               	movf	?_strncmp,w
  3382  0F34  0471               	iorwf	?_strncmp+1,w
  3383  0F35  1D03               	btfss	3,2
  3384  0F36  2F38               	goto	u5391
  3385  0F37  2F39               	goto	u5390
  3386  0F38                     u5391:
  3387  0F38  2FA6               	goto	l3995
  3388  0F39                     u5390:
  3389  0F39                     l3979:
  3390                           
  3391                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  3392  0F39  0020               	movlb	0	; select bank0
  3393  0F3A  085E               	movf	vfpfcnvrt@fmt,w
  3394  0F3B  0086               	movwf	6
  3395  0F3C  0187               	clrf	7
  3396  0F3D  3F40               	moviw [0]fsr1
  3397  0F3E  00E0               	movwf	??_vfpfcnvrt
  3398  0F3F  3F41               	moviw [1]fsr1
  3399  0F40  00E1               	movwf	??_vfpfcnvrt+1
  3400  0F41  3001               	movlw	1
  3401  0F42  0760               	addwf	??_vfpfcnvrt,w
  3402  0F43  0084               	movwf	4
  3403  0F44  0861               	movf	??_vfpfcnvrt+1,w
  3404  0F45  1803               	skipnc
  3405  0F46  0A61               	incf	??_vfpfcnvrt+1,w
  3406  0F47  0085               	movwf	5
  3407  0F48  0800               	movf	0,w	;code access
  3408  0F49  00E2               	movwf	??_vfpfcnvrt+2
  3409  0F4A  0862               	movf	??_vfpfcnvrt+2,w
  3410  0F4B  00EE               	movwf	vfpfcnvrt@c
  3411  0F4C                     l3983:	
  3412                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 && isupper((int)(*fmt)[0]), ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3413                           
  3414  0F4C  085E               	movf	vfpfcnvrt@fmt,w
  3415  0F4D  0086               	movwf	6
  3416  0F4E  0187               	clrf	7
  3417  0F4F  3F40               	moviw [0]fsr1
  3418  0F50  00E0               	movwf	??_vfpfcnvrt
  3419  0F51  3F41               	moviw [1]fsr1
  3420  0F52  00E1               	movwf	??_vfpfcnvrt+1
  3421  0F53  0860               	movf	??_vfpfcnvrt,w
  3422  0F54  0084               	movwf	4
  3423  0F55  0861               	movf	??_vfpfcnvrt+1,w
  3424  0F56  0085               	movwf	5
  3425  0F57  0800               	movf	0,w	;code access
  3426  0F58  3EBF               	addlw	191
  3427  0F59  00E2               	movwf	??_vfpfcnvrt+2
  3428  0F5A  30FF               	movlw	255
  3429  0F5B  1803               	skipnc
  3430  0F5C  3000               	movlw	0
  3431  0F5D  00E3               	movwf	??_vfpfcnvrt+3
  3432  0F5E  3000               	movlw	0
  3433  0F5F  0263               	subwf	??_vfpfcnvrt+3,w
  3434  0F60  301A               	movlw	26
  3435  0F61  1903               	skipnz
  3436  0F62  0262               	subwf	??_vfpfcnvrt+2,w
  3437  0F63  1803               	skipnc
  3438  0F64  2F66               	goto	u5401
  3439  0F65  2F67               	goto	u5400
  3440  0F66                     u5401:
  3441  0F66  2F78               	goto	l3987
  3442  0F67                     u5400:
  3443  0F67                     l3985:
  3444                           
  3445                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3446  0F67  085F               	movf	vfpfcnvrt@ap,w
  3447  0F68  0086               	movwf	6
  3448  0F69  0187               	clrf	7
  3449  0F6A  0801               	movf	1,w
  3450  0F6B  0084               	movwf	4
  3451  0F6C  0185               	clrf	5
  3452  0F6D  3004               	movlw	4
  3453  0F6E  0781               	addwf	1,f
  3454  0F6F  3F00               	moviw [0]fsr0
  3455  0F70  00E7               	movwf	vfpfcnvrt@f
  3456  0F71  3F01               	moviw [1]fsr0
  3457  0F72  00E8               	movwf	vfpfcnvrt@f+1
  3458  0F73  3F02               	moviw [2]fsr0
  3459  0F74  00E9               	movwf	vfpfcnvrt@f+2
  3460  0F75  3F03               	moviw [3]fsr0
  3461  0F76  00EA               	movwf	vfpfcnvrt@f+3
  3462                           
  3463                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3464  0F77  2F88               	goto	l3989
  3465  0F78                     l3987:
  3466                           
  3467                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3468  0F78  085F               	movf	vfpfcnvrt@ap,w
  3469  0F79  0086               	movwf	6
  3470  0F7A  0187               	clrf	7
  3471  0F7B  0801               	movf	1,w
  3472  0F7C  0084               	movwf	4
  3473  0F7D  0185               	clrf	5
  3474  0F7E  3004               	movlw	4
  3475  0F7F  0781               	addwf	1,f
  3476  0F80  3F00               	moviw [0]fsr0
  3477  0F81  00E7               	movwf	vfpfcnvrt@f
  3478  0F82  3F01               	moviw [1]fsr0
  3479  0F83  00E8               	movwf	vfpfcnvrt@f+1
  3480  0F84  3F02               	moviw [2]fsr0
  3481  0F85  00E9               	movwf	vfpfcnvrt@f+2
  3482  0F86  3F03               	moviw [3]fsr0
  3483  0F87  00EA               	movwf	vfpfcnvrt@f+3
  3484  0F88                     l3989:
  3485                           
  3486                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3487  0F88  085E               	movf	vfpfcnvrt@fmt,w
  3488  0F89  0086               	movwf	6
  3489  0F8A  0187               	clrf	7
  3490  0F8B  3002               	movlw	2
  3491  0F8C  0781               	addwf	1,f
  3492  0F8D  3141               	addfsr 1,1
  3493  0F8E  1803               	skipnc
  3494  0F8F  0A81               	incf	1,f
  3495  0F90                     l3991:
  3496                           
  3497                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  3498  0F90  086A               	movf	vfpfcnvrt@f+3,w
  3499  0F91  00D9               	movwf	efgtoa@f+3
  3500  0F92  0869               	movf	vfpfcnvrt@f+2,w
  3501  0F93  00D8               	movwf	efgtoa@f+2
  3502  0F94  0868               	movf	vfpfcnvrt@f+1,w
  3503  0F95  00D7               	movwf	efgtoa@f+1
  3504  0F96  0867               	movf	vfpfcnvrt@f,w
  3505  0F97  00D6               	movwf	efgtoa@f
  3506  0F98  086E               	movf	vfpfcnvrt@c,w
  3507  0F99  00E0               	movwf	??_vfpfcnvrt
  3508  0F9A  0860               	movf	??_vfpfcnvrt,w
  3509  0F9B  00DA               	movwf	efgtoa@c
  3510  0F9C  086F               	movf	vfpfcnvrt@fp,w
  3511  0F9D  3180  20B3  318D   	fcall	_efgtoa
  3512  0FA0  0020               	movlb	0	; select bank0
  3513  0FA1  0857               	movf	?_efgtoa+1,w
  3514  0FA2  00DF               	movwf	?_vfpfcnvrt+1
  3515  0FA3  0856               	movf	?_efgtoa,w
  3516  0FA4  00DE               	movwf	?_vfpfcnvrt
  3517  0FA5  2FFF               	goto	l903
  3518  0FA6                     l3995:
  3519                           
  3520                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3521  0FA6  0020               	movlb	0	; select bank0
  3522  0FA7  085E               	movf	vfpfcnvrt@fmt,w
  3523  0FA8  0086               	movwf	6
  3524  0FA9  0187               	clrf	7
  3525  0FAA  3F40               	moviw [0]fsr1
  3526  0FAB  00E0               	movwf	??_vfpfcnvrt
  3527  0FAC  3F41               	moviw [1]fsr1
  3528  0FAD  00E1               	movwf	??_vfpfcnvrt+1
  3529  0FAE  0860               	movf	??_vfpfcnvrt,w
  3530  0FAF  0084               	movwf	4
  3531  0FB0  0861               	movf	??_vfpfcnvrt+1,w
  3532  0FB1  0085               	movwf	5
  3533  0FB2  0012               	moviw fsr0++
  3534  0FB3  3A25               	xorlw	37
  3535  0FB4  1D03               	btfss	3,2
  3536  0FB5  2FB7               	goto	u5411
  3537  0FB6  2FB8               	goto	u5410
  3538  0FB7                     u5411:
  3539  0FB7  2FD1               	goto	l4005
  3540  0FB8                     u5410:
  3541  0FB8                     l3997:
  3542                           
  3543                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3544  0FB8  085E               	movf	vfpfcnvrt@fmt,w
  3545  0FB9  0086               	movwf	6
  3546  0FBA  0187               	clrf	7
  3547  0FBB  3001               	movlw	1
  3548  0FBC  0781               	addwf	1,f
  3549  0FBD  3141               	addfsr 1,1
  3550  0FBE  1803               	skipnc
  3551  0FBF  0A81               	incf	1,f
  3552  0FC0                     l3999:
  3553                           
  3554                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3555  0FC0  3025               	movlw	37
  3556  0FC1  00F0               	movwf	fputc@c
  3557  0FC2  3000               	movlw	0
  3558  0FC3  00F1               	movwf	fputc@c+1
  3559  0FC4  086F               	movf	vfpfcnvrt@fp,w
  3560  0FC5  00E0               	movwf	??_vfpfcnvrt
  3561  0FC6  0860               	movf	??_vfpfcnvrt,w
  3562  0FC7  00F2               	movwf	fputc@fp
  3563  0FC8  3191  2120  318D   	fcall	_fputc
  3564  0FCB                     l4001:
  3565                           
  3566                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3567  0FCB  3001               	movlw	1
  3568  0FCC  0020               	movlb	0	; select bank0
  3569  0FCD  00DE               	movwf	?_vfpfcnvrt
  3570  0FCE  3000               	movlw	0
  3571  0FCF  00DF               	movwf	?_vfpfcnvrt+1
  3572  0FD0  2FFF               	goto	l903
  3573  0FD1                     l4005:
  3574                           
  3575                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3576  0FD1  085E               	movf	vfpfcnvrt@fmt,w
  3577  0FD2  0086               	movwf	6
  3578  0FD3  0187               	clrf	7
  3579  0FD4  3001               	movlw	1
  3580  0FD5  0781               	addwf	1,f
  3581  0FD6  3141               	addfsr 1,1
  3582  0FD7  1803               	skipnc
  3583  0FD8  0A81               	incf	1,f
  3584  0FD9                     l4007:
  3585                           
  3586                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3587  0FD9  01DE               	clrf	?_vfpfcnvrt
  3588  0FDA  01DF               	clrf	?_vfpfcnvrt+1
  3589  0FDB  2FFF               	goto	l903
  3590  0FDC                     l4011:
  3591                           
  3592                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3593  0FDC  085E               	movf	vfpfcnvrt@fmt,w
  3594  0FDD  0086               	movwf	6
  3595  0FDE  0187               	clrf	7
  3596  0FDF  3F40               	moviw [0]fsr1
  3597  0FE0  00E0               	movwf	??_vfpfcnvrt
  3598  0FE1  3F41               	moviw [1]fsr1
  3599  0FE2  00E1               	movwf	??_vfpfcnvrt+1
  3600  0FE3  0860               	movf	??_vfpfcnvrt,w
  3601  0FE4  0084               	movwf	4
  3602  0FE5  0861               	movf	??_vfpfcnvrt+1,w
  3603  0FE6  0085               	movwf	5
  3604  0FE7  0800               	movf	0,w	;code access
  3605  0FE8  00E2               	movwf	??_vfpfcnvrt+2
  3606  0FE9  01E3               	clrf	??_vfpfcnvrt+3
  3607  0FEA  0862               	movf	??_vfpfcnvrt+2,w
  3608  0FEB  00F0               	movwf	fputc@c
  3609  0FEC  0863               	movf	??_vfpfcnvrt+3,w
  3610  0FED  00F1               	movwf	fputc@c+1
  3611  0FEE  086F               	movf	vfpfcnvrt@fp,w
  3612  0FEF  00E4               	movwf	??_vfpfcnvrt+4
  3613  0FF0  0864               	movf	??_vfpfcnvrt+4,w
  3614  0FF1  00F2               	movwf	fputc@fp
  3615  0FF2  3191  2120  318D   	fcall	_fputc
  3616  0FF5                     l4013:
  3617                           
  3618                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3619  0FF5  0020               	movlb	0	; select bank0
  3620  0FF6  085E               	movf	vfpfcnvrt@fmt,w
  3621  0FF7  0086               	movwf	6
  3622  0FF8  0187               	clrf	7
  3623  0FF9  3001               	movlw	1
  3624  0FFA  0781               	addwf	1,f
  3625  0FFB  3141               	addfsr 1,1
  3626  0FFC  1803               	skipnc
  3627  0FFD  0A81               	incf	1,f
  3628  0FFE  2FCB               	goto	l4001
  3629  0FFF                     l903:
  3630  0FFF  0008               	return
  3631  1000                     __end_of_vfpfcnvrt:
  3632                           
  3633                           	psect	text4
  3634  1173                     __ptext4:	
  3635 ;; *************** function _strncmp *****************
  3636 ;; Defined at:
  3637 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;  _l              1    wreg     PTR const unsigned char 
  3640 ;;		 -> vfpfcnvrt@ct(3), 
  3641 ;;  _r              2    0[COMMON] PTR const unsigned char 
  3642 ;;		 -> STR_14(3), 
  3643 ;;  n               2    2[COMMON] unsigned int 
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;  _l              1    5[COMMON] PTR const unsigned char 
  3646 ;;		 -> vfpfcnvrt@ct(3), 
  3647 ;;  r               2    6[COMMON] PTR const unsigned char 
  3648 ;;		 -> STR_14(3), 
  3649 ;;  l               1    8[COMMON] PTR const unsigned char 
  3650 ;;		 -> vfpfcnvrt@ct(3), 
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  2    0[COMMON] int 
  3653 ;; Registers used:
  3654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3660 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3661 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3662 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3663 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3664 ;;Total ram usage:        9 bytes
  3665 ;; Hardware stack levels used: 1
  3666 ;; This function calls:
  3667 ;;		Nothing
  3668 ;; This function is called by:
  3669 ;;		_vfpfcnvrt
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673  1173                     _strncmp:	
  3674                           ;psect for function _strncmp
  3675                           
  3676                           
  3677                           ;incstack = 0
  3678                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  3679                           ;strncmp@_l stored from wreg
  3680  1173  00F5               	movwf	strncmp@_l
  3681  1174                     l3829:
  3682  1174  0875               	movf	strncmp@_l,w
  3683  1175  00F4               	movwf	??_strncmp
  3684  1176  0874               	movf	??_strncmp,w
  3685  1177  00F8               	movwf	strncmp@l
  3686  1178  0871               	movf	strncmp@_r+1,w
  3687  1179  00F7               	movwf	strncmp@r+1
  3688  117A  0870               	movf	strncmp@_r,w
  3689  117B  00F6               	movwf	strncmp@r
  3690  117C                     l3831:
  3691  117C  3001               	movlw	1
  3692  117D  02F2               	subwf	strncmp@n,f
  3693  117E  3000               	movlw	0
  3694  117F  3BF3               	subwfb	strncmp@n+1,f
  3695  1180  0A72               	incf	strncmp@n,w
  3696  1181  1D03               	skipz
  3697  1182  2987               	goto	u5171
  3698  1183  0A73               	incf	strncmp@n+1,w
  3699  1184  1D03               	btfss	3,2
  3700  1185  2987               	goto	u5171
  3701  1186  2988               	goto	u5170
  3702  1187                     u5171:
  3703  1187  2997               	goto	l3843
  3704  1188                     u5170:
  3705  1188                     l3833:
  3706  1188  01F0               	clrf	?_strncmp
  3707  1189  01F1               	clrf	?_strncmp+1
  3708  118A  29CA               	goto	l1023
  3709  118B                     l3837:
  3710  118B  3001               	movlw	1
  3711  118C  00F4               	movwf	??_strncmp
  3712  118D  0874               	movf	??_strncmp,w
  3713  118E  07F8               	addwf	strncmp@l,f
  3714  118F                     l3839:
  3715  118F  3001               	movlw	1
  3716  1190  07F6               	addwf	strncmp@r,f
  3717  1191  3000               	movlw	0
  3718  1192  3DF7               	addwfc	strncmp@r+1,f
  3719  1193                     l3841:
  3720  1193  3001               	movlw	1
  3721  1194  02F2               	subwf	strncmp@n,f
  3722  1195  3000               	movlw	0
  3723  1196  3BF3               	subwfb	strncmp@n+1,f
  3724  1197                     l3843:
  3725  1197  0878               	movf	strncmp@l,w
  3726  1198  0086               	movwf	6
  3727  1199  0187               	clrf	7
  3728  119A  0801               	movf	1,w
  3729  119B  1903               	btfsc	3,2
  3730  119C  299E               	goto	u5181
  3731  119D  299F               	goto	u5180
  3732  119E                     u5181:
  3733  119E  29BD               	goto	l3851
  3734  119F                     u5180:
  3735  119F                     l3845:
  3736  119F  0876               	movf	strncmp@r,w
  3737  11A0  0084               	movwf	4
  3738  11A1  0877               	movf	strncmp@r+1,w
  3739  11A2  0085               	movwf	5
  3740  11A3  0012               	moviw fsr0++
  3741  11A4  1903               	btfsc	3,2
  3742  11A5  29A7               	goto	u5191
  3743  11A6  29A8               	goto	u5190
  3744  11A7                     u5191:
  3745  11A7  29BD               	goto	l3851
  3746  11A8                     u5190:
  3747  11A8                     l3847:
  3748  11A8  0872               	movf	strncmp@n,w
  3749  11A9  0473               	iorwf	strncmp@n+1,w
  3750  11AA  1903               	btfsc	3,2
  3751  11AB  29AD               	goto	u5201
  3752  11AC  29AE               	goto	u5200
  3753  11AD                     u5201:
  3754  11AD  29BD               	goto	l3851
  3755  11AE                     u5200:
  3756  11AE                     l3849:
  3757  11AE  0876               	movf	strncmp@r,w
  3758  11AF  0084               	movwf	4
  3759  11B0  0877               	movf	strncmp@r+1,w
  3760  11B1  0085               	movwf	5
  3761  11B2  0800               	movf	0,w	;code access
  3762  11B3  00F4               	movwf	??_strncmp
  3763  11B4  0878               	movf	strncmp@l,w
  3764  11B5  0086               	movwf	6
  3765  11B6  0187               	clrf	7
  3766  11B7  0801               	movf	1,w
  3767  11B8  0674               	xorwf	??_strncmp,w
  3768  11B9  1903               	skipnz
  3769  11BA  29BC               	goto	u5211
  3770  11BB  29BD               	goto	u5210
  3771  11BC                     u5211:
  3772  11BC  298B               	goto	l3837
  3773  11BD                     u5210:
  3774  11BD                     l3851:
  3775  11BD  0878               	movf	strncmp@l,w
  3776  11BE  0086               	movwf	6
  3777  11BF  0187               	clrf	7
  3778  11C0  0876               	movf	strncmp@r,w
  3779  11C1  0084               	movwf	4
  3780  11C2  0877               	movf	strncmp@r+1,w
  3781  11C3  0085               	movwf	5
  3782  11C4  0800               	movf	0,w	;code access
  3783  11C5  0201               	subwf	1,w
  3784  11C6  00F0               	movwf	?_strncmp
  3785  11C7  01F1               	clrf	?_strncmp+1
  3786  11C8  1C03               	skipc
  3787  11C9  03F1               	decf	?_strncmp+1,f
  3788  11CA                     l1023:
  3789  11CA  0008               	return
  3790  11CB                     __end_of_strncmp:
  3791                           
  3792                           	psect	text5
  3793  00B3                     __ptext5:	
  3794 ;; *************** function _efgtoa *****************
  3795 ;; Defined at:
  3796 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;  fp              1    wreg     PTR struct _IO_FILE
  3799 ;;		 -> sprintf@f(10), 
  3800 ;;  f               4   54[BANK0 ] PTR struct _IO_FILE
  3801 ;;  c               1   58[BANK0 ] unsigned char 
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;  fp              1   22[BANK1 ] PTR struct _IO_FILE
  3804 ;;		 -> sprintf@f(10), 
  3805 ;;  u               4   47[BANK1 ] PTR struct _IO_FILE
  3806 ;;  g               4   39[BANK1 ] PTR struct _IO_FILE
  3807 ;;  l               4   33[BANK1 ] PTR struct _IO_FILE
  3808 ;;  h               4   29[BANK1 ] PTR struct _IO_FILE
  3809 ;;  ou              4   14[BANK1 ] PTR struct _IO_FILE
  3810 ;;  n               2   45[BANK1 ] int 
  3811 ;;  e               2   43[BANK1 ] int 
  3812 ;;  i               2   37[BANK1 ] int 
  3813 ;;  w               2   25[BANK1 ] int 
  3814 ;;  p               2   23[BANK1 ] int 
  3815 ;;  sign            2   20[BANK1 ] int 
  3816 ;;  d               2   18[BANK1 ] int 
  3817 ;;  m               2   12[BANK1 ] int 
  3818 ;;  ne              2   10[BANK1 ] int 
  3819 ;;  pp              2    8[BANK1 ] int 
  3820 ;;  t               2    6[BANK1 ] int 
  3821 ;;  mode            1   28[BANK1 ] unsigned char 
  3822 ;;  nmode           1   27[BANK1 ] unsigned char 
  3823 ;; Return value:  Size  Location     Type
  3824 ;;                  2   54[BANK0 ] int 
  3825 ;; Registers used:
  3826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3827 ;; Tracked objects:
  3828 ;;		On entry : 0/0
  3829 ;;		On exit  : 0/0
  3830 ;;		Unchanged: 0/0
  3831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3832 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3833 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0
  3834 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3835 ;;      Totals:         0       8      51       0       0       0       0       0       0       0       0       0       
      +0       0
  3836 ;;Total ram usage:       59 bytes
  3837 ;; Hardware stack levels used: 1
  3838 ;; Hardware stack levels required when called: 4
  3839 ;; This function calls:
  3840 ;;		___awdiv
  3841 ;;		___awmod
  3842 ;;		___fladd
  3843 ;;		___fldiv
  3844 ;;		___fleq
  3845 ;;		___flge
  3846 ;;		___flmul
  3847 ;;		___flneg
  3848 ;;		___flsub
  3849 ;;		___fltol
  3850 ;;		___fpclassifyf
  3851 ;;		_floorf
  3852 ;;		_isupper
  3853 ;;		_pad
  3854 ;;		_strcpy
  3855 ;;		_tolower
  3856 ;; This function is called by:
  3857 ;;		_vfpfcnvrt
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861  00B3                     _efgtoa:	
  3862                           ;psect for function _efgtoa
  3863                           
  3864                           
  3865                           ;incstack = 0
  3866                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3867                           ;efgtoa@fp stored from wreg
  3868  00B3  0021               	movlb	1	; select bank1
  3869  00B4  00B6               	movwf	efgtoa@fp^(0+128)
  3870  00B5                     l3497:
  3871                           
  3872                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3873  00B5  01B4               	clrf	efgtoa@sign^(0+128)
  3874  00B6  01B5               	clrf	(efgtoa@sign+1)^(0+128)
  3875  00B7                     l3499:
  3876                           
  3877                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3878  00B7  0020               	movlb	0	; select bank0
  3879  00B8  0859               	movf	efgtoa@f+3,w
  3880  00B9  0021               	movlb	1	; select bank1
  3881  00BA  00CA               	movwf	(efgtoa@g+3)^(0+128)
  3882  00BB  0020               	movlb	0	; select bank0
  3883  00BC  0858               	movf	efgtoa@f+2,w
  3884  00BD  0021               	movlb	1	; select bank1
  3885  00BE  00C9               	movwf	(efgtoa@g+2)^(0+128)
  3886  00BF  0020               	movlb	0	; select bank0
  3887  00C0  0857               	movf	efgtoa@f+1,w
  3888  00C1  0021               	movlb	1	; select bank1
  3889  00C2  00C8               	movwf	(efgtoa@g+1)^(0+128)
  3890  00C3  0020               	movlb	0	; select bank0
  3891  00C4  0856               	movf	efgtoa@f,w
  3892  00C5  0021               	movlb	1	; select bank1
  3893  00C6  00C7               	movwf	efgtoa@g^(0+128)
  3894  00C7                     l3501:
  3895                           
  3896                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3897  00C7  084A               	movf	(efgtoa@g+3)^(0+128),w
  3898  00C8  0020               	movlb	0	; select bank0
  3899  00C9  00BD               	movwf	___flge@ff1+3
  3900  00CA  0021               	movlb	1	; select bank1
  3901  00CB  0849               	movf	(efgtoa@g+2)^(0+128),w
  3902  00CC  0020               	movlb	0	; select bank0
  3903  00CD  00BC               	movwf	___flge@ff1+2
  3904  00CE  0021               	movlb	1	; select bank1
  3905  00CF  0848               	movf	(efgtoa@g+1)^(0+128),w
  3906  00D0  0020               	movlb	0	; select bank0
  3907  00D1  00BB               	movwf	___flge@ff1+1
  3908  00D2  0021               	movlb	1	; select bank1
  3909  00D3  0847               	movf	efgtoa@g^(0+128),w
  3910  00D4  0020               	movlb	0	; select bank0
  3911  00D5  00BA               	movwf	___flge@ff1
  3912  00D6  3000               	movlw	0
  3913  00D7  00C1               	movwf	___flge@ff2+3
  3914  00D8  3000               	movlw	0
  3915  00D9  00C0               	movwf	___flge@ff2+2
  3916  00DA  3000               	movlw	0
  3917  00DB  00BF               	movwf	___flge@ff2+1
  3918  00DC  3000               	movlw	0
  3919  00DD  00BE               	movwf	___flge@ff2
  3920  00DE  3193  2376  3180   	fcall	___flge
  3921  00E1  1803               	btfsc	3,0
  3922  00E2  28E4               	goto	u4651
  3923  00E3  28E5               	goto	u4650
  3924  00E4                     u4651:
  3925  00E4  28FE               	goto	l3507
  3926  00E5                     u4650:
  3927  00E5                     l3503:
  3928                           
  3929                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3930  00E5  3001               	movlw	1
  3931  00E6  0021               	movlb	1	; select bank1
  3932  00E7  00B4               	movwf	efgtoa@sign^(0+128)
  3933  00E8  3000               	movlw	0
  3934  00E9  00B5               	movwf	(efgtoa@sign^(0+128)+1)
  3935  00EA                     l3505:
  3936                           
  3937                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3938  00EA  084A               	movf	(efgtoa@g+3)^(0+128),w
  3939  00EB  00F3               	movwf	___flneg@f1+3
  3940  00EC  0849               	movf	(efgtoa@g+2)^(0+128),w
  3941  00ED  00F2               	movwf	___flneg@f1+2
  3942  00EE  0848               	movf	(efgtoa@g+1)^(0+128),w
  3943  00EF  00F1               	movwf	___flneg@f1+1
  3944  00F0  0847               	movf	efgtoa@g^(0+128),w
  3945  00F1  00F0               	movwf	___flneg@f1
  3946  00F2  3188  2000  3180   	fcall	___flneg
  3947  00F5  0873               	movf	?___flneg+3,w
  3948  00F6  0021               	movlb	1	; select bank1
  3949  00F7  00CA               	movwf	(efgtoa@g+3)^(0+128)
  3950  00F8  0872               	movf	?___flneg+2,w
  3951  00F9  00C9               	movwf	(efgtoa@g+2)^(0+128)
  3952  00FA  0871               	movf	?___flneg+1,w
  3953  00FB  00C8               	movwf	(efgtoa@g+1)^(0+128)
  3954  00FC  0870               	movf	?___flneg,w
  3955  00FD  00C7               	movwf	efgtoa@g^(0+128)
  3956  00FE                     l3507:
  3957                           
  3958                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3959  00FE  0021               	movlb	1	; select bank1
  3960  00FF  01CD               	clrf	efgtoa@n^(0+128)
  3961  0100  01CE               	clrf	(efgtoa@n+1)^(0+128)
  3962  0101                     l3509:
  3963                           
  3964                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3965  0101  0022               	movlb	2	; select bank2
  3966  0102  0837               	movf	(_width+1)^(0+256),w
  3967  0103  0021               	movlb	1	; select bank1
  3968  0104  00BA               	movwf	(efgtoa@w+1)^(0+128)
  3969  0105  0022               	movlb	2	; select bank2
  3970  0106  0836               	movf	_width^(0+256),w
  3971  0107  0021               	movlb	1	; select bank1
  3972  0108  00B9               	movwf	efgtoa@w^(0+128)
  3973  0109                     l3511:
  3974                           
  3975                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3976  0109  0834               	movf	efgtoa@sign^(0+128),w
  3977  010A  0435               	iorwf	(efgtoa@sign+1)^(0+128),w
  3978  010B  1D03               	btfss	3,2
  3979  010C  290E               	goto	u4661
  3980  010D  290F               	goto	u4660
  3981  010E                     u4661:
  3982  010E  2914               	goto	l3515
  3983  010F                     u4660:
  3984  010F                     l3513:
  3985  010F  0022               	movlb	2	; select bank2
  3986  0110  1D3A               	btfss	_flags^(0+256),2
  3987  0111  2913               	goto	u4671
  3988  0112  2914               	goto	u4670
  3989  0113                     u4671:
  3990  0113  2933               	goto	l3527
  3991  0114                     u4670:
  3992  0114                     l3515:
  3993                           
  3994                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3995  0114  0021               	movlb	1	; select bank1
  3996  0115  0834               	movf	efgtoa@sign^(0+128),w
  3997  0116  0435               	iorwf	(efgtoa@sign+1)^(0+128),w
  3998  0117  1D03               	btfss	3,2
  3999  0118  291A               	goto	u4681
  4000  0119  291B               	goto	u4680
  4001  011A                     u4681:
  4002  011A  2920               	goto	l3519
  4003  011B                     u4680:
  4004  011B                     l3517:
  4005  011B  302B               	movlw	43
  4006  011C  00A0               	movwf	_efgtoa$930^(0+128)
  4007  011D  3000               	movlw	0
  4008  011E  00A1               	movwf	(_efgtoa$930^(0+128)+1)
  4009  011F  2924               	goto	l3521
  4010  0120                     l3519:
  4011  0120  302D               	movlw	45
  4012  0121  00A0               	movwf	_efgtoa$930^(0+128)
  4013  0122  3000               	movlw	0
  4014  0123  00A1               	movwf	(_efgtoa$930^(0+128)+1)
  4015  0124                     l3521:
  4016  0124  0820               	movf	_efgtoa$930^(0+128),w
  4017  0125  0020               	movlb	0	; select bank0
  4018  0126  00DB               	movwf	??_efgtoa
  4019  0127  085B               	movf	??_efgtoa,w
  4020  0128  0023               	movlb	3	; select bank3
  4021  0129  00A0               	movwf	_dbuf^(0+384)
  4022  012A                     l3523:
  4023                           
  4024                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4025  012A  3001               	movlw	1
  4026  012B  0021               	movlb	1	; select bank1
  4027  012C  07CD               	addwf	efgtoa@n^(0+128),f
  4028  012D  3000               	movlw	0
  4029  012E  3DCE               	addwfc	(efgtoa@n+1)^(0+128),f
  4030  012F                     l3525:
  4031                           
  4032                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  4033  012F  30FF               	movlw	255
  4034  0130  07B9               	addwf	efgtoa@w^(0+128),f
  4035  0131  30FF               	movlw	255
  4036  0132  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  4037  0133                     l3527:
  4038                           
  4039                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  4040  0133  0021               	movlb	1	; select bank1
  4041  0134  084A               	movf	(efgtoa@g+3)^(0+128),w
  4042  0135  00F3               	movwf	___fpclassifyf@x+3
  4043  0136  0849               	movf	(efgtoa@g+2)^(0+128),w
  4044  0137  00F2               	movwf	___fpclassifyf@x+2
  4045  0138  0848               	movf	(efgtoa@g+1)^(0+128),w
  4046  0139  00F1               	movwf	___fpclassifyf@x+1
  4047  013A  0847               	movf	efgtoa@g^(0+128),w
  4048  013B  00F0               	movwf	___fpclassifyf@x
  4049  013C  3192  22F7  3180   	fcall	___fpclassifyf
  4050  013F  0370               	decf	?___fpclassifyf,w
  4051  0140  0471               	iorwf	?___fpclassifyf+1,w
  4052  0141  1D03               	btfss	3,2
  4053  0142  2944               	goto	u4691
  4054  0143  2945               	goto	u4690
  4055  0144                     u4691:
  4056  0144  2988               	goto	l3545
  4057  0145                     u4690:
  4058  0145                     l3533:
  4059  0145  0020               	movlb	0	; select bank0
  4060  0146  085A               	movf	efgtoa@c,w
  4061  0147  3EBF               	addlw	191
  4062  0148  00DB               	movwf	??_efgtoa
  4063  0149  30FF               	movlw	255
  4064  014A  1803               	skipnc
  4065  014B  3000               	movlw	0
  4066  014C  00DC               	movwf	??_efgtoa+1
  4067  014D  3000               	movlw	0
  4068  014E  025C               	subwf	??_efgtoa+1,w
  4069  014F  301A               	movlw	26
  4070  0150  1903               	skipnz
  4071  0151  025B               	subwf	??_efgtoa,w
  4072  0152  1803               	skipnc
  4073  0153  2955               	goto	u4701
  4074  0154  2956               	goto	u4700
  4075  0155                     u4701:
  4076  0155  2961               	goto	l3537
  4077  0156                     u4700:
  4078  0156                     l3535:
  4079                           
  4080                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4081  0156  3022               	movlw	low (STR_4| (0+32768))
  4082  0157  00F0               	movwf	strcpy@src
  4083  0158  30A0               	movlw	high (STR_4| (0+32768))
  4084  0159  00F1               	movwf	strcpy@src+1
  4085  015A  0021               	movlb	1	; select bank1
  4086  015B  084D               	movf	efgtoa@n^(0+128),w
  4087  015C  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4088  015D  319E  26DC  3180   	fcall	_strcpy
  4089                           
  4090                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4091  0160  296B               	goto	l3539
  4092  0161                     l3537:
  4093                           
  4094                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4095  0161  302A               	movlw	low (STR_5| (0+32768))
  4096  0162  00F0               	movwf	strcpy@src
  4097  0163  30A0               	movlw	high (STR_5| (0+32768))
  4098  0164  00F1               	movwf	strcpy@src+1
  4099  0165  0021               	movlb	1	; select bank1
  4100  0166  084D               	movf	efgtoa@n^(0+128),w
  4101  0167  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4102  0168  319E  26DC  3180   	fcall	_strcpy
  4103  016B                     l3539:
  4104                           
  4105                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4106  016B  30FD               	movlw	253
  4107  016C  0021               	movlb	1	; select bank1
  4108  016D  07B9               	addwf	efgtoa@w^(0+128),f
  4109  016E  30FF               	movlw	255
  4110  016F  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  4111  0170                     l3541:
  4112                           
  4113                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4114  0170  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  4115  0171  0020               	movlb	0	; select bank0
  4116  0172  00DB               	movwf	??_efgtoa
  4117  0173  085B               	movf	??_efgtoa,w
  4118  0174  00A4               	movwf	pad@buf
  4119  0175  0021               	movlb	1	; select bank1
  4120  0176  083A               	movf	(efgtoa@w+1)^(0+128),w
  4121  0177  0020               	movlb	0	; select bank0
  4122  0178  00A6               	movwf	pad@p+1
  4123  0179  0021               	movlb	1	; select bank1
  4124  017A  0839               	movf	efgtoa@w^(0+128),w
  4125  017B  0020               	movlb	0	; select bank0
  4126  017C  00A5               	movwf	pad@p
  4127  017D  0021               	movlb	1	; select bank1
  4128  017E  0836               	movf	efgtoa@fp^(0+128),w
  4129  017F  3191  21CB  3180   	fcall	_pad
  4130  0182  0020               	movlb	0	; select bank0
  4131  0183  0825               	movf	?_pad+1,w
  4132  0184  00D7               	movwf	?_efgtoa+1
  4133  0185  0824               	movf	?_pad,w
  4134  0186  00D6               	movwf	?_efgtoa
  4135  0187  2FE0               	goto	l797
  4136  0188                     l3545:
  4137                           
  4138                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  4139  0188  0021               	movlb	1	; select bank1
  4140  0189  084A               	movf	(efgtoa@g+3)^(0+128),w
  4141  018A  00F3               	movwf	___fpclassifyf@x+3
  4142  018B  0849               	movf	(efgtoa@g+2)^(0+128),w
  4143  018C  00F2               	movwf	___fpclassifyf@x+2
  4144  018D  0848               	movf	(efgtoa@g+1)^(0+128),w
  4145  018E  00F1               	movwf	___fpclassifyf@x+1
  4146  018F  0847               	movf	efgtoa@g^(0+128),w
  4147  0190  00F0               	movwf	___fpclassifyf@x
  4148  0191  3192  22F7  3180   	fcall	___fpclassifyf
  4149  0194  0870               	movf	?___fpclassifyf,w
  4150  0195  0471               	iorwf	?___fpclassifyf+1,w
  4151  0196  1D03               	btfss	3,2
  4152  0197  2999               	goto	u4711
  4153  0198  299A               	goto	u4710
  4154  0199                     u4711:
  4155  0199  29DD               	goto	l3563
  4156  019A                     u4710:
  4157  019A                     l3551:
  4158  019A  0020               	movlb	0	; select bank0
  4159  019B  085A               	movf	efgtoa@c,w
  4160  019C  3EBF               	addlw	191
  4161  019D  00DB               	movwf	??_efgtoa
  4162  019E  30FF               	movlw	255
  4163  019F  1803               	skipnc
  4164  01A0  3000               	movlw	0
  4165  01A1  00DC               	movwf	??_efgtoa+1
  4166  01A2  3000               	movlw	0
  4167  01A3  025C               	subwf	??_efgtoa+1,w
  4168  01A4  301A               	movlw	26
  4169  01A5  1903               	skipnz
  4170  01A6  025B               	subwf	??_efgtoa,w
  4171  01A7  1803               	skipnc
  4172  01A8  29AA               	goto	u4721
  4173  01A9  29AB               	goto	u4720
  4174  01AA                     u4721:
  4175  01AA  29B6               	goto	l3555
  4176  01AB                     u4720:
  4177  01AB                     l3553:
  4178                           
  4179                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4180  01AB  3026               	movlw	low (STR_8| (0+32768))
  4181  01AC  00F0               	movwf	strcpy@src
  4182  01AD  30A0               	movlw	high (STR_8| (0+32768))
  4183  01AE  00F1               	movwf	strcpy@src+1
  4184  01AF  0021               	movlb	1	; select bank1
  4185  01B0  084D               	movf	efgtoa@n^(0+128),w
  4186  01B1  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4187  01B2  319E  26DC  3180   	fcall	_strcpy
  4188                           
  4189                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4190  01B5  29C0               	goto	l3557
  4191  01B6                     l3555:
  4192                           
  4193                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4194  01B6  302E               	movlw	low (STR_9| (0+32768))
  4195  01B7  00F0               	movwf	strcpy@src
  4196  01B8  30A0               	movlw	high (STR_9| (0+32768))
  4197  01B9  00F1               	movwf	strcpy@src+1
  4198  01BA  0021               	movlb	1	; select bank1
  4199  01BB  084D               	movf	efgtoa@n^(0+128),w
  4200  01BC  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4201  01BD  319E  26DC  3180   	fcall	_strcpy
  4202  01C0                     l3557:
  4203                           
  4204                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4205  01C0  30FD               	movlw	253
  4206  01C1  0021               	movlb	1	; select bank1
  4207  01C2  07B9               	addwf	efgtoa@w^(0+128),f
  4208  01C3  30FF               	movlw	255
  4209  01C4  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  4210  01C5                     l3559:
  4211                           
  4212                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4213  01C5  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  4214  01C6  0020               	movlb	0	; select bank0
  4215  01C7  00DB               	movwf	??_efgtoa
  4216  01C8  085B               	movf	??_efgtoa,w
  4217  01C9  00A4               	movwf	pad@buf
  4218  01CA  0021               	movlb	1	; select bank1
  4219  01CB  083A               	movf	(efgtoa@w+1)^(0+128),w
  4220  01CC  0020               	movlb	0	; select bank0
  4221  01CD  00A6               	movwf	pad@p+1
  4222  01CE  0021               	movlb	1	; select bank1
  4223  01CF  0839               	movf	efgtoa@w^(0+128),w
  4224  01D0  0020               	movlb	0	; select bank0
  4225  01D1  00A5               	movwf	pad@p
  4226  01D2  0021               	movlb	1	; select bank1
  4227  01D3  0836               	movf	efgtoa@fp^(0+128),w
  4228  01D4  3191  21CB  3180   	fcall	_pad
  4229  01D7  0020               	movlb	0	; select bank0
  4230  01D8  0825               	movf	?_pad+1,w
  4231  01D9  00D7               	movwf	?_efgtoa+1
  4232  01DA  0824               	movf	?_pad,w
  4233  01DB  00D6               	movwf	?_efgtoa
  4234  01DC  2FE0               	goto	l797
  4235  01DD                     l3563:
  4236                           
  4237                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  4238  01DD  303F               	movlw	63
  4239  01DE  0021               	movlb	1	; select bank1
  4240  01DF  00D2               	movwf	(efgtoa@u+3)^(0+128)
  4241  01E0  3080               	movlw	128
  4242  01E1  00D1               	movwf	(efgtoa@u+2)^(0+128)
  4243  01E2  3000               	movlw	0
  4244  01E3  00D0               	movwf	(efgtoa@u+1)^(0+128)
  4245  01E4  3000               	movlw	0
  4246  01E5  00CF               	movwf	efgtoa@u^(0+128)
  4247  01E6                     l3565:
  4248                           
  4249                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4250  01E6  01CB               	clrf	efgtoa@e^(0+128)
  4251  01E7  01CC               	clrf	(efgtoa@e+1)^(0+128)
  4252  01E8                     l3567:
  4253                           
  4254                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4255  01E8  084A               	movf	(efgtoa@g+3)^(0+128),w
  4256  01E9  00F3               	movwf	___fleq@ff1+3
  4257  01EA  0849               	movf	(efgtoa@g+2)^(0+128),w
  4258  01EB  00F2               	movwf	___fleq@ff1+2
  4259  01EC  0848               	movf	(efgtoa@g+1)^(0+128),w
  4260  01ED  00F1               	movwf	___fleq@ff1+1
  4261  01EE  0847               	movf	efgtoa@g^(0+128),w
  4262  01EF  00F0               	movwf	___fleq@ff1
  4263  01F0  3000               	movlw	0
  4264  01F1  00F7               	movwf	___fleq@ff2+3
  4265  01F2  3000               	movlw	0
  4266  01F3  00F6               	movwf	___fleq@ff2+2
  4267  01F4  3000               	movlw	0
  4268  01F5  00F5               	movwf	___fleq@ff2+1
  4269  01F6  3000               	movlw	0
  4270  01F7  00F4               	movwf	___fleq@ff2
  4271  01F8  3190  202F  3180   	fcall	___fleq
  4272  01FB  1803               	btfsc	3,0
  4273  01FC  29FE               	goto	u4731
  4274  01FD  29FF               	goto	u4730
  4275  01FE                     u4731:
  4276  01FE  2AB4               	goto	l3583
  4277  01FF                     u4730:
  4278  01FF  2A30               	goto	l3575
  4279  0200                     l3571:
  4280                           
  4281                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4282  0200  3041               	movlw	65
  4283  0201  0020               	movlb	0	; select bank0
  4284  0202  00A3               	movwf	___flmul@b+3
  4285  0203  3020               	movlw	32
  4286  0204  00A2               	movwf	___flmul@b+2
  4287  0205  3000               	movlw	0
  4288  0206  00A1               	movwf	___flmul@b+1
  4289  0207  3000               	movlw	0
  4290  0208  00A0               	movwf	___flmul@b
  4291  0209  0021               	movlb	1	; select bank1
  4292  020A  0852               	movf	(efgtoa@u+3)^(0+128),w
  4293  020B  0020               	movlb	0	; select bank0
  4294  020C  00A7               	movwf	___flmul@a+3
  4295  020D  0021               	movlb	1	; select bank1
  4296  020E  0851               	movf	(efgtoa@u+2)^(0+128),w
  4297  020F  0020               	movlb	0	; select bank0
  4298  0210  00A6               	movwf	___flmul@a+2
  4299  0211  0021               	movlb	1	; select bank1
  4300  0212  0850               	movf	(efgtoa@u+1)^(0+128),w
  4301  0213  0020               	movlb	0	; select bank0
  4302  0214  00A5               	movwf	___flmul@a+1
  4303  0215  0021               	movlb	1	; select bank1
  4304  0216  084F               	movf	efgtoa@u^(0+128),w
  4305  0217  0020               	movlb	0	; select bank0
  4306  0218  00A4               	movwf	___flmul@a
  4307  0219  318A  22D7  3180   	fcall	___flmul
  4308  021C  0020               	movlb	0	; select bank0
  4309  021D  0823               	movf	?___flmul+3,w
  4310  021E  0021               	movlb	1	; select bank1
  4311  021F  00D2               	movwf	(efgtoa@u+3)^(0+128)
  4312  0220  0020               	movlb	0	; select bank0
  4313  0221  0822               	movf	?___flmul+2,w
  4314  0222  0021               	movlb	1	; select bank1
  4315  0223  00D1               	movwf	(efgtoa@u+2)^(0+128)
  4316  0224  0020               	movlb	0	; select bank0
  4317  0225  0821               	movf	?___flmul+1,w
  4318  0226  0021               	movlb	1	; select bank1
  4319  0227  00D0               	movwf	(efgtoa@u+1)^(0+128)
  4320  0228  0020               	movlb	0	; select bank0
  4321  0229  0820               	movf	?___flmul,w
  4322  022A  0021               	movlb	1	; select bank1
  4323  022B  00CF               	movwf	efgtoa@u^(0+128)
  4324  022C                     l3573:
  4325                           
  4326                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4327  022C  3001               	movlw	1
  4328  022D  07CB               	addwf	efgtoa@e^(0+128),f
  4329  022E  3000               	movlw	0
  4330  022F  3DCC               	addwfc	(efgtoa@e+1)^(0+128),f
  4331  0230                     l3575:
  4332                           
  4333                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4334  0230  0021               	movlb	1	; select bank1
  4335  0231  084A               	movf	(efgtoa@g+3)^(0+128),w
  4336  0232  0020               	movlb	0	; select bank0
  4337  0233  00BD               	movwf	___flge@ff1+3
  4338  0234  0021               	movlb	1	; select bank1
  4339  0235  0849               	movf	(efgtoa@g+2)^(0+128),w
  4340  0236  0020               	movlb	0	; select bank0
  4341  0237  00BC               	movwf	___flge@ff1+2
  4342  0238  0021               	movlb	1	; select bank1
  4343  0239  0848               	movf	(efgtoa@g+1)^(0+128),w
  4344  023A  0020               	movlb	0	; select bank0
  4345  023B  00BB               	movwf	___flge@ff1+1
  4346  023C  0021               	movlb	1	; select bank1
  4347  023D  0847               	movf	efgtoa@g^(0+128),w
  4348  023E  0020               	movlb	0	; select bank0
  4349  023F  00BA               	movwf	___flge@ff1
  4350  0240  3041               	movlw	65
  4351  0241  00A3               	movwf	___flmul@b+3
  4352  0242  3020               	movlw	32
  4353  0243  00A2               	movwf	___flmul@b+2
  4354  0244  3000               	movlw	0
  4355  0245  00A1               	movwf	___flmul@b+1
  4356  0246  3000               	movlw	0
  4357  0247  00A0               	movwf	___flmul@b
  4358  0248  0021               	movlb	1	; select bank1
  4359  0249  0852               	movf	(efgtoa@u+3)^(0+128),w
  4360  024A  0020               	movlb	0	; select bank0
  4361  024B  00A7               	movwf	___flmul@a+3
  4362  024C  0021               	movlb	1	; select bank1
  4363  024D  0851               	movf	(efgtoa@u+2)^(0+128),w
  4364  024E  0020               	movlb	0	; select bank0
  4365  024F  00A6               	movwf	___flmul@a+2
  4366  0250  0021               	movlb	1	; select bank1
  4367  0251  0850               	movf	(efgtoa@u+1)^(0+128),w
  4368  0252  0020               	movlb	0	; select bank0
  4369  0253  00A5               	movwf	___flmul@a+1
  4370  0254  0021               	movlb	1	; select bank1
  4371  0255  084F               	movf	efgtoa@u^(0+128),w
  4372  0256  0020               	movlb	0	; select bank0
  4373  0257  00A4               	movwf	___flmul@a
  4374  0258  318A  22D7  3180   	fcall	___flmul
  4375  025B  0020               	movlb	0	; select bank0
  4376  025C  0823               	movf	?___flmul+3,w
  4377  025D  00C1               	movwf	___flge@ff2+3
  4378  025E  0822               	movf	?___flmul+2,w
  4379  025F  00C0               	movwf	___flge@ff2+2
  4380  0260  0821               	movf	?___flmul+1,w
  4381  0261  00BF               	movwf	___flge@ff2+1
  4382  0262  0820               	movf	?___flmul,w
  4383  0263  00BE               	movwf	___flge@ff2
  4384  0264  3193  2376  3180   	fcall	___flge
  4385  0267  1803               	btfsc	3,0
  4386  0268  2A6A               	goto	u4741
  4387  0269  2A6B               	goto	u4740
  4388  026A                     u4741:
  4389  026A  2A00               	goto	l3571
  4390  026B                     u4740:
  4391  026B  2A8D               	goto	l3581
  4392  026C                     l3577:
  4393                           
  4394                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4395  026C  3041               	movlw	65
  4396  026D  00F3               	movwf	___fldiv@a+3
  4397  026E  3020               	movlw	32
  4398  026F  00F2               	movwf	___fldiv@a+2
  4399  0270  3000               	movlw	0
  4400  0271  00F1               	movwf	___fldiv@a+1
  4401  0272  3000               	movlw	0
  4402  0273  00F0               	movwf	___fldiv@a
  4403  0274  0021               	movlb	1	; select bank1
  4404  0275  0852               	movf	(efgtoa@u+3)^(0+128),w
  4405  0276  00F7               	movwf	___fldiv@b+3
  4406  0277  0851               	movf	(efgtoa@u+2)^(0+128),w
  4407  0278  00F6               	movwf	___fldiv@b+2
  4408  0279  0850               	movf	(efgtoa@u+1)^(0+128),w
  4409  027A  00F5               	movwf	___fldiv@b+1
  4410  027B  084F               	movf	efgtoa@u^(0+128),w
  4411  027C  00F4               	movwf	___fldiv@b
  4412  027D  3196  264C  3180   	fcall	___fldiv
  4413  0280  0873               	movf	?___fldiv+3,w
  4414  0281  0021               	movlb	1	; select bank1
  4415  0282  00D2               	movwf	(efgtoa@u+3)^(0+128)
  4416  0283  0872               	movf	?___fldiv+2,w
  4417  0284  00D1               	movwf	(efgtoa@u+2)^(0+128)
  4418  0285  0871               	movf	?___fldiv+1,w
  4419  0286  00D0               	movwf	(efgtoa@u+1)^(0+128)
  4420  0287  0870               	movf	?___fldiv,w
  4421  0288  00CF               	movwf	efgtoa@u^(0+128)
  4422  0289                     l3579:
  4423                           
  4424                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4425  0289  30FF               	movlw	255
  4426  028A  07CB               	addwf	efgtoa@e^(0+128),f
  4427  028B  30FF               	movlw	255
  4428  028C  3DCC               	addwfc	(efgtoa@e+1)^(0+128),f
  4429  028D                     l3581:
  4430                           
  4431                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4432  028D  0021               	movlb	1	; select bank1
  4433  028E  084A               	movf	(efgtoa@g+3)^(0+128),w
  4434  028F  0020               	movlb	0	; select bank0
  4435  0290  00BD               	movwf	___flge@ff1+3
  4436  0291  0021               	movlb	1	; select bank1
  4437  0292  0849               	movf	(efgtoa@g+2)^(0+128),w
  4438  0293  0020               	movlb	0	; select bank0
  4439  0294  00BC               	movwf	___flge@ff1+2
  4440  0295  0021               	movlb	1	; select bank1
  4441  0296  0848               	movf	(efgtoa@g+1)^(0+128),w
  4442  0297  0020               	movlb	0	; select bank0
  4443  0298  00BB               	movwf	___flge@ff1+1
  4444  0299  0021               	movlb	1	; select bank1
  4445  029A  0847               	movf	efgtoa@g^(0+128),w
  4446  029B  0020               	movlb	0	; select bank0
  4447  029C  00BA               	movwf	___flge@ff1
  4448  029D  0021               	movlb	1	; select bank1
  4449  029E  0852               	movf	(efgtoa@u+3)^(0+128),w
  4450  029F  0020               	movlb	0	; select bank0
  4451  02A0  00C1               	movwf	___flge@ff2+3
  4452  02A1  0021               	movlb	1	; select bank1
  4453  02A2  0851               	movf	(efgtoa@u+2)^(0+128),w
  4454  02A3  0020               	movlb	0	; select bank0
  4455  02A4  00C0               	movwf	___flge@ff2+2
  4456  02A5  0021               	movlb	1	; select bank1
  4457  02A6  0850               	movf	(efgtoa@u+1)^(0+128),w
  4458  02A7  0020               	movlb	0	; select bank0
  4459  02A8  00BF               	movwf	___flge@ff2+1
  4460  02A9  0021               	movlb	1	; select bank1
  4461  02AA  084F               	movf	efgtoa@u^(0+128),w
  4462  02AB  0020               	movlb	0	; select bank0
  4463  02AC  00BE               	movwf	___flge@ff2
  4464  02AD  3193  2376  3180   	fcall	___flge
  4465  02B0  1C03               	btfss	3,0
  4466  02B1  2AB3               	goto	u4751
  4467  02B2  2AB4               	goto	u4750
  4468  02B3                     u4751:
  4469  02B3  2A6C               	goto	l3577
  4470  02B4                     u4750:
  4471  02B4                     l3583:
  4472                           
  4473                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4474  02B4  0020               	movlb	0	; select bank0
  4475  02B5  085A               	movf	efgtoa@c,w
  4476  02B6  00DB               	movwf	??_efgtoa
  4477  02B7  01DC               	clrf	??_efgtoa+1
  4478  02B8  085B               	movf	??_efgtoa,w
  4479  02B9  00F6               	movwf	tolower@c
  4480  02BA  085C               	movf	??_efgtoa+1,w
  4481  02BB  00F7               	movwf	tolower@c+1
  4482  02BC  319D  25C1  3180   	fcall	_tolower
  4483  02BF  0876               	movf	?_tolower,w
  4484  02C0  0020               	movlb	0	; select bank0
  4485  02C1  00DD               	movwf	??_efgtoa+2
  4486  02C2  085D               	movf	??_efgtoa+2,w
  4487  02C3  0021               	movlb	1	; select bank1
  4488  02C4  00BC               	movwf	efgtoa@mode^(0+128)
  4489  02C5                     l3585:
  4490                           
  4491                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4492  02C5  083C               	movf	efgtoa@mode^(0+128),w
  4493  02C6  0020               	movlb	0	; select bank0
  4494  02C7  00DB               	movwf	??_efgtoa
  4495  02C8  085B               	movf	??_efgtoa,w
  4496  02C9  0021               	movlb	1	; select bank1
  4497  02CA  00BB               	movwf	efgtoa@nmode^(0+128)
  4498  02CB                     l3587:
  4499                           
  4500                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4501  02CB  3067               	movlw	103
  4502  02CC  063C               	xorwf	efgtoa@mode^(0+128),w
  4503  02CD  1D03               	btfss	3,2
  4504  02CE  2AD0               	goto	u4761
  4505  02CF  2AD1               	goto	u4760
  4506  02D0                     u4761:
  4507  02D0  2AFA               	goto	l810
  4508  02D1                     u4760:
  4509  02D1                     l3589:
  4510                           
  4511                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4512  02D1  0022               	movlb	2	; select bank2
  4513  02D2  0838               	movf	_prec^(0+256),w
  4514  02D3  0439               	iorwf	(_prec+1)^(0+256),w
  4515  02D4  1D03               	btfss	3,2
  4516  02D5  2AD7               	goto	u4771
  4517  02D6  2AD8               	goto	u4770
  4518  02D7                     u4771:
  4519  02D7  2ADC               	goto	l811
  4520  02D8                     u4770:
  4521  02D8                     l3591:
  4522                           
  4523                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4524  02D8  3001               	movlw	1
  4525  02D9  00B8               	movwf	_prec^(0+256)
  4526  02DA  3000               	movlw	0
  4527  02DB  00B9               	movwf	(_prec^(0+256)+1)
  4528  02DC                     l811:	
  4529                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 395:   }
  4530                           
  4531                           
  4532                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4533  02DC  0839               	movf	(_prec+1)^(0+256),w
  4534  02DD  3A80               	xorlw	128
  4535  02DE  0020               	movlb	0	; select bank0
  4536  02DF  00DB               	movwf	??_efgtoa
  4537  02E0  3080               	movlw	128
  4538  02E1  025B               	subwf	??_efgtoa,w
  4539  02E2  1D03               	skipz
  4540  02E3  2AE7               	goto	u4785
  4541  02E4  3001               	movlw	1
  4542  02E5  0022               	movlb	2	; select bank2
  4543  02E6  0238               	subwf	_prec^(0+256),w
  4544  02E7                     u4785:
  4545  02E7  1803               	skipnc
  4546  02E8  2AEA               	goto	u4781
  4547  02E9  2AEB               	goto	u4780
  4548  02EA                     u4781:
  4549  02EA  2AF1               	goto	l3595
  4550  02EB                     u4780:
  4551  02EB                     l3593:
  4552  02EB  3006               	movlw	6
  4553  02EC  0021               	movlb	1	; select bank1
  4554  02ED  00B7               	movwf	efgtoa@p^(0+128)
  4555  02EE  3000               	movlw	0
  4556  02EF  00B8               	movwf	(efgtoa@p^(0+128)+1)
  4557  02F0  2B00               	goto	l3601
  4558  02F1                     l3595:
  4559  02F1  0022               	movlb	2	; select bank2
  4560  02F2  0839               	movf	(_prec+1)^(0+256),w
  4561  02F3  0021               	movlb	1	; select bank1
  4562  02F4  00B8               	movwf	(efgtoa@p+1)^(0+128)
  4563  02F5  0022               	movlb	2	; select bank2
  4564  02F6  0838               	movf	_prec^(0+256),w
  4565  02F7  0021               	movlb	1	; select bank1
  4566  02F8  00B7               	movwf	efgtoa@p^(0+128)
  4567  02F9  2B00               	goto	l3601
  4568  02FA                     l810:
  4569                           
  4570                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4571  02FA  0022               	movlb	2	; select bank2
  4572  02FB  1BB9               	btfsc	(_prec+1)^(0+256),7
  4573  02FC  2AFE               	goto	u4791
  4574  02FD  2AFF               	goto	u4790
  4575  02FE                     u4791:
  4576  02FE  2AEB               	goto	l3593
  4577  02FF                     u4790:
  4578  02FF  2AF1               	goto	l3595
  4579  0300                     l3601:
  4580                           
  4581                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4582  0300  3067               	movlw	103
  4583  0301  063C               	xorwf	efgtoa@mode^(0+128),w
  4584  0302  1D03               	btfss	3,2
  4585  0303  2B05               	goto	u4801
  4586  0304  2B06               	goto	u4800
  4587  0305                     u4801:
  4588  0305  2B3E               	goto	l821
  4589  0306                     u4800:
  4590  0306                     l3603:
  4591                           
  4592                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4593  0306  084C               	movf	(efgtoa@e+1)^(0+128),w
  4594  0307  3A80               	xorlw	128
  4595  0308  0020               	movlb	0	; select bank0
  4596  0309  00DB               	movwf	??_efgtoa
  4597  030A  307F               	movlw	127
  4598  030B  025B               	subwf	??_efgtoa,w
  4599  030C  1D03               	skipz
  4600  030D  2B11               	goto	u4815
  4601  030E  30FC               	movlw	252
  4602  030F  0021               	movlb	1	; select bank1
  4603  0310  024B               	subwf	efgtoa@e^(0+128),w
  4604  0311                     u4815:
  4605  0311  1C03               	skipc
  4606  0312  2B14               	goto	u4811
  4607  0313  2B15               	goto	u4810
  4608  0314                     u4811:
  4609  0314  2B38               	goto	l3609
  4610  0315                     u4810:
  4611  0315                     l3605:
  4612  0315  0021               	movlb	1	; select bank1
  4613  0316  0837               	movf	efgtoa@p^(0+128),w
  4614  0317  3EFF               	addlw	255
  4615  0318  0020               	movlb	0	; select bank0
  4616  0319  00DB               	movwf	??_efgtoa
  4617  031A  30FF               	movlw	255
  4618  031B  0021               	movlb	1	; select bank1
  4619  031C  3D38               	addwfc	(efgtoa@p+1)^(0+128),w
  4620  031D  0020               	movlb	0	; select bank0
  4621  031E  00DC               	movwf	??_efgtoa+1
  4622  031F  085C               	movf	??_efgtoa+1,w
  4623  0320  3A80               	xorlw	128
  4624  0321  00DD               	movwf	??_efgtoa+2
  4625  0322  0021               	movlb	1	; select bank1
  4626  0323  084C               	movf	(efgtoa@e+1)^(0+128),w
  4627  0324  3A80               	xorlw	128
  4628  0325  0020               	movlb	0	; select bank0
  4629  0326  025D               	subwf	??_efgtoa+2,w
  4630  0327  1D03               	skipz
  4631  0328  2B2D               	goto	u4825
  4632  0329  0021               	movlb	1	; select bank1
  4633  032A  084B               	movf	efgtoa@e^(0+128),w
  4634  032B  0020               	movlb	0	; select bank0
  4635  032C  025B               	subwf	??_efgtoa,w
  4636  032D                     u4825:
  4637  032D  1C03               	skipc
  4638  032E  2B30               	goto	u4821
  4639  032F  2B31               	goto	u4820
  4640  0330                     u4821:
  4641  0330  2B38               	goto	l3609
  4642  0331                     u4820:
  4643  0331                     l3607:
  4644                           
  4645                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4646  0331  3066               	movlw	102
  4647  0332  0020               	movlb	0	; select bank0
  4648  0333  00DB               	movwf	??_efgtoa
  4649  0334  085B               	movf	??_efgtoa,w
  4650  0335  0021               	movlb	1	; select bank1
  4651  0336  00BB               	movwf	efgtoa@nmode^(0+128)
  4652                           
  4653                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4654  0337  2B3E               	goto	l821
  4655  0338                     l3609:
  4656                           
  4657                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4658  0338  3065               	movlw	101
  4659  0339  0020               	movlb	0	; select bank0
  4660  033A  00DB               	movwf	??_efgtoa
  4661  033B  085B               	movf	??_efgtoa,w
  4662  033C  0021               	movlb	1	; select bank1
  4663  033D  00BB               	movwf	efgtoa@nmode^(0+128)
  4664  033E                     l821:	
  4665                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 408:     }
  4666                           
  4667                           
  4668                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4669  033E  0838               	movf	(efgtoa@p+1)^(0+128),w
  4670  033F  00AD               	movwf	(efgtoa@m+1)^(0+128)
  4671  0340  0837               	movf	efgtoa@p^(0+128),w
  4672  0341  00AC               	movwf	efgtoa@m^(0+128)
  4673  0342                     l3611:
  4674                           
  4675                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4676  0342  3067               	movlw	103
  4677  0343  063C               	xorwf	efgtoa@mode^(0+128),w
  4678  0344  1D03               	btfss	3,2
  4679  0345  2B47               	goto	u4831
  4680  0346  2B48               	goto	u4830
  4681  0347                     u4831:
  4682  0347  2B52               	goto	l3617
  4683  0348                     u4830:
  4684  0348                     l3613:
  4685  0348  3066               	movlw	102
  4686  0349  063B               	xorwf	efgtoa@nmode^(0+128),w
  4687  034A  1D03               	btfss	3,2
  4688  034B  2B4D               	goto	u4841
  4689  034C  2B4E               	goto	u4840
  4690  034D                     u4841:
  4691  034D  2B56               	goto	l3619
  4692  034E                     u4840:
  4693  034E                     l3615:
  4694  034E  1FCC               	btfss	(efgtoa@e+1)^(0+128),7
  4695  034F  2B51               	goto	u4851
  4696  0350  2B52               	goto	u4850
  4697  0351                     u4851:
  4698  0351  2B56               	goto	l3619
  4699  0352                     u4850:
  4700  0352                     l3617:
  4701                           
  4702                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4703  0352  3001               	movlw	1
  4704  0353  07AC               	addwf	efgtoa@m^(0+128),f
  4705  0354  3000               	movlw	0
  4706  0355  3DAD               	addwfc	(efgtoa@m+1)^(0+128),f
  4707  0356                     l3619:
  4708                           
  4709                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4710  0356  3066               	movlw	102
  4711  0357  063B               	xorwf	efgtoa@nmode^(0+128),w
  4712  0358  1D03               	btfss	3,2
  4713  0359  2B5B               	goto	u4861
  4714  035A  2B5C               	goto	u4860
  4715  035B                     u4861:
  4716  035B  2B74               	goto	l3631
  4717  035C                     u4860:
  4718  035C                     l3621:
  4719                           
  4720                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4721  035C  1FCC               	btfss	(efgtoa@e+1)^(0+128),7
  4722  035D  2B5F               	goto	u4871
  4723  035E  2B60               	goto	u4870
  4724  035F                     u4871:
  4725  035F  2B6A               	goto	l3627
  4726  0360                     u4870:
  4727  0360                     l3623:
  4728                           
  4729                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4730  0360  303F               	movlw	63
  4731  0361  00D2               	movwf	(efgtoa@u+3)^(0+128)
  4732  0362  3080               	movlw	128
  4733  0363  00D1               	movwf	(efgtoa@u+2)^(0+128)
  4734  0364  3000               	movlw	0
  4735  0365  00D0               	movwf	(efgtoa@u+1)^(0+128)
  4736  0366  3000               	movlw	0
  4737  0367  00CF               	movwf	efgtoa@u^(0+128)
  4738  0368                     l3625:
  4739                           
  4740                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4741  0368  01CB               	clrf	efgtoa@e^(0+128)
  4742  0369  01CC               	clrf	(efgtoa@e+1)^(0+128)
  4743  036A                     l3627:
  4744                           
  4745                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4746  036A  3067               	movlw	103
  4747  036B  063C               	xorwf	efgtoa@mode^(0+128),w
  4748  036C  1903               	btfsc	3,2
  4749  036D  2B6F               	goto	u4881
  4750  036E  2B70               	goto	u4880
  4751  036F                     u4881:
  4752  036F  2B74               	goto	l3631
  4753  0370                     u4880:
  4754  0370                     l3629:
  4755                           
  4756                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4757  0370  084B               	movf	efgtoa@e^(0+128),w
  4758  0371  07AC               	addwf	efgtoa@m^(0+128),f
  4759  0372  084C               	movf	(efgtoa@e+1)^(0+128),w
  4760  0373  3DAD               	addwfc	(efgtoa@m+1)^(0+128),f
  4761  0374                     l3631:
  4762                           
  4763                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4764  0374  01C5               	clrf	efgtoa@i^(0+128)
  4765  0375  01C6               	clrf	(efgtoa@i+1)^(0+128)
  4766  0376                     l3633:
  4767                           
  4768                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4769  0376  084A               	movf	(efgtoa@g+3)^(0+128),w
  4770  0377  00C0               	movwf	(efgtoa@h+3)^(0+128)
  4771  0378  0849               	movf	(efgtoa@g+2)^(0+128),w
  4772  0379  00BF               	movwf	(efgtoa@h+2)^(0+128)
  4773  037A  0848               	movf	(efgtoa@g+1)^(0+128),w
  4774  037B  00BE               	movwf	(efgtoa@h+1)^(0+128)
  4775  037C  0847               	movf	efgtoa@g^(0+128),w
  4776  037D  00BD               	movwf	efgtoa@h^(0+128)
  4777  037E                     l3635:
  4778                           
  4779                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4780  037E  0852               	movf	(efgtoa@u+3)^(0+128),w
  4781  037F  00B1               	movwf	(efgtoa@ou+3)^(0+128)
  4782  0380  0851               	movf	(efgtoa@u+2)^(0+128),w
  4783  0381  00B0               	movwf	(efgtoa@ou+2)^(0+128)
  4784  0382  0850               	movf	(efgtoa@u+1)^(0+128),w
  4785  0383  00AF               	movwf	(efgtoa@ou+1)^(0+128)
  4786  0384  084F               	movf	efgtoa@u^(0+128),w
  4787  0385  00AE               	movwf	efgtoa@ou^(0+128)
  4788                           
  4789                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4790  0386  2C35               	goto	l3641
  4791  0387                     l3637:
  4792                           
  4793                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4794  0387  0021               	movlb	1	; select bank1
  4795  0388  0852               	movf	(efgtoa@u+3)^(0+128),w
  4796  0389  00F3               	movwf	___fldiv@a+3
  4797  038A  0851               	movf	(efgtoa@u+2)^(0+128),w
  4798  038B  00F2               	movwf	___fldiv@a+2
  4799  038C  0850               	movf	(efgtoa@u+1)^(0+128),w
  4800  038D  00F1               	movwf	___fldiv@a+1
  4801  038E  084F               	movf	efgtoa@u^(0+128),w
  4802  038F  00F0               	movwf	___fldiv@a
  4803  0390  0840               	movf	(efgtoa@h+3)^(0+128),w
  4804  0391  00F7               	movwf	___fldiv@b+3
  4805  0392  083F               	movf	(efgtoa@h+2)^(0+128),w
  4806  0393  00F6               	movwf	___fldiv@b+2
  4807  0394  083E               	movf	(efgtoa@h+1)^(0+128),w
  4808  0395  00F5               	movwf	___fldiv@b+1
  4809  0396  083D               	movf	efgtoa@h^(0+128),w
  4810  0397  00F4               	movwf	___fldiv@b
  4811  0398  3196  264C  3180   	fcall	___fldiv
  4812  039B  0873               	movf	?___fldiv+3,w
  4813  039C  0020               	movlb	0	; select bank0
  4814  039D  00B0               	movwf	floorf@x+3
  4815  039E  0872               	movf	?___fldiv+2,w
  4816  039F  00AF               	movwf	floorf@x+2
  4817  03A0  0871               	movf	?___fldiv+1,w
  4818  03A1  00AE               	movwf	floorf@x+1
  4819  03A2  0870               	movf	?___fldiv,w
  4820  03A3  00AD               	movwf	floorf@x
  4821  03A4  3194  2401  3180   	fcall	_floorf
  4822  03A7  0020               	movlb	0	; select bank0
  4823  03A8  0830               	movf	?_floorf+3,w
  4824  03A9  0021               	movlb	1	; select bank1
  4825  03AA  00C4               	movwf	(efgtoa@l+3)^(0+128)
  4826  03AB  0020               	movlb	0	; select bank0
  4827  03AC  082F               	movf	?_floorf+2,w
  4828  03AD  0021               	movlb	1	; select bank1
  4829  03AE  00C3               	movwf	(efgtoa@l+2)^(0+128)
  4830  03AF  0020               	movlb	0	; select bank0
  4831  03B0  082E               	movf	?_floorf+1,w
  4832  03B1  0021               	movlb	1	; select bank1
  4833  03B2  00C2               	movwf	(efgtoa@l+1)^(0+128)
  4834  03B3  0020               	movlb	0	; select bank0
  4835  03B4  082D               	movf	?_floorf,w
  4836  03B5  0021               	movlb	1	; select bank1
  4837  03B6  00C1               	movwf	efgtoa@l^(0+128)
  4838                           
  4839                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4840  03B7  0844               	movf	(efgtoa@l+3)^(0+128),w
  4841  03B8  00F3               	movwf	___fltol@f1+3
  4842  03B9  0843               	movf	(efgtoa@l+2)^(0+128),w
  4843  03BA  00F2               	movwf	___fltol@f1+2
  4844  03BB  0842               	movf	(efgtoa@l+1)^(0+128),w
  4845  03BC  00F1               	movwf	___fltol@f1+1
  4846  03BD  0841               	movf	efgtoa@l^(0+128),w
  4847  03BE  00F0               	movwf	___fltol@f1
  4848  03BF  3192  2283  3180   	fcall	___fltol
  4849  03C2  0871               	movf	?___fltol+1,w
  4850  03C3  0021               	movlb	1	; select bank1
  4851  03C4  00B3               	movwf	(efgtoa@d+1)^(0+128)
  4852  03C5  0870               	movf	?___fltol,w
  4853  03C6  00B2               	movwf	efgtoa@d^(0+128)
  4854                           
  4855                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4856  03C7  0844               	movf	(efgtoa@l+3)^(0+128),w
  4857  03C8  0020               	movlb	0	; select bank0
  4858  03C9  00A7               	movwf	___flmul@a+3
  4859  03CA  0021               	movlb	1	; select bank1
  4860  03CB  0843               	movf	(efgtoa@l+2)^(0+128),w
  4861  03CC  0020               	movlb	0	; select bank0
  4862  03CD  00A6               	movwf	___flmul@a+2
  4863  03CE  0021               	movlb	1	; select bank1
  4864  03CF  0842               	movf	(efgtoa@l+1)^(0+128),w
  4865  03D0  0020               	movlb	0	; select bank0
  4866  03D1  00A5               	movwf	___flmul@a+1
  4867  03D2  0021               	movlb	1	; select bank1
  4868  03D3  0841               	movf	efgtoa@l^(0+128),w
  4869  03D4  0020               	movlb	0	; select bank0
  4870  03D5  00A4               	movwf	___flmul@a
  4871  03D6  0021               	movlb	1	; select bank1
  4872  03D7  0852               	movf	(efgtoa@u+3)^(0+128),w
  4873  03D8  0020               	movlb	0	; select bank0
  4874  03D9  00A3               	movwf	___flmul@b+3
  4875  03DA  0021               	movlb	1	; select bank1
  4876  03DB  0851               	movf	(efgtoa@u+2)^(0+128),w
  4877  03DC  0020               	movlb	0	; select bank0
  4878  03DD  00A2               	movwf	___flmul@b+2
  4879  03DE  0021               	movlb	1	; select bank1
  4880  03DF  0850               	movf	(efgtoa@u+1)^(0+128),w
  4881  03E0  0020               	movlb	0	; select bank0
  4882  03E1  00A1               	movwf	___flmul@b+1
  4883  03E2  0021               	movlb	1	; select bank1
  4884  03E3  084F               	movf	efgtoa@u^(0+128),w
  4885  03E4  0020               	movlb	0	; select bank0
  4886  03E5  00A0               	movwf	___flmul@b
  4887  03E6  318A  22D7  3180   	fcall	___flmul
  4888  03E9  0020               	movlb	0	; select bank0
  4889  03EA  0823               	movf	?___flmul+3,w
  4890  03EB  00D1               	movwf	___flsub@a+3
  4891  03EC  0822               	movf	?___flmul+2,w
  4892  03ED  00D0               	movwf	___flsub@a+2
  4893  03EE  0821               	movf	?___flmul+1,w
  4894  03EF  00CF               	movwf	___flsub@a+1
  4895  03F0  0820               	movf	?___flmul,w
  4896  03F1  00CE               	movwf	___flsub@a
  4897  03F2  0021               	movlb	1	; select bank1
  4898  03F3  0840               	movf	(efgtoa@h+3)^(0+128),w
  4899  03F4  0020               	movlb	0	; select bank0
  4900  03F5  00D5               	movwf	___flsub@b+3
  4901  03F6  0021               	movlb	1	; select bank1
  4902  03F7  083F               	movf	(efgtoa@h+2)^(0+128),w
  4903  03F8  0020               	movlb	0	; select bank0
  4904  03F9  00D4               	movwf	___flsub@b+2
  4905  03FA  0021               	movlb	1	; select bank1
  4906  03FB  083E               	movf	(efgtoa@h+1)^(0+128),w
  4907  03FC  0020               	movlb	0	; select bank0
  4908  03FD  00D3               	movwf	___flsub@b+1
  4909  03FE  0021               	movlb	1	; select bank1
  4910  03FF  083D               	movf	efgtoa@h^(0+128),w
  4911  0400  0020               	movlb	0	; select bank0
  4912  0401  00D2               	movwf	___flsub@b
  4913  0402  319E  267A  3180   	fcall	___flsub
  4914  0405  0020               	movlb	0	; select bank0
  4915  0406  0851               	movf	?___flsub+3,w
  4916  0407  0021               	movlb	1	; select bank1
  4917  0408  00C0               	movwf	(efgtoa@h+3)^(0+128)
  4918  0409  0020               	movlb	0	; select bank0
  4919  040A  0850               	movf	?___flsub+2,w
  4920  040B  0021               	movlb	1	; select bank1
  4921  040C  00BF               	movwf	(efgtoa@h+2)^(0+128)
  4922  040D  0020               	movlb	0	; select bank0
  4923  040E  084F               	movf	?___flsub+1,w
  4924  040F  0021               	movlb	1	; select bank1
  4925  0410  00BE               	movwf	(efgtoa@h+1)^(0+128)
  4926  0411  0020               	movlb	0	; select bank0
  4927  0412  084E               	movf	?___flsub,w
  4928  0413  0021               	movlb	1	; select bank1
  4929  0414  00BD               	movwf	efgtoa@h^(0+128)
  4930                           
  4931                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  4932  0415  3041               	movlw	65
  4933  0416  00F3               	movwf	___fldiv@a+3
  4934  0417  3020               	movlw	32
  4935  0418  00F2               	movwf	___fldiv@a+2
  4936  0419  3000               	movlw	0
  4937  041A  00F1               	movwf	___fldiv@a+1
  4938  041B  3000               	movlw	0
  4939  041C  00F0               	movwf	___fldiv@a
  4940  041D  0852               	movf	(efgtoa@u+3)^(0+128),w
  4941  041E  00F7               	movwf	___fldiv@b+3
  4942  041F  0851               	movf	(efgtoa@u+2)^(0+128),w
  4943  0420  00F6               	movwf	___fldiv@b+2
  4944  0421  0850               	movf	(efgtoa@u+1)^(0+128),w
  4945  0422  00F5               	movwf	___fldiv@b+1
  4946  0423  084F               	movf	efgtoa@u^(0+128),w
  4947  0424  00F4               	movwf	___fldiv@b
  4948  0425  3196  264C  3180   	fcall	___fldiv
  4949  0428  0873               	movf	?___fldiv+3,w
  4950  0429  0021               	movlb	1	; select bank1
  4951  042A  00D2               	movwf	(efgtoa@u+3)^(0+128)
  4952  042B  0872               	movf	?___fldiv+2,w
  4953  042C  00D1               	movwf	(efgtoa@u+2)^(0+128)
  4954  042D  0871               	movf	?___fldiv+1,w
  4955  042E  00D0               	movwf	(efgtoa@u+1)^(0+128)
  4956  042F  0870               	movf	?___fldiv,w
  4957  0430  00CF               	movwf	efgtoa@u^(0+128)
  4958  0431                     l3639:
  4959                           
  4960                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  4961  0431  3001               	movlw	1
  4962  0432  07C5               	addwf	efgtoa@i^(0+128),f
  4963  0433  3000               	movlw	0
  4964  0434  3DC6               	addwfc	(efgtoa@i+1)^(0+128),f
  4965  0435                     l3641:
  4966                           
  4967                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4968  0435  0846               	movf	(efgtoa@i+1)^(0+128),w
  4969  0436  3A80               	xorlw	128
  4970  0437  0020               	movlb	0	; select bank0
  4971  0438  00DB               	movwf	??_efgtoa
  4972  0439  0021               	movlb	1	; select bank1
  4973  043A  082D               	movf	(efgtoa@m+1)^(0+128),w
  4974  043B  3A80               	xorlw	128
  4975  043C  0020               	movlb	0	; select bank0
  4976  043D  025B               	subwf	??_efgtoa,w
  4977  043E  1D03               	skipz
  4978  043F  2C43               	goto	u4895
  4979  0440  0021               	movlb	1	; select bank1
  4980  0441  082C               	movf	efgtoa@m^(0+128),w
  4981  0442  0245               	subwf	efgtoa@i^(0+128),w
  4982  0443                     u4895:
  4983  0443  1C03               	skipc
  4984  0444  2C46               	goto	u4891
  4985  0445  2C47               	goto	u4890
  4986  0446                     u4891:
  4987  0446  2B87               	goto	l3637
  4988  0447                     u4890:
  4989  0447                     l3643:
  4990                           
  4991                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  4992  0447  3040               	movlw	64
  4993  0448  0020               	movlb	0	; select bank0
  4994  0449  00A3               	movwf	___flmul@b+3
  4995  044A  30A0               	movlw	160
  4996  044B  00A2               	movwf	___flmul@b+2
  4997  044C  3000               	movlw	0
  4998  044D  00A1               	movwf	___flmul@b+1
  4999  044E  3000               	movlw	0
  5000  044F  00A0               	movwf	___flmul@b
  5001  0450  0021               	movlb	1	; select bank1
  5002  0451  0852               	movf	(efgtoa@u+3)^(0+128),w
  5003  0452  0020               	movlb	0	; select bank0
  5004  0453  00A7               	movwf	___flmul@a+3
  5005  0454  0021               	movlb	1	; select bank1
  5006  0455  0851               	movf	(efgtoa@u+2)^(0+128),w
  5007  0456  0020               	movlb	0	; select bank0
  5008  0457  00A6               	movwf	___flmul@a+2
  5009  0458  0021               	movlb	1	; select bank1
  5010  0459  0850               	movf	(efgtoa@u+1)^(0+128),w
  5011  045A  0020               	movlb	0	; select bank0
  5012  045B  00A5               	movwf	___flmul@a+1
  5013  045C  0021               	movlb	1	; select bank1
  5014  045D  084F               	movf	efgtoa@u^(0+128),w
  5015  045E  0020               	movlb	0	; select bank0
  5016  045F  00A4               	movwf	___flmul@a
  5017  0460  318A  22D7  3180   	fcall	___flmul
  5018  0463  0020               	movlb	0	; select bank0
  5019  0464  0823               	movf	?___flmul+3,w
  5020  0465  0021               	movlb	1	; select bank1
  5021  0466  00C4               	movwf	(efgtoa@l+3)^(0+128)
  5022  0467  0020               	movlb	0	; select bank0
  5023  0468  0822               	movf	?___flmul+2,w
  5024  0469  0021               	movlb	1	; select bank1
  5025  046A  00C3               	movwf	(efgtoa@l+2)^(0+128)
  5026  046B  0020               	movlb	0	; select bank0
  5027  046C  0821               	movf	?___flmul+1,w
  5028  046D  0021               	movlb	1	; select bank1
  5029  046E  00C2               	movwf	(efgtoa@l+1)^(0+128)
  5030  046F  0020               	movlb	0	; select bank0
  5031  0470  0820               	movf	?___flmul,w
  5032  0471  0021               	movlb	1	; select bank1
  5033  0472  00C1               	movwf	efgtoa@l^(0+128)
  5034                           
  5035                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5036  0473  0840               	movf	(efgtoa@h+3)^(0+128),w
  5037  0474  0020               	movlb	0	; select bank0
  5038  0475  00BD               	movwf	___flge@ff1+3
  5039  0476  0021               	movlb	1	; select bank1
  5040  0477  083F               	movf	(efgtoa@h+2)^(0+128),w
  5041  0478  0020               	movlb	0	; select bank0
  5042  0479  00BC               	movwf	___flge@ff1+2
  5043  047A  0021               	movlb	1	; select bank1
  5044  047B  083E               	movf	(efgtoa@h+1)^(0+128),w
  5045  047C  0020               	movlb	0	; select bank0
  5046  047D  00BB               	movwf	___flge@ff1+1
  5047  047E  0021               	movlb	1	; select bank1
  5048  047F  083D               	movf	efgtoa@h^(0+128),w
  5049  0480  0020               	movlb	0	; select bank0
  5050  0481  00BA               	movwf	___flge@ff1
  5051  0482  0021               	movlb	1	; select bank1
  5052  0483  0844               	movf	(efgtoa@l+3)^(0+128),w
  5053  0484  0020               	movlb	0	; select bank0
  5054  0485  00C1               	movwf	___flge@ff2+3
  5055  0486  0021               	movlb	1	; select bank1
  5056  0487  0843               	movf	(efgtoa@l+2)^(0+128),w
  5057  0488  0020               	movlb	0	; select bank0
  5058  0489  00C0               	movwf	___flge@ff2+2
  5059  048A  0021               	movlb	1	; select bank1
  5060  048B  0842               	movf	(efgtoa@l+1)^(0+128),w
  5061  048C  0020               	movlb	0	; select bank0
  5062  048D  00BF               	movwf	___flge@ff2+1
  5063  048E  0021               	movlb	1	; select bank1
  5064  048F  0841               	movf	efgtoa@l^(0+128),w
  5065  0490  0020               	movlb	0	; select bank0
  5066  0491  00BE               	movwf	___flge@ff2
  5067  0492  3193  2376  3180   	fcall	___flge
  5068  0495  1803               	btfsc	3,0
  5069  0496  2C98               	goto	u4901
  5070  0497  2C99               	goto	u4900
  5071  0498                     u4901:
  5072  0498  2CA3               	goto	l3647
  5073  0499                     u4900:
  5074  0499                     l3645:
  5075                           
  5076                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5077  0499  3000               	movlw	0
  5078  049A  0021               	movlb	1	; select bank1
  5079  049B  00C4               	movwf	(efgtoa@l+3)^(0+128)
  5080  049C  3000               	movlw	0
  5081  049D  00C3               	movwf	(efgtoa@l+2)^(0+128)
  5082  049E  3000               	movlw	0
  5083  049F  00C2               	movwf	(efgtoa@l+1)^(0+128)
  5084  04A0  3000               	movlw	0
  5085  04A1  00C1               	movwf	efgtoa@l^(0+128)
  5086                           
  5087                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  5088  04A2  2CC8               	goto	l3653
  5089  04A3                     l3647:
  5090                           
  5091                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5092  04A3  0021               	movlb	1	; select bank1
  5093  04A4  0840               	movf	(efgtoa@h+3)^(0+128),w
  5094  04A5  00F3               	movwf	___fleq@ff1+3
  5095  04A6  083F               	movf	(efgtoa@h+2)^(0+128),w
  5096  04A7  00F2               	movwf	___fleq@ff1+2
  5097  04A8  083E               	movf	(efgtoa@h+1)^(0+128),w
  5098  04A9  00F1               	movwf	___fleq@ff1+1
  5099  04AA  083D               	movf	efgtoa@h^(0+128),w
  5100  04AB  00F0               	movwf	___fleq@ff1
  5101  04AC  0844               	movf	(efgtoa@l+3)^(0+128),w
  5102  04AD  00F7               	movwf	___fleq@ff2+3
  5103  04AE  0843               	movf	(efgtoa@l+2)^(0+128),w
  5104  04AF  00F6               	movwf	___fleq@ff2+2
  5105  04B0  0842               	movf	(efgtoa@l+1)^(0+128),w
  5106  04B1  00F5               	movwf	___fleq@ff2+1
  5107  04B2  0841               	movf	efgtoa@l^(0+128),w
  5108  04B3  00F4               	movwf	___fleq@ff2
  5109  04B4  3190  202F  3180   	fcall	___fleq
  5110  04B7  1C03               	btfss	3,0
  5111  04B8  2CBA               	goto	u4911
  5112  04B9  2CBB               	goto	u4910
  5113  04BA                     u4911:
  5114  04BA  2CC8               	goto	l3653
  5115  04BB                     u4910:
  5116  04BB                     l3649:
  5117  04BB  0021               	movlb	1	; select bank1
  5118  04BC  1832               	btfsc	efgtoa@d^(0+128),0
  5119  04BD  2CBF               	goto	u4921
  5120  04BE  2CC0               	goto	u4920
  5121  04BF                     u4921:
  5122  04BF  2CC8               	goto	l3653
  5123  04C0                     u4920:
  5124  04C0                     l3651:
  5125                           
  5126                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5127  04C0  3000               	movlw	0
  5128  04C1  00C4               	movwf	(efgtoa@l+3)^(0+128)
  5129  04C2  3000               	movlw	0
  5130  04C3  00C3               	movwf	(efgtoa@l+2)^(0+128)
  5131  04C4  3000               	movlw	0
  5132  04C5  00C2               	movwf	(efgtoa@l+1)^(0+128)
  5133  04C6  3000               	movlw	0
  5134  04C7  00C1               	movwf	efgtoa@l^(0+128)
  5135  04C8                     l3653:
  5136                           
  5137                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5138  04C8  0021               	movlb	1	; select bank1
  5139  04C9  0844               	movf	(efgtoa@l+3)^(0+128),w
  5140  04CA  0020               	movlb	0	; select bank0
  5141  04CB  00BD               	movwf	___fladd@b+3
  5142  04CC  0021               	movlb	1	; select bank1
  5143  04CD  0843               	movf	(efgtoa@l+2)^(0+128),w
  5144  04CE  0020               	movlb	0	; select bank0
  5145  04CF  00BC               	movwf	___fladd@b+2
  5146  04D0  0021               	movlb	1	; select bank1
  5147  04D1  0842               	movf	(efgtoa@l+1)^(0+128),w
  5148  04D2  0020               	movlb	0	; select bank0
  5149  04D3  00BB               	movwf	___fladd@b+1
  5150  04D4  0021               	movlb	1	; select bank1
  5151  04D5  0841               	movf	efgtoa@l^(0+128),w
  5152  04D6  0020               	movlb	0	; select bank0
  5153  04D7  00BA               	movwf	___fladd@b
  5154  04D8  0021               	movlb	1	; select bank1
  5155  04D9  084A               	movf	(efgtoa@g+3)^(0+128),w
  5156  04DA  0020               	movlb	0	; select bank0
  5157  04DB  00C1               	movwf	___fladd@a+3
  5158  04DC  0021               	movlb	1	; select bank1
  5159  04DD  0849               	movf	(efgtoa@g+2)^(0+128),w
  5160  04DE  0020               	movlb	0	; select bank0
  5161  04DF  00C0               	movwf	___fladd@a+2
  5162  04E0  0021               	movlb	1	; select bank1
  5163  04E1  0848               	movf	(efgtoa@g+1)^(0+128),w
  5164  04E2  0020               	movlb	0	; select bank0
  5165  04E3  00BF               	movwf	___fladd@a+1
  5166  04E4  0021               	movlb	1	; select bank1
  5167  04E5  0847               	movf	efgtoa@g^(0+128),w
  5168  04E6  0020               	movlb	0	; select bank0
  5169  04E7  00BE               	movwf	___fladd@a
  5170  04E8  3188  209F  3180   	fcall	___fladd
  5171  04EB  0020               	movlb	0	; select bank0
  5172  04EC  083D               	movf	?___fladd+3,w
  5173  04ED  0021               	movlb	1	; select bank1
  5174  04EE  00C0               	movwf	(efgtoa@h+3)^(0+128)
  5175  04EF  0020               	movlb	0	; select bank0
  5176  04F0  083C               	movf	?___fladd+2,w
  5177  04F1  0021               	movlb	1	; select bank1
  5178  04F2  00BF               	movwf	(efgtoa@h+2)^(0+128)
  5179  04F3  0020               	movlb	0	; select bank0
  5180  04F4  083B               	movf	?___fladd+1,w
  5181  04F5  0021               	movlb	1	; select bank1
  5182  04F6  00BE               	movwf	(efgtoa@h+1)^(0+128)
  5183  04F7  0020               	movlb	0	; select bank0
  5184  04F8  083A               	movf	?___fladd,w
  5185  04F9  0021               	movlb	1	; select bank1
  5186  04FA  00BD               	movwf	efgtoa@h^(0+128)
  5187  04FB                     l3655:
  5188                           
  5189                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5190  04FB  0840               	movf	(efgtoa@h+3)^(0+128),w
  5191  04FC  0020               	movlb	0	; select bank0
  5192  04FD  00BD               	movwf	___flge@ff1+3
  5193  04FE  0021               	movlb	1	; select bank1
  5194  04FF  083F               	movf	(efgtoa@h+2)^(0+128),w
  5195  0500  0020               	movlb	0	; select bank0
  5196  0501  00BC               	movwf	___flge@ff1+2
  5197  0502  0021               	movlb	1	; select bank1
  5198  0503  083E               	movf	(efgtoa@h+1)^(0+128),w
  5199  0504  0020               	movlb	0	; select bank0
  5200  0505  00BB               	movwf	___flge@ff1+1
  5201  0506  0021               	movlb	1	; select bank1
  5202  0507  083D               	movf	efgtoa@h^(0+128),w
  5203  0508  0020               	movlb	0	; select bank0
  5204  0509  00BA               	movwf	___flge@ff1
  5205  050A  3041               	movlw	65
  5206  050B  00A3               	movwf	___flmul@b+3
  5207  050C  3020               	movlw	32
  5208  050D  00A2               	movwf	___flmul@b+2
  5209  050E  3000               	movlw	0
  5210  050F  00A1               	movwf	___flmul@b+1
  5211  0510  3000               	movlw	0
  5212  0511  00A0               	movwf	___flmul@b
  5213  0512  0021               	movlb	1	; select bank1
  5214  0513  0831               	movf	(efgtoa@ou+3)^(0+128),w
  5215  0514  0020               	movlb	0	; select bank0
  5216  0515  00A7               	movwf	___flmul@a+3
  5217  0516  0021               	movlb	1	; select bank1
  5218  0517  0830               	movf	(efgtoa@ou+2)^(0+128),w
  5219  0518  0020               	movlb	0	; select bank0
  5220  0519  00A6               	movwf	___flmul@a+2
  5221  051A  0021               	movlb	1	; select bank1
  5222  051B  082F               	movf	(efgtoa@ou+1)^(0+128),w
  5223  051C  0020               	movlb	0	; select bank0
  5224  051D  00A5               	movwf	___flmul@a+1
  5225  051E  0021               	movlb	1	; select bank1
  5226  051F  082E               	movf	efgtoa@ou^(0+128),w
  5227  0520  0020               	movlb	0	; select bank0
  5228  0521  00A4               	movwf	___flmul@a
  5229  0522  318A  22D7  3180   	fcall	___flmul
  5230  0525  0020               	movlb	0	; select bank0
  5231  0526  0823               	movf	?___flmul+3,w
  5232  0527  00C1               	movwf	___flge@ff2+3
  5233  0528  0822               	movf	?___flmul+2,w
  5234  0529  00C0               	movwf	___flge@ff2+2
  5235  052A  0821               	movf	?___flmul+1,w
  5236  052B  00BF               	movwf	___flge@ff2+1
  5237  052C  0820               	movf	?___flmul,w
  5238  052D  00BE               	movwf	___flge@ff2
  5239  052E  3193  2376  3180   	fcall	___flge
  5240  0531  1C03               	btfss	3,0
  5241  0532  2D34               	goto	u4931
  5242  0533  2D35               	goto	u4930
  5243  0534                     u4931:
  5244  0534  2D70               	goto	l836
  5245  0535                     u4930:
  5246  0535                     l3657:
  5247                           
  5248                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  5249  0535  3001               	movlw	1
  5250  0536  0021               	movlb	1	; select bank1
  5251  0537  07CB               	addwf	efgtoa@e^(0+128),f
  5252  0538  3000               	movlw	0
  5253  0539  3DCC               	addwfc	(efgtoa@e+1)^(0+128),f
  5254  053A                     l3659:
  5255                           
  5256                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5257  053A  3041               	movlw	65
  5258  053B  0020               	movlb	0	; select bank0
  5259  053C  00A3               	movwf	___flmul@b+3
  5260  053D  3020               	movlw	32
  5261  053E  00A2               	movwf	___flmul@b+2
  5262  053F  3000               	movlw	0
  5263  0540  00A1               	movwf	___flmul@b+1
  5264  0541  3000               	movlw	0
  5265  0542  00A0               	movwf	___flmul@b
  5266  0543  0021               	movlb	1	; select bank1
  5267  0544  0831               	movf	(efgtoa@ou+3)^(0+128),w
  5268  0545  0020               	movlb	0	; select bank0
  5269  0546  00A7               	movwf	___flmul@a+3
  5270  0547  0021               	movlb	1	; select bank1
  5271  0548  0830               	movf	(efgtoa@ou+2)^(0+128),w
  5272  0549  0020               	movlb	0	; select bank0
  5273  054A  00A6               	movwf	___flmul@a+2
  5274  054B  0021               	movlb	1	; select bank1
  5275  054C  082F               	movf	(efgtoa@ou+1)^(0+128),w
  5276  054D  0020               	movlb	0	; select bank0
  5277  054E  00A5               	movwf	___flmul@a+1
  5278  054F  0021               	movlb	1	; select bank1
  5279  0550  082E               	movf	efgtoa@ou^(0+128),w
  5280  0551  0020               	movlb	0	; select bank0
  5281  0552  00A4               	movwf	___flmul@a
  5282  0553  318A  22D7  3180   	fcall	___flmul
  5283  0556  0020               	movlb	0	; select bank0
  5284  0557  0823               	movf	?___flmul+3,w
  5285  0558  0021               	movlb	1	; select bank1
  5286  0559  00B1               	movwf	(efgtoa@ou+3)^(0+128)
  5287  055A  0020               	movlb	0	; select bank0
  5288  055B  0822               	movf	?___flmul+2,w
  5289  055C  0021               	movlb	1	; select bank1
  5290  055D  00B0               	movwf	(efgtoa@ou+2)^(0+128)
  5291  055E  0020               	movlb	0	; select bank0
  5292  055F  0821               	movf	?___flmul+1,w
  5293  0560  0021               	movlb	1	; select bank1
  5294  0561  00AF               	movwf	(efgtoa@ou+1)^(0+128)
  5295  0562  0020               	movlb	0	; select bank0
  5296  0563  0820               	movf	?___flmul,w
  5297  0564  0021               	movlb	1	; select bank1
  5298  0565  00AE               	movwf	efgtoa@ou^(0+128)
  5299  0566                     l3661:
  5300                           
  5301                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5302  0566  3066               	movlw	102
  5303  0567  063B               	xorwf	efgtoa@nmode^(0+128),w
  5304  0568  1D03               	btfss	3,2
  5305  0569  2D6B               	goto	u4941
  5306  056A  2D6C               	goto	u4940
  5307  056B                     u4941:
  5308  056B  2D70               	goto	l836
  5309  056C                     u4940:
  5310  056C                     l3663:
  5311                           
  5312                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  5313  056C  3001               	movlw	1
  5314  056D  07AC               	addwf	efgtoa@m^(0+128),f
  5315  056E  3000               	movlw	0
  5316  056F  3DAD               	addwfc	(efgtoa@m+1)^(0+128),f
  5317  0570                     l836:	
  5318                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 460:  }
  5319                           
  5320                           
  5321                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5322  0570  0021               	movlb	1	; select bank1
  5323  0571  0831               	movf	(efgtoa@ou+3)^(0+128),w
  5324  0572  00D2               	movwf	(efgtoa@u+3)^(0+128)
  5325  0573  0830               	movf	(efgtoa@ou+2)^(0+128),w
  5326  0574  00D1               	movwf	(efgtoa@u+2)^(0+128)
  5327  0575  082F               	movf	(efgtoa@ou+1)^(0+128),w
  5328  0576  00D0               	movwf	(efgtoa@u+1)^(0+128)
  5329  0577  082E               	movf	efgtoa@ou^(0+128),w
  5330  0578  00CF               	movwf	efgtoa@u^(0+128)
  5331  0579                     l3665:
  5332                           
  5333                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5334  0579  3065               	movlw	101
  5335  057A  063B               	xorwf	efgtoa@nmode^(0+128),w
  5336  057B  1903               	btfsc	3,2
  5337  057C  2D7E               	goto	u4951
  5338  057D  2D7F               	goto	u4950
  5339  057E                     u4951:
  5340  057E  2D84               	goto	l3669
  5341  057F                     u4950:
  5342  057F                     l3667:
  5343  057F  084C               	movf	(efgtoa@e+1)^(0+128),w
  5344  0580  00AB               	movwf	(efgtoa@ne+1)^(0+128)
  5345  0581  084B               	movf	efgtoa@e^(0+128),w
  5346  0582  00AA               	movwf	efgtoa@ne^(0+128)
  5347  0583  2D86               	goto	l841
  5348  0584                     l3669:
  5349  0584  01AA               	clrf	efgtoa@ne^(0+128)
  5350  0585  01AB               	clrf	(efgtoa@ne+1)^(0+128)
  5351  0586                     l841:
  5352                           
  5353                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5354  0586  01A8               	clrf	efgtoa@pp^(0+128)
  5355  0587  01A9               	clrf	(efgtoa@pp+1)^(0+128)
  5356                           
  5357                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5358  0588  01A6               	clrf	efgtoa@t^(0+128)
  5359  0589  01A7               	clrf	(efgtoa@t+1)^(0+128)
  5360                           
  5361                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5362  058A  01C5               	clrf	efgtoa@i^(0+128)
  5363  058B  01C6               	clrf	(efgtoa@i+1)^(0+128)
  5364                           
  5365                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5366  058C  2EB4               	goto	l3719
  5367  058D                     l3671:
  5368                           
  5369                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5370  058D  0021               	movlb	1	; select bank1
  5371  058E  0852               	movf	(efgtoa@u+3)^(0+128),w
  5372  058F  00F3               	movwf	___fldiv@a+3
  5373  0590  0851               	movf	(efgtoa@u+2)^(0+128),w
  5374  0591  00F2               	movwf	___fldiv@a+2
  5375  0592  0850               	movf	(efgtoa@u+1)^(0+128),w
  5376  0593  00F1               	movwf	___fldiv@a+1
  5377  0594  084F               	movf	efgtoa@u^(0+128),w
  5378  0595  00F0               	movwf	___fldiv@a
  5379  0596  0840               	movf	(efgtoa@h+3)^(0+128),w
  5380  0597  00F7               	movwf	___fldiv@b+3
  5381  0598  083F               	movf	(efgtoa@h+2)^(0+128),w
  5382  0599  00F6               	movwf	___fldiv@b+2
  5383  059A  083E               	movf	(efgtoa@h+1)^(0+128),w
  5384  059B  00F5               	movwf	___fldiv@b+1
  5385  059C  083D               	movf	efgtoa@h^(0+128),w
  5386  059D  00F4               	movwf	___fldiv@b
  5387  059E  3196  264C  3180   	fcall	___fldiv
  5388  05A1  0873               	movf	?___fldiv+3,w
  5389  05A2  0020               	movlb	0	; select bank0
  5390  05A3  00B0               	movwf	floorf@x+3
  5391  05A4  0872               	movf	?___fldiv+2,w
  5392  05A5  00AF               	movwf	floorf@x+2
  5393  05A6  0871               	movf	?___fldiv+1,w
  5394  05A7  00AE               	movwf	floorf@x+1
  5395  05A8  0870               	movf	?___fldiv,w
  5396  05A9  00AD               	movwf	floorf@x
  5397  05AA  3194  2401  3180   	fcall	_floorf
  5398  05AD  0020               	movlb	0	; select bank0
  5399  05AE  0830               	movf	?_floorf+3,w
  5400  05AF  0021               	movlb	1	; select bank1
  5401  05B0  00C4               	movwf	(efgtoa@l+3)^(0+128)
  5402  05B1  0020               	movlb	0	; select bank0
  5403  05B2  082F               	movf	?_floorf+2,w
  5404  05B3  0021               	movlb	1	; select bank1
  5405  05B4  00C3               	movwf	(efgtoa@l+2)^(0+128)
  5406  05B5  0020               	movlb	0	; select bank0
  5407  05B6  082E               	movf	?_floorf+1,w
  5408  05B7  0021               	movlb	1	; select bank1
  5409  05B8  00C2               	movwf	(efgtoa@l+1)^(0+128)
  5410  05B9  0020               	movlb	0	; select bank0
  5411  05BA  082D               	movf	?_floorf,w
  5412  05BB  0021               	movlb	1	; select bank1
  5413  05BC  00C1               	movwf	efgtoa@l^(0+128)
  5414                           
  5415                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5416  05BD  0844               	movf	(efgtoa@l+3)^(0+128),w
  5417  05BE  00F3               	movwf	___fltol@f1+3
  5418  05BF  0843               	movf	(efgtoa@l+2)^(0+128),w
  5419  05C0  00F2               	movwf	___fltol@f1+2
  5420  05C1  0842               	movf	(efgtoa@l+1)^(0+128),w
  5421  05C2  00F1               	movwf	___fltol@f1+1
  5422  05C3  0841               	movf	efgtoa@l^(0+128),w
  5423  05C4  00F0               	movwf	___fltol@f1
  5424  05C5  3192  2283  3180   	fcall	___fltol
  5425  05C8  0871               	movf	?___fltol+1,w
  5426  05C9  0021               	movlb	1	; select bank1
  5427  05CA  00B3               	movwf	(efgtoa@d+1)^(0+128)
  5428  05CB  0870               	movf	?___fltol,w
  5429  05CC  00B2               	movwf	efgtoa@d^(0+128)
  5430  05CD                     l3673:
  5431                           
  5432                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5433  05CD  0022               	movlb	2	; select bank2
  5434  05CE  1A3A               	btfsc	_flags^(0+256),4
  5435  05CF  2DD1               	goto	u4961
  5436  05D0  2DD2               	goto	u4960
  5437  05D1                     u4961:
  5438  05D1  2DE8               	goto	l3683
  5439  05D2                     u4960:
  5440  05D2                     l3675:
  5441  05D2  0021               	movlb	1	; select bank1
  5442  05D3  0832               	movf	efgtoa@d^(0+128),w
  5443  05D4  0433               	iorwf	(efgtoa@d+1)^(0+128),w
  5444  05D5  1D03               	btfss	3,2
  5445  05D6  2DD8               	goto	u4971
  5446  05D7  2DD9               	goto	u4970
  5447  05D8                     u4971:
  5448  05D8  2DE8               	goto	l3683
  5449  05D9                     u4970:
  5450  05D9                     l3677:
  5451  05D9  3067               	movlw	103
  5452  05DA  063C               	xorwf	efgtoa@mode^(0+128),w
  5453  05DB  1D03               	btfss	3,2
  5454  05DC  2DDE               	goto	u4981
  5455  05DD  2DDF               	goto	u4980
  5456  05DE                     u4981:
  5457  05DE  2DE8               	goto	l3683
  5458  05DF                     u4980:
  5459  05DF                     l3679:
  5460  05DF  1FAB               	btfss	(efgtoa@ne+1)^(0+128),7
  5461  05E0  2DE2               	goto	u4991
  5462  05E1  2DE3               	goto	u4990
  5463  05E2                     u4991:
  5464  05E2  2DE8               	goto	l3683
  5465  05E3                     u4990:
  5466  05E3                     l3681:
  5467                           
  5468                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5469  05E3  3001               	movlw	1
  5470  05E4  07A6               	addwf	efgtoa@t^(0+128),f
  5471  05E5  3000               	movlw	0
  5472  05E6  3DA7               	addwfc	(efgtoa@t+1)^(0+128),f
  5473                           
  5474                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5475  05E7  2E42               	goto	l3711
  5476  05E8                     l3683:
  5477                           
  5478                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5479  05E8  0021               	movlb	1	; select bank1
  5480  05E9  0828               	movf	efgtoa@pp^(0+128),w
  5481  05EA  0429               	iorwf	(efgtoa@pp+1)^(0+128),w
  5482  05EB  1D03               	btfss	3,2
  5483  05EC  2DEE               	goto	u5001
  5484  05ED  2DEF               	goto	u5000
  5485  05EE                     u5001:
  5486  05EE  2E26               	goto	l3703
  5487  05EF                     u5000:
  5488  05EF                     l3685:
  5489  05EF  1FAB               	btfss	(efgtoa@ne+1)^(0+128),7
  5490  05F0  2DF2               	goto	u5011
  5491  05F1  2DF3               	goto	u5010
  5492  05F2                     u5011:
  5493  05F2  2E26               	goto	l3703
  5494  05F3                     u5010:
  5495  05F3                     l3687:
  5496                           
  5497                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5498  05F3  302E               	movlw	46
  5499  05F4  0020               	movlb	0	; select bank0
  5500  05F5  00DB               	movwf	??_efgtoa
  5501  05F6  0021               	movlb	1	; select bank1
  5502  05F7  084D               	movf	efgtoa@n^(0+128),w
  5503  05F8  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5504  05F9  0086               	movwf	6
  5505  05FA  3001               	movlw	1	; select bank3/4
  5506  05FB  0087               	movwf	7
  5507  05FC  0020               	movlb	0	; select bank0
  5508  05FD  085B               	movf	??_efgtoa,w
  5509  05FE  0081               	movwf	1
  5510  05FF                     l3689:
  5511  05FF  3001               	movlw	1
  5512  0600  0021               	movlb	1	; select bank1
  5513  0601  07CD               	addwf	efgtoa@n^(0+128),f
  5514  0602  3000               	movlw	0
  5515  0603  3DCE               	addwfc	(efgtoa@n+1)^(0+128),f
  5516  0604                     l3691:
  5517                           
  5518                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5519  0604  30FF               	movlw	255
  5520  0605  07B9               	addwf	efgtoa@w^(0+128),f
  5521  0606  30FF               	movlw	255
  5522  0607  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5523  0608                     l3693:
  5524                           
  5525                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5526  0608  3001               	movlw	1
  5527  0609  00A8               	movwf	efgtoa@pp^(0+128)
  5528  060A  3000               	movlw	0
  5529  060B  00A9               	movwf	(efgtoa@pp^(0+128)+1)
  5530  060C  2E26               	goto	l3703
  5531  060D                     l3695:
  5532                           
  5533                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5534  060D  3030               	movlw	48
  5535  060E  0020               	movlb	0	; select bank0
  5536  060F  00DB               	movwf	??_efgtoa
  5537  0610  0021               	movlb	1	; select bank1
  5538  0611  084D               	movf	efgtoa@n^(0+128),w
  5539  0612  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5540  0613  0086               	movwf	6
  5541  0614  3001               	movlw	1	; select bank3/4
  5542  0615  0087               	movwf	7
  5543  0616  0020               	movlb	0	; select bank0
  5544  0617  085B               	movf	??_efgtoa,w
  5545  0618  0081               	movwf	1
  5546  0619                     l3697:
  5547  0619  3001               	movlw	1
  5548  061A  0021               	movlb	1	; select bank1
  5549  061B  07CD               	addwf	efgtoa@n^(0+128),f
  5550  061C  3000               	movlw	0
  5551  061D  3DCE               	addwfc	(efgtoa@n+1)^(0+128),f
  5552  061E                     l3699:
  5553                           
  5554                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5555  061E  30FF               	movlw	255
  5556  061F  07B9               	addwf	efgtoa@w^(0+128),f
  5557  0620  30FF               	movlw	255
  5558  0621  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5559  0622                     l3701:
  5560                           
  5561                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5562  0622  30FF               	movlw	255
  5563  0623  07A6               	addwf	efgtoa@t^(0+128),f
  5564  0624  30FF               	movlw	255
  5565  0625  3DA7               	addwfc	(efgtoa@t+1)^(0+128),f
  5566  0626                     l3703:
  5567                           
  5568                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5569  0626  0826               	movf	efgtoa@t^(0+128),w
  5570  0627  0427               	iorwf	(efgtoa@t+1)^(0+128),w
  5571  0628  1D03               	btfss	3,2
  5572  0629  2E2B               	goto	u5021
  5573  062A  2E2C               	goto	u5020
  5574  062B                     u5021:
  5575  062B  2E0D               	goto	l3695
  5576  062C                     u5020:
  5577  062C                     l3705:
  5578                           
  5579                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5580  062C  0832               	movf	efgtoa@d^(0+128),w
  5581  062D  3E30               	addlw	48
  5582  062E  0020               	movlb	0	; select bank0
  5583  062F  00DB               	movwf	??_efgtoa
  5584  0630  0021               	movlb	1	; select bank1
  5585  0631  084D               	movf	efgtoa@n^(0+128),w
  5586  0632  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5587  0633  0086               	movwf	6
  5588  0634  3001               	movlw	1	; select bank3/4
  5589  0635  0087               	movwf	7
  5590  0636  0020               	movlb	0	; select bank0
  5591  0637  085B               	movf	??_efgtoa,w
  5592  0638  0081               	movwf	1
  5593  0639                     l3707:
  5594  0639  3001               	movlw	1
  5595  063A  0021               	movlb	1	; select bank1
  5596  063B  07CD               	addwf	efgtoa@n^(0+128),f
  5597  063C  3000               	movlw	0
  5598  063D  3DCE               	addwfc	(efgtoa@n+1)^(0+128),f
  5599  063E                     l3709:
  5600                           
  5601                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5602  063E  30FF               	movlw	255
  5603  063F  07B9               	addwf	efgtoa@w^(0+128),f
  5604  0640  30FF               	movlw	255
  5605  0641  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5606  0642                     l3711:
  5607                           
  5608                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5609  0642  0844               	movf	(efgtoa@l+3)^(0+128),w
  5610  0643  0020               	movlb	0	; select bank0
  5611  0644  00A7               	movwf	___flmul@a+3
  5612  0645  0021               	movlb	1	; select bank1
  5613  0646  0843               	movf	(efgtoa@l+2)^(0+128),w
  5614  0647  0020               	movlb	0	; select bank0
  5615  0648  00A6               	movwf	___flmul@a+2
  5616  0649  0021               	movlb	1	; select bank1
  5617  064A  0842               	movf	(efgtoa@l+1)^(0+128),w
  5618  064B  0020               	movlb	0	; select bank0
  5619  064C  00A5               	movwf	___flmul@a+1
  5620  064D  0021               	movlb	1	; select bank1
  5621  064E  0841               	movf	efgtoa@l^(0+128),w
  5622  064F  0020               	movlb	0	; select bank0
  5623  0650  00A4               	movwf	___flmul@a
  5624  0651  0021               	movlb	1	; select bank1
  5625  0652  0852               	movf	(efgtoa@u+3)^(0+128),w
  5626  0653  0020               	movlb	0	; select bank0
  5627  0654  00A3               	movwf	___flmul@b+3
  5628  0655  0021               	movlb	1	; select bank1
  5629  0656  0851               	movf	(efgtoa@u+2)^(0+128),w
  5630  0657  0020               	movlb	0	; select bank0
  5631  0658  00A2               	movwf	___flmul@b+2
  5632  0659  0021               	movlb	1	; select bank1
  5633  065A  0850               	movf	(efgtoa@u+1)^(0+128),w
  5634  065B  0020               	movlb	0	; select bank0
  5635  065C  00A1               	movwf	___flmul@b+1
  5636  065D  0021               	movlb	1	; select bank1
  5637  065E  084F               	movf	efgtoa@u^(0+128),w
  5638  065F  0020               	movlb	0	; select bank0
  5639  0660  00A0               	movwf	___flmul@b
  5640  0661  318A  22D7  3180   	fcall	___flmul
  5641  0664  0020               	movlb	0	; select bank0
  5642  0665  0823               	movf	?___flmul+3,w
  5643  0666  00D1               	movwf	___flsub@a+3
  5644  0667  0822               	movf	?___flmul+2,w
  5645  0668  00D0               	movwf	___flsub@a+2
  5646  0669  0821               	movf	?___flmul+1,w
  5647  066A  00CF               	movwf	___flsub@a+1
  5648  066B  0820               	movf	?___flmul,w
  5649  066C  00CE               	movwf	___flsub@a
  5650  066D  0021               	movlb	1	; select bank1
  5651  066E  0840               	movf	(efgtoa@h+3)^(0+128),w
  5652  066F  0020               	movlb	0	; select bank0
  5653  0670  00D5               	movwf	___flsub@b+3
  5654  0671  0021               	movlb	1	; select bank1
  5655  0672  083F               	movf	(efgtoa@h+2)^(0+128),w
  5656  0673  0020               	movlb	0	; select bank0
  5657  0674  00D4               	movwf	___flsub@b+2
  5658  0675  0021               	movlb	1	; select bank1
  5659  0676  083E               	movf	(efgtoa@h+1)^(0+128),w
  5660  0677  0020               	movlb	0	; select bank0
  5661  0678  00D3               	movwf	___flsub@b+1
  5662  0679  0021               	movlb	1	; select bank1
  5663  067A  083D               	movf	efgtoa@h^(0+128),w
  5664  067B  0020               	movlb	0	; select bank0
  5665  067C  00D2               	movwf	___flsub@b
  5666  067D  319E  267A  3180   	fcall	___flsub
  5667  0680  0020               	movlb	0	; select bank0
  5668  0681  0851               	movf	?___flsub+3,w
  5669  0682  0021               	movlb	1	; select bank1
  5670  0683  00C0               	movwf	(efgtoa@h+3)^(0+128)
  5671  0684  0020               	movlb	0	; select bank0
  5672  0685  0850               	movf	?___flsub+2,w
  5673  0686  0021               	movlb	1	; select bank1
  5674  0687  00BF               	movwf	(efgtoa@h+2)^(0+128)
  5675  0688  0020               	movlb	0	; select bank0
  5676  0689  084F               	movf	?___flsub+1,w
  5677  068A  0021               	movlb	1	; select bank1
  5678  068B  00BE               	movwf	(efgtoa@h+1)^(0+128)
  5679  068C  0020               	movlb	0	; select bank0
  5680  068D  084E               	movf	?___flsub,w
  5681  068E  0021               	movlb	1	; select bank1
  5682  068F  00BD               	movwf	efgtoa@h^(0+128)
  5683  0690                     l3713:
  5684                           
  5685                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5686  0690  3041               	movlw	65
  5687  0691  00F3               	movwf	___fldiv@a+3
  5688  0692  3020               	movlw	32
  5689  0693  00F2               	movwf	___fldiv@a+2
  5690  0694  3000               	movlw	0
  5691  0695  00F1               	movwf	___fldiv@a+1
  5692  0696  3000               	movlw	0
  5693  0697  00F0               	movwf	___fldiv@a
  5694  0698  0852               	movf	(efgtoa@u+3)^(0+128),w
  5695  0699  00F7               	movwf	___fldiv@b+3
  5696  069A  0851               	movf	(efgtoa@u+2)^(0+128),w
  5697  069B  00F6               	movwf	___fldiv@b+2
  5698  069C  0850               	movf	(efgtoa@u+1)^(0+128),w
  5699  069D  00F5               	movwf	___fldiv@b+1
  5700  069E  084F               	movf	efgtoa@u^(0+128),w
  5701  069F  00F4               	movwf	___fldiv@b
  5702  06A0  3196  264C  3180   	fcall	___fldiv
  5703  06A3  0873               	movf	?___fldiv+3,w
  5704  06A4  0021               	movlb	1	; select bank1
  5705  06A5  00D2               	movwf	(efgtoa@u+3)^(0+128)
  5706  06A6  0872               	movf	?___fldiv+2,w
  5707  06A7  00D1               	movwf	(efgtoa@u+2)^(0+128)
  5708  06A8  0871               	movf	?___fldiv+1,w
  5709  06A9  00D0               	movwf	(efgtoa@u+1)^(0+128)
  5710  06AA  0870               	movf	?___fldiv,w
  5711  06AB  00CF               	movwf	efgtoa@u^(0+128)
  5712  06AC                     l3715:
  5713                           
  5714                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5715  06AC  30FF               	movlw	255
  5716  06AD  07AA               	addwf	efgtoa@ne^(0+128),f
  5717  06AE  30FF               	movlw	255
  5718  06AF  3DAB               	addwfc	(efgtoa@ne+1)^(0+128),f
  5719  06B0                     l3717:
  5720                           
  5721                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5722  06B0  3001               	movlw	1
  5723  06B1  07C5               	addwf	efgtoa@i^(0+128),f
  5724  06B2  3000               	movlw	0
  5725  06B3  3DC6               	addwfc	(efgtoa@i+1)^(0+128),f
  5726  06B4                     l3719:
  5727                           
  5728                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5729  06B4  0846               	movf	(efgtoa@i+1)^(0+128),w
  5730  06B5  3A80               	xorlw	128
  5731  06B6  0020               	movlb	0	; select bank0
  5732  06B7  00DB               	movwf	??_efgtoa
  5733  06B8  0021               	movlb	1	; select bank1
  5734  06B9  082D               	movf	(efgtoa@m+1)^(0+128),w
  5735  06BA  3A80               	xorlw	128
  5736  06BB  0020               	movlb	0	; select bank0
  5737  06BC  025B               	subwf	??_efgtoa,w
  5738  06BD  1D03               	skipz
  5739  06BE  2EC2               	goto	u5035
  5740  06BF  0021               	movlb	1	; select bank1
  5741  06C0  082C               	movf	efgtoa@m^(0+128),w
  5742  06C1  0245               	subwf	efgtoa@i^(0+128),w
  5743  06C2                     u5035:
  5744  06C2  1803               	skipnc
  5745  06C3  2EC5               	goto	u5031
  5746  06C4  2EC6               	goto	u5030
  5747  06C5                     u5031:
  5748  06C5  2ED6               	goto	l3723
  5749  06C6                     u5030:
  5750  06C6                     l3721:
  5751  06C6  0021               	movlb	1	; select bank1
  5752  06C7  084E               	movf	(efgtoa@n+1)^(0+128),w
  5753  06C8  3A80               	xorlw	128
  5754  06C9  0020               	movlb	0	; select bank0
  5755  06CA  00DB               	movwf	??_efgtoa
  5756  06CB  3080               	movlw	128
  5757  06CC  025B               	subwf	??_efgtoa,w
  5758  06CD  1D03               	skipz
  5759  06CE  2ED2               	goto	u5045
  5760  06CF  304B               	movlw	75
  5761  06D0  0021               	movlb	1	; select bank1
  5762  06D1  024D               	subwf	efgtoa@n^(0+128),w
  5763  06D2                     u5045:
  5764  06D2  1C03               	skipc
  5765  06D3  2ED5               	goto	u5041
  5766  06D4  2ED6               	goto	u5040
  5767  06D5                     u5041:
  5768  06D5  2D8D               	goto	l3671
  5769  06D6                     u5040:
  5770  06D6                     l3723:
  5771                           
  5772                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5773  06D6  0021               	movlb	1	; select bank1
  5774  06D7  0828               	movf	efgtoa@pp^(0+128),w
  5775  06D8  0429               	iorwf	(efgtoa@pp+1)^(0+128),w
  5776  06D9  1D03               	btfss	3,2
  5777  06DA  2EDC               	goto	u5051
  5778  06DB  2EDD               	goto	u5050
  5779  06DC                     u5051:
  5780  06DC  2EF3               	goto	l3731
  5781  06DD                     u5050:
  5782  06DD                     l3725:
  5783  06DD  0022               	movlb	2	; select bank2
  5784  06DE  1E3A               	btfss	_flags^(0+256),4
  5785  06DF  2EE1               	goto	u5061
  5786  06E0  2EE2               	goto	u5060
  5787  06E1                     u5061:
  5788  06E1  2EF3               	goto	l3731
  5789  06E2                     u5060:
  5790  06E2                     l3727:
  5791                           
  5792                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5793  06E2  302E               	movlw	46
  5794  06E3  0020               	movlb	0	; select bank0
  5795  06E4  00DB               	movwf	??_efgtoa
  5796  06E5  0021               	movlb	1	; select bank1
  5797  06E6  084D               	movf	efgtoa@n^(0+128),w
  5798  06E7  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5799  06E8  0086               	movwf	6
  5800  06E9  3001               	movlw	1	; select bank3/4
  5801  06EA  0087               	movwf	7
  5802  06EB  0020               	movlb	0	; select bank0
  5803  06EC  085B               	movf	??_efgtoa,w
  5804  06ED  0081               	movwf	1
  5805  06EE                     l3729:
  5806  06EE  3001               	movlw	1
  5807  06EF  0021               	movlb	1	; select bank1
  5808  06F0  07CD               	addwf	efgtoa@n^(0+128),f
  5809  06F1  3000               	movlw	0
  5810  06F2  3DCE               	addwfc	(efgtoa@n+1)^(0+128),f
  5811  06F3                     l3731:
  5812                           
  5813                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5814  06F3  0021               	movlb	1	; select bank1
  5815  06F4  084D               	movf	efgtoa@n^(0+128),w
  5816  06F5  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5817  06F6  0086               	movwf	6
  5818  06F7  3001               	movlw	1	; select bank3/4
  5819  06F8  0087               	movwf	7
  5820  06F9  0181               	clrf	1
  5821  06FA                     l3733:
  5822                           
  5823                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5824  06FA  3065               	movlw	101
  5825  06FB  063B               	xorwf	efgtoa@nmode^(0+128),w
  5826  06FC  1D03               	btfss	3,2
  5827  06FD  2EFF               	goto	u5071
  5828  06FE  2F00               	goto	u5070
  5829  06FF                     u5071:
  5830  06FF  2FC9               	goto	l3791
  5831  0700                     u5070:
  5832  0700                     l3735:
  5833                           
  5834                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5835  0700  304F               	movlw	79
  5836  0701  00C5               	movwf	efgtoa@i^(0+128)
  5837  0702  3000               	movlw	0
  5838  0703  00C6               	movwf	(efgtoa@i^(0+128)+1)
  5839  0704                     l3737:
  5840                           
  5841                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5842  0704  0845               	movf	efgtoa@i^(0+128),w
  5843  0705  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5844  0706  0086               	movwf	6
  5845  0707  3001               	movlw	1	; select bank3/4
  5846  0708  0087               	movwf	7
  5847  0709  0181               	clrf	1
  5848  070A                     l3739:
  5849                           
  5850                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5851  070A  01B4               	clrf	efgtoa@sign^(0+128)
  5852  070B  01B5               	clrf	(efgtoa@sign+1)^(0+128)
  5853  070C                     l3741:
  5854                           
  5855                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5856  070C  1FCC               	btfss	(efgtoa@e+1)^(0+128),7
  5857  070D  2F0F               	goto	u5081
  5858  070E  2F10               	goto	u5080
  5859  070F                     u5081:
  5860  070F  2F19               	goto	l3747
  5861  0710                     u5080:
  5862  0710                     l3743:
  5863                           
  5864                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5865  0710  3001               	movlw	1
  5866  0711  00B4               	movwf	efgtoa@sign^(0+128)
  5867  0712  3000               	movlw	0
  5868  0713  00B5               	movwf	(efgtoa@sign^(0+128)+1)
  5869  0714                     l3745:
  5870                           
  5871                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5872  0714  09CB               	comf	efgtoa@e^(0+128),f
  5873  0715  09CC               	comf	(efgtoa@e+1)^(0+128),f
  5874  0716  0ACB               	incf	efgtoa@e^(0+128),f
  5875  0717  1903               	skipnz
  5876  0718  0ACC               	incf	(efgtoa@e+1)^(0+128),f
  5877  0719                     l3747:
  5878                           
  5879                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5880  0719  3002               	movlw	2
  5881  071A  00B7               	movwf	efgtoa@p^(0+128)
  5882  071B  3000               	movlw	0
  5883  071C  00B8               	movwf	(efgtoa@p^(0+128)+1)
  5884                           
  5885                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5886  071D  2F54               	goto	l3759
  5887  071E                     l3749:
  5888                           
  5889                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5890  071E  30FF               	movlw	255
  5891  071F  0021               	movlb	1	; select bank1
  5892  0720  07C5               	addwf	efgtoa@i^(0+128),f
  5893  0721  30FF               	movlw	255
  5894  0722  3DC6               	addwfc	(efgtoa@i+1)^(0+128),f
  5895  0723                     l3751:
  5896                           
  5897                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5898  0723  300A               	movlw	10
  5899  0724  00F0               	movwf	___awmod@divisor
  5900  0725  3000               	movlw	0
  5901  0726  00F1               	movwf	___awmod@divisor+1
  5902  0727  084C               	movf	(efgtoa@e+1)^(0+128),w
  5903  0728  00F3               	movwf	___awmod@dividend+1
  5904  0729  084B               	movf	efgtoa@e^(0+128),w
  5905  072A  00F2               	movwf	___awmod@dividend
  5906  072B  3190  20CD  3180   	fcall	___awmod
  5907  072E  0870               	movf	?___awmod,w
  5908  072F  3E30               	addlw	48
  5909  0730  0020               	movlb	0	; select bank0
  5910  0731  00DB               	movwf	??_efgtoa
  5911  0732  0021               	movlb	1	; select bank1
  5912  0733  0845               	movf	efgtoa@i^(0+128),w
  5913  0734  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5914  0735  0086               	movwf	6
  5915  0736  3001               	movlw	1	; select bank3/4
  5916  0737  0087               	movwf	7
  5917  0738  0020               	movlb	0	; select bank0
  5918  0739  085B               	movf	??_efgtoa,w
  5919  073A  0081               	movwf	1
  5920  073B                     l3753:
  5921                           
  5922                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5923  073B  300A               	movlw	10
  5924  073C  00F0               	movwf	___awdiv@divisor
  5925  073D  3000               	movlw	0
  5926  073E  00F1               	movwf	___awdiv@divisor+1
  5927  073F  0021               	movlb	1	; select bank1
  5928  0740  084C               	movf	(efgtoa@e+1)^(0+128),w
  5929  0741  00F3               	movwf	___awdiv@dividend+1
  5930  0742  084B               	movf	efgtoa@e^(0+128),w
  5931  0743  00F2               	movwf	___awdiv@dividend
  5932  0744  3192  2224  3180   	fcall	___awdiv
  5933  0747  0871               	movf	?___awdiv+1,w
  5934  0748  0021               	movlb	1	; select bank1
  5935  0749  00CC               	movwf	(efgtoa@e+1)^(0+128)
  5936  074A  0870               	movf	?___awdiv,w
  5937  074B  00CB               	movwf	efgtoa@e^(0+128)
  5938  074C                     l3755:
  5939                           
  5940                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5941  074C  30FF               	movlw	255
  5942  074D  07B7               	addwf	efgtoa@p^(0+128),f
  5943  074E  30FF               	movlw	255
  5944  074F  3DB8               	addwfc	(efgtoa@p+1)^(0+128),f
  5945  0750                     l3757:
  5946                           
  5947                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5948  0750  30FF               	movlw	255
  5949  0751  07B9               	addwf	efgtoa@w^(0+128),f
  5950  0752  30FF               	movlw	255
  5951  0753  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5952  0754                     l3759:
  5953                           
  5954                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5955  0754  084B               	movf	efgtoa@e^(0+128),w
  5956  0755  044C               	iorwf	(efgtoa@e+1)^(0+128),w
  5957  0756  1D03               	btfss	3,2
  5958  0757  2F59               	goto	u5091
  5959  0758  2F5A               	goto	u5090
  5960  0759                     u5091:
  5961  0759  2F1E               	goto	l3749
  5962  075A                     u5090:
  5963  075A                     l3761:
  5964  075A  0838               	movf	(efgtoa@p+1)^(0+128),w
  5965  075B  3A80               	xorlw	128
  5966  075C  0020               	movlb	0	; select bank0
  5967  075D  00DB               	movwf	??_efgtoa
  5968  075E  3080               	movlw	128
  5969  075F  025B               	subwf	??_efgtoa,w
  5970  0760  1D03               	skipz
  5971  0761  2F65               	goto	u5105
  5972  0762  3001               	movlw	1
  5973  0763  0021               	movlb	1	; select bank1
  5974  0764  0237               	subwf	efgtoa@p^(0+128),w
  5975  0765                     u5105:
  5976  0765  1803               	skipnc
  5977  0766  2F68               	goto	u5101
  5978  0767  2F69               	goto	u5100
  5979  0768                     u5101:
  5980  0768  2F1E               	goto	l3749
  5981  0769                     u5100:
  5982  0769                     l3763:
  5983                           
  5984                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  5985  0769  30FF               	movlw	255
  5986  076A  0021               	movlb	1	; select bank1
  5987  076B  07C5               	addwf	efgtoa@i^(0+128),f
  5988  076C  30FF               	movlw	255
  5989  076D  3DC6               	addwfc	(efgtoa@i+1)^(0+128),f
  5990  076E                     l3765:
  5991                           
  5992                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5993  076E  0834               	movf	efgtoa@sign^(0+128),w
  5994  076F  0435               	iorwf	(efgtoa@sign+1)^(0+128),w
  5995  0770  1D03               	btfss	3,2
  5996  0771  2F73               	goto	u5111
  5997  0772  2F74               	goto	u5110
  5998  0773                     u5111:
  5999  0773  2F79               	goto	l3769
  6000  0774                     u5110:
  6001  0774                     l3767:
  6002  0774  302B               	movlw	43
  6003  0775  00A2               	movwf	_efgtoa$938^(0+128)
  6004  0776  3000               	movlw	0
  6005  0777  00A3               	movwf	(_efgtoa$938^(0+128)+1)
  6006  0778  2F7D               	goto	l3771
  6007  0779                     l3769:
  6008  0779  302D               	movlw	45
  6009  077A  00A2               	movwf	_efgtoa$938^(0+128)
  6010  077B  3000               	movlw	0
  6011  077C  00A3               	movwf	(_efgtoa$938^(0+128)+1)
  6012  077D                     l3771:
  6013  077D  0822               	movf	_efgtoa$938^(0+128),w
  6014  077E  0020               	movlb	0	; select bank0
  6015  077F  00DB               	movwf	??_efgtoa
  6016  0780  0021               	movlb	1	; select bank1
  6017  0781  0845               	movf	efgtoa@i^(0+128),w
  6018  0782  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6019  0783  0086               	movwf	6
  6020  0784  3001               	movlw	1	; select bank3/4
  6021  0785  0087               	movwf	7
  6022  0786  0020               	movlb	0	; select bank0
  6023  0787  085B               	movf	??_efgtoa,w
  6024  0788  0081               	movwf	1
  6025  0789                     l3773:
  6026                           
  6027                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  6028  0789  30FF               	movlw	255
  6029  078A  0021               	movlb	1	; select bank1
  6030  078B  07B9               	addwf	efgtoa@w^(0+128),f
  6031  078C  30FF               	movlw	255
  6032  078D  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  6033  078E                     l3775:
  6034                           
  6035                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  6036  078E  30FF               	movlw	255
  6037  078F  07C5               	addwf	efgtoa@i^(0+128),f
  6038  0790  30FF               	movlw	255
  6039  0791  3DC6               	addwfc	(efgtoa@i+1)^(0+128),f
  6040  0792                     l3779:	
  6041                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 && isupper((int)c), ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6042                           
  6043  0792  0020               	movlb	0	; select bank0
  6044  0793  085A               	movf	efgtoa@c,w
  6045  0794  3EBF               	addlw	191
  6046  0795  00DB               	movwf	??_efgtoa
  6047  0796  30FF               	movlw	255
  6048  0797  1803               	skipnc
  6049  0798  3000               	movlw	0
  6050  0799  00DC               	movwf	??_efgtoa+1
  6051  079A  3000               	movlw	0
  6052  079B  025C               	subwf	??_efgtoa+1,w
  6053  079C  301A               	movlw	26
  6054  079D  1903               	skipnz
  6055  079E  025B               	subwf	??_efgtoa,w
  6056  079F  1C03               	skipc
  6057  07A0  2FA2               	goto	u5121
  6058  07A1  2FA3               	goto	u5120
  6059  07A2                     u5121:
  6060  07A2  2FA9               	goto	l3783
  6061  07A3                     u5120:
  6062  07A3                     l3781:
  6063  07A3  3065               	movlw	101
  6064  07A4  0021               	movlb	1	; select bank1
  6065  07A5  00A4               	movwf	_efgtoa$939^(0+128)
  6066  07A6  3000               	movlw	0
  6067  07A7  00A5               	movwf	(_efgtoa$939^(0+128)+1)
  6068  07A8  2FAE               	goto	l3785
  6069  07A9                     l3783:
  6070  07A9  3045               	movlw	69
  6071  07AA  0021               	movlb	1	; select bank1
  6072  07AB  00A4               	movwf	_efgtoa$939^(0+128)
  6073  07AC  3000               	movlw	0
  6074  07AD  00A5               	movwf	(_efgtoa$939^(0+128)+1)
  6075  07AE                     l3785:
  6076  07AE  0824               	movf	_efgtoa$939^(0+128),w
  6077  07AF  0020               	movlb	0	; select bank0
  6078  07B0  00DB               	movwf	??_efgtoa
  6079  07B1  0021               	movlb	1	; select bank1
  6080  07B2  0845               	movf	efgtoa@i^(0+128),w
  6081  07B3  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6082  07B4  0086               	movwf	6
  6083  07B5  3001               	movlw	1	; select bank3/4
  6084  07B6  0087               	movwf	7
  6085  07B7  0020               	movlb	0	; select bank0
  6086  07B8  085B               	movf	??_efgtoa,w
  6087  07B9  0081               	movwf	1
  6088  07BA                     l3787:
  6089                           
  6090                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  6091  07BA  30FF               	movlw	255
  6092  07BB  0021               	movlb	1	; select bank1
  6093  07BC  07B9               	addwf	efgtoa@w^(0+128),f
  6094  07BD  30FF               	movlw	255
  6095  07BE  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  6096  07BF                     l3789:
  6097                           
  6098                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  6099  07BF  0845               	movf	efgtoa@i^(0+128),w
  6100  07C0  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6101  07C1  00F0               	movwf	strcpy@src
  6102  07C2  3001               	movlw	1
  6103  07C3  00F1               	movwf	strcpy@src+1
  6104  07C4  084D               	movf	efgtoa@n^(0+128),w
  6105  07C5  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6106  07C6  319E  26DC  3180   	fcall	_strcpy
  6107  07C9                     l3791:
  6108                           
  6109                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  6110  07C9  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  6111  07CA  0020               	movlb	0	; select bank0
  6112  07CB  00DB               	movwf	??_efgtoa
  6113  07CC  085B               	movf	??_efgtoa,w
  6114  07CD  00A4               	movwf	pad@buf
  6115  07CE  0021               	movlb	1	; select bank1
  6116  07CF  083A               	movf	(efgtoa@w+1)^(0+128),w
  6117  07D0  0020               	movlb	0	; select bank0
  6118  07D1  00A6               	movwf	pad@p+1
  6119  07D2  0021               	movlb	1	; select bank1
  6120  07D3  0839               	movf	efgtoa@w^(0+128),w
  6121  07D4  0020               	movlb	0	; select bank0
  6122  07D5  00A5               	movwf	pad@p
  6123  07D6  0021               	movlb	1	; select bank1
  6124  07D7  0836               	movf	efgtoa@fp^(0+128),w
  6125  07D8  3191  21CB  3180   	fcall	_pad
  6126  07DB  0020               	movlb	0	; select bank0
  6127  07DC  0825               	movf	?_pad+1,w
  6128  07DD  00D7               	movwf	?_efgtoa+1
  6129  07DE  0824               	movf	?_pad,w
  6130  07DF  00D6               	movwf	?_efgtoa
  6131  07E0                     l797:
  6132  07E0  0008               	return
  6133  07E1                     __end_of_efgtoa:
  6134                           
  6135                           	psect	text6
  6136  1DC1                     __ptext6:	
  6137 ;; *************** function _tolower *****************
  6138 ;; Defined at:
  6139 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;  c               2    6[COMMON] int 
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;		None
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  2    6[COMMON] int 
  6146 ;; Registers used:
  6147 ;;		wreg, status,2, status,0
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6155 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6156 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6157 ;;Total ram usage:        4 bytes
  6158 ;; Hardware stack levels used: 1
  6159 ;; Hardware stack levels required when called: 1
  6160 ;; This function calls:
  6161 ;;		_isupper
  6162 ;; This function is called by:
  6163 ;;		_efgtoa
  6164 ;;		_vfpfcnvrt
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168  1DC1                     _tolower:	
  6169                           ;psect for function _tolower
  6170                           
  6171  1DC1                     l3421:	
  6172                           ;incstack = 0
  6173                           ; Regs used in _tolower: [wreg+status,2+status,0]
  6174                           
  6175  1DC1                     l3425:
  6176  1DC1  0876               	movf	tolower@c,w
  6177  1DC2  3EBF               	addlw	191
  6178  1DC3  00F8               	movwf	??_tolower
  6179  1DC4  30FF               	movlw	255
  6180  1DC5  3D77               	addwfc	tolower@c+1,w
  6181  1DC6  00F9               	movwf	??_tolower+1
  6182  1DC7  3000               	movlw	0
  6183  1DC8  0279               	subwf	??_tolower+1,w
  6184  1DC9  301A               	movlw	26
  6185  1DCA  1903               	skipnz
  6186  1DCB  0278               	subwf	??_tolower,w
  6187  1DCC  1803               	skipnc
  6188  1DCD  2DCF               	goto	u4451
  6189  1DCE  2DD0               	goto	u4450
  6190  1DCF                     u4451:
  6191  1DCF  2DD7               	goto	l1033
  6192  1DD0                     u4450:
  6193  1DD0                     l3427:
  6194  1DD0  3020               	movlw	32
  6195  1DD1  0476               	iorwf	tolower@c,w
  6196  1DD2  00F6               	movwf	?_tolower
  6197  1DD3  3000               	movlw	0
  6198  1DD4  0477               	iorwf	tolower@c+1,w
  6199  1DD5  00F7               	movwf	?_tolower+1
  6200  1DD6  2DD7               	goto	l1036
  6201  1DD7                     l1033:
  6202  1DD7                     l1036:
  6203  1DD7  0008               	return
  6204  1DD8                     __end_of_tolower:
  6205                           
  6206                           	psect	text7
  6207  1DF0                     __ptext7:	
  6208 ;; *************** function _isupper *****************
  6209 ;; Defined at:
  6210 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  6211 ;; Parameters:    Size  Location     Type
  6212 ;;  c               2    0[COMMON] int 
  6213 ;; Auto vars:     Size  Location     Type
  6214 ;;		None
  6215 ;; Return value:  Size  Location     Type
  6216 ;;                  2    0[COMMON] int 
  6217 ;; Registers used:
  6218 ;;		wreg, status,2, status,0
  6219 ;; Tracked objects:
  6220 ;;		On entry : 0/0
  6221 ;;		On exit  : 0/0
  6222 ;;		Unchanged: 0/0
  6223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6224 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6226 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6227 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6228 ;;Total ram usage:        6 bytes
  6229 ;; Hardware stack levels used: 1
  6230 ;; This function calls:
  6231 ;;		Nothing
  6232 ;; This function is called by:
  6233 ;;		_efgtoa
  6234 ;;		_vfpfcnvrt
  6235 ;;		_tolower
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239  1DF0                     _isupper:	
  6240                           ;psect for function _isupper
  6241                           
  6242  1DF0                     l2909:	
  6243                           ;incstack = 0
  6244                           ; Regs used in _isupper: [wreg+status,2+status,0]
  6245                           
  6246  1DF0  0870               	movf	isupper@c,w
  6247  1DF1  3EBF               	addlw	191
  6248  1DF2  00F2               	movwf	??_isupper
  6249  1DF3  30FF               	movlw	255
  6250  1DF4  3D71               	addwfc	isupper@c+1,w
  6251  1DF5  00F3               	movwf	??_isupper+1
  6252  1DF6  3000               	movlw	0
  6253  1DF7  0273               	subwf	??_isupper+1,w
  6254  1DF8  301A               	movlw	26
  6255  1DF9  1903               	skipnz
  6256  1DFA  0272               	subwf	??_isupper,w
  6257  1DFB  1C03               	skipc
  6258  1DFC  2DFE               	goto	u3331
  6259  1DFD  2E00               	goto	u3330
  6260  1DFE                     u3331:
  6261  1DFE  3001               	movlw	1
  6262  1DFF  2E01               	goto	u3340
  6263  1E00                     u3330:
  6264  1E00  3000               	movlw	0
  6265  1E01                     u3340:
  6266  1E01  00F4               	movwf	??_isupper+2
  6267  1E02  01F5               	clrf	??_isupper+3
  6268  1E03  0874               	movf	??_isupper+2,w
  6269  1E04  00F0               	movwf	?_isupper
  6270  1E05  0875               	movf	??_isupper+3,w
  6271  1E06  00F1               	movwf	?_isupper+1
  6272  1E07                     l981:
  6273  1E07  0008               	return
  6274  1E08                     __end_of_isupper:
  6275                           
  6276                           	psect	text8
  6277  1EDC                     __ptext8:	
  6278 ;; *************** function _strcpy *****************
  6279 ;; Defined at:
  6280 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  6281 ;; Parameters:    Size  Location     Type
  6282 ;;  dest            1    wreg     PTR unsigned char 
  6283 ;;		 -> dbuf(80), 
  6284 ;;  src             2    0[COMMON] PTR const unsigned char 
  6285 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  6286 ;;		 -> dbuf(80), 
  6287 ;; Auto vars:     Size  Location     Type
  6288 ;;  dest            1    7[COMMON] PTR unsigned char 
  6289 ;;		 -> dbuf(80), 
  6290 ;;  s               2    4[COMMON] PTR const unsigned char 
  6291 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  6292 ;;		 -> dbuf(80), 
  6293 ;;  d               1    6[COMMON] PTR unsigned char 
  6294 ;;		 -> dbuf(80), 
  6295 ;; Return value:  Size  Location     Type
  6296 ;;                  1    wreg      PTR unsigned char 
  6297 ;; Registers used:
  6298 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6304 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6305 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6306 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6307 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6308 ;;Total ram usage:        8 bytes
  6309 ;; Hardware stack levels used: 1
  6310 ;; This function calls:
  6311 ;;		Nothing
  6312 ;; This function is called by:
  6313 ;;		_efgtoa
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317  1EDC                     _strcpy:	
  6318                           ;psect for function _strcpy
  6319                           
  6320                           
  6321                           ;incstack = 0
  6322                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  6323                           ;strcpy@dest stored from wreg
  6324  1EDC  00F7               	movwf	strcpy@dest
  6325  1EDD                     l3417:
  6326  1EDD  0871               	movf	strcpy@src+1,w
  6327  1EDE  00F5               	movwf	strcpy@s+1
  6328  1EDF  0870               	movf	strcpy@src,w
  6329  1EE0  00F4               	movwf	strcpy@s
  6330  1EE1  0877               	movf	strcpy@dest,w
  6331  1EE2  00F2               	movwf	??_strcpy
  6332  1EE3  0872               	movf	??_strcpy,w
  6333  1EE4  00F6               	movwf	strcpy@d
  6334  1EE5                     l3419:
  6335  1EE5  0876               	movf	strcpy@d,w
  6336  1EE6  0086               	movwf	6
  6337  1EE7  3001               	movlw	1	; select bank2/3
  6338  1EE8  0087               	movwf	7
  6339  1EE9  0AF6               	incf	strcpy@d,f
  6340  1EEA  0875               	movf	strcpy@s+1,w
  6341  1EEB  00F3               	movwf	??_strcpy+1
  6342  1EEC  0874               	movf	strcpy@s,w
  6343  1EED  00F2               	movwf	??_strcpy
  6344  1EEE  0AF4               	incf	strcpy@s,f
  6345  1EEF  1903               	skipnz
  6346  1EF0  0AF5               	incf	strcpy@s+1,f
  6347  1EF1  0872               	movf	??_strcpy,w
  6348  1EF2  0084               	movwf	4
  6349  1EF3  0873               	movf	??_strcpy+1,w
  6350  1EF4  0085               	movwf	5
  6351  1EF5  0800               	movf	0,w	;code access
  6352  1EF6  3FC0               	movwi [0]fsr1
  6353  1EF7  0889               	movf	9,f
  6354  1EF8  1D03               	btfss	3,2
  6355  1EF9  2EFB               	goto	u4441
  6356  1EFA  2EFC               	goto	u4440
  6357  1EFB                     u4441:
  6358  1EFB  2EE5               	goto	l3419
  6359  1EFC                     u4440:
  6360  1EFC                     l1013:
  6361  1EFC  0008               	return
  6362  1EFD                     __end_of_strcpy:
  6363                           
  6364                           	psect	text9
  6365  11CB                     __ptext9:	
  6366 ;; *************** function _pad *****************
  6367 ;; Defined at:
  6368 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  6369 ;; Parameters:    Size  Location     Type
  6370 ;;  fp              1    wreg     PTR struct _IO_FILE
  6371 ;;		 -> sprintf@f(10), 
  6372 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  6373 ;;		 -> dbuf(80), 
  6374 ;;  p               2    5[BANK0 ] int 
  6375 ;; Auto vars:     Size  Location     Type
  6376 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  6377 ;;		 -> sprintf@f(10), 
  6378 ;;  w               2    9[BANK0 ] int 
  6379 ;;  i               2    7[BANK0 ] int 
  6380 ;; Return value:  Size  Location     Type
  6381 ;;                  2    4[BANK0 ] int 
  6382 ;; Registers used:
  6383 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6384 ;; Tracked objects:
  6385 ;;		On entry : 0/0
  6386 ;;		On exit  : 0/0
  6387 ;;		Unchanged: 0/0
  6388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6389 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6390 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6391 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6392 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6393 ;;Total ram usage:        9 bytes
  6394 ;; Hardware stack levels used: 1
  6395 ;; Hardware stack levels required when called: 3
  6396 ;; This function calls:
  6397 ;;		_fputc
  6398 ;;		_fputs
  6399 ;;		_strlen
  6400 ;; This function is called by:
  6401 ;;		_efgtoa
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405  11CB                     _pad:	
  6406                           ;psect for function _pad
  6407                           
  6408                           
  6409                           ;incstack = 0
  6410                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6411                           ;pad@fp stored from wreg
  6412  11CB  0020               	movlb	0	; select bank0
  6413  11CC  00AB               	movwf	pad@fp
  6414  11CD                     l3371:
  6415                           
  6416                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6417  11CD  0022               	movlb	2	; select bank2
  6418  11CE  1C3A               	btfss	_flags^(0+256),0
  6419  11CF  29D1               	goto	u4321
  6420  11D0  29D2               	goto	u4320
  6421  11D1                     u4321:
  6422  11D1  29DB               	goto	l3375
  6423  11D2                     u4320:
  6424  11D2                     l3373:
  6425                           
  6426                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6427  11D2  0020               	movlb	0	; select bank0
  6428  11D3  082B               	movf	pad@fp,w
  6429  11D4  00FC               	movwf	??_pad
  6430  11D5  087C               	movf	??_pad,w
  6431  11D6  00F8               	movwf	fputs@fp
  6432  11D7  0824               	movf	pad@buf,w
  6433  11D8  3190  2006  3191   	fcall	_fputs
  6434  11DB                     l3375:
  6435                           
  6436                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6437  11DB  0020               	movlb	0	; select bank0
  6438  11DC  1BA6               	btfsc	pad@p+1,7
  6439  11DD  29DF               	goto	u4331
  6440  11DE  29E0               	goto	u4330
  6441  11DF                     u4331:
  6442  11DF  29E5               	goto	l3379
  6443  11E0                     u4330:
  6444  11E0                     l3377:
  6445  11E0  0826               	movf	pad@p+1,w
  6446  11E1  00AA               	movwf	pad@w+1
  6447  11E2  0825               	movf	pad@p,w
  6448  11E3  00A9               	movwf	pad@w
  6449  11E4  29E7               	goto	l776
  6450  11E5                     l3379:
  6451  11E5  01A9               	clrf	pad@w
  6452  11E6  01AA               	clrf	pad@w+1
  6453  11E7                     l776:
  6454                           
  6455                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6456  11E7  01A7               	clrf	pad@i
  6457  11E8  01A8               	clrf	pad@i+1
  6458                           
  6459                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6460  11E9  29FB               	goto	l3385
  6461  11EA                     l3381:
  6462                           
  6463                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6464  11EA  3020               	movlw	32
  6465  11EB  00F0               	movwf	fputc@c
  6466  11EC  3000               	movlw	0
  6467  11ED  00F1               	movwf	fputc@c+1
  6468  11EE  0020               	movlb	0	; select bank0
  6469  11EF  082B               	movf	pad@fp,w
  6470  11F0  00FC               	movwf	??_pad
  6471  11F1  087C               	movf	??_pad,w
  6472  11F2  00F2               	movwf	fputc@fp
  6473  11F3  3191  2120  3191   	fcall	_fputc
  6474  11F6                     l3383:
  6475                           
  6476                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6477  11F6  3001               	movlw	1
  6478  11F7  0020               	movlb	0	; select bank0
  6479  11F8  07A7               	addwf	pad@i,f
  6480  11F9  3000               	movlw	0
  6481  11FA  3DA8               	addwfc	pad@i+1,f
  6482  11FB                     l3385:
  6483                           
  6484                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6485  11FB  0828               	movf	pad@i+1,w
  6486  11FC  3A80               	xorlw	128
  6487  11FD  00FC               	movwf	??_pad
  6488  11FE  082A               	movf	pad@w+1,w
  6489  11FF  3A80               	xorlw	128
  6490  1200  027C               	subwf	??_pad,w
  6491  1201  1D03               	skipz
  6492  1202  2A05               	goto	u4345
  6493  1203  0829               	movf	pad@w,w
  6494  1204  0227               	subwf	pad@i,w
  6495  1205                     u4345:
  6496  1205  1C03               	skipc
  6497  1206  2A08               	goto	u4341
  6498  1207  2A09               	goto	u4340
  6499  1208                     u4341:
  6500  1208  29EA               	goto	l3381
  6501  1209                     u4340:
  6502  1209                     l779:
  6503                           
  6504                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6505  1209  0022               	movlb	2	; select bank2
  6506  120A  183A               	btfsc	_flags^(0+256),0
  6507  120B  2A0D               	goto	u4351
  6508  120C  2A0E               	goto	u4350
  6509  120D                     u4351:
  6510  120D  2A17               	goto	l3389
  6511  120E                     u4350:
  6512  120E                     l3387:
  6513                           
  6514                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6515  120E  0020               	movlb	0	; select bank0
  6516  120F  082B               	movf	pad@fp,w
  6517  1210  00FC               	movwf	??_pad
  6518  1211  087C               	movf	??_pad,w
  6519  1212  00F8               	movwf	fputs@fp
  6520  1213  0824               	movf	pad@buf,w
  6521  1214  3190  2006  3191   	fcall	_fputs
  6522  1217                     l3389:
  6523                           
  6524                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6525  1217  0020               	movlb	0	; select bank0
  6526  1218  0824               	movf	pad@buf,w
  6527  1219  319E  2621  3191   	fcall	_strlen
  6528  121C  0020               	movlb	0	; select bank0
  6529  121D  0829               	movf	pad@w,w
  6530  121E  0770               	addwf	?_strlen,w
  6531  121F  00A4               	movwf	?_pad
  6532  1220  082A               	movf	pad@w+1,w
  6533  1221  3D71               	addwfc	?_strlen+1,w
  6534  1222  00A5               	movwf	?_pad+1
  6535  1223                     l781:
  6536  1223  0008               	return
  6537  1224                     __end_of_pad:
  6538                           
  6539                           	psect	text10
  6540  1E21                     __ptext10:	
  6541 ;; *************** function _strlen *****************
  6542 ;; Defined at:
  6543 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  6544 ;; Parameters:    Size  Location     Type
  6545 ;;  s               1    wreg     PTR const unsigned char 
  6546 ;;		 -> dbuf(80), 
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;  s               1    4[COMMON] PTR const unsigned char 
  6549 ;;		 -> dbuf(80), 
  6550 ;;  a               1    3[COMMON] PTR const unsigned char 
  6551 ;;		 -> dbuf(80), 
  6552 ;; Return value:  Size  Location     Type
  6553 ;;                  2    0[COMMON] unsigned int 
  6554 ;; Registers used:
  6555 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6556 ;; Tracked objects:
  6557 ;;		On entry : 0/0
  6558 ;;		On exit  : 0/0
  6559 ;;		Unchanged: 0/0
  6560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6561 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6562 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6563 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6564 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6565 ;;Total ram usage:        5 bytes
  6566 ;; Hardware stack levels used: 1
  6567 ;; This function calls:
  6568 ;;		Nothing
  6569 ;; This function is called by:
  6570 ;;		_pad
  6571 ;; This function uses a non-reentrant model
  6572 ;;
  6573                           
  6574  1E21                     _strlen:	
  6575                           ;psect for function _strlen
  6576                           
  6577                           
  6578                           ;incstack = 0
  6579                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6580                           ;strlen@s stored from wreg
  6581  1E21  00F4               	movwf	strlen@s
  6582  1E22                     l2899:
  6583  1E22  0874               	movf	strlen@s,w
  6584  1E23  00F2               	movwf	??_strlen
  6585  1E24  0872               	movf	??_strlen,w
  6586  1E25  00F3               	movwf	strlen@a
  6587  1E26  2E2B               	goto	l2903
  6588  1E27                     l2901:
  6589  1E27  3001               	movlw	1
  6590  1E28  00F2               	movwf	??_strlen
  6591  1E29  0872               	movf	??_strlen,w
  6592  1E2A  07F4               	addwf	strlen@s,f
  6593  1E2B                     l2903:
  6594  1E2B  0874               	movf	strlen@s,w
  6595  1E2C  0086               	movwf	6
  6596  1E2D  3001               	movlw	1	; select bank2/3
  6597  1E2E  0087               	movwf	7
  6598  1E2F  0801               	movf	1,w
  6599  1E30  1D03               	btfss	3,2
  6600  1E31  2E33               	goto	u3321
  6601  1E32  2E34               	goto	u3320
  6602  1E33                     u3321:
  6603  1E33  2E27               	goto	l2901
  6604  1E34                     u3320:
  6605  1E34                     l2905:
  6606  1E34  0873               	movf	strlen@a,w
  6607  1E35  0274               	subwf	strlen@s,w
  6608  1E36  00F0               	movwf	?_strlen
  6609  1E37  01F1               	clrf	?_strlen+1
  6610  1E38  1BF0               	btfsc	?_strlen,7
  6611  1E39  03F1               	decf	?_strlen+1,f
  6612  1E3A                     l1019:
  6613  1E3A  0008               	return
  6614  1E3B                     __end_of_strlen:
  6615                           
  6616                           	psect	text11
  6617  1006                     __ptext11:	
  6618 ;; *************** function _fputs *****************
  6619 ;; Defined at:
  6620 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  6621 ;; Parameters:    Size  Location     Type
  6622 ;;  s               1    wreg     PTR const unsigned char 
  6623 ;;		 -> dbuf(80), 
  6624 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  6625 ;;		 -> sprintf@f(10), 
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  6628 ;;		 -> dbuf(80), 
  6629 ;;  i               2    1[BANK0 ] int 
  6630 ;;  c               1    0[BANK0 ] unsigned char 
  6631 ;; Return value:  Size  Location     Type
  6632 ;;                  2    8[COMMON] int 
  6633 ;; Registers used:
  6634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6635 ;; Tracked objects:
  6636 ;;		On entry : 0/0
  6637 ;;		On exit  : 0/0
  6638 ;;		Unchanged: 0/0
  6639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6640 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6641 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6642 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6643 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6644 ;;Total ram usage:        8 bytes
  6645 ;; Hardware stack levels used: 1
  6646 ;; Hardware stack levels required when called: 2
  6647 ;; This function calls:
  6648 ;;		_fputc
  6649 ;; This function is called by:
  6650 ;;		_pad
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654  1006                     _fputs:	
  6655                           ;psect for function _fputs
  6656                           
  6657                           
  6658                           ;incstack = 0
  6659                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6660                           ;fputs@s stored from wreg
  6661  1006  0020               	movlb	0	; select bank0
  6662  1007  00A3               	movwf	fputs@s
  6663  1008                     l2891:
  6664  1008  01A1               	clrf	fputs@i
  6665  1009  01A2               	clrf	fputs@i+1
  6666  100A  281E               	goto	l2897
  6667  100B                     l2893:
  6668  100B  0820               	movf	fputs@c,w
  6669  100C  00F9               	movwf	??_fputs
  6670  100D  01FA               	clrf	??_fputs+1
  6671  100E  0879               	movf	??_fputs,w
  6672  100F  00F0               	movwf	fputc@c
  6673  1010  087A               	movf	??_fputs+1,w
  6674  1011  00F1               	movwf	fputc@c+1
  6675  1012  0878               	movf	fputs@fp,w
  6676  1013  00FB               	movwf	??_fputs+2
  6677  1014  087B               	movf	??_fputs+2,w
  6678  1015  00F2               	movwf	fputc@fp
  6679  1016  3191  2120  3190   	fcall	_fputc
  6680  1019                     l2895:
  6681  1019  3001               	movlw	1
  6682  101A  0020               	movlb	0	; select bank0
  6683  101B  07A1               	addwf	fputs@i,f
  6684  101C  3000               	movlw	0
  6685  101D  3DA2               	addwfc	fputs@i+1,f
  6686  101E                     l2897:
  6687  101E  0821               	movf	fputs@i,w
  6688  101F  0723               	addwf	fputs@s,w
  6689  1020  00F9               	movwf	??_fputs
  6690  1021  0879               	movf	??_fputs,w
  6691  1022  0086               	movwf	6
  6692  1023  3001               	movlw	1	; select bank2/3
  6693  1024  0087               	movwf	7
  6694  1025  0801               	movf	1,w
  6695  1026  00FA               	movwf	??_fputs+1
  6696  1027  087A               	movf	??_fputs+1,w
  6697  1028  00A0               	movwf	fputs@c
  6698  1029  0820               	movf	fputs@c,w
  6699  102A  1D03               	btfss	3,2
  6700  102B  282D               	goto	u3311
  6701  102C  282E               	goto	u3310
  6702  102D                     u3311:
  6703  102D  280B               	goto	l2893
  6704  102E                     u3310:
  6705  102E                     l1004:
  6706  102E  0008               	return
  6707  102F                     __end_of_fputs:
  6708                           
  6709                           	psect	text12
  6710  1120                     __ptext12:	
  6711 ;; *************** function _fputc *****************
  6712 ;; Defined at:
  6713 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;  c               2    0[COMMON] int 
  6716 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  6717 ;;		 -> sprintf@f(10), 
  6718 ;; Auto vars:     Size  Location     Type
  6719 ;;		None
  6720 ;; Return value:  Size  Location     Type
  6721 ;;                  2    0[COMMON] int 
  6722 ;; Registers used:
  6723 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6724 ;; Tracked objects:
  6725 ;;		On entry : 0/0
  6726 ;;		On exit  : 0/0
  6727 ;;		Unchanged: 0/0
  6728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6729 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6731 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6732 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6733 ;;Total ram usage:        8 bytes
  6734 ;; Hardware stack levels used: 1
  6735 ;; Hardware stack levels required when called: 1
  6736 ;; This function calls:
  6737 ;;		_putch
  6738 ;; This function is called by:
  6739 ;;		_pad
  6740 ;;		_vfpfcnvrt
  6741 ;;		_fputs
  6742 ;; This function uses a non-reentrant model
  6743 ;;
  6744                           
  6745  1120                     _fputc:	
  6746                           ;psect for function _fputc
  6747                           
  6748  1120                     l2667:	
  6749                           ;incstack = 0
  6750                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6751                           
  6752  1120  0872               	movf	fputc@fp,w
  6753  1121  1903               	btfsc	3,2
  6754  1122  2924               	goto	u2811
  6755  1123  2925               	goto	u2810
  6756  1124                     u2811:
  6757  1124  292A               	goto	l2671
  6758  1125                     u2810:
  6759  1125                     l2669:
  6760  1125  0872               	movf	fputc@fp,w
  6761  1126  1D03               	btfss	3,2
  6762  1127  2929               	goto	u2821
  6763  1128  292A               	goto	u2820
  6764  1129                     u2821:
  6765  1129  292F               	goto	l2673
  6766  112A                     u2820:
  6767  112A                     l2671:
  6768  112A  0870               	movf	fputc@c,w
  6769  112B  3180  2006  3191   	fcall	_putch
  6770  112E  2972               	goto	l996
  6771  112F                     l2673:
  6772  112F  0872               	movf	fputc@fp,w
  6773  1130  3E08               	addlw	8
  6774  1131  0086               	movwf	6
  6775  1132  0187               	clrf	7
  6776  1133  0016               	moviw fsr1++
  6777  1134  0401               	iorwf	1,w
  6778  1135  1903               	btfsc	3,2
  6779  1136  2938               	goto	u2831
  6780  1137  2939               	goto	u2830
  6781  1138                     u2831:
  6782  1138  2957               	goto	l2677
  6783  1139                     u2830:
  6784  1139                     l2675:
  6785  1139  0872               	movf	fputc@fp,w
  6786  113A  3E08               	addlw	8
  6787  113B  0086               	movwf	6
  6788  113C  0187               	clrf	7
  6789  113D  3F40               	moviw [0]fsr1
  6790  113E  00F3               	movwf	??_fputc
  6791  113F  3F41               	moviw [1]fsr1
  6792  1140  00F4               	movwf	??_fputc+1
  6793  1141  0872               	movf	fputc@fp,w
  6794  1142  3E02               	addlw	2
  6795  1143  0086               	movwf	6
  6796  1144  0187               	clrf	7
  6797  1145  3F40               	moviw [0]fsr1
  6798  1146  00F5               	movwf	??_fputc+2
  6799  1147  3F41               	moviw [1]fsr1
  6800  1148  00F6               	movwf	??_fputc+3
  6801  1149  0876               	movf	??_fputc+3,w
  6802  114A  3A80               	xorlw	128
  6803  114B  00F7               	movwf	??_fputc+4
  6804  114C  0874               	movf	??_fputc+1,w
  6805  114D  3A80               	xorlw	128
  6806  114E  0277               	subwf	??_fputc+4,w
  6807  114F  1D03               	skipz
  6808  1150  2953               	goto	u2845
  6809  1151  0873               	movf	??_fputc,w
  6810  1152  0275               	subwf	??_fputc+2,w
  6811  1153                     u2845:
  6812  1153  1803               	skipnc
  6813  1154  2956               	goto	u2841
  6814  1155  2957               	goto	u2840
  6815  1156                     u2841:
  6816  1156  2972               	goto	l996
  6817  1157                     u2840:
  6818  1157                     l2677:
  6819  1157  0870               	movf	fputc@c,w
  6820  1158  00F3               	movwf	??_fputc
  6821  1159  0872               	movf	fputc@fp,w
  6822  115A  0086               	movwf	6
  6823  115B  0187               	clrf	7
  6824  115C  0872               	movf	fputc@fp,w
  6825  115D  3E02               	addlw	2
  6826  115E  0084               	movwf	4
  6827  115F  0185               	clrf	5
  6828  1160  0800               	movf	0,w
  6829  1161  0701               	addwf	1,w
  6830  1162  00F4               	movwf	??_fputc+1
  6831  1163  0874               	movf	??_fputc+1,w
  6832  1164  0086               	movwf	6
  6833  1165  3001               	movlw	1	; select bank2/3
  6834  1166  0087               	movwf	7
  6835  1167  0873               	movf	??_fputc,w
  6836  1168  0081               	movwf	1
  6837  1169                     l2679:
  6838  1169  0872               	movf	fputc@fp,w
  6839  116A  3E02               	addlw	2
  6840  116B  0086               	movwf	6
  6841  116C  0187               	clrf	7
  6842  116D  3001               	movlw	1
  6843  116E  0781               	addwf	1,f
  6844  116F  3141               	addfsr 1,1
  6845  1170  1803               	skipnc
  6846  1171  0A81               	incf	1,f
  6847  1172                     l996:
  6848  1172  0008               	return
  6849  1173                     __end_of_fputc:
  6850                           
  6851                           	psect	text13
  6852  0006                     __ptext13:	
  6853 ;; *************** function _putch *****************
  6854 ;; Defined at:
  6855 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  6856 ;; Parameters:    Size  Location     Type
  6857 ;;  c               1    wreg     unsigned char 
  6858 ;; Auto vars:     Size  Location     Type
  6859 ;;  c               1    0[COMMON] unsigned char 
  6860 ;; Return value:  Size  Location     Type
  6861 ;;                  1    wreg      void 
  6862 ;; Registers used:
  6863 ;;		wreg
  6864 ;; Tracked objects:
  6865 ;;		On entry : 0/0
  6866 ;;		On exit  : 0/0
  6867 ;;		Unchanged: 0/0
  6868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6873 ;;Total ram usage:        0 bytes
  6874 ;; Hardware stack levels used: 1
  6875 ;; This function calls:
  6876 ;;		Nothing
  6877 ;; This function is called by:
  6878 ;;		_fputc
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882  0006                     _putch:	
  6883                           ;psect for function _putch
  6884                           
  6885  0006                     l1007:	
  6886                           ;incstack = 0
  6887                           ; Regs used in _putch: [wreg]
  6888                           
  6889  0006  0008               	return
  6890  0007                     __end_of_putch:
  6891                           
  6892                           	psect	text14
  6893  1401                     __ptext14:	
  6894 ;; *************** function _floorf *****************
  6895 ;; Defined at:
  6896 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  6897 ;; Parameters:    Size  Location     Type
  6898 ;;  x               4   13[BANK0 ] float 
  6899 ;; Auto vars:     Size  Location     Type
  6900 ;;  u               4   29[BANK0 ] struct .
  6901 ;;  m               4   23[BANK0 ] unsigned long 
  6902 ;;  e               2   27[BANK0 ] int 
  6903 ;; Return value:  Size  Location     Type
  6904 ;;                  4   13[BANK0 ] float 
  6905 ;; Registers used:
  6906 ;;		wreg, status,2, status,0
  6907 ;; Tracked objects:
  6908 ;;		On entry : 0/0
  6909 ;;		On exit  : 0/0
  6910 ;;		Unchanged: 0/0
  6911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6912 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6913 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6914 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6915 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6916 ;;Total ram usage:       20 bytes
  6917 ;; Hardware stack levels used: 1
  6918 ;; This function calls:
  6919 ;;		Nothing
  6920 ;; This function is called by:
  6921 ;;		_efgtoa
  6922 ;; This function uses a non-reentrant model
  6923 ;;
  6924                           
  6925  1401                     _floorf:	
  6926                           ;psect for function _floorf
  6927                           
  6928  1401                     l3431:	
  6929                           ;incstack = 0
  6930                           ; Regs used in _floorf: [wreg+status,2+status,0]
  6931                           
  6932  1401  0022               	movlb	2	; select bank2
  6933  1402  0823               	movf	(floorf@F526+3)^(0+256),w
  6934  1403  0020               	movlb	0	; select bank0
  6935  1404  00C0               	movwf	floorf@u+3
  6936  1405  0022               	movlb	2	; select bank2
  6937  1406  0822               	movf	(floorf@F526+2)^(0+256),w
  6938  1407  0020               	movlb	0	; select bank0
  6939  1408  00BF               	movwf	floorf@u+2
  6940  1409  0022               	movlb	2	; select bank2
  6941  140A  0821               	movf	(floorf@F526+1)^(0+256),w
  6942  140B  0020               	movlb	0	; select bank0
  6943  140C  00BE               	movwf	floorf@u+1
  6944  140D  0022               	movlb	2	; select bank2
  6945  140E  0820               	movf	floorf@F526^(0+256),w
  6946  140F  0020               	movlb	0	; select bank0
  6947  1410  00BD               	movwf	floorf@u
  6948  1411  0830               	movf	floorf@x+3,w
  6949  1412  00C0               	movwf	floorf@u+3
  6950  1413  082F               	movf	floorf@x+2,w
  6951  1414  00BF               	movwf	floorf@u+2
  6952  1415  082E               	movf	floorf@x+1,w
  6953  1416  00BE               	movwf	floorf@u+1
  6954  1417  082D               	movf	floorf@x,w
  6955  1418  00BD               	movwf	floorf@u
  6956  1419                     l3433:
  6957  1419  083D               	movf	floorf@u,w
  6958  141A  00B1               	movwf	??_floorf
  6959  141B  083E               	movf	floorf@u+1,w
  6960  141C  00B2               	movwf	??_floorf+1
  6961  141D  083F               	movf	floorf@u+2,w
  6962  141E  00B3               	movwf	??_floorf+2
  6963  141F  0840               	movf	floorf@u+3,w
  6964  1420  00B4               	movwf	??_floorf+3
  6965  1421  3017               	movlw	23
  6966  1422                     u4465:
  6967  1422  36B4               	lsrf	??_floorf+3,f
  6968  1423  0CB3               	rrf	??_floorf+2,f
  6969  1424  0CB2               	rrf	??_floorf+1,f
  6970  1425  0CB1               	rrf	??_floorf,f
  6971  1426                     u4460:
  6972  1426  0B89               	decfsz	9,f
  6973  1427  2C22               	goto	u4465
  6974  1428  30FF               	movlw	255
  6975  1429  0531               	andwf	??_floorf,w
  6976  142A  00B5               	movwf	??_floorf+4
  6977  142B  3000               	movlw	0
  6978  142C  0532               	andwf	??_floorf+1,w
  6979  142D  00B6               	movwf	??_floorf+5
  6980  142E  0835               	movf	??_floorf+4,w
  6981  142F  3E81               	addlw	129
  6982  1430  00BB               	movwf	floorf@e
  6983  1431  30FF               	movlw	255
  6984  1432  3D36               	addwfc	??_floorf+5,w
  6985  1433  00BC               	movwf	floorf@e+1
  6986  1434                     l3435:
  6987  1434  083C               	movf	floorf@e+1,w
  6988  1435  3A80               	xorlw	128
  6989  1436  00B1               	movwf	??_floorf
  6990  1437  3080               	movlw	128
  6991  1438  0231               	subwf	??_floorf,w
  6992  1439  1D03               	skipz
  6993  143A  2C3D               	goto	u4475
  6994  143B  3017               	movlw	23
  6995  143C  023B               	subwf	floorf@e,w
  6996  143D                     u4475:
  6997  143D  1C03               	skipc
  6998  143E  2C40               	goto	u4471
  6999  143F  2C41               	goto	u4470
  7000  1440                     u4471:
  7001  1440  2C42               	goto	l956
  7002  1441                     u4470:
  7003  1441                     l3437:
  7004  1441  2CEB               	goto	l957
  7005  1442                     l956:
  7006  1442  0020               	movlb	0	; select bank0
  7007  1443  1BBC               	btfsc	floorf@e+1,7
  7008  1444  2C46               	goto	u4481
  7009  1445  2C47               	goto	u4480
  7010  1446                     u4481:
  7011  1446  2CA4               	goto	l3451
  7012  1447                     u4480:
  7013  1447                     l3439:
  7014  1447  30FF               	movlw	255
  7015  1448  00B1               	movwf	??_floorf
  7016  1449  30FF               	movlw	255
  7017  144A  00B2               	movwf	??_floorf+1
  7018  144B  307F               	movlw	127
  7019  144C  00B3               	movwf	??_floorf+2
  7020  144D  3000               	movlw	0
  7021  144E  00B4               	movwf	??_floorf+3
  7022  144F  0A3B               	incf	floorf@e,w
  7023  1450  2C55               	goto	u4490
  7024  1451                     u4495:
  7025  1451  37B4               	asrf	??_floorf+3,f
  7026  1452  0CB3               	rrf	??_floorf+2,f
  7027  1453  0CB2               	rrf	??_floorf+1,f
  7028  1454  0CB1               	rrf	??_floorf,f
  7029  1455                     u4490:
  7030  1455  0B89               	decfsz	9,f
  7031  1456  2C51               	goto	u4495
  7032  1457  0834               	movf	??_floorf+3,w
  7033  1458  00BA               	movwf	floorf@m+3
  7034  1459  0833               	movf	??_floorf+2,w
  7035  145A  00B9               	movwf	floorf@m+2
  7036  145B  0832               	movf	??_floorf+1,w
  7037  145C  00B8               	movwf	floorf@m+1
  7038  145D  0831               	movf	??_floorf,w
  7039  145E  00B7               	movwf	floorf@m
  7040  145F                     l3441:
  7041  145F  083D               	movf	floorf@u,w
  7042  1460  0537               	andwf	floorf@m,w
  7043  1461  00B1               	movwf	??_floorf
  7044  1462  083E               	movf	floorf@u+1,w
  7045  1463  0538               	andwf	floorf@m+1,w
  7046  1464  00B2               	movwf	??_floorf+1
  7047  1465  083F               	movf	floorf@u+2,w
  7048  1466  0539               	andwf	floorf@m+2,w
  7049  1467  00B3               	movwf	??_floorf+2
  7050  1468  0840               	movf	floorf@u+3,w
  7051  1469  053A               	andwf	floorf@m+3,w
  7052  146A  00B4               	movwf	??_floorf+3
  7053  146B  0834               	movf	??_floorf+3,w
  7054  146C  0433               	iorwf	??_floorf+2,w
  7055  146D  0432               	iorwf	??_floorf+1,w
  7056  146E  0431               	iorwf	??_floorf,w
  7057  146F  1D03               	skipz
  7058  1470  2C72               	goto	u4501
  7059  1471  2C73               	goto	u4500
  7060  1472                     u4501:
  7061  1472  2C74               	goto	l3445
  7062  1473                     u4500:
  7063  1473  2C41               	goto	l3437
  7064  1474                     l3445:
  7065  1474  083D               	movf	floorf@u,w
  7066  1475  00B1               	movwf	??_floorf
  7067  1476  083E               	movf	floorf@u+1,w
  7068  1477  00B2               	movwf	??_floorf+1
  7069  1478  083F               	movf	floorf@u+2,w
  7070  1479  00B3               	movwf	??_floorf+2
  7071  147A  0840               	movf	floorf@u+3,w
  7072  147B  00B4               	movwf	??_floorf+3
  7073  147C  301F               	movlw	31
  7074  147D                     u4515:
  7075  147D  36B4               	lsrf	??_floorf+3,f
  7076  147E  0CB3               	rrf	??_floorf+2,f
  7077  147F  0CB2               	rrf	??_floorf+1,f
  7078  1480  0CB1               	rrf	??_floorf,f
  7079  1481                     u4510:
  7080  1481  0B89               	decfsz	9,f
  7081  1482  2C7D               	goto	u4515
  7082  1483  0834               	movf	??_floorf+3,w
  7083  1484  0433               	iorwf	??_floorf+2,w
  7084  1485  0432               	iorwf	??_floorf+1,w
  7085  1486  0431               	iorwf	??_floorf,w
  7086  1487  1903               	skipnz
  7087  1488  2C8A               	goto	u4521
  7088  1489  2C8B               	goto	u4520
  7089  148A                     u4521:
  7090  148A  2C93               	goto	l3449
  7091  148B                     u4520:
  7092  148B                     l3447:
  7093  148B  0837               	movf	floorf@m,w
  7094  148C  07BD               	addwf	floorf@u,f
  7095  148D  0838               	movf	floorf@m+1,w
  7096  148E  3DBE               	addwfc	floorf@u+1,f
  7097  148F  0839               	movf	floorf@m+2,w
  7098  1490  3DBF               	addwfc	floorf@u+2,f
  7099  1491  083A               	movf	floorf@m+3,w
  7100  1492  3DC0               	addwfc	floorf@u+3,f
  7101  1493                     l3449:
  7102  1493  0937               	comf	floorf@m,w
  7103  1494  00B1               	movwf	??_floorf
  7104  1495  0938               	comf	floorf@m+1,w
  7105  1496  00B2               	movwf	??_floorf+1
  7106  1497  0939               	comf	floorf@m+2,w
  7107  1498  00B3               	movwf	??_floorf+2
  7108  1499  093A               	comf	floorf@m+3,w
  7109  149A  00B4               	movwf	??_floorf+3
  7110  149B  0831               	movf	??_floorf,w
  7111  149C  05BD               	andwf	floorf@u,f
  7112  149D  0832               	movf	??_floorf+1,w
  7113  149E  05BE               	andwf	floorf@u+1,f
  7114  149F  0833               	movf	??_floorf+2,w
  7115  14A0  05BF               	andwf	floorf@u+2,f
  7116  14A1  0834               	movf	??_floorf+3,w
  7117  14A2  05C0               	andwf	floorf@u+3,f
  7118  14A3  2CE3               	goto	l961
  7119  14A4                     l3451:
  7120  14A4  083D               	movf	floorf@u,w
  7121  14A5  00B1               	movwf	??_floorf
  7122  14A6  083E               	movf	floorf@u+1,w
  7123  14A7  00B2               	movwf	??_floorf+1
  7124  14A8  083F               	movf	floorf@u+2,w
  7125  14A9  00B3               	movwf	??_floorf+2
  7126  14AA  0840               	movf	floorf@u+3,w
  7127  14AB  00B4               	movwf	??_floorf+3
  7128  14AC  301F               	movlw	31
  7129  14AD                     u4535:
  7130  14AD  36B4               	lsrf	??_floorf+3,f
  7131  14AE  0CB3               	rrf	??_floorf+2,f
  7132  14AF  0CB2               	rrf	??_floorf+1,f
  7133  14B0  0CB1               	rrf	??_floorf,f
  7134  14B1                     u4530:
  7135  14B1  0B89               	decfsz	9,f
  7136  14B2  2CAD               	goto	u4535
  7137  14B3  0834               	movf	??_floorf+3,w
  7138  14B4  0433               	iorwf	??_floorf+2,w
  7139  14B5  0432               	iorwf	??_floorf+1,w
  7140  14B6  0431               	iorwf	??_floorf,w
  7141  14B7  1D03               	skipz
  7142  14B8  2CBA               	goto	u4541
  7143  14B9  2CBB               	goto	u4540
  7144  14BA                     u4541:
  7145  14BA  2CC4               	goto	l3455
  7146  14BB                     u4540:
  7147  14BB                     l3453:
  7148  14BB  3000               	movlw	0
  7149  14BC  00C0               	movwf	floorf@u+3
  7150  14BD  3000               	movlw	0
  7151  14BE  00BF               	movwf	floorf@u+2
  7152  14BF  3000               	movlw	0
  7153  14C0  00BE               	movwf	floorf@u+1
  7154  14C1  3000               	movlw	0
  7155  14C2  00BD               	movwf	floorf@u
  7156  14C3  2CE3               	goto	l961
  7157  14C4                     l3455:
  7158  14C4  083D               	movf	floorf@u,w
  7159  14C5  00B1               	movwf	??_floorf
  7160  14C6  083E               	movf	floorf@u+1,w
  7161  14C7  00B2               	movwf	??_floorf+1
  7162  14C8  083F               	movf	floorf@u+2,w
  7163  14C9  00B3               	movwf	??_floorf+2
  7164  14CA  0840               	movf	floorf@u+3,w
  7165  14CB  00B4               	movwf	??_floorf+3
  7166  14CC  3001               	movlw	1
  7167  14CD                     u4555:
  7168  14CD  35B1               	lslf	??_floorf,f
  7169  14CE  0DB2               	rlf	??_floorf+1,f
  7170  14CF  0DB3               	rlf	??_floorf+2,f
  7171  14D0  0DB4               	rlf	??_floorf+3,f
  7172  14D1                     u4550:
  7173  14D1  0B89               	decfsz	9,f
  7174  14D2  2CCD               	goto	u4555
  7175  14D3  0834               	movf	??_floorf+3,w
  7176  14D4  0433               	iorwf	??_floorf+2,w
  7177  14D5  0432               	iorwf	??_floorf+1,w
  7178  14D6  0431               	iorwf	??_floorf,w
  7179  14D7  1903               	skipnz
  7180  14D8  2CDA               	goto	u4561
  7181  14D9  2CDB               	goto	u4560
  7182  14DA                     u4561:
  7183  14DA  2CE3               	goto	l961
  7184  14DB                     u4560:
  7185  14DB                     l3457:
  7186  14DB  30BF               	movlw	191
  7187  14DC  00C0               	movwf	floorf@u+3
  7188  14DD  3080               	movlw	128
  7189  14DE  00BF               	movwf	floorf@u+2
  7190  14DF  3000               	movlw	0
  7191  14E0  00BE               	movwf	floorf@u+1
  7192  14E1  3000               	movlw	0
  7193  14E2  00BD               	movwf	floorf@u
  7194  14E3                     l961:
  7195  14E3  0840               	movf	floorf@u+3,w
  7196  14E4  00B0               	movwf	?_floorf+3
  7197  14E5  083F               	movf	floorf@u+2,w
  7198  14E6  00AF               	movwf	?_floorf+2
  7199  14E7  083E               	movf	floorf@u+1,w
  7200  14E8  00AE               	movwf	?_floorf+1
  7201  14E9  083D               	movf	floorf@u,w
  7202  14EA  00AD               	movwf	?_floorf
  7203  14EB                     l957:
  7204  14EB  0008               	return
  7205  14EC                     __end_of_floorf:
  7206                           
  7207                           	psect	text15
  7208  12F7                     __ptext15:	
  7209 ;; *************** function ___fpclassifyf *****************
  7210 ;; Defined at:
  7211 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  7212 ;; Parameters:    Size  Location     Type
  7213 ;;  x               4    0[COMMON] float 
  7214 ;; Auto vars:     Size  Location     Type
  7215 ;;  u               4    2[BANK0 ] struct .
  7216 ;;  e               2    0[BANK0 ] int 
  7217 ;; Return value:  Size  Location     Type
  7218 ;;                  2    0[COMMON] int 
  7219 ;; Registers used:
  7220 ;;		wreg, status,2, status,0
  7221 ;; Tracked objects:
  7222 ;;		On entry : 0/0
  7223 ;;		On exit  : 0/0
  7224 ;;		Unchanged: 0/0
  7225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7226 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7227 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7228 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7229 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7230 ;;Total ram usage:       16 bytes
  7231 ;; Hardware stack levels used: 1
  7232 ;; This function calls:
  7233 ;;		Nothing
  7234 ;; This function is called by:
  7235 ;;		_efgtoa
  7236 ;; This function uses a non-reentrant model
  7237 ;;
  7238                           
  7239  12F7                     ___fpclassifyf:	
  7240                           ;psect for function ___fpclassifyf
  7241                           
  7242  12F7                     l3393:	
  7243                           ;incstack = 0
  7244                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  7245                           
  7246  12F7  0022               	movlb	2	; select bank2
  7247  12F8  0827               	movf	(___fpclassifyf@F465+3)^(0+256),w
  7248  12F9  0020               	movlb	0	; select bank0
  7249  12FA  00A5               	movwf	___fpclassifyf@u+3
  7250  12FB  0022               	movlb	2	; select bank2
  7251  12FC  0826               	movf	(___fpclassifyf@F465+2)^(0+256),w
  7252  12FD  0020               	movlb	0	; select bank0
  7253  12FE  00A4               	movwf	___fpclassifyf@u+2
  7254  12FF  0022               	movlb	2	; select bank2
  7255  1300  0825               	movf	(___fpclassifyf@F465+1)^(0+256),w
  7256  1301  0020               	movlb	0	; select bank0
  7257  1302  00A3               	movwf	___fpclassifyf@u+1
  7258  1303  0022               	movlb	2	; select bank2
  7259  1304  0824               	movf	___fpclassifyf@F465^(0+256),w
  7260  1305  0020               	movlb	0	; select bank0
  7261  1306  00A2               	movwf	___fpclassifyf@u
  7262  1307  0873               	movf	___fpclassifyf@x+3,w
  7263  1308  00A5               	movwf	___fpclassifyf@u+3
  7264  1309  0872               	movf	___fpclassifyf@x+2,w
  7265  130A  00A4               	movwf	___fpclassifyf@u+2
  7266  130B  0871               	movf	___fpclassifyf@x+1,w
  7267  130C  00A3               	movwf	___fpclassifyf@u+1
  7268  130D  0870               	movf	___fpclassifyf@x,w
  7269  130E  00A2               	movwf	___fpclassifyf@u
  7270  130F                     l3395:
  7271  130F  0822               	movf	___fpclassifyf@u,w
  7272  1310  00F4               	movwf	??___fpclassifyf
  7273  1311  0823               	movf	___fpclassifyf@u+1,w
  7274  1312  00F5               	movwf	??___fpclassifyf+1
  7275  1313  0824               	movf	___fpclassifyf@u+2,w
  7276  1314  00F6               	movwf	??___fpclassifyf+2
  7277  1315  0825               	movf	___fpclassifyf@u+3,w
  7278  1316  00F7               	movwf	??___fpclassifyf+3
  7279  1317  3017               	movlw	23
  7280  1318                     u4365:
  7281  1318  36F7               	lsrf	??___fpclassifyf+3,f
  7282  1319  0CF6               	rrf	??___fpclassifyf+2,f
  7283  131A  0CF5               	rrf	??___fpclassifyf+1,f
  7284  131B  0CF4               	rrf	??___fpclassifyf,f
  7285  131C                     u4360:
  7286  131C  0B89               	decfsz	9,f
  7287  131D  2B18               	goto	u4365
  7288  131E  30FF               	movlw	255
  7289  131F  0574               	andwf	??___fpclassifyf,w
  7290  1320  00A0               	movwf	___fpclassifyf@e
  7291  1321  3000               	movlw	0
  7292  1322  0575               	andwf	??___fpclassifyf+1,w
  7293  1323  00A1               	movwf	___fpclassifyf@e+1
  7294  1324                     l3397:
  7295  1324  0820               	movf	___fpclassifyf@e,w
  7296  1325  0421               	iorwf	___fpclassifyf@e+1,w
  7297  1326  1D03               	btfss	3,2
  7298  1327  2B29               	goto	u4371
  7299  1328  2B2A               	goto	u4370
  7300  1329                     u4371:
  7301  1329  2B4B               	goto	l3407
  7302  132A                     u4370:
  7303  132A                     l3399:
  7304  132A  0822               	movf	___fpclassifyf@u,w
  7305  132B  00F4               	movwf	??___fpclassifyf
  7306  132C  0823               	movf	___fpclassifyf@u+1,w
  7307  132D  00F5               	movwf	??___fpclassifyf+1
  7308  132E  0824               	movf	___fpclassifyf@u+2,w
  7309  132F  00F6               	movwf	??___fpclassifyf+2
  7310  1330  0825               	movf	___fpclassifyf@u+3,w
  7311  1331  00F7               	movwf	??___fpclassifyf+3
  7312  1332  3001               	movlw	1
  7313  1333                     u4385:
  7314  1333  35F4               	lslf	??___fpclassifyf,f
  7315  1334  0DF5               	rlf	??___fpclassifyf+1,f
  7316  1335  0DF6               	rlf	??___fpclassifyf+2,f
  7317  1336  0DF7               	rlf	??___fpclassifyf+3,f
  7318  1337                     u4380:
  7319  1337  0B89               	decfsz	9,f
  7320  1338  2B33               	goto	u4385
  7321  1339  0877               	movf	??___fpclassifyf+3,w
  7322  133A  0476               	iorwf	??___fpclassifyf+2,w
  7323  133B  0475               	iorwf	??___fpclassifyf+1,w
  7324  133C  0474               	iorwf	??___fpclassifyf,w
  7325  133D  1D03               	skipz
  7326  133E  2B40               	goto	u4391
  7327  133F  2B41               	goto	u4390
  7328  1340                     u4391:
  7329  1340  2B46               	goto	l3403
  7330  1341                     u4390:
  7331  1341                     l3401:
  7332  1341  3002               	movlw	2
  7333  1342  00F0               	movwf	?___fpclassifyf
  7334  1343  3000               	movlw	0
  7335  1344  00F1               	movwf	?___fpclassifyf+1
  7336  1345  2B75               	goto	l925
  7337  1346                     l3403:
  7338  1346  3003               	movlw	3
  7339  1347  00F0               	movwf	?___fpclassifyf
  7340  1348  3000               	movlw	0
  7341  1349  00F1               	movwf	?___fpclassifyf+1
  7342  134A  2B75               	goto	l925
  7343  134B                     l3407:
  7344  134B  0A20               	incf	___fpclassifyf@e,w
  7345  134C  0421               	iorwf	___fpclassifyf@e+1,w
  7346  134D  1D03               	btfss	3,2
  7347  134E  2B50               	goto	u4401
  7348  134F  2B51               	goto	u4400
  7349  1350                     u4401:
  7350  1350  2B71               	goto	l3413
  7351  1351                     u4400:
  7352  1351                     l3409:
  7353  1351  0822               	movf	___fpclassifyf@u,w
  7354  1352  00F4               	movwf	??___fpclassifyf
  7355  1353  0823               	movf	___fpclassifyf@u+1,w
  7356  1354  00F5               	movwf	??___fpclassifyf+1
  7357  1355  0824               	movf	___fpclassifyf@u+2,w
  7358  1356  00F6               	movwf	??___fpclassifyf+2
  7359  1357  0825               	movf	___fpclassifyf@u+3,w
  7360  1358  00F7               	movwf	??___fpclassifyf+3
  7361  1359  3009               	movlw	9
  7362  135A                     u4415:
  7363  135A  35F4               	lslf	??___fpclassifyf,f
  7364  135B  0DF5               	rlf	??___fpclassifyf+1,f
  7365  135C  0DF6               	rlf	??___fpclassifyf+2,f
  7366  135D  0DF7               	rlf	??___fpclassifyf+3,f
  7367  135E                     u4410:
  7368  135E  0B89               	decfsz	9,f
  7369  135F  2B5A               	goto	u4415
  7370  1360  0877               	movf	??___fpclassifyf+3,w
  7371  1361  0476               	iorwf	??___fpclassifyf+2,w
  7372  1362  0475               	iorwf	??___fpclassifyf+1,w
  7373  1363  0474               	iorwf	??___fpclassifyf,w
  7374  1364  1903               	skipnz
  7375  1365  2B67               	goto	u4421
  7376  1366  2B69               	goto	u4420
  7377  1367                     u4421:
  7378  1367  3001               	movlw	1
  7379  1368  2B6A               	goto	u4430
  7380  1369                     u4420:
  7381  1369  3000               	movlw	0
  7382  136A                     u4430:
  7383  136A  00F8               	movwf	??___fpclassifyf+4
  7384  136B  01F9               	clrf	??___fpclassifyf+5
  7385  136C  0878               	movf	??___fpclassifyf+4,w
  7386  136D  00F0               	movwf	?___fpclassifyf
  7387  136E  0879               	movf	??___fpclassifyf+5,w
  7388  136F  00F1               	movwf	?___fpclassifyf+1
  7389  1370  2B75               	goto	l925
  7390  1371                     l3413:
  7391  1371  3004               	movlw	4
  7392  1372  00F0               	movwf	?___fpclassifyf
  7393  1373  3000               	movlw	0
  7394  1374  00F1               	movwf	?___fpclassifyf+1
  7395  1375                     l925:
  7396  1375  0008               	return
  7397  1376                     __end_of___fpclassifyf:
  7398                           
  7399                           	psect	text16
  7400  1283                     __ptext16:	
  7401 ;; *************** function ___fltol *****************
  7402 ;; Defined at:
  7403 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  7404 ;; Parameters:    Size  Location     Type
  7405 ;;  f1              4    0[COMMON] int 
  7406 ;; Auto vars:     Size  Location     Type
  7407 ;;  exp1            1   10[COMMON] unsigned char 
  7408 ;;  sign1           1    9[COMMON] unsigned char 
  7409 ;; Return value:  Size  Location     Type
  7410 ;;                  4    0[COMMON] long 
  7411 ;; Registers used:
  7412 ;;		wreg, status,2, status,0
  7413 ;; Tracked objects:
  7414 ;;		On entry : 0/0
  7415 ;;		On exit  : 0/0
  7416 ;;		Unchanged: 0/0
  7417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7418 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7419 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7420 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7421 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7422 ;;Total ram usage:       11 bytes
  7423 ;; Hardware stack levels used: 1
  7424 ;; This function calls:
  7425 ;;		Nothing
  7426 ;; This function is called by:
  7427 ;;		_efgtoa
  7428 ;; This function uses a non-reentrant model
  7429 ;;
  7430                           
  7431  1283                     ___fltol:	
  7432                           ;psect for function ___fltol
  7433                           
  7434  1283                     l3049:	
  7435                           ;incstack = 0
  7436                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7437                           
  7438  1283  1003               	clrc
  7439  1284  0D72               	rlf	___fltol@f1+2,w
  7440  1285  0D73               	rlf	___fltol@f1+3,w
  7441  1286  00F4               	movwf	??___fltol
  7442  1287  0874               	movf	??___fltol,w
  7443  1288  00FA               	movwf	___fltol@exp1
  7444  1289  087A               	movf	___fltol@exp1,w
  7445  128A  1D03               	btfss	3,2
  7446  128B  2A8D               	goto	u3671
  7447  128C  2A8E               	goto	u3670
  7448  128D                     u3671:
  7449  128D  2A97               	goto	l3055
  7450  128E                     u3670:
  7451  128E                     l3051:
  7452  128E  3000               	movlw	0
  7453  128F  00F3               	movwf	?___fltol+3
  7454  1290  3000               	movlw	0
  7455  1291  00F2               	movwf	?___fltol+2
  7456  1292  3000               	movlw	0
  7457  1293  00F1               	movwf	?___fltol+1
  7458  1294  3000               	movlw	0
  7459  1295  00F0               	movwf	?___fltol
  7460  1296  2AF6               	goto	l466
  7461  1297                     l3055:
  7462  1297  0870               	movf	___fltol@f1,w
  7463  1298  00F4               	movwf	??___fltol
  7464  1299  0871               	movf	___fltol@f1+1,w
  7465  129A  00F5               	movwf	??___fltol+1
  7466  129B  0872               	movf	___fltol@f1+2,w
  7467  129C  00F6               	movwf	??___fltol+2
  7468  129D  0873               	movf	___fltol@f1+3,w
  7469  129E  00F7               	movwf	??___fltol+3
  7470  129F  301F               	movlw	31
  7471  12A0                     u3685:
  7472  12A0  36F7               	lsrf	??___fltol+3,f
  7473  12A1  0CF6               	rrf	??___fltol+2,f
  7474  12A2  0CF5               	rrf	??___fltol+1,f
  7475  12A3  0CF4               	rrf	??___fltol,f
  7476  12A4                     u3680:
  7477  12A4  0B89               	decfsz	9,f
  7478  12A5  2AA0               	goto	u3685
  7479  12A6  0874               	movf	??___fltol,w
  7480  12A7  00F8               	movwf	??___fltol+4
  7481  12A8  0878               	movf	??___fltol+4,w
  7482  12A9  00F9               	movwf	___fltol@sign1
  7483  12AA                     l3057:
  7484  12AA  17F2               	bsf	___fltol@f1+2,7
  7485  12AB                     l3059:
  7486  12AB  30FF               	movlw	255
  7487  12AC  05F0               	andwf	___fltol@f1,f
  7488  12AD  30FF               	movlw	255
  7489  12AE  05F1               	andwf	___fltol@f1+1,f
  7490  12AF  30FF               	movlw	255
  7491  12B0  05F2               	andwf	___fltol@f1+2,f
  7492  12B1  3000               	movlw	0
  7493  12B2  05F3               	andwf	___fltol@f1+3,f
  7494  12B3                     l3061:
  7495  12B3  3096               	movlw	150
  7496  12B4  02FA               	subwf	___fltol@exp1,f
  7497  12B5                     l3063:
  7498  12B5  1FFA               	btfss	___fltol@exp1,7
  7499  12B6  2AB8               	goto	u3691
  7500  12B7  2AB9               	goto	u3690
  7501  12B8                     u3691:
  7502  12B8  2AD1               	goto	l3073
  7503  12B9                     u3690:
  7504  12B9                     l3065:
  7505  12B9  087A               	movf	___fltol@exp1,w
  7506  12BA  3A80               	xorlw	128
  7507  12BB  3E97               	addlw	151
  7508  12BC  1803               	skipnc
  7509  12BD  2ABF               	goto	u3701
  7510  12BE  2AC0               	goto	u3700
  7511  12BF                     u3701:
  7512  12BF  2AC1               	goto	l3071
  7513  12C0                     u3700:
  7514  12C0  2A8E               	goto	l3051
  7515  12C1                     l3071:
  7516  12C1  3001               	movlw	1
  7517  12C2                     u3715:
  7518  12C2  36F3               	lsrf	___fltol@f1+3,f
  7519  12C3  0CF2               	rrf	___fltol@f1+2,f
  7520  12C4  0CF1               	rrf	___fltol@f1+1,f
  7521  12C5  0CF0               	rrf	___fltol@f1,f
  7522  12C6  0B89               	decfsz	9,f
  7523  12C7  2AC2               	goto	u3715
  7524  12C8  3001               	movlw	1
  7525  12C9  00F4               	movwf	??___fltol
  7526  12CA  0874               	movf	??___fltol,w
  7527  12CB  07FA               	addwf	___fltol@exp1,f
  7528  12CC  1D03               	btfss	3,2
  7529  12CD  2ACF               	goto	u3721
  7530  12CE  2AD0               	goto	u3720
  7531  12CF                     u3721:
  7532  12CF  2AC1               	goto	l3071
  7533  12D0                     u3720:
  7534  12D0  2AE6               	goto	l3081
  7535  12D1                     l3073:
  7536  12D1  3020               	movlw	32
  7537  12D2  027A               	subwf	___fltol@exp1,w
  7538  12D3  1C03               	skipc
  7539  12D4  2AD6               	goto	u3731
  7540  12D5  2AD7               	goto	u3730
  7541  12D6                     u3731:
  7542  12D6  2AE1               	goto	l473
  7543  12D7                     u3730:
  7544  12D7  2A8E               	goto	l3051
  7545  12D8                     l3079:
  7546  12D8  3001               	movlw	1
  7547  12D9                     u3745:
  7548  12D9  35F0               	lslf	___fltol@f1,f
  7549  12DA  0DF1               	rlf	___fltol@f1+1,f
  7550  12DB  0DF2               	rlf	___fltol@f1+2,f
  7551  12DC  0DF3               	rlf	___fltol@f1+3,f
  7552  12DD  0B89               	decfsz	9,f
  7553  12DE  2AD9               	goto	u3745
  7554  12DF  3001               	movlw	1
  7555  12E0  02FA               	subwf	___fltol@exp1,f
  7556  12E1                     l473:
  7557  12E1  087A               	movf	___fltol@exp1,w
  7558  12E2  1D03               	btfss	3,2
  7559  12E3  2AE5               	goto	u3751
  7560  12E4  2AE6               	goto	u3750
  7561  12E5                     u3751:
  7562  12E5  2AD8               	goto	l3079
  7563  12E6                     u3750:
  7564  12E6                     l3081:
  7565  12E6  0879               	movf	___fltol@sign1,w
  7566  12E7  1903               	btfsc	3,2
  7567  12E8  2AEA               	goto	u3761
  7568  12E9  2AEB               	goto	u3760
  7569  12EA                     u3761:
  7570  12EA  2AF6               	goto	l476
  7571  12EB                     u3760:
  7572  12EB                     l3083:
  7573  12EB  09F0               	comf	___fltol@f1,f
  7574  12EC  09F1               	comf	___fltol@f1+1,f
  7575  12ED  09F2               	comf	___fltol@f1+2,f
  7576  12EE  09F3               	comf	___fltol@f1+3,f
  7577  12EF  0AF0               	incf	___fltol@f1,f
  7578  12F0  1903               	skipnz
  7579  12F1  0AF1               	incf	___fltol@f1+1,f
  7580  12F2  1903               	skipnz
  7581  12F3  0AF2               	incf	___fltol@f1+2,f
  7582  12F4  1903               	skipnz
  7583  12F5  0AF3               	incf	___fltol@f1+3,f
  7584  12F6                     l476:
  7585  12F6                     l466:
  7586  12F6  0008               	return
  7587  12F7                     __end_of___fltol:
  7588                           
  7589                           	psect	text17
  7590  1E7A                     __ptext17:	
  7591 ;; *************** function ___flsub *****************
  7592 ;; Defined at:
  7593 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  7594 ;; Parameters:    Size  Location     Type
  7595 ;;  a               4   46[BANK0 ] long 
  7596 ;;  b               4   50[BANK0 ] long 
  7597 ;; Auto vars:     Size  Location     Type
  7598 ;;		None
  7599 ;; Return value:  Size  Location     Type
  7600 ;;                  4   46[BANK0 ] long 
  7601 ;; Registers used:
  7602 ;;		wreg, status,2, status,0, pclath, cstack
  7603 ;; Tracked objects:
  7604 ;;		On entry : 0/0
  7605 ;;		On exit  : 0/0
  7606 ;;		Unchanged: 0/0
  7607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7608 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7611 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7612 ;;Total ram usage:        8 bytes
  7613 ;; Hardware stack levels used: 1
  7614 ;; Hardware stack levels required when called: 1
  7615 ;; This function calls:
  7616 ;;		___fladd
  7617 ;; This function is called by:
  7618 ;;		_efgtoa
  7619 ;; This function uses a non-reentrant model
  7620 ;;
  7621                           
  7622  1E7A                     ___flsub:	
  7623                           ;psect for function ___flsub
  7624                           
  7625  1E7A                     l3085:	
  7626                           ;incstack = 0
  7627                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  7628                           
  7629  1E7A  3080               	movlw	128
  7630  1E7B  0020               	movlb	0	; select bank0
  7631  1E7C  06D1               	xorwf	___flsub@a+3,f
  7632  1E7D                     l3087:
  7633  1E7D  0855               	movf	___flsub@b+3,w
  7634  1E7E  00BD               	movwf	___fladd@b+3
  7635  1E7F  0854               	movf	___flsub@b+2,w
  7636  1E80  00BC               	movwf	___fladd@b+2
  7637  1E81  0853               	movf	___flsub@b+1,w
  7638  1E82  00BB               	movwf	___fladd@b+1
  7639  1E83  0852               	movf	___flsub@b,w
  7640  1E84  00BA               	movwf	___fladd@b
  7641  1E85  0851               	movf	___flsub@a+3,w
  7642  1E86  00C1               	movwf	___fladd@a+3
  7643  1E87  0850               	movf	___flsub@a+2,w
  7644  1E88  00C0               	movwf	___fladd@a+2
  7645  1E89  084F               	movf	___flsub@a+1,w
  7646  1E8A  00BF               	movwf	___fladd@a+1
  7647  1E8B  084E               	movf	___flsub@a,w
  7648  1E8C  00BE               	movwf	___fladd@a
  7649  1E8D  3188  209F  319E   	fcall	___fladd
  7650  1E90  0020               	movlb	0	; select bank0
  7651  1E91  083D               	movf	?___fladd+3,w
  7652  1E92  00D1               	movwf	?___flsub+3
  7653  1E93  083C               	movf	?___fladd+2,w
  7654  1E94  00D0               	movwf	?___flsub+2
  7655  1E95  083B               	movf	?___fladd+1,w
  7656  1E96  00CF               	movwf	?___flsub+1
  7657  1E97  083A               	movf	?___fladd,w
  7658  1E98  00CE               	movwf	?___flsub
  7659  1E99                     l619:
  7660  1E99  0008               	return
  7661  1E9A                     __end_of___flsub:
  7662                           
  7663                           	psect	text18
  7664  089F                     __ptext18:	
  7665 ;; *************** function ___fladd *****************
  7666 ;; Defined at:
  7667 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  7668 ;; Parameters:    Size  Location     Type
  7669 ;;  b               4   26[BANK0 ] long 
  7670 ;;  a               4   30[BANK0 ] long 
  7671 ;; Auto vars:     Size  Location     Type
  7672 ;;  grs             1   45[BANK0 ] unsigned char 
  7673 ;;  bexp            1   44[BANK0 ] unsigned char 
  7674 ;;  aexp            1   43[BANK0 ] unsigned char 
  7675 ;;  signs           1   42[BANK0 ] unsigned char 
  7676 ;; Return value:  Size  Location     Type
  7677 ;;                  4   26[BANK0 ] unsigned char 
  7678 ;; Registers used:
  7679 ;;		wreg, status,2, status,0
  7680 ;; Tracked objects:
  7681 ;;		On entry : 0/0
  7682 ;;		On exit  : 0/0
  7683 ;;		Unchanged: 0/0
  7684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7685 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7686 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7687 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7688 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7689 ;;Total ram usage:       20 bytes
  7690 ;; Hardware stack levels used: 1
  7691 ;; This function calls:
  7692 ;;		Nothing
  7693 ;; This function is called by:
  7694 ;;		_main
  7695 ;;		___flsub
  7696 ;;		_efgtoa
  7697 ;; This function uses a non-reentrant model
  7698 ;;
  7699                           
  7700  089F                     ___fladd:	
  7701                           ;psect for function ___fladd
  7702                           
  7703  089F                     l2683:	
  7704                           ;incstack = 0
  7705                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  7706                           
  7707  089F  0020               	movlb	0	; select bank0
  7708  08A0  083D               	movf	___fladd@b+3,w
  7709  08A1  3980               	andlw	128
  7710  08A2  00C2               	movwf	??___fladd
  7711  08A3  0842               	movf	??___fladd,w
  7712  08A4  00CA               	movwf	___fladd@signs
  7713  08A5                     l2685:
  7714  08A5  353D               	lslf	___fladd@b+3,w
  7715  08A6  00C2               	movwf	??___fladd
  7716  08A7  0842               	movf	??___fladd,w
  7717  08A8  00CC               	movwf	___fladd@bexp
  7718  08A9                     l2687:
  7719  08A9  1FBC               	btfss	___fladd@b+2,7
  7720  08AA  28AC               	goto	u2851
  7721  08AB  28AD               	goto	u2850
  7722  08AC                     u2851:
  7723  08AC  28AE               	goto	l2691
  7724  08AD                     u2850:
  7725  08AD                     l2689:
  7726  08AD  144C               	bsf	___fladd@bexp,0
  7727  08AE                     l2691:
  7728  08AE  084C               	movf	___fladd@bexp,w
  7729  08AF  1903               	btfsc	3,2
  7730  08B0  28B2               	goto	u2861
  7731  08B1  28B3               	goto	u2860
  7732  08B2                     u2861:
  7733  08B2  28C3               	goto	l2701
  7734  08B3                     u2860:
  7735  08B3                     l2693:
  7736  08B3  0A4C               	incf	___fladd@bexp,w
  7737  08B4  1D03               	btfss	3,2
  7738  08B5  28B7               	goto	u2871
  7739  08B6  28B8               	goto	u2870
  7740  08B7                     u2871:
  7741  08B7  28C0               	goto	l2697
  7742  08B8                     u2870:
  7743  08B8                     l2695:
  7744  08B8  3000               	movlw	0
  7745  08B9  00BD               	movwf	___fladd@b+3
  7746  08BA  3000               	movlw	0
  7747  08BB  00BC               	movwf	___fladd@b+2
  7748  08BC  3000               	movlw	0
  7749  08BD  00BB               	movwf	___fladd@b+1
  7750  08BE  3000               	movlw	0
  7751  08BF  00BA               	movwf	___fladd@b
  7752  08C0                     l2697:
  7753  08C0  17BC               	bsf	___fladd@b+2,7
  7754  08C1                     l2699:
  7755  08C1  01BD               	clrf	___fladd@b+3
  7756  08C2  28CB               	goto	l2703
  7757  08C3                     l2701:
  7758  08C3  3000               	movlw	0
  7759  08C4  00BD               	movwf	___fladd@b+3
  7760  08C5  3000               	movlw	0
  7761  08C6  00BC               	movwf	___fladd@b+2
  7762  08C7  3000               	movlw	0
  7763  08C8  00BB               	movwf	___fladd@b+1
  7764  08C9  3000               	movlw	0
  7765  08CA  00BA               	movwf	___fladd@b
  7766  08CB                     l2703:
  7767  08CB  0841               	movf	___fladd@a+3,w
  7768  08CC  3980               	andlw	128
  7769  08CD  00C2               	movwf	??___fladd
  7770  08CE  0842               	movf	??___fladd,w
  7771  08CF  00CB               	movwf	___fladd@aexp
  7772  08D0                     l2705:
  7773  08D0  084B               	movf	___fladd@aexp,w
  7774  08D1  064A               	xorwf	___fladd@signs,w
  7775  08D2  1903               	skipnz
  7776  08D3  28D5               	goto	u2881
  7777  08D4  28D6               	goto	u2880
  7778  08D5                     u2881:
  7779  08D5  28D7               	goto	l2709
  7780  08D6                     u2880:
  7781  08D6                     l2707:
  7782  08D6  174A               	bsf	___fladd@signs,6
  7783  08D7                     l2709:
  7784  08D7  3541               	lslf	___fladd@a+3,w
  7785  08D8  00C2               	movwf	??___fladd
  7786  08D9  0842               	movf	??___fladd,w
  7787  08DA  00CB               	movwf	___fladd@aexp
  7788  08DB                     l2711:
  7789  08DB  1FC0               	btfss	___fladd@a+2,7
  7790  08DC  28DE               	goto	u2891
  7791  08DD  28DF               	goto	u2890
  7792  08DE                     u2891:
  7793  08DE  28E0               	goto	l2715
  7794  08DF                     u2890:
  7795  08DF                     l2713:
  7796  08DF  144B               	bsf	___fladd@aexp,0
  7797  08E0                     l2715:
  7798  08E0  084B               	movf	___fladd@aexp,w
  7799  08E1  1903               	btfsc	3,2
  7800  08E2  28E4               	goto	u2901
  7801  08E3  28E5               	goto	u2900
  7802  08E4                     u2901:
  7803  08E4  28F5               	goto	l2725
  7804  08E5                     u2900:
  7805  08E5                     l2717:
  7806  08E5  0A4B               	incf	___fladd@aexp,w
  7807  08E6  1D03               	btfss	3,2
  7808  08E7  28E9               	goto	u2911
  7809  08E8  28EA               	goto	u2910
  7810  08E9                     u2911:
  7811  08E9  28F2               	goto	l2721
  7812  08EA                     u2910:
  7813  08EA                     l2719:
  7814  08EA  3000               	movlw	0
  7815  08EB  00C1               	movwf	___fladd@a+3
  7816  08EC  3000               	movlw	0
  7817  08ED  00C0               	movwf	___fladd@a+2
  7818  08EE  3000               	movlw	0
  7819  08EF  00BF               	movwf	___fladd@a+1
  7820  08F0  3000               	movlw	0
  7821  08F1  00BE               	movwf	___fladd@a
  7822  08F2                     l2721:
  7823  08F2  17C0               	bsf	___fladd@a+2,7
  7824  08F3                     l2723:
  7825  08F3  01C1               	clrf	___fladd@a+3
  7826  08F4  28FD               	goto	l573
  7827  08F5                     l2725:
  7828  08F5  3000               	movlw	0
  7829  08F6  00C1               	movwf	___fladd@a+3
  7830  08F7  3000               	movlw	0
  7831  08F8  00C0               	movwf	___fladd@a+2
  7832  08F9  3000               	movlw	0
  7833  08FA  00BF               	movwf	___fladd@a+1
  7834  08FB  3000               	movlw	0
  7835  08FC  00BE               	movwf	___fladd@a
  7836  08FD                     l573:
  7837  08FD  084C               	movf	___fladd@bexp,w
  7838  08FE  024B               	subwf	___fladd@aexp,w
  7839  08FF  1803               	skipnc
  7840  0900  2902               	goto	u2921
  7841  0901  2903               	goto	u2920
  7842  0902                     u2921:
  7843  0902  2947               	goto	l2761
  7844  0903                     u2920:
  7845  0903                     l2727:
  7846  0903  1F4A               	btfss	___fladd@signs,6
  7847  0904  2906               	goto	u2931
  7848  0905  2907               	goto	u2930
  7849  0906                     u2931:
  7850  0906  290B               	goto	l2731
  7851  0907                     u2930:
  7852  0907                     l2729:
  7853  0907  3080               	movlw	128
  7854  0908  00C2               	movwf	??___fladd
  7855  0909  0842               	movf	??___fladd,w
  7856  090A  06CA               	xorwf	___fladd@signs,f
  7857  090B                     l2731:
  7858  090B  084C               	movf	___fladd@bexp,w
  7859  090C  00C2               	movwf	??___fladd
  7860  090D  0842               	movf	??___fladd,w
  7861  090E  00CD               	movwf	___fladd@grs
  7862  090F                     l2733:
  7863  090F  084B               	movf	___fladd@aexp,w
  7864  0910  00C2               	movwf	??___fladd
  7865  0911  0842               	movf	??___fladd,w
  7866  0912  00CC               	movwf	___fladd@bexp
  7867  0913                     l2735:
  7868  0913  084D               	movf	___fladd@grs,w
  7869  0914  00C2               	movwf	??___fladd
  7870  0915  0842               	movf	??___fladd,w
  7871  0916  00CB               	movwf	___fladd@aexp
  7872  0917                     l2737:
  7873  0917  083A               	movf	___fladd@b,w
  7874  0918  00C2               	movwf	??___fladd
  7875  0919  0842               	movf	??___fladd,w
  7876  091A  00CD               	movwf	___fladd@grs
  7877  091B                     l2739:
  7878  091B  083E               	movf	___fladd@a,w
  7879  091C  00C2               	movwf	??___fladd
  7880  091D  0842               	movf	??___fladd,w
  7881  091E  00BA               	movwf	___fladd@b
  7882  091F                     l2741:
  7883  091F  084D               	movf	___fladd@grs,w
  7884  0920  00C2               	movwf	??___fladd
  7885  0921  0842               	movf	??___fladd,w
  7886  0922  00BE               	movwf	___fladd@a
  7887  0923                     l2743:
  7888  0923  083B               	movf	___fladd@b+1,w
  7889  0924  00C2               	movwf	??___fladd
  7890  0925  0842               	movf	??___fladd,w
  7891  0926  00CD               	movwf	___fladd@grs
  7892  0927                     l2745:
  7893  0927  083F               	movf	___fladd@a+1,w
  7894  0928  00C2               	movwf	??___fladd
  7895  0929  0842               	movf	??___fladd,w
  7896  092A  00BB               	movwf	___fladd@b+1
  7897  092B                     l2747:
  7898  092B  084D               	movf	___fladd@grs,w
  7899  092C  00C2               	movwf	??___fladd
  7900  092D  0842               	movf	??___fladd,w
  7901  092E  00BF               	movwf	___fladd@a+1
  7902  092F                     l2749:
  7903  092F  083C               	movf	___fladd@b+2,w
  7904  0930  00C2               	movwf	??___fladd
  7905  0931  0842               	movf	??___fladd,w
  7906  0932  00CD               	movwf	___fladd@grs
  7907  0933                     l2751:
  7908  0933  0840               	movf	___fladd@a+2,w
  7909  0934  00C2               	movwf	??___fladd
  7910  0935  0842               	movf	??___fladd,w
  7911  0936  00BC               	movwf	___fladd@b+2
  7912  0937                     l2753:
  7913  0937  084D               	movf	___fladd@grs,w
  7914  0938  00C2               	movwf	??___fladd
  7915  0939  0842               	movf	??___fladd,w
  7916  093A  00C0               	movwf	___fladd@a+2
  7917  093B                     l2755:
  7918  093B  083D               	movf	___fladd@b+3,w
  7919  093C  00C2               	movwf	??___fladd
  7920  093D  0842               	movf	??___fladd,w
  7921  093E  00CD               	movwf	___fladd@grs
  7922  093F                     l2757:
  7923  093F  0841               	movf	___fladd@a+3,w
  7924  0940  00C2               	movwf	??___fladd
  7925  0941  0842               	movf	??___fladd,w
  7926  0942  00BD               	movwf	___fladd@b+3
  7927  0943                     l2759:
  7928  0943  084D               	movf	___fladd@grs,w
  7929  0944  00C2               	movwf	??___fladd
  7930  0945  0842               	movf	??___fladd,w
  7931  0946  00C1               	movwf	___fladd@a+3
  7932  0947                     l2761:
  7933  0947  01CD               	clrf	___fladd@grs
  7934  0948                     l2763:
  7935  0948  084B               	movf	___fladd@aexp,w
  7936  0949  00C2               	movwf	??___fladd
  7937  094A  01C3               	clrf	??___fladd+1
  7938  094B  0843               	movf	??___fladd+1,w
  7939  094C  00C5               	movwf	??___fladd+3
  7940  094D  084C               	movf	___fladd@bexp,w
  7941  094E  0242               	subwf	??___fladd,w
  7942  094F  00C4               	movwf	??___fladd+2
  7943  0950  1C03               	skipc
  7944  0951  03C5               	decf	??___fladd+3,f
  7945  0952  0845               	movf	??___fladd+3,w
  7946  0953  3A80               	xorlw	128
  7947  0954  00C6               	movwf	??___fladd+4
  7948  0955  3080               	movlw	128
  7949  0956  0246               	subwf	??___fladd+4,w
  7950  0957  1D03               	skipz
  7951  0958  295B               	goto	u2945
  7952  0959  301A               	movlw	26
  7953  095A  0244               	subwf	??___fladd+2,w
  7954  095B                     u2945:
  7955  095B  1C03               	skipc
  7956  095C  295E               	goto	u2941
  7957  095D  295F               	goto	u2940
  7958  095E                     u2941:
  7959  095E  2997               	goto	l2779
  7960  095F                     u2940:
  7961  095F                     l2765:
  7962  095F  0020               	movlb	0	; select bank0
  7963  0960  083D               	movf	___fladd@b+3,w
  7964  0961  043C               	iorwf	___fladd@b+2,w
  7965  0962  043B               	iorwf	___fladd@b+1,w
  7966  0963  043A               	iorwf	___fladd@b,w
  7967  0964  1D03               	skipz
  7968  0965  2967               	goto	u2951
  7969  0966  2969               	goto	u2950
  7970  0967                     u2951:
  7971  0967  3001               	movlw	1
  7972  0968  296A               	goto	u2960
  7973  0969                     u2950:
  7974  0969  3000               	movlw	0
  7975  096A                     u2960:
  7976  096A  00C2               	movwf	??___fladd
  7977  096B  0842               	movf	??___fladd,w
  7978  096C  00CD               	movwf	___fladd@grs
  7979  096D  3000               	movlw	0
  7980  096E  00BD               	movwf	___fladd@b+3
  7981  096F  3000               	movlw	0
  7982  0970  00BC               	movwf	___fladd@b+2
  7983  0971  3000               	movlw	0
  7984  0972  00BB               	movwf	___fladd@b+1
  7985  0973  3000               	movlw	0
  7986  0974  00BA               	movwf	___fladd@b
  7987  0975  084B               	movf	___fladd@aexp,w
  7988  0976  00C2               	movwf	??___fladd
  7989  0977  0842               	movf	??___fladd,w
  7990  0978  00CC               	movwf	___fladd@bexp
  7991  0979  299E               	goto	l577
  7992  097A                     l579:
  7993  097A  1C4D               	btfss	___fladd@grs,0
  7994  097B  297D               	goto	u2971
  7995  097C  297E               	goto	u2970
  7996  097D                     u2971:
  7997  097D  2984               	goto	l2769
  7998  097E                     u2970:
  7999  097E                     l2767:
  8000  097E  364D               	lsrf	___fladd@grs,w
  8001  097F  3801               	iorlw	1
  8002  0980  00C2               	movwf	??___fladd
  8003  0981  0842               	movf	??___fladd,w
  8004  0982  00CD               	movwf	___fladd@grs
  8005  0983  2986               	goto	l2771
  8006  0984                     l2769:
  8007  0984  1003               	clrc
  8008  0985  0CCD               	rrf	___fladd@grs,f
  8009  0986                     l2771:
  8010  0986  1C3A               	btfss	___fladd@b,0
  8011  0987  2989               	goto	u2981
  8012  0988  298A               	goto	u2980
  8013  0989                     u2981:
  8014  0989  298B               	goto	l2775
  8015  098A                     u2980:
  8016  098A                     l2773:
  8017  098A  17CD               	bsf	___fladd@grs,7
  8018  098B                     l2775:
  8019  098B  3001               	movlw	1
  8020  098C  00C2               	movwf	??___fladd
  8021  098D                     u2995:
  8022  098D  37BD               	asrf	___fladd@b+3,f
  8023  098E  0CBC               	rrf	___fladd@b+2,f
  8024  098F  0CBB               	rrf	___fladd@b+1,f
  8025  0990  0CBA               	rrf	___fladd@b,f
  8026  0991  0BC2               	decfsz	??___fladd& (0+127),f
  8027  0992  298D               	goto	u2995
  8028  0993                     l2777:
  8029  0993  3001               	movlw	1
  8030  0994  00C2               	movwf	??___fladd
  8031  0995  0842               	movf	??___fladd,w
  8032  0996  07CC               	addwf	___fladd@bexp,f
  8033  0997                     l2779:
  8034  0997  0020               	movlb	0	; select bank0
  8035  0998  084B               	movf	___fladd@aexp,w
  8036  0999  024C               	subwf	___fladd@bexp,w
  8037  099A  1C03               	skipc
  8038  099B  299D               	goto	u3001
  8039  099C  299E               	goto	u3000
  8040  099D                     u3001:
  8041  099D  297A               	goto	l579
  8042  099E                     u3000:
  8043  099E                     l577:
  8044  099E  1B4A               	btfsc	___fladd@signs,6
  8045  099F  29A1               	goto	u3011
  8046  09A0  29A2               	goto	u3010
  8047  09A1                     u3011:
  8048  09A1  29DA               	goto	l2805
  8049  09A2                     u3010:
  8050  09A2                     l2781:
  8051  09A2  084C               	movf	___fladd@bexp,w
  8052  09A3  1D03               	btfss	3,2
  8053  09A4  29A6               	goto	u3021
  8054  09A5  29A7               	goto	u3020
  8055  09A6                     u3021:
  8056  09A6  29B0               	goto	l2787
  8057  09A7                     u3020:
  8058  09A7                     l2783:
  8059  09A7  3000               	movlw	0
  8060  09A8  00BD               	movwf	?___fladd+3
  8061  09A9  3000               	movlw	0
  8062  09AA  00BC               	movwf	?___fladd+2
  8063  09AB  3000               	movlw	0
  8064  09AC  00BB               	movwf	?___fladd+1
  8065  09AD  3000               	movlw	0
  8066  09AE  00BA               	movwf	?___fladd
  8067  09AF  2AD6               	goto	l586
  8068  09B0                     l2787:
  8069  09B0  083E               	movf	___fladd@a,w
  8070  09B1  07BA               	addwf	___fladd@b,f
  8071  09B2  083F               	movf	___fladd@a+1,w
  8072  09B3  3DBB               	addwfc	___fladd@b+1,f
  8073  09B4  0840               	movf	___fladd@a+2,w
  8074  09B5  3DBC               	addwfc	___fladd@b+2,f
  8075  09B6  0841               	movf	___fladd@a+3,w
  8076  09B7  3DBD               	addwfc	___fladd@b+3,f
  8077  09B8                     l2789:
  8078  09B8  1C3D               	btfss	___fladd@b+3,0
  8079  09B9  29BB               	goto	u3031
  8080  09BA  29BC               	goto	u3030
  8081  09BB                     u3031:
  8082  09BB  2A66               	goto	l2839
  8083  09BC                     u3030:
  8084  09BC                     l2791:
  8085  09BC  1C4D               	btfss	___fladd@grs,0
  8086  09BD  29BF               	goto	u3041
  8087  09BE  29C0               	goto	u3040
  8088  09BF                     u3041:
  8089  09BF  29C6               	goto	l2795
  8090  09C0                     u3040:
  8091  09C0                     l2793:
  8092  09C0  364D               	lsrf	___fladd@grs,w
  8093  09C1  3801               	iorlw	1
  8094  09C2  00C2               	movwf	??___fladd
  8095  09C3  0842               	movf	??___fladd,w
  8096  09C4  00CD               	movwf	___fladd@grs
  8097  09C5  29C8               	goto	l2797
  8098  09C6                     l2795:
  8099  09C6  1003               	clrc
  8100  09C7  0CCD               	rrf	___fladd@grs,f
  8101  09C8                     l2797:
  8102  09C8  1C3A               	btfss	___fladd@b,0
  8103  09C9  29CB               	goto	u3051
  8104  09CA  29CC               	goto	u3050
  8105  09CB                     u3051:
  8106  09CB  29CD               	goto	l2801
  8107  09CC                     u3050:
  8108  09CC                     l2799:
  8109  09CC  17CD               	bsf	___fladd@grs,7
  8110  09CD                     l2801:
  8111  09CD  3001               	movlw	1
  8112  09CE  00C2               	movwf	??___fladd
  8113  09CF                     u3065:
  8114  09CF  37BD               	asrf	___fladd@b+3,f
  8115  09D0  0CBC               	rrf	___fladd@b+2,f
  8116  09D1  0CBB               	rrf	___fladd@b+1,f
  8117  09D2  0CBA               	rrf	___fladd@b,f
  8118  09D3  0BC2               	decfsz	??___fladd& (0+127),f
  8119  09D4  29CF               	goto	u3065
  8120  09D5                     l2803:
  8121  09D5  3001               	movlw	1
  8122  09D6  00C2               	movwf	??___fladd
  8123  09D7  0842               	movf	??___fladd,w
  8124  09D8  07CC               	addwf	___fladd@bexp,f
  8125  09D9  2A66               	goto	l2839
  8126  09DA                     l2805:
  8127  09DA  083D               	movf	___fladd@b+3,w
  8128  09DB  3A80               	xorlw	128
  8129  09DC  00C2               	movwf	??___fladd
  8130  09DD  0841               	movf	___fladd@a+3,w
  8131  09DE  3A80               	xorlw	128
  8132  09DF  0242               	subwf	??___fladd,w
  8133  09E0  1D03               	skipz
  8134  09E1  29EC               	goto	u3073
  8135  09E2  0840               	movf	___fladd@a+2,w
  8136  09E3  023C               	subwf	___fladd@b+2,w
  8137  09E4  1D03               	skipz
  8138  09E5  29EC               	goto	u3073
  8139  09E6  083F               	movf	___fladd@a+1,w
  8140  09E7  023B               	subwf	___fladd@b+1,w
  8141  09E8  1D03               	skipz
  8142  09E9  29EC               	goto	u3073
  8143  09EA  083E               	movf	___fladd@a,w
  8144  09EB  023A               	subwf	___fladd@b,w
  8145  09EC                     u3073:
  8146  09EC  1803               	skipnc
  8147  09ED  29EF               	goto	u3071
  8148  09EE  29F0               	goto	u3070
  8149  09EF                     u3071:
  8150  09EF  2A28               	goto	l2815
  8151  09F0                     u3070:
  8152  09F0                     l2807:
  8153  09F0  30FF               	movlw	255
  8154  09F1  00C2               	movwf	??___fladd
  8155  09F2  30FF               	movlw	255
  8156  09F3  00C3               	movwf	??___fladd+1
  8157  09F4  30FF               	movlw	255
  8158  09F5  00C4               	movwf	??___fladd+2
  8159  09F6  30FF               	movlw	255
  8160  09F7  00C5               	movwf	??___fladd+3
  8161  09F8  083A               	movf	___fladd@b,w
  8162  09F9  023E               	subwf	___fladd@a,w
  8163  09FA  00C6               	movwf	??___fladd+4
  8164  09FB  083B               	movf	___fladd@b+1,w
  8165  09FC  3B3F               	subwfb	___fladd@a+1,w
  8166  09FD  00C7               	movwf	??___fladd+5
  8167  09FE  083C               	movf	___fladd@b+2,w
  8168  09FF  3B40               	subwfb	___fladd@a+2,w
  8169  0A00  00C8               	movwf	??___fladd+6
  8170  0A01  083D               	movf	___fladd@b+3,w
  8171  0A02  3B41               	subwfb	___fladd@a+3,w
  8172  0A03  00C9               	movwf	??___fladd+7
  8173  0A04  0846               	movf	??___fladd+4,w
  8174  0A05  07C2               	addwf	??___fladd,f
  8175  0A06  0847               	movf	??___fladd+5,w
  8176  0A07  3DC3               	addwfc	??___fladd+1,f
  8177  0A08  0848               	movf	??___fladd+6,w
  8178  0A09  3DC4               	addwfc	??___fladd+2,f
  8179  0A0A  0849               	movf	??___fladd+7,w
  8180  0A0B  3DC5               	addwfc	??___fladd+3,f
  8181  0A0C  0845               	movf	??___fladd+3,w
  8182  0A0D  00BD               	movwf	___fladd@b+3
  8183  0A0E  0844               	movf	??___fladd+2,w
  8184  0A0F  00BC               	movwf	___fladd@b+2
  8185  0A10  0843               	movf	??___fladd+1,w
  8186  0A11  00BB               	movwf	___fladd@b+1
  8187  0A12  0842               	movf	??___fladd,w
  8188  0A13  00BA               	movwf	___fladd@b
  8189  0A14                     l2809:
  8190  0A14  3080               	movlw	128
  8191  0A15  00C2               	movwf	??___fladd
  8192  0A16  0842               	movf	??___fladd,w
  8193  0A17  06CA               	xorwf	___fladd@signs,f
  8194  0A18  09CD               	comf	___fladd@grs,f
  8195  0A19  0ACD               	incf	___fladd@grs,f
  8196  0A1A                     l2811:
  8197  0A1A  084D               	movf	___fladd@grs,w
  8198  0A1B  1D03               	btfss	3,2
  8199  0A1C  2A1E               	goto	u3081
  8200  0A1D  2A1F               	goto	u3080
  8201  0A1E                     u3081:
  8202  0A1E  2A30               	goto	l594
  8203  0A1F                     u3080:
  8204  0A1F                     l2813:
  8205  0A1F  3001               	movlw	1
  8206  0A20  07BA               	addwf	___fladd@b,f
  8207  0A21  3000               	movlw	0
  8208  0A22  3DBB               	addwfc	___fladd@b+1,f
  8209  0A23  3000               	movlw	0
  8210  0A24  3DBC               	addwfc	___fladd@b+2,f
  8211  0A25  3000               	movlw	0
  8212  0A26  3DBD               	addwfc	___fladd@b+3,f
  8213  0A27  2A30               	goto	l594
  8214  0A28                     l2815:
  8215  0A28  083E               	movf	___fladd@a,w
  8216  0A29  02BA               	subwf	___fladd@b,f
  8217  0A2A  083F               	movf	___fladd@a+1,w
  8218  0A2B  3BBB               	subwfb	___fladd@b+1,f
  8219  0A2C  0840               	movf	___fladd@a+2,w
  8220  0A2D  3BBC               	subwfb	___fladd@b+2,f
  8221  0A2E  0841               	movf	___fladd@a+3,w
  8222  0A2F  3BBD               	subwfb	___fladd@b+3,f
  8223  0A30                     l594:
  8224  0A30  083D               	movf	___fladd@b+3,w
  8225  0A31  043C               	iorwf	___fladd@b+2,w
  8226  0A32  043B               	iorwf	___fladd@b+1,w
  8227  0A33  043A               	iorwf	___fladd@b,w
  8228  0A34  1D03               	skipz
  8229  0A35  2A37               	goto	u3091
  8230  0A36  2A38               	goto	u3090
  8231  0A37                     u3091:
  8232  0A37  2A62               	goto	l2837
  8233  0A38                     u3090:
  8234  0A38                     l2817:
  8235  0A38  084D               	movf	___fladd@grs,w
  8236  0A39  1D03               	btfss	3,2
  8237  0A3A  2A3C               	goto	u3101
  8238  0A3B  2A3D               	goto	u3100
  8239  0A3C                     u3101:
  8240  0A3C  2A62               	goto	l2837
  8241  0A3D                     u3100:
  8242  0A3D                     l2819:
  8243  0A3D  3000               	movlw	0
  8244  0A3E  00BD               	movwf	?___fladd+3
  8245  0A3F  3000               	movlw	0
  8246  0A40  00BC               	movwf	?___fladd+2
  8247  0A41  3000               	movlw	0
  8248  0A42  00BB               	movwf	?___fladd+1
  8249  0A43  3000               	movlw	0
  8250  0A44  00BA               	movwf	?___fladd
  8251  0A45  2AD6               	goto	l586
  8252  0A46                     l2823:
  8253  0A46  3001               	movlw	1
  8254  0A47                     u3115:
  8255  0A47  35BA               	lslf	___fladd@b,f
  8256  0A48  0DBB               	rlf	___fladd@b+1,f
  8257  0A49  0DBC               	rlf	___fladd@b+2,f
  8258  0A4A  0DBD               	rlf	___fladd@b+3,f
  8259  0A4B  0B89               	decfsz	9,f
  8260  0A4C  2A47               	goto	u3115
  8261  0A4D                     l2825:
  8262  0A4D  1FCD               	btfss	___fladd@grs,7
  8263  0A4E  2A50               	goto	u3121
  8264  0A4F  2A51               	goto	u3120
  8265  0A50                     u3121:
  8266  0A50  2A52               	goto	l598
  8267  0A51                     u3120:
  8268  0A51                     l2827:
  8269  0A51  143A               	bsf	___fladd@b,0
  8270  0A52                     l598:
  8271  0A52  1C4D               	btfss	___fladd@grs,0
  8272  0A53  2A55               	goto	u3131
  8273  0A54  2A56               	goto	u3130
  8274  0A55                     u3131:
  8275  0A55  2A59               	goto	l2831
  8276  0A56                     u3130:
  8277  0A56                     l2829:
  8278  0A56  1403               	setc
  8279  0A57  0DCD               	rlf	___fladd@grs,f
  8280  0A58  2A5B               	goto	l2833
  8281  0A59                     l2831:
  8282  0A59  1003               	clrc
  8283  0A5A  0DCD               	rlf	___fladd@grs,f
  8284  0A5B                     l2833:
  8285  0A5B  084C               	movf	___fladd@bexp,w
  8286  0A5C  1903               	btfsc	3,2
  8287  0A5D  2A5F               	goto	u3141
  8288  0A5E  2A60               	goto	u3140
  8289  0A5F                     u3141:
  8290  0A5F  2A62               	goto	l2837
  8291  0A60                     u3140:
  8292  0A60                     l2835:
  8293  0A60  3001               	movlw	1
  8294  0A61  02CC               	subwf	___fladd@bexp,f
  8295  0A62                     l2837:
  8296  0A62  1FBC               	btfss	___fladd@b+2,7
  8297  0A63  2A65               	goto	u3151
  8298  0A64  2A66               	goto	u3150
  8299  0A65                     u3151:
  8300  0A65  2A46               	goto	l2823
  8301  0A66                     u3150:
  8302  0A66                     l2839:
  8303  0A66  01CB               	clrf	___fladd@aexp
  8304  0A67                     l2841:
  8305  0A67  1FCD               	btfss	___fladd@grs,7
  8306  0A68  2A6A               	goto	u3161
  8307  0A69  2A6B               	goto	u3160
  8308  0A6A                     u3161:
  8309  0A6A  2A79               	goto	l2849
  8310  0A6B                     u3160:
  8311  0A6B                     l2843:
  8312  0A6B  084D               	movf	___fladd@grs,w
  8313  0A6C  397F               	andlw	127
  8314  0A6D  1903               	btfsc	3,2
  8315  0A6E  2A70               	goto	u3171
  8316  0A6F  2A71               	goto	u3170
  8317  0A70                     u3171:
  8318  0A70  2A74               	goto	l604
  8319  0A71                     u3170:
  8320  0A71                     l2845:
  8321  0A71  01CB               	clrf	___fladd@aexp
  8322  0A72  0ACB               	incf	___fladd@aexp,f
  8323  0A73  2A79               	goto	l2849
  8324  0A74                     l604:
  8325  0A74  1C3A               	btfss	___fladd@b,0
  8326  0A75  2A77               	goto	u3181
  8327  0A76  2A78               	goto	u3180
  8328  0A77                     u3181:
  8329  0A77  2A79               	goto	l2849
  8330  0A78                     u3180:
  8331  0A78  2A71               	goto	l2845
  8332  0A79                     l2849:
  8333  0A79  084B               	movf	___fladd@aexp,w
  8334  0A7A  1903               	btfsc	3,2
  8335  0A7B  2A7D               	goto	u3191
  8336  0A7C  2A7E               	goto	u3190
  8337  0A7D                     u3191:
  8338  0A7D  2AAB               	goto	l607
  8339  0A7E                     u3190:
  8340  0A7E                     l2851:
  8341  0A7E  3001               	movlw	1
  8342  0A7F  07BA               	addwf	___fladd@b,f
  8343  0A80  3000               	movlw	0
  8344  0A81  3DBB               	addwfc	___fladd@b+1,f
  8345  0A82  3000               	movlw	0
  8346  0A83  3DBC               	addwfc	___fladd@b+2,f
  8347  0A84  3000               	movlw	0
  8348  0A85  3DBD               	addwfc	___fladd@b+3,f
  8349  0A86                     l2853:
  8350  0A86  1C3D               	btfss	___fladd@b+3,0
  8351  0A87  2A89               	goto	u3201
  8352  0A88  2A8A               	goto	u3200
  8353  0A89                     u3201:
  8354  0A89  2AAB               	goto	l607
  8355  0A8A                     u3200:
  8356  0A8A                     l2855:
  8357  0A8A  083A               	movf	___fladd@b,w
  8358  0A8B  00C2               	movwf	??___fladd
  8359  0A8C  083B               	movf	___fladd@b+1,w
  8360  0A8D  00C3               	movwf	??___fladd+1
  8361  0A8E  083C               	movf	___fladd@b+2,w
  8362  0A8F  00C4               	movwf	??___fladd+2
  8363  0A90  083D               	movf	___fladd@b+3,w
  8364  0A91  00C5               	movwf	??___fladd+3
  8365  0A92  3001               	movlw	1
  8366  0A93  00C6               	movwf	??___fladd+4
  8367  0A94                     u3215:
  8368  0A94  37C5               	asrf	??___fladd+3,f
  8369  0A95  0CC4               	rrf	??___fladd+2,f
  8370  0A96  0CC3               	rrf	??___fladd+1,f
  8371  0A97  0CC2               	rrf	??___fladd,f
  8372  0A98                     u3210:
  8373  0A98  0BC6               	decfsz	??___fladd+4,f
  8374  0A99  2A94               	goto	u3215
  8375  0A9A  0845               	movf	??___fladd+3,w
  8376  0A9B  00BD               	movwf	___fladd@b+3
  8377  0A9C  0844               	movf	??___fladd+2,w
  8378  0A9D  00BC               	movwf	___fladd@b+2
  8379  0A9E  0843               	movf	??___fladd+1,w
  8380  0A9F  00BB               	movwf	___fladd@b+1
  8381  0AA0  0842               	movf	??___fladd,w
  8382  0AA1  00BA               	movwf	___fladd@b
  8383  0AA2  0A4C               	incf	___fladd@bexp,w
  8384  0AA3  1903               	btfsc	3,2
  8385  0AA4  2AA6               	goto	u3221
  8386  0AA5  2AA7               	goto	u3220
  8387  0AA6                     u3221:
  8388  0AA6  2AAB               	goto	l607
  8389  0AA7                     u3220:
  8390  0AA7                     l2857:
  8391  0AA7  3001               	movlw	1
  8392  0AA8  00C2               	movwf	??___fladd
  8393  0AA9  0842               	movf	??___fladd,w
  8394  0AAA  07CC               	addwf	___fladd@bexp,f
  8395  0AAB                     l607:
  8396  0AAB  0A4C               	incf	___fladd@bexp,w
  8397  0AAC  1903               	btfsc	3,2
  8398  0AAD  2AAF               	goto	u3231
  8399  0AAE  2AB0               	goto	u3230
  8400  0AAF                     u3231:
  8401  0AAF  2AB5               	goto	l2861
  8402  0AB0                     u3230:
  8403  0AB0                     l2859:
  8404  0AB0  084C               	movf	___fladd@bexp,w
  8405  0AB1  1D03               	btfss	3,2
  8406  0AB2  2AB4               	goto	u3241
  8407  0AB3  2AB5               	goto	u3240
  8408  0AB4                     u3241:
  8409  0AB4  2AC3               	goto	l2867
  8410  0AB5                     u3240:
  8411  0AB5                     l2861:
  8412  0AB5  3000               	movlw	0
  8413  0AB6  00BD               	movwf	___fladd@b+3
  8414  0AB7  3000               	movlw	0
  8415  0AB8  00BC               	movwf	___fladd@b+2
  8416  0AB9  3000               	movlw	0
  8417  0ABA  00BB               	movwf	___fladd@b+1
  8418  0ABB  3000               	movlw	0
  8419  0ABC  00BA               	movwf	___fladd@b
  8420  0ABD                     l2863:
  8421  0ABD  084C               	movf	___fladd@bexp,w
  8422  0ABE  1D03               	btfss	3,2
  8423  0ABF  2AC1               	goto	u3251
  8424  0AC0  2AC2               	goto	u3250
  8425  0AC1                     u3251:
  8426  0AC1  2AC3               	goto	l2867
  8427  0AC2                     u3250:
  8428  0AC2                     l2865:
  8429  0AC2  01CA               	clrf	___fladd@signs
  8430  0AC3                     l2867:
  8431  0AC3  1C4C               	btfss	___fladd@bexp,0
  8432  0AC4  2AC6               	goto	u3261
  8433  0AC5  2AC7               	goto	u3260
  8434  0AC6                     u3261:
  8435  0AC6  2AC9               	goto	l2871
  8436  0AC7                     u3260:
  8437  0AC7                     l2869:
  8438  0AC7  17BC               	bsf	___fladd@b+2,7
  8439  0AC8  2ACD               	goto	l615
  8440  0AC9                     l2871:
  8441  0AC9  307F               	movlw	127
  8442  0ACA  00C2               	movwf	??___fladd
  8443  0ACB  0842               	movf	??___fladd,w
  8444  0ACC  05BC               	andwf	___fladd@b+2,f
  8445  0ACD                     l615:
  8446  0ACD  364C               	lsrf	___fladd@bexp,w
  8447  0ACE  00C2               	movwf	??___fladd
  8448  0ACF  0842               	movf	??___fladd,w
  8449  0AD0  00BD               	movwf	___fladd@b+3
  8450  0AD1                     l2873:
  8451  0AD1  1FCA               	btfss	___fladd@signs,7
  8452  0AD2  2AD4               	goto	u3271
  8453  0AD3  2AD5               	goto	u3270
  8454  0AD4                     u3271:
  8455  0AD4  2AD6               	goto	l616
  8456  0AD5                     u3270:
  8457  0AD5                     l2875:
  8458  0AD5  17BD               	bsf	___fladd@b+3,7
  8459  0AD6                     l616:
  8460  0AD6                     l586:
  8461  0AD6  0008               	return
  8462  0AD7                     __end_of___fladd:
  8463                           
  8464                           	psect	text19
  8465  0800                     __ptext19:	
  8466 ;; *************** function ___flneg *****************
  8467 ;; Defined at:
  8468 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  8469 ;; Parameters:    Size  Location     Type
  8470 ;;  f1              4    0[COMMON] unsigned char 
  8471 ;; Auto vars:     Size  Location     Type
  8472 ;;		None
  8473 ;; Return value:  Size  Location     Type
  8474 ;;                  4    0[COMMON] unsigned char 
  8475 ;; Registers used:
  8476 ;;		wreg
  8477 ;; Tracked objects:
  8478 ;;		On entry : 0/0
  8479 ;;		On exit  : 0/0
  8480 ;;		Unchanged: 0/0
  8481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8482 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8485 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8486 ;;Total ram usage:        4 bytes
  8487 ;; Hardware stack levels used: 1
  8488 ;; This function calls:
  8489 ;;		Nothing
  8490 ;; This function is called by:
  8491 ;;		_efgtoa
  8492 ;; This function uses a non-reentrant model
  8493 ;;
  8494                           
  8495  0800                     ___flneg:	
  8496                           ;psect for function ___flneg
  8497                           
  8498  0800                     l3041:	
  8499                           ;incstack = 0
  8500                           ; Regs used in ___flneg: [wreg]
  8501                           
  8502  0800  0873               	movf	___flneg@f1+3,w
  8503  0801  0472               	iorwf	___flneg@f1+2,w
  8504  0802  0471               	iorwf	___flneg@f1+1,w
  8505  0803  0470               	iorwf	___flneg@f1,w
  8506  0804  1903               	skipnz
  8507  0805  2807               	goto	u3661
  8508  0806  2808               	goto	u3660
  8509  0807                     u3661:
  8510  0807  280A               	goto	l3045
  8511  0808                     u3660:
  8512  0808                     l3043:
  8513  0808  3080               	movlw	128
  8514  0809  06F3               	xorwf	___flneg@f1+3,f
  8515  080A                     l3045:
  8516  080A                     l462:
  8517  080A  0008               	return
  8518  080B                     __end_of___flneg:
  8519                           
  8520                           	psect	text20
  8521  0AD7                     __ptext20:	
  8522 ;; *************** function ___flmul *****************
  8523 ;; Defined at:
  8524 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  8525 ;; Parameters:    Size  Location     Type
  8526 ;;  b               4    0[BANK0 ] unsigned char 
  8527 ;;  a               4    4[BANK0 ] unsigned char 
  8528 ;; Auto vars:     Size  Location     Type
  8529 ;;  prod            4   20[BANK0 ] struct .
  8530 ;;  grs             4   14[BANK0 ] unsigned long 
  8531 ;;  temp            2   24[BANK0 ] struct .
  8532 ;;  bexp            1   19[BANK0 ] unsigned char 
  8533 ;;  aexp            1   18[BANK0 ] unsigned char 
  8534 ;;  sign            1   13[BANK0 ] unsigned char 
  8535 ;; Return value:  Size  Location     Type
  8536 ;;                  4    0[BANK0 ] unsigned char 
  8537 ;; Registers used:
  8538 ;;		wreg, status,2, status,0, pclath, cstack
  8539 ;; Tracked objects:
  8540 ;;		On entry : 0/0
  8541 ;;		On exit  : 0/0
  8542 ;;		Unchanged: 0/0
  8543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8544 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8545 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8546 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8547 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8548 ;;Total ram usage:       26 bytes
  8549 ;; Hardware stack levels used: 1
  8550 ;; Hardware stack levels required when called: 1
  8551 ;; This function calls:
  8552 ;;		__Umul8_16
  8553 ;; This function is called by:
  8554 ;;		_main
  8555 ;;		_efgtoa
  8556 ;; This function uses a non-reentrant model
  8557 ;;
  8558                           
  8559  0AD7                     ___flmul:	
  8560                           ;psect for function ___flmul
  8561                           
  8562  0AD7                     l3231:	
  8563                           ;incstack = 0
  8564                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8565                           
  8566  0AD7  0020               	movlb	0	; select bank0
  8567  0AD8  0823               	movf	___flmul@b+3,w
  8568  0AD9  3980               	andlw	128
  8569  0ADA  00A8               	movwf	??___flmul
  8570  0ADB  0828               	movf	??___flmul,w
  8571  0ADC  00AD               	movwf	___flmul@sign
  8572  0ADD                     l3233:
  8573  0ADD  3523               	lslf	___flmul@b+3,w
  8574  0ADE  00A8               	movwf	??___flmul
  8575  0ADF  0828               	movf	??___flmul,w
  8576  0AE0  00B3               	movwf	___flmul@bexp
  8577  0AE1                     l3235:
  8578  0AE1  1FA2               	btfss	___flmul@b+2,7
  8579  0AE2  2AE4               	goto	u4061
  8580  0AE3  2AE5               	goto	u4060
  8581  0AE4                     u4061:
  8582  0AE4  2AE6               	goto	l3239
  8583  0AE5                     u4060:
  8584  0AE5                     l3237:
  8585  0AE5  1433               	bsf	___flmul@bexp,0
  8586  0AE6                     l3239:
  8587  0AE6  0833               	movf	___flmul@bexp,w
  8588  0AE7  1903               	btfsc	3,2
  8589  0AE8  2AEA               	goto	u4071
  8590  0AE9  2AEB               	goto	u4070
  8591  0AEA                     u4071:
  8592  0AEA  2AFA               	goto	l3247
  8593  0AEB                     u4070:
  8594  0AEB                     l3241:
  8595  0AEB  0A33               	incf	___flmul@bexp,w
  8596  0AEC  1D03               	btfss	3,2
  8597  0AED  2AEF               	goto	u4081
  8598  0AEE  2AF0               	goto	u4080
  8599  0AEF                     u4081:
  8600  0AEF  2AF8               	goto	l3245
  8601  0AF0                     u4080:
  8602  0AF0                     l3243:
  8603  0AF0  3000               	movlw	0
  8604  0AF1  00A3               	movwf	___flmul@b+3
  8605  0AF2  3000               	movlw	0
  8606  0AF3  00A2               	movwf	___flmul@b+2
  8607  0AF4  3000               	movlw	0
  8608  0AF5  00A1               	movwf	___flmul@b+1
  8609  0AF6  3000               	movlw	0
  8610  0AF7  00A0               	movwf	___flmul@b
  8611  0AF8                     l3245:
  8612  0AF8  17A2               	bsf	___flmul@b+2,7
  8613  0AF9  2B02               	goto	l3249
  8614  0AFA                     l3247:
  8615  0AFA  3000               	movlw	0
  8616  0AFB  00A3               	movwf	___flmul@b+3
  8617  0AFC  3000               	movlw	0
  8618  0AFD  00A2               	movwf	___flmul@b+2
  8619  0AFE  3000               	movlw	0
  8620  0AFF  00A1               	movwf	___flmul@b+1
  8621  0B00  3000               	movlw	0
  8622  0B01  00A0               	movwf	___flmul@b
  8623  0B02                     l3249:
  8624  0B02  0827               	movf	___flmul@a+3,w
  8625  0B03  3980               	andlw	128
  8626  0B04  00A8               	movwf	??___flmul
  8627  0B05  0828               	movf	??___flmul,w
  8628  0B06  06AD               	xorwf	___flmul@sign,f
  8629  0B07                     l3251:
  8630  0B07  3527               	lslf	___flmul@a+3,w
  8631  0B08  00A8               	movwf	??___flmul
  8632  0B09  0828               	movf	??___flmul,w
  8633  0B0A  00B2               	movwf	___flmul@aexp
  8634  0B0B                     l3253:
  8635  0B0B  1FA6               	btfss	___flmul@a+2,7
  8636  0B0C  2B0E               	goto	u4091
  8637  0B0D  2B0F               	goto	u4090
  8638  0B0E                     u4091:
  8639  0B0E  2B10               	goto	l3257
  8640  0B0F                     u4090:
  8641  0B0F                     l3255:
  8642  0B0F  1432               	bsf	___flmul@aexp,0
  8643  0B10                     l3257:
  8644  0B10  0832               	movf	___flmul@aexp,w
  8645  0B11  1903               	btfsc	3,2
  8646  0B12  2B14               	goto	u4101
  8647  0B13  2B15               	goto	u4100
  8648  0B14                     u4101:
  8649  0B14  2B24               	goto	l3265
  8650  0B15                     u4100:
  8651  0B15                     l3259:
  8652  0B15  0A32               	incf	___flmul@aexp,w
  8653  0B16  1D03               	btfss	3,2
  8654  0B17  2B19               	goto	u4111
  8655  0B18  2B1A               	goto	u4110
  8656  0B19                     u4111:
  8657  0B19  2B22               	goto	l3263
  8658  0B1A                     u4110:
  8659  0B1A                     l3261:
  8660  0B1A  3000               	movlw	0
  8661  0B1B  00A7               	movwf	___flmul@a+3
  8662  0B1C  3000               	movlw	0
  8663  0B1D  00A6               	movwf	___flmul@a+2
  8664  0B1E  3000               	movlw	0
  8665  0B1F  00A5               	movwf	___flmul@a+1
  8666  0B20  3000               	movlw	0
  8667  0B21  00A4               	movwf	___flmul@a
  8668  0B22                     l3263:
  8669  0B22  17A6               	bsf	___flmul@a+2,7
  8670  0B23  2B2C               	goto	l3267
  8671  0B24                     l3265:
  8672  0B24  3000               	movlw	0
  8673  0B25  00A7               	movwf	___flmul@a+3
  8674  0B26  3000               	movlw	0
  8675  0B27  00A6               	movwf	___flmul@a+2
  8676  0B28  3000               	movlw	0
  8677  0B29  00A5               	movwf	___flmul@a+1
  8678  0B2A  3000               	movlw	0
  8679  0B2B  00A4               	movwf	___flmul@a
  8680  0B2C                     l3267:
  8681  0B2C  0832               	movf	___flmul@aexp,w
  8682  0B2D  1903               	btfsc	3,2
  8683  0B2E  2B30               	goto	u4121
  8684  0B2F  2B31               	goto	u4120
  8685  0B30                     u4121:
  8686  0B30  2B36               	goto	l3271
  8687  0B31                     u4120:
  8688  0B31                     l3269:
  8689  0B31  0833               	movf	___flmul@bexp,w
  8690  0B32  1D03               	btfss	3,2
  8691  0B33  2B35               	goto	u4131
  8692  0B34  2B36               	goto	u4130
  8693  0B35                     u4131:
  8694  0B35  2B3F               	goto	l3275
  8695  0B36                     u4130:
  8696  0B36                     l3271:
  8697  0B36  3000               	movlw	0
  8698  0B37  00A3               	movwf	?___flmul+3
  8699  0B38  3000               	movlw	0
  8700  0B39  00A2               	movwf	?___flmul+2
  8701  0B3A  3000               	movlw	0
  8702  0B3B  00A1               	movwf	?___flmul+1
  8703  0B3C  3000               	movlw	0
  8704  0B3D  00A0               	movwf	?___flmul
  8705  0B3E  2D2D               	goto	l669
  8706  0B3F                     l3275:
  8707  0B3F  0820               	movf	___flmul@b,w
  8708  0B40  00A8               	movwf	??___flmul
  8709  0B41  0828               	movf	??___flmul,w
  8710  0B42  00F0               	movwf	__Umul8_16@multiplicand
  8711  0B43  0826               	movf	___flmul@a+2,w
  8712  0B44  319E  26FD  318A   	fcall	__Umul8_16
  8713  0B47  0871               	movf	?__Umul8_16+1,w
  8714  0B48  0020               	movlb	0	; select bank0
  8715  0B49  00B9               	movwf	___flmul@temp+1
  8716  0B4A  0870               	movf	?__Umul8_16,w
  8717  0B4B  00B8               	movwf	___flmul@temp
  8718  0B4C                     l3277:
  8719  0B4C  0838               	movf	___flmul@temp,w
  8720  0B4D  00A8               	movwf	??___flmul
  8721  0B4E  01A9               	clrf	??___flmul+1
  8722  0B4F  01AA               	clrf	??___flmul+2
  8723  0B50  01AB               	clrf	??___flmul+3
  8724  0B51  082B               	movf	??___flmul+3,w
  8725  0B52  00B1               	movwf	___flmul@grs+3
  8726  0B53  082A               	movf	??___flmul+2,w
  8727  0B54  00B0               	movwf	___flmul@grs+2
  8728  0B55  0829               	movf	??___flmul+1,w
  8729  0B56  00AF               	movwf	___flmul@grs+1
  8730  0B57  0828               	movf	??___flmul,w
  8731  0B58  00AE               	movwf	___flmul@grs
  8732  0B59                     l3279:
  8733  0B59  0839               	movf	___flmul@temp+1,w
  8734  0B5A  00A8               	movwf	??___flmul
  8735  0B5B  01A9               	clrf	??___flmul+1
  8736  0B5C  01AA               	clrf	??___flmul+2
  8737  0B5D  01AB               	clrf	??___flmul+3
  8738  0B5E  082B               	movf	??___flmul+3,w
  8739  0B5F  00B7               	movwf	___flmul@prod+3
  8740  0B60  082A               	movf	??___flmul+2,w
  8741  0B61  00B6               	movwf	___flmul@prod+2
  8742  0B62  0829               	movf	??___flmul+1,w
  8743  0B63  00B5               	movwf	___flmul@prod+1
  8744  0B64  0828               	movf	??___flmul,w
  8745  0B65  00B4               	movwf	___flmul@prod
  8746  0B66  0821               	movf	___flmul@b+1,w
  8747  0B67  00A8               	movwf	??___flmul
  8748  0B68  0828               	movf	??___flmul,w
  8749  0B69  00F0               	movwf	__Umul8_16@multiplicand
  8750  0B6A  0825               	movf	___flmul@a+1,w
  8751  0B6B  319E  26FD  318A   	fcall	__Umul8_16
  8752  0B6E  0871               	movf	?__Umul8_16+1,w
  8753  0B6F  0020               	movlb	0	; select bank0
  8754  0B70  00B9               	movwf	___flmul@temp+1
  8755  0B71  0870               	movf	?__Umul8_16,w
  8756  0B72  00B8               	movwf	___flmul@temp
  8757  0B73                     l3281:
  8758  0B73  0838               	movf	___flmul@temp,w
  8759  0B74  00A8               	movwf	??___flmul
  8760  0B75  01A9               	clrf	??___flmul+1
  8761  0B76  01AA               	clrf	??___flmul+2
  8762  0B77  01AB               	clrf	??___flmul+3
  8763  0B78  0828               	movf	??___flmul,w
  8764  0B79  07AE               	addwf	___flmul@grs,f
  8765  0B7A  0829               	movf	??___flmul+1,w
  8766  0B7B  3DAF               	addwfc	___flmul@grs+1,f
  8767  0B7C  082A               	movf	??___flmul+2,w
  8768  0B7D  3DB0               	addwfc	___flmul@grs+2,f
  8769  0B7E  082B               	movf	??___flmul+3,w
  8770  0B7F  3DB1               	addwfc	___flmul@grs+3,f
  8771  0B80                     l3283:
  8772  0B80  0839               	movf	___flmul@temp+1,w
  8773  0B81  00A8               	movwf	??___flmul
  8774  0B82  01A9               	clrf	??___flmul+1
  8775  0B83  01AA               	clrf	??___flmul+2
  8776  0B84  01AB               	clrf	??___flmul+3
  8777  0B85  0828               	movf	??___flmul,w
  8778  0B86  07B4               	addwf	___flmul@prod,f
  8779  0B87  0829               	movf	??___flmul+1,w
  8780  0B88  3DB5               	addwfc	___flmul@prod+1,f
  8781  0B89  082A               	movf	??___flmul+2,w
  8782  0B8A  3DB6               	addwfc	___flmul@prod+2,f
  8783  0B8B  082B               	movf	??___flmul+3,w
  8784  0B8C  3DB7               	addwfc	___flmul@prod+3,f
  8785  0B8D  0822               	movf	___flmul@b+2,w
  8786  0B8E  00A8               	movwf	??___flmul
  8787  0B8F  0828               	movf	??___flmul,w
  8788  0B90  00F0               	movwf	__Umul8_16@multiplicand
  8789  0B91  0824               	movf	___flmul@a,w
  8790  0B92  319E  26FD  318A   	fcall	__Umul8_16
  8791  0B95  0871               	movf	?__Umul8_16+1,w
  8792  0B96  0020               	movlb	0	; select bank0
  8793  0B97  00B9               	movwf	___flmul@temp+1
  8794  0B98  0870               	movf	?__Umul8_16,w
  8795  0B99  00B8               	movwf	___flmul@temp
  8796  0B9A                     l3285:
  8797  0B9A  0838               	movf	___flmul@temp,w
  8798  0B9B  00A8               	movwf	??___flmul
  8799  0B9C  01A9               	clrf	??___flmul+1
  8800  0B9D  01AA               	clrf	??___flmul+2
  8801  0B9E  01AB               	clrf	??___flmul+3
  8802  0B9F  0828               	movf	??___flmul,w
  8803  0BA0  07AE               	addwf	___flmul@grs,f
  8804  0BA1  0829               	movf	??___flmul+1,w
  8805  0BA2  3DAF               	addwfc	___flmul@grs+1,f
  8806  0BA3  082A               	movf	??___flmul+2,w
  8807  0BA4  3DB0               	addwfc	___flmul@grs+2,f
  8808  0BA5  082B               	movf	??___flmul+3,w
  8809  0BA6  3DB1               	addwfc	___flmul@grs+3,f
  8810  0BA7                     l3287:
  8811  0BA7  0839               	movf	___flmul@temp+1,w
  8812  0BA8  00A8               	movwf	??___flmul
  8813  0BA9  01A9               	clrf	??___flmul+1
  8814  0BAA  01AA               	clrf	??___flmul+2
  8815  0BAB  01AB               	clrf	??___flmul+3
  8816  0BAC  0828               	movf	??___flmul,w
  8817  0BAD  07B4               	addwf	___flmul@prod,f
  8818  0BAE  0829               	movf	??___flmul+1,w
  8819  0BAF  3DB5               	addwfc	___flmul@prod+1,f
  8820  0BB0  082A               	movf	??___flmul+2,w
  8821  0BB1  3DB6               	addwfc	___flmul@prod+2,f
  8822  0BB2  082B               	movf	??___flmul+3,w
  8823  0BB3  3DB7               	addwfc	___flmul@prod+3,f
  8824  0BB4                     l3289:
  8825  0BB4  3008               	movlw	8
  8826  0BB5                     u4145:
  8827  0BB5  35AE               	lslf	___flmul@grs,f
  8828  0BB6  0DAF               	rlf	___flmul@grs+1,f
  8829  0BB7  0DB0               	rlf	___flmul@grs+2,f
  8830  0BB8  0DB1               	rlf	___flmul@grs+3,f
  8831  0BB9  0B89               	decfsz	9,f
  8832  0BBA  2BB5               	goto	u4145
  8833  0BBB                     l3291:
  8834  0BBB  0821               	movf	___flmul@b+1,w
  8835  0BBC  00A8               	movwf	??___flmul
  8836  0BBD  0828               	movf	??___flmul,w
  8837  0BBE  00F0               	movwf	__Umul8_16@multiplicand
  8838  0BBF  0824               	movf	___flmul@a,w
  8839  0BC0  319E  26FD  318A   	fcall	__Umul8_16
  8840  0BC3  0871               	movf	?__Umul8_16+1,w
  8841  0BC4  0020               	movlb	0	; select bank0
  8842  0BC5  00B9               	movwf	___flmul@temp+1
  8843  0BC6  0870               	movf	?__Umul8_16,w
  8844  0BC7  00B8               	movwf	___flmul@temp
  8845  0BC8                     l3293:
  8846  0BC8  0838               	movf	___flmul@temp,w
  8847  0BC9  07AE               	addwf	___flmul@grs,f
  8848  0BCA  0839               	movf	___flmul@temp+1,w
  8849  0BCB  3DAF               	addwfc	___flmul@grs+1,f
  8850  0BCC  3000               	movlw	0
  8851  0BCD  3DB0               	addwfc	___flmul@grs+2,f
  8852  0BCE  3DB1               	addwfc	___flmul@grs+3,f
  8853  0BCF                     l3295:
  8854  0BCF  0820               	movf	___flmul@b,w
  8855  0BD0  00A8               	movwf	??___flmul
  8856  0BD1  0828               	movf	??___flmul,w
  8857  0BD2  00F0               	movwf	__Umul8_16@multiplicand
  8858  0BD3  0825               	movf	___flmul@a+1,w
  8859  0BD4  319E  26FD  318A   	fcall	__Umul8_16
  8860  0BD7  0871               	movf	?__Umul8_16+1,w
  8861  0BD8  0020               	movlb	0	; select bank0
  8862  0BD9  00B9               	movwf	___flmul@temp+1
  8863  0BDA  0870               	movf	?__Umul8_16,w
  8864  0BDB  00B8               	movwf	___flmul@temp
  8865  0BDC                     l3297:
  8866  0BDC  0838               	movf	___flmul@temp,w
  8867  0BDD  07AE               	addwf	___flmul@grs,f
  8868  0BDE  0839               	movf	___flmul@temp+1,w
  8869  0BDF  3DAF               	addwfc	___flmul@grs+1,f
  8870  0BE0  3000               	movlw	0
  8871  0BE1  3DB0               	addwfc	___flmul@grs+2,f
  8872  0BE2  3DB1               	addwfc	___flmul@grs+3,f
  8873  0BE3                     l3299:
  8874  0BE3  3008               	movlw	8
  8875  0BE4                     u4155:
  8876  0BE4  35AE               	lslf	___flmul@grs,f
  8877  0BE5  0DAF               	rlf	___flmul@grs+1,f
  8878  0BE6  0DB0               	rlf	___flmul@grs+2,f
  8879  0BE7  0DB1               	rlf	___flmul@grs+3,f
  8880  0BE8  0B89               	decfsz	9,f
  8881  0BE9  2BE4               	goto	u4155
  8882  0BEA  0820               	movf	___flmul@b,w
  8883  0BEB  00A8               	movwf	??___flmul
  8884  0BEC  0828               	movf	??___flmul,w
  8885  0BED  00F0               	movwf	__Umul8_16@multiplicand
  8886  0BEE  0824               	movf	___flmul@a,w
  8887  0BEF  319E  26FD  318A   	fcall	__Umul8_16
  8888  0BF2  0871               	movf	?__Umul8_16+1,w
  8889  0BF3  0020               	movlb	0	; select bank0
  8890  0BF4  00B9               	movwf	___flmul@temp+1
  8891  0BF5  0870               	movf	?__Umul8_16,w
  8892  0BF6  00B8               	movwf	___flmul@temp
  8893  0BF7                     l3301:
  8894  0BF7  0838               	movf	___flmul@temp,w
  8895  0BF8  07AE               	addwf	___flmul@grs,f
  8896  0BF9  0839               	movf	___flmul@temp+1,w
  8897  0BFA  3DAF               	addwfc	___flmul@grs+1,f
  8898  0BFB  3000               	movlw	0
  8899  0BFC  3DB0               	addwfc	___flmul@grs+2,f
  8900  0BFD  3DB1               	addwfc	___flmul@grs+3,f
  8901  0BFE                     l3303:
  8902  0BFE  0821               	movf	___flmul@b+1,w
  8903  0BFF  00A8               	movwf	??___flmul
  8904  0C00  0828               	movf	??___flmul,w
  8905  0C01  00F0               	movwf	__Umul8_16@multiplicand
  8906  0C02  0826               	movf	___flmul@a+2,w
  8907  0C03  319E  26FD  318A   	fcall	__Umul8_16
  8908  0C06  0871               	movf	?__Umul8_16+1,w
  8909  0C07  0020               	movlb	0	; select bank0
  8910  0C08  00B9               	movwf	___flmul@temp+1
  8911  0C09  0870               	movf	?__Umul8_16,w
  8912  0C0A  00B8               	movwf	___flmul@temp
  8913  0C0B  0838               	movf	___flmul@temp,w
  8914  0C0C  07B4               	addwf	___flmul@prod,f
  8915  0C0D  0839               	movf	___flmul@temp+1,w
  8916  0C0E  3DB5               	addwfc	___flmul@prod+1,f
  8917  0C0F  3000               	movlw	0
  8918  0C10  3DB6               	addwfc	___flmul@prod+2,f
  8919  0C11  3DB7               	addwfc	___flmul@prod+3,f
  8920  0C12                     l3305:
  8921  0C12  0822               	movf	___flmul@b+2,w
  8922  0C13  00A8               	movwf	??___flmul
  8923  0C14  0828               	movf	??___flmul,w
  8924  0C15  00F0               	movwf	__Umul8_16@multiplicand
  8925  0C16  0825               	movf	___flmul@a+1,w
  8926  0C17  319E  26FD  318A   	fcall	__Umul8_16
  8927  0C1A  0871               	movf	?__Umul8_16+1,w
  8928  0C1B  0020               	movlb	0	; select bank0
  8929  0C1C  00B9               	movwf	___flmul@temp+1
  8930  0C1D  0870               	movf	?__Umul8_16,w
  8931  0C1E  00B8               	movwf	___flmul@temp
  8932  0C1F                     l3307:
  8933  0C1F  0838               	movf	___flmul@temp,w
  8934  0C20  07B4               	addwf	___flmul@prod,f
  8935  0C21  0839               	movf	___flmul@temp+1,w
  8936  0C22  3DB5               	addwfc	___flmul@prod+1,f
  8937  0C23  3000               	movlw	0
  8938  0C24  3DB6               	addwfc	___flmul@prod+2,f
  8939  0C25  3DB7               	addwfc	___flmul@prod+3,f
  8940  0C26  0822               	movf	___flmul@b+2,w
  8941  0C27  00A8               	movwf	??___flmul
  8942  0C28  0828               	movf	??___flmul,w
  8943  0C29  00F0               	movwf	__Umul8_16@multiplicand
  8944  0C2A  0826               	movf	___flmul@a+2,w
  8945  0C2B  319E  26FD  318A   	fcall	__Umul8_16
  8946  0C2E  0871               	movf	?__Umul8_16+1,w
  8947  0C2F  0020               	movlb	0	; select bank0
  8948  0C30  00B9               	movwf	___flmul@temp+1
  8949  0C31  0870               	movf	?__Umul8_16,w
  8950  0C32  00B8               	movwf	___flmul@temp
  8951  0C33                     l3309:
  8952  0C33  0838               	movf	___flmul@temp,w
  8953  0C34  00A8               	movwf	??___flmul
  8954  0C35  0839               	movf	___flmul@temp+1,w
  8955  0C36  00A9               	movwf	??___flmul+1
  8956  0C37  01AA               	clrf	??___flmul+2
  8957  0C38  01AB               	clrf	??___flmul+3
  8958  0C39  3008               	movlw	8
  8959  0C3A                     u4165:
  8960  0C3A  35A8               	lslf	??___flmul,f
  8961  0C3B  0DA9               	rlf	??___flmul+1,f
  8962  0C3C  0DAA               	rlf	??___flmul+2,f
  8963  0C3D  0DAB               	rlf	??___flmul+3,f
  8964  0C3E                     u4160:
  8965  0C3E  0B89               	decfsz	9,f
  8966  0C3F  2C3A               	goto	u4165
  8967  0C40  0828               	movf	??___flmul,w
  8968  0C41  07B4               	addwf	___flmul@prod,f
  8969  0C42  0829               	movf	??___flmul+1,w
  8970  0C43  3DB5               	addwfc	___flmul@prod+1,f
  8971  0C44  082A               	movf	??___flmul+2,w
  8972  0C45  3DB6               	addwfc	___flmul@prod+2,f
  8973  0C46  082B               	movf	??___flmul+3,w
  8974  0C47  3DB7               	addwfc	___flmul@prod+3,f
  8975  0C48                     l3311:
  8976  0C48  082E               	movf	___flmul@grs,w
  8977  0C49  00A8               	movwf	??___flmul
  8978  0C4A  082F               	movf	___flmul@grs+1,w
  8979  0C4B  00A9               	movwf	??___flmul+1
  8980  0C4C  0830               	movf	___flmul@grs+2,w
  8981  0C4D  00AA               	movwf	??___flmul+2
  8982  0C4E  0831               	movf	___flmul@grs+3,w
  8983  0C4F  00AB               	movwf	??___flmul+3
  8984  0C50  3018               	movlw	24
  8985  0C51                     u4175:
  8986  0C51  36AB               	lsrf	??___flmul+3,f
  8987  0C52  0CAA               	rrf	??___flmul+2,f
  8988  0C53  0CA9               	rrf	??___flmul+1,f
  8989  0C54  0CA8               	rrf	??___flmul,f
  8990  0C55                     u4170:
  8991  0C55  0B89               	decfsz	9,f
  8992  0C56  2C51               	goto	u4175
  8993  0C57  0828               	movf	??___flmul,w
  8994  0C58  07B4               	addwf	___flmul@prod,f
  8995  0C59  0829               	movf	??___flmul+1,w
  8996  0C5A  3DB5               	addwfc	___flmul@prod+1,f
  8997  0C5B  082A               	movf	??___flmul+2,w
  8998  0C5C  3DB6               	addwfc	___flmul@prod+2,f
  8999  0C5D  082B               	movf	??___flmul+3,w
  9000  0C5E  3DB7               	addwfc	___flmul@prod+3,f
  9001  0C5F                     l3313:
  9002  0C5F  3008               	movlw	8
  9003  0C60                     u4185:
  9004  0C60  35AE               	lslf	___flmul@grs,f
  9005  0C61  0DAF               	rlf	___flmul@grs+1,f
  9006  0C62  0DB0               	rlf	___flmul@grs+2,f
  9007  0C63  0DB1               	rlf	___flmul@grs+3,f
  9008  0C64  0B89               	decfsz	9,f
  9009  0C65  2C60               	goto	u4185
  9010  0C66                     l3315:
  9011  0C66  0833               	movf	___flmul@bexp,w
  9012  0C67  0732               	addwf	___flmul@aexp,w
  9013  0C68  00A8               	movwf	??___flmul
  9014  0C69  01A9               	clrf	??___flmul+1
  9015  0C6A  0DA9               	rlf	??___flmul+1,f
  9016  0C6B  0828               	movf	??___flmul,w
  9017  0C6C  3E82               	addlw	130
  9018  0C6D  00B8               	movwf	___flmul@temp
  9019  0C6E  30FF               	movlw	255
  9020  0C6F  3D29               	addwfc	??___flmul+1,w
  9021  0C70  00B9               	movwf	___flmul@temp+1
  9022  0C71  2C89               	goto	l3327
  9023  0C72                     l3317:
  9024  0C72  3001               	movlw	1
  9025  0C73                     u4195:
  9026  0C73  35B4               	lslf	___flmul@prod,f
  9027  0C74  0DB5               	rlf	___flmul@prod+1,f
  9028  0C75  0DB6               	rlf	___flmul@prod+2,f
  9029  0C76  0DB7               	rlf	___flmul@prod+3,f
  9030  0C77  0B89               	decfsz	9,f
  9031  0C78  2C73               	goto	u4195
  9032  0C79                     l3319:
  9033  0C79  1FB1               	btfss	___flmul@grs+3,7
  9034  0C7A  2C7C               	goto	u4201
  9035  0C7B  2C7D               	goto	u4200
  9036  0C7C                     u4201:
  9037  0C7C  2C7E               	goto	l3323
  9038  0C7D                     u4200:
  9039  0C7D                     l3321:
  9040  0C7D  1434               	bsf	___flmul@prod,0
  9041  0C7E                     l3323:
  9042  0C7E  3001               	movlw	1
  9043  0C7F                     u4215:
  9044  0C7F  35AE               	lslf	___flmul@grs,f
  9045  0C80  0DAF               	rlf	___flmul@grs+1,f
  9046  0C81  0DB0               	rlf	___flmul@grs+2,f
  9047  0C82  0DB1               	rlf	___flmul@grs+3,f
  9048  0C83  0B89               	decfsz	9,f
  9049  0C84  2C7F               	goto	u4215
  9050  0C85                     l3325:
  9051  0C85  30FF               	movlw	255
  9052  0C86  07B8               	addwf	___flmul@temp,f
  9053  0C87  30FF               	movlw	255
  9054  0C88  3DB9               	addwfc	___flmul@temp+1,f
  9055  0C89                     l3327:
  9056  0C89  1FB6               	btfss	___flmul@prod+2,7
  9057  0C8A  2C8C               	goto	u4221
  9058  0C8B  2C8D               	goto	u4220
  9059  0C8C                     u4221:
  9060  0C8C  2C72               	goto	l3317
  9061  0C8D                     u4220:
  9062  0C8D                     l3329:
  9063  0C8D  01B2               	clrf	___flmul@aexp
  9064  0C8E                     l3331:
  9065  0C8E  1FB1               	btfss	___flmul@grs+3,7
  9066  0C8F  2C91               	goto	u4231
  9067  0C90  2C92               	goto	u4230
  9068  0C91                     u4231:
  9069  0C91  2CAE               	goto	l3339
  9070  0C92                     u4230:
  9071  0C92                     l3333:
  9072  0C92  30FF               	movlw	255
  9073  0C93  052E               	andwf	___flmul@grs,w
  9074  0C94  00A8               	movwf	??___flmul
  9075  0C95  30FF               	movlw	255
  9076  0C96  052F               	andwf	___flmul@grs+1,w
  9077  0C97  00A9               	movwf	??___flmul+1
  9078  0C98  30FF               	movlw	255
  9079  0C99  0530               	andwf	___flmul@grs+2,w
  9080  0C9A  00AA               	movwf	??___flmul+2
  9081  0C9B  307F               	movlw	127
  9082  0C9C  0531               	andwf	___flmul@grs+3,w
  9083  0C9D  00AB               	movwf	??___flmul+3
  9084  0C9E  082B               	movf	??___flmul+3,w
  9085  0C9F  042A               	iorwf	??___flmul+2,w
  9086  0CA0  0429               	iorwf	??___flmul+1,w
  9087  0CA1  0428               	iorwf	??___flmul,w
  9088  0CA2  1903               	skipnz
  9089  0CA3  2CA5               	goto	u4241
  9090  0CA4  2CA6               	goto	u4240
  9091  0CA5                     u4241:
  9092  0CA5  2CA9               	goto	l675
  9093  0CA6                     u4240:
  9094  0CA6                     l3335:
  9095  0CA6  01B2               	clrf	___flmul@aexp
  9096  0CA7  0AB2               	incf	___flmul@aexp,f
  9097  0CA8  2CAE               	goto	l3339
  9098  0CA9                     l675:
  9099  0CA9  1C34               	btfss	___flmul@prod,0
  9100  0CAA  2CAC               	goto	u4251
  9101  0CAB  2CAD               	goto	u4250
  9102  0CAC                     u4251:
  9103  0CAC  2CAE               	goto	l3339
  9104  0CAD                     u4250:
  9105  0CAD  2CA6               	goto	l3335
  9106  0CAE                     l3339:
  9107  0CAE  0832               	movf	___flmul@aexp,w
  9108  0CAF  1903               	btfsc	3,2
  9109  0CB0  2CB2               	goto	u4261
  9110  0CB1  2CB3               	goto	u4260
  9111  0CB2                     u4261:
  9112  0CB2  2CDB               	goto	l3349
  9113  0CB3                     u4260:
  9114  0CB3                     l3341:
  9115  0CB3  3001               	movlw	1
  9116  0CB4  07B4               	addwf	___flmul@prod,f
  9117  0CB5  3000               	movlw	0
  9118  0CB6  3DB5               	addwfc	___flmul@prod+1,f
  9119  0CB7  3000               	movlw	0
  9120  0CB8  3DB6               	addwfc	___flmul@prod+2,f
  9121  0CB9  3000               	movlw	0
  9122  0CBA  3DB7               	addwfc	___flmul@prod+3,f
  9123  0CBB                     l3343:
  9124  0CBB  1C37               	btfss	___flmul@prod+3,0
  9125  0CBC  2CBE               	goto	u4271
  9126  0CBD  2CBF               	goto	u4270
  9127  0CBE                     u4271:
  9128  0CBE  2CDB               	goto	l3349
  9129  0CBF                     u4270:
  9130  0CBF                     l3345:
  9131  0CBF  0834               	movf	___flmul@prod,w
  9132  0CC0  00A8               	movwf	??___flmul
  9133  0CC1  0835               	movf	___flmul@prod+1,w
  9134  0CC2  00A9               	movwf	??___flmul+1
  9135  0CC3  0836               	movf	___flmul@prod+2,w
  9136  0CC4  00AA               	movwf	??___flmul+2
  9137  0CC5  0837               	movf	___flmul@prod+3,w
  9138  0CC6  00AB               	movwf	??___flmul+3
  9139  0CC7  3001               	movlw	1
  9140  0CC8  00AC               	movwf	??___flmul+4
  9141  0CC9                     u4285:
  9142  0CC9  37AB               	asrf	??___flmul+3,f
  9143  0CCA  0CAA               	rrf	??___flmul+2,f
  9144  0CCB  0CA9               	rrf	??___flmul+1,f
  9145  0CCC  0CA8               	rrf	??___flmul,f
  9146  0CCD                     u4280:
  9147  0CCD  0BAC               	decfsz	??___flmul+4,f
  9148  0CCE  2CC9               	goto	u4285
  9149  0CCF  082B               	movf	??___flmul+3,w
  9150  0CD0  00B7               	movwf	___flmul@prod+3
  9151  0CD1  082A               	movf	??___flmul+2,w
  9152  0CD2  00B6               	movwf	___flmul@prod+2
  9153  0CD3  0829               	movf	??___flmul+1,w
  9154  0CD4  00B5               	movwf	___flmul@prod+1
  9155  0CD5  0828               	movf	??___flmul,w
  9156  0CD6  00B4               	movwf	___flmul@prod
  9157  0CD7                     l3347:
  9158  0CD7  3001               	movlw	1
  9159  0CD8  07B8               	addwf	___flmul@temp,f
  9160  0CD9  3000               	movlw	0
  9161  0CDA  3DB9               	addwfc	___flmul@temp+1,f
  9162  0CDB                     l3349:
  9163  0CDB  0839               	movf	___flmul@temp+1,w
  9164  0CDC  3A80               	xorlw	128
  9165  0CDD  00A8               	movwf	??___flmul
  9166  0CDE  3080               	movlw	128
  9167  0CDF  0228               	subwf	??___flmul,w
  9168  0CE0  1D03               	skipz
  9169  0CE1  2CE4               	goto	u4295
  9170  0CE2  30FF               	movlw	255
  9171  0CE3  0238               	subwf	___flmul@temp,w
  9172  0CE4                     u4295:
  9173  0CE4  1C03               	skipc
  9174  0CE5  2CE7               	goto	u4291
  9175  0CE6  2CE8               	goto	u4290
  9176  0CE7                     u4291:
  9177  0CE7  2CF2               	goto	l3353
  9178  0CE8                     u4290:
  9179  0CE8                     l3351:
  9180  0CE8  307F               	movlw	127
  9181  0CE9  0020               	movlb	0	; select bank0
  9182  0CEA  00B7               	movwf	___flmul@prod+3
  9183  0CEB  3080               	movlw	128
  9184  0CEC  00B6               	movwf	___flmul@prod+2
  9185  0CED  3000               	movlw	0
  9186  0CEE  00B5               	movwf	___flmul@prod+1
  9187  0CEF  3000               	movlw	0
  9188  0CF0  00B4               	movwf	___flmul@prod
  9189  0CF1  2D21               	goto	l681
  9190  0CF2                     l3353:
  9191  0CF2  0020               	movlb	0	; select bank0
  9192  0CF3  0839               	movf	___flmul@temp+1,w
  9193  0CF4  3A80               	xorlw	128
  9194  0CF5  00A8               	movwf	??___flmul
  9195  0CF6  3080               	movlw	128
  9196  0CF7  0228               	subwf	??___flmul,w
  9197  0CF8  1D03               	skipz
  9198  0CF9  2CFC               	goto	u4305
  9199  0CFA  3001               	movlw	1
  9200  0CFB  0238               	subwf	___flmul@temp,w
  9201  0CFC                     u4305:
  9202  0CFC  1803               	skipnc
  9203  0CFD  2CFF               	goto	u4301
  9204  0CFE  2D00               	goto	u4300
  9205  0CFF                     u4301:
  9206  0CFF  2D0B               	goto	l3359
  9207  0D00                     u4300:
  9208  0D00                     l3355:
  9209  0D00  3000               	movlw	0
  9210  0D01  0020               	movlb	0	; select bank0
  9211  0D02  00B7               	movwf	___flmul@prod+3
  9212  0D03  3000               	movlw	0
  9213  0D04  00B6               	movwf	___flmul@prod+2
  9214  0D05  3000               	movlw	0
  9215  0D06  00B5               	movwf	___flmul@prod+1
  9216  0D07  3000               	movlw	0
  9217  0D08  00B4               	movwf	___flmul@prod
  9218  0D09                     l3357:
  9219  0D09  01AD               	clrf	___flmul@sign
  9220  0D0A  2D21               	goto	l681
  9221  0D0B                     l3359:
  9222  0D0B  0020               	movlb	0	; select bank0
  9223  0D0C  0838               	movf	___flmul@temp,w
  9224  0D0D  00A8               	movwf	??___flmul
  9225  0D0E  0828               	movf	??___flmul,w
  9226  0D0F  00B3               	movwf	___flmul@bexp
  9227  0D10  30FF               	movlw	255
  9228  0D11  05B4               	andwf	___flmul@prod,f
  9229  0D12  30FF               	movlw	255
  9230  0D13  05B5               	andwf	___flmul@prod+1,f
  9231  0D14  307F               	movlw	127
  9232  0D15  05B6               	andwf	___flmul@prod+2,f
  9233  0D16  3000               	movlw	0
  9234  0D17  05B7               	andwf	___flmul@prod+3,f
  9235  0D18                     l3361:
  9236  0D18  1C33               	btfss	___flmul@bexp,0
  9237  0D19  2D1B               	goto	u4311
  9238  0D1A  2D1C               	goto	u4310
  9239  0D1B                     u4311:
  9240  0D1B  2D1D               	goto	l3365
  9241  0D1C                     u4310:
  9242  0D1C                     l3363:
  9243  0D1C  17B6               	bsf	___flmul@prod+2,7
  9244  0D1D                     l3365:
  9245  0D1D  3633               	lsrf	___flmul@bexp,w
  9246  0D1E  00A8               	movwf	??___flmul
  9247  0D1F  0828               	movf	??___flmul,w
  9248  0D20  00B7               	movwf	___flmul@prod+3
  9249  0D21                     l681:
  9250  0D21  082D               	movf	___flmul@sign,w
  9251  0D22  00A8               	movwf	??___flmul
  9252  0D23  0828               	movf	??___flmul,w
  9253  0D24  04B7               	iorwf	___flmul@prod+3,f
  9254  0D25                     l3367:
  9255  0D25  0837               	movf	___flmul@prod+3,w
  9256  0D26  00A3               	movwf	?___flmul+3
  9257  0D27  0836               	movf	___flmul@prod+2,w
  9258  0D28  00A2               	movwf	?___flmul+2
  9259  0D29  0835               	movf	___flmul@prod+1,w
  9260  0D2A  00A1               	movwf	?___flmul+1
  9261  0D2B  0834               	movf	___flmul@prod,w
  9262  0D2C  00A0               	movwf	?___flmul
  9263  0D2D                     l669:
  9264  0D2D  0008               	return
  9265  0D2E                     __end_of___flmul:
  9266                           
  9267                           	psect	text21
  9268  1EFD                     __ptext21:	
  9269 ;; *************** function __Umul8_16 *****************
  9270 ;; Defined at:
  9271 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul8_16.c"
  9272 ;; Parameters:    Size  Location     Type
  9273 ;;  multiplier      1    wreg     unsigned char 
  9274 ;;  multiplicand    1    0[COMMON] unsigned char 
  9275 ;; Auto vars:     Size  Location     Type
  9276 ;;  multiplier      1    8[COMMON] unsigned char 
  9277 ;;  word_mpld       2    6[COMMON] unsigned int 
  9278 ;;  product         2    4[COMMON] unsigned int 
  9279 ;; Return value:  Size  Location     Type
  9280 ;;                  2    0[COMMON] unsigned int 
  9281 ;; Registers used:
  9282 ;;		wreg, status,2, status,0
  9283 ;; Tracked objects:
  9284 ;;		On entry : 0/0
  9285 ;;		On exit  : 0/0
  9286 ;;		Unchanged: 0/0
  9287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9288 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9289 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9290 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9291 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9292 ;;Total ram usage:        9 bytes
  9293 ;; Hardware stack levels used: 1
  9294 ;; This function calls:
  9295 ;;		Nothing
  9296 ;; This function is called by:
  9297 ;;		___flmul
  9298 ;; This function uses a non-reentrant model
  9299 ;;
  9300                           
  9301  1EFD                     __Umul8_16:	
  9302                           ;psect for function __Umul8_16
  9303                           
  9304                           
  9305                           ;incstack = 0
  9306                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9307                           ;__Umul8_16@multiplier stored from wreg
  9308  1EFD  00F8               	movwf	__Umul8_16@multiplier
  9309  1EFE                     l2877:
  9310  1EFE  01F4               	clrf	__Umul8_16@product
  9311  1EFF  01F5               	clrf	__Umul8_16@product+1
  9312  1F00                     l2879:
  9313  1F00  0870               	movf	__Umul8_16@multiplicand,w
  9314  1F01  00F2               	movwf	??__Umul8_16
  9315  1F02  01F3               	clrf	??__Umul8_16+1
  9316  1F03  0872               	movf	??__Umul8_16,w
  9317  1F04  00F6               	movwf	__Umul8_16@word_mpld
  9318  1F05  0873               	movf	??__Umul8_16+1,w
  9319  1F06  00F7               	movwf	__Umul8_16@word_mpld+1
  9320  1F07                     l2881:
  9321  1F07  1C78               	btfss	__Umul8_16@multiplier,0
  9322  1F08  2F0A               	goto	u3281
  9323  1F09  2F0B               	goto	u3280
  9324  1F0A                     u3281:
  9325  1F0A  2F0F               	goto	l688
  9326  1F0B                     u3280:
  9327  1F0B                     l2883:
  9328  1F0B  0876               	movf	__Umul8_16@word_mpld,w
  9329  1F0C  07F4               	addwf	__Umul8_16@product,f
  9330  1F0D  0877               	movf	__Umul8_16@word_mpld+1,w
  9331  1F0E  3DF5               	addwfc	__Umul8_16@product+1,f
  9332  1F0F                     l688:
  9333  1F0F  3001               	movlw	1
  9334  1F10                     u3295:
  9335  1F10  35F6               	lslf	__Umul8_16@word_mpld,f
  9336  1F11  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9337  1F12  0B89               	decfsz	9,f
  9338  1F13  2F10               	goto	u3295
  9339  1F14  1003               	clrc
  9340  1F15  0CF8               	rrf	__Umul8_16@multiplier,f
  9341  1F16                     l2885:
  9342  1F16  0878               	movf	__Umul8_16@multiplier,w
  9343  1F17  1D03               	btfss	3,2
  9344  1F18  2F1A               	goto	u3301
  9345  1F19  2F1B               	goto	u3300
  9346  1F1A                     u3301:
  9347  1F1A  2F07               	goto	l2881
  9348  1F1B                     u3300:
  9349  1F1B                     l2887:
  9350  1F1B  0875               	movf	__Umul8_16@product+1,w
  9351  1F1C  00F1               	movwf	?__Umul8_16+1
  9352  1F1D  0874               	movf	__Umul8_16@product,w
  9353  1F1E  00F0               	movwf	?__Umul8_16
  9354  1F1F                     l690:
  9355  1F1F  0008               	return
  9356  1F20                     __end_of__Umul8_16:
  9357                           
  9358                           	psect	text22
  9359  1376                     __ptext22:	
  9360 ;; *************** function ___flge *****************
  9361 ;; Defined at:
  9362 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  9363 ;; Parameters:    Size  Location     Type
  9364 ;;  ff1             4   26[BANK0 ] unsigned int 
  9365 ;;  ff2             4   30[BANK0 ] unsigned int 
  9366 ;; Auto vars:     Size  Location     Type
  9367 ;;		None
  9368 ;; Return value:  Size  Location     Type
  9369 ;;		None               void
  9370 ;; Registers used:
  9371 ;;		wreg, status,2, status,0
  9372 ;; Tracked objects:
  9373 ;;		On entry : 0/0
  9374 ;;		On exit  : 0/0
  9375 ;;		Unchanged: 0/0
  9376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9377 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9379 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9380 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9381 ;;Total ram usage:       12 bytes
  9382 ;; Hardware stack levels used: 1
  9383 ;; This function calls:
  9384 ;;		Nothing
  9385 ;; This function is called by:
  9386 ;;		_efgtoa
  9387 ;; This function uses a non-reentrant model
  9388 ;;
  9389                           
  9390  1376                     ___flge:	
  9391                           ;psect for function ___flge
  9392                           
  9393  1376                     l3021:	
  9394                           ;incstack = 0
  9395                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9396                           
  9397  1376  3000               	movlw	0
  9398  1377  0020               	movlb	0	; select bank0
  9399  1378  053A               	andwf	___flge@ff1,w
  9400  1379  00C2               	movwf	??___flge
  9401  137A  3000               	movlw	0
  9402  137B  053B               	andwf	___flge@ff1+1,w
  9403  137C  00C3               	movwf	??___flge+1
  9404  137D  3080               	movlw	128
  9405  137E  053C               	andwf	___flge@ff1+2,w
  9406  137F  00C4               	movwf	??___flge+2
  9407  1380  307F               	movlw	127
  9408  1381  053D               	andwf	___flge@ff1+3,w
  9409  1382  00C5               	movwf	??___flge+3
  9410  1383  0845               	movf	??___flge+3,w
  9411  1384  0444               	iorwf	??___flge+2,w
  9412  1385  0443               	iorwf	??___flge+1,w
  9413  1386  0442               	iorwf	??___flge,w
  9414  1387  1D03               	skipz
  9415  1388  2B8A               	goto	u3611
  9416  1389  2B8B               	goto	u3610
  9417  138A                     u3611:
  9418  138A  2B93               	goto	l450
  9419  138B                     u3610:
  9420  138B                     l3023:
  9421  138B  3000               	movlw	0
  9422  138C  00BD               	movwf	___flge@ff1+3
  9423  138D  3000               	movlw	0
  9424  138E  00BC               	movwf	___flge@ff1+2
  9425  138F  3000               	movlw	0
  9426  1390  00BB               	movwf	___flge@ff1+1
  9427  1391  3000               	movlw	0
  9428  1392  00BA               	movwf	___flge@ff1
  9429  1393                     l450:
  9430  1393  3000               	movlw	0
  9431  1394  053E               	andwf	___flge@ff2,w
  9432  1395  00C2               	movwf	??___flge
  9433  1396  3000               	movlw	0
  9434  1397  053F               	andwf	___flge@ff2+1,w
  9435  1398  00C3               	movwf	??___flge+1
  9436  1399  3080               	movlw	128
  9437  139A  0540               	andwf	___flge@ff2+2,w
  9438  139B  00C4               	movwf	??___flge+2
  9439  139C  307F               	movlw	127
  9440  139D  0541               	andwf	___flge@ff2+3,w
  9441  139E  00C5               	movwf	??___flge+3
  9442  139F  0845               	movf	??___flge+3,w
  9443  13A0  0444               	iorwf	??___flge+2,w
  9444  13A1  0443               	iorwf	??___flge+1,w
  9445  13A2  0442               	iorwf	??___flge,w
  9446  13A3  1D03               	skipz
  9447  13A4  2BA6               	goto	u3621
  9448  13A5  2BA7               	goto	u3620
  9449  13A6                     u3621:
  9450  13A6  2BAF               	goto	l3027
  9451  13A7                     u3620:
  9452  13A7                     l3025:
  9453  13A7  3000               	movlw	0
  9454  13A8  00C1               	movwf	___flge@ff2+3
  9455  13A9  3000               	movlw	0
  9456  13AA  00C0               	movwf	___flge@ff2+2
  9457  13AB  3000               	movlw	0
  9458  13AC  00BF               	movwf	___flge@ff2+1
  9459  13AD  3000               	movlw	0
  9460  13AE  00BE               	movwf	___flge@ff2
  9461  13AF                     l3027:
  9462  13AF  1FBD               	btfss	___flge@ff1+3,7
  9463  13B0  2BB2               	goto	u3631
  9464  13B1  2BB3               	goto	u3630
  9465  13B2                     u3631:
  9466  13B2  2BCB               	goto	l3031
  9467  13B3                     u3630:
  9468  13B3                     l3029:
  9469  13B3  3000               	movlw	0
  9470  13B4  00C2               	movwf	??___flge
  9471  13B5  3000               	movlw	0
  9472  13B6  00C3               	movwf	??___flge+1
  9473  13B7  3000               	movlw	0
  9474  13B8  00C4               	movwf	??___flge+2
  9475  13B9  3080               	movlw	128
  9476  13BA  00C5               	movwf	??___flge+3
  9477  13BB  083A               	movf	___flge@ff1,w
  9478  13BC  02C2               	subwf	??___flge,f
  9479  13BD  083B               	movf	___flge@ff1+1,w
  9480  13BE  3BC3               	subwfb	??___flge+1,f
  9481  13BF  083C               	movf	___flge@ff1+2,w
  9482  13C0  3BC4               	subwfb	??___flge+2,f
  9483  13C1  083D               	movf	___flge@ff1+3,w
  9484  13C2  3BC5               	subwfb	??___flge+3,f
  9485  13C3  0845               	movf	??___flge+3,w
  9486  13C4  00BD               	movwf	___flge@ff1+3
  9487  13C5  0844               	movf	??___flge+2,w
  9488  13C6  00BC               	movwf	___flge@ff1+2
  9489  13C7  0843               	movf	??___flge+1,w
  9490  13C8  00BB               	movwf	___flge@ff1+1
  9491  13C9  0842               	movf	??___flge,w
  9492  13CA  00BA               	movwf	___flge@ff1
  9493  13CB                     l3031:
  9494  13CB  1FC1               	btfss	___flge@ff2+3,7
  9495  13CC  2BCE               	goto	u3641
  9496  13CD  2BCF               	goto	u3640
  9497  13CE                     u3641:
  9498  13CE  2BE7               	goto	l453
  9499  13CF                     u3640:
  9500  13CF                     l3033:
  9501  13CF  3000               	movlw	0
  9502  13D0  00C2               	movwf	??___flge
  9503  13D1  3000               	movlw	0
  9504  13D2  00C3               	movwf	??___flge+1
  9505  13D3  3000               	movlw	0
  9506  13D4  00C4               	movwf	??___flge+2
  9507  13D5  3080               	movlw	128
  9508  13D6  00C5               	movwf	??___flge+3
  9509  13D7  083E               	movf	___flge@ff2,w
  9510  13D8  02C2               	subwf	??___flge,f
  9511  13D9  083F               	movf	___flge@ff2+1,w
  9512  13DA  3BC3               	subwfb	??___flge+1,f
  9513  13DB  0840               	movf	___flge@ff2+2,w
  9514  13DC  3BC4               	subwfb	??___flge+2,f
  9515  13DD  0841               	movf	___flge@ff2+3,w
  9516  13DE  3BC5               	subwfb	??___flge+3,f
  9517  13DF  0845               	movf	??___flge+3,w
  9518  13E0  00C1               	movwf	___flge@ff2+3
  9519  13E1  0844               	movf	??___flge+2,w
  9520  13E2  00C0               	movwf	___flge@ff2+2
  9521  13E3  0843               	movf	??___flge+1,w
  9522  13E4  00BF               	movwf	___flge@ff2+1
  9523  13E5  0842               	movf	??___flge,w
  9524  13E6  00BE               	movwf	___flge@ff2
  9525  13E7                     l453:
  9526  13E7  3080               	movlw	128
  9527  13E8  06BD               	xorwf	___flge@ff1+3,f
  9528  13E9  3080               	movlw	128
  9529  13EA  06C1               	xorwf	___flge@ff2+3,f
  9530  13EB  0841               	movf	___flge@ff2+3,w
  9531  13EC  023D               	subwf	___flge@ff1+3,w
  9532  13ED  1D03               	skipz
  9533  13EE  2BF9               	goto	u3655
  9534  13EF  0840               	movf	___flge@ff2+2,w
  9535  13F0  023C               	subwf	___flge@ff1+2,w
  9536  13F1  1D03               	skipz
  9537  13F2  2BF9               	goto	u3655
  9538  13F3  083F               	movf	___flge@ff2+1,w
  9539  13F4  023B               	subwf	___flge@ff1+1,w
  9540  13F5  1D03               	skipz
  9541  13F6  2BF9               	goto	u3655
  9542  13F7  083E               	movf	___flge@ff2,w
  9543  13F8  023A               	subwf	___flge@ff1,w
  9544  13F9                     u3655:
  9545  13F9  1803               	skipnc
  9546  13FA  2BFC               	goto	u3651
  9547  13FB  2BFD               	goto	u3650
  9548  13FC                     u3651:
  9549  13FC  2BFF               	goto	l3037
  9550  13FD                     u3650:
  9551  13FD                     l3035:
  9552  13FD  1003               	clrc
  9553  13FE  2C00               	goto	l458
  9554  13FF                     l3037:
  9555  13FF  1403               	setc
  9556  1400                     l458:
  9557  1400  0008               	return
  9558  1401                     __end_of___flge:
  9559                           
  9560                           	psect	text23
  9561  102F                     __ptext23:	
  9562 ;; *************** function ___fleq *****************
  9563 ;; Defined at:
  9564 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  9565 ;; Parameters:    Size  Location     Type
  9566 ;;  ff1             4    0[COMMON] unsigned int 
  9567 ;;  ff2             4    4[COMMON] unsigned int 
  9568 ;; Auto vars:     Size  Location     Type
  9569 ;;		None
  9570 ;; Return value:  Size  Location     Type
  9571 ;;		None               void
  9572 ;; Registers used:
  9573 ;;		wreg, status,2, status,0
  9574 ;; Tracked objects:
  9575 ;;		On entry : 0/0
  9576 ;;		On exit  : 0/0
  9577 ;;		Unchanged: 0/0
  9578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9579 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9581 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9582 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9583 ;;Total ram usage:       12 bytes
  9584 ;; Hardware stack levels used: 1
  9585 ;; This function calls:
  9586 ;;		Nothing
  9587 ;; This function is called by:
  9588 ;;		_efgtoa
  9589 ;; This function uses a non-reentrant model
  9590 ;;
  9591                           
  9592  102F                     ___fleq:	
  9593                           ;psect for function ___fleq
  9594                           
  9595  102F                     l3009:	
  9596                           ;incstack = 0
  9597                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9598                           
  9599  102F  3000               	movlw	0
  9600  1030  0570               	andwf	___fleq@ff1,w
  9601  1031  00F8               	movwf	??___fleq
  9602  1032  3000               	movlw	0
  9603  1033  0571               	andwf	___fleq@ff1+1,w
  9604  1034  00F9               	movwf	??___fleq+1
  9605  1035  3080               	movlw	128
  9606  1036  0572               	andwf	___fleq@ff1+2,w
  9607  1037  00FA               	movwf	??___fleq+2
  9608  1038  307F               	movlw	127
  9609  1039  0573               	andwf	___fleq@ff1+3,w
  9610  103A  00FB               	movwf	??___fleq+3
  9611  103B  087B               	movf	??___fleq+3,w
  9612  103C  047A               	iorwf	??___fleq+2,w
  9613  103D  0479               	iorwf	??___fleq+1,w
  9614  103E  0478               	iorwf	??___fleq,w
  9615  103F  1D03               	skipz
  9616  1040  2842               	goto	u3581
  9617  1041  2843               	goto	u3580
  9618  1042                     u3581:
  9619  1042  284B               	goto	l441
  9620  1043                     u3580:
  9621  1043                     l3011:
  9622  1043  3000               	movlw	0
  9623  1044  00F3               	movwf	___fleq@ff1+3
  9624  1045  3000               	movlw	0
  9625  1046  00F2               	movwf	___fleq@ff1+2
  9626  1047  3000               	movlw	0
  9627  1048  00F1               	movwf	___fleq@ff1+1
  9628  1049  3000               	movlw	0
  9629  104A  00F0               	movwf	___fleq@ff1
  9630  104B                     l441:
  9631  104B  3000               	movlw	0
  9632  104C  0574               	andwf	___fleq@ff2,w
  9633  104D  00F8               	movwf	??___fleq
  9634  104E  3000               	movlw	0
  9635  104F  0575               	andwf	___fleq@ff2+1,w
  9636  1050  00F9               	movwf	??___fleq+1
  9637  1051  3080               	movlw	128
  9638  1052  0576               	andwf	___fleq@ff2+2,w
  9639  1053  00FA               	movwf	??___fleq+2
  9640  1054  307F               	movlw	127
  9641  1055  0577               	andwf	___fleq@ff2+3,w
  9642  1056  00FB               	movwf	??___fleq+3
  9643  1057  087B               	movf	??___fleq+3,w
  9644  1058  047A               	iorwf	??___fleq+2,w
  9645  1059  0479               	iorwf	??___fleq+1,w
  9646  105A  0478               	iorwf	??___fleq,w
  9647  105B  1D03               	skipz
  9648  105C  285E               	goto	u3591
  9649  105D  285F               	goto	u3590
  9650  105E                     u3591:
  9651  105E  2867               	goto	l442
  9652  105F                     u3590:
  9653  105F                     l3013:
  9654  105F  3000               	movlw	0
  9655  1060  00F7               	movwf	___fleq@ff2+3
  9656  1061  3000               	movlw	0
  9657  1062  00F6               	movwf	___fleq@ff2+2
  9658  1063  3000               	movlw	0
  9659  1064  00F5               	movwf	___fleq@ff2+1
  9660  1065  3000               	movlw	0
  9661  1066  00F4               	movwf	___fleq@ff2
  9662  1067                     l442:
  9663  1067  0877               	movf	___fleq@ff2+3,w
  9664  1068  0673               	xorwf	___fleq@ff1+3,w
  9665  1069  1D03               	skipz
  9666  106A  2875               	goto	u3605
  9667  106B  0876               	movf	___fleq@ff2+2,w
  9668  106C  0672               	xorwf	___fleq@ff1+2,w
  9669  106D  1D03               	skipz
  9670  106E  2875               	goto	u3605
  9671  106F  0875               	movf	___fleq@ff2+1,w
  9672  1070  0671               	xorwf	___fleq@ff1+1,w
  9673  1071  1D03               	skipz
  9674  1072  2875               	goto	u3605
  9675  1073  0874               	movf	___fleq@ff2,w
  9676  1074  0670               	xorwf	___fleq@ff1,w
  9677  1075                     u3605:
  9678  1075  1903               	skipnz
  9679  1076  2878               	goto	u3601
  9680  1077  2879               	goto	u3600
  9681  1078                     u3601:
  9682  1078  287B               	goto	l3017
  9683  1079                     u3600:
  9684  1079                     l3015:
  9685  1079  1003               	clrc
  9686  107A  287C               	goto	l447
  9687  107B                     l3017:
  9688  107B  1403               	setc
  9689  107C                     l447:
  9690  107C  0008               	return
  9691  107D                     __end_of___fleq:
  9692                           
  9693                           	psect	text24
  9694  164C                     __ptext24:	
  9695 ;; *************** function ___fldiv *****************
  9696 ;; Defined at:
  9697 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  9698 ;; Parameters:    Size  Location     Type
  9699 ;;  a               4    0[COMMON] unsigned int 
  9700 ;;  b               4    4[COMMON] unsigned int 
  9701 ;; Auto vars:     Size  Location     Type
  9702 ;;  grs             4    7[BANK0 ] unsigned long 
  9703 ;;  rem             4    0[BANK0 ] unsigned long 
  9704 ;;  new_exp         2    5[BANK0 ] int 
  9705 ;;  aexp            1   12[BANK0 ] unsigned char 
  9706 ;;  bexp            1   11[BANK0 ] unsigned char 
  9707 ;;  sign            1    4[BANK0 ] unsigned char 
  9708 ;; Return value:  Size  Location     Type
  9709 ;;                  4    0[COMMON] unsigned char 
  9710 ;; Registers used:
  9711 ;;		wreg, status,2, status,0
  9712 ;; Tracked objects:
  9713 ;;		On entry : 0/0
  9714 ;;		On exit  : 0/0
  9715 ;;		Unchanged: 0/0
  9716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9717 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9718 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9719 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9720 ;;      Totals:        13      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9721 ;;Total ram usage:       26 bytes
  9722 ;; Hardware stack levels used: 1
  9723 ;; This function calls:
  9724 ;;		Nothing
  9725 ;; This function is called by:
  9726 ;;		_efgtoa
  9727 ;; This function uses a non-reentrant model
  9728 ;;
  9729                           
  9730  164C                     ___fldiv:	
  9731                           ;psect for function ___fldiv
  9732                           
  9733  164C                     l3091:	
  9734                           ;incstack = 0
  9735                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  9736                           
  9737  164C  0877               	movf	___fldiv@b+3,w
  9738  164D  3980               	andlw	128
  9739  164E  00F8               	movwf	??___fldiv
  9740  164F  0878               	movf	??___fldiv,w
  9741  1650  0020               	movlb	0	; select bank0
  9742  1651  00A4               	movwf	___fldiv@sign
  9743  1652                     l3093:
  9744  1652  3577               	lslf	___fldiv@b+3,w
  9745  1653  00F8               	movwf	??___fldiv
  9746  1654  0878               	movf	??___fldiv,w
  9747  1655  00AB               	movwf	___fldiv@bexp
  9748  1656                     l3095:
  9749  1656  1FF6               	btfss	___fldiv@b+2,7
  9750  1657  2E59               	goto	u3771
  9751  1658  2E5A               	goto	u3770
  9752  1659                     u3771:
  9753  1659  2E5B               	goto	l3099
  9754  165A                     u3770:
  9755  165A                     l3097:
  9756  165A  142B               	bsf	___fldiv@bexp,0
  9757  165B                     l3099:
  9758  165B  082B               	movf	___fldiv@bexp,w
  9759  165C  1903               	btfsc	3,2
  9760  165D  2E5F               	goto	u3781
  9761  165E  2E60               	goto	u3780
  9762  165F                     u3781:
  9763  165F  2E70               	goto	l3109
  9764  1660                     u3780:
  9765  1660                     l3101:
  9766  1660  0A2B               	incf	___fldiv@bexp,w
  9767  1661  1D03               	btfss	3,2
  9768  1662  2E64               	goto	u3791
  9769  1663  2E65               	goto	u3790
  9770  1664                     u3791:
  9771  1664  2E6D               	goto	l3105
  9772  1665                     u3790:
  9773  1665                     l3103:
  9774  1665  3000               	movlw	0
  9775  1666  00F7               	movwf	___fldiv@b+3
  9776  1667  3000               	movlw	0
  9777  1668  00F6               	movwf	___fldiv@b+2
  9778  1669  3000               	movlw	0
  9779  166A  00F5               	movwf	___fldiv@b+1
  9780  166B  3000               	movlw	0
  9781  166C  00F4               	movwf	___fldiv@b
  9782  166D                     l3105:
  9783  166D  17F6               	bsf	___fldiv@b+2,7
  9784  166E                     l3107:
  9785  166E  01F7               	clrf	___fldiv@b+3
  9786  166F  2E78               	goto	l3111
  9787  1670                     l3109:
  9788  1670  3000               	movlw	0
  9789  1671  00F7               	movwf	___fldiv@b+3
  9790  1672  3000               	movlw	0
  9791  1673  00F6               	movwf	___fldiv@b+2
  9792  1674  3000               	movlw	0
  9793  1675  00F5               	movwf	___fldiv@b+1
  9794  1676  3000               	movlw	0
  9795  1677  00F4               	movwf	___fldiv@b
  9796  1678                     l3111:
  9797  1678  0873               	movf	___fldiv@a+3,w
  9798  1679  3980               	andlw	128
  9799  167A  00F8               	movwf	??___fldiv
  9800  167B  0878               	movf	??___fldiv,w
  9801  167C  06A4               	xorwf	___fldiv@sign,f
  9802  167D                     l3113:
  9803  167D  3573               	lslf	___fldiv@a+3,w
  9804  167E  00F8               	movwf	??___fldiv
  9805  167F  0878               	movf	??___fldiv,w
  9806  1680  00AC               	movwf	___fldiv@aexp
  9807  1681                     l3115:
  9808  1681  1FF2               	btfss	___fldiv@a+2,7
  9809  1682  2E84               	goto	u3801
  9810  1683  2E85               	goto	u3800
  9811  1684                     u3801:
  9812  1684  2E86               	goto	l3119
  9813  1685                     u3800:
  9814  1685                     l3117:
  9815  1685  142C               	bsf	___fldiv@aexp,0
  9816  1686                     l3119:
  9817  1686  082C               	movf	___fldiv@aexp,w
  9818  1687  1903               	btfsc	3,2
  9819  1688  2E8A               	goto	u3811
  9820  1689  2E8B               	goto	u3810
  9821  168A                     u3811:
  9822  168A  2E9B               	goto	l3129
  9823  168B                     u3810:
  9824  168B                     l3121:
  9825  168B  0A2C               	incf	___fldiv@aexp,w
  9826  168C  1D03               	btfss	3,2
  9827  168D  2E8F               	goto	u3821
  9828  168E  2E90               	goto	u3820
  9829  168F                     u3821:
  9830  168F  2E98               	goto	l3125
  9831  1690                     u3820:
  9832  1690                     l3123:
  9833  1690  3000               	movlw	0
  9834  1691  00F3               	movwf	___fldiv@a+3
  9835  1692  3000               	movlw	0
  9836  1693  00F2               	movwf	___fldiv@a+2
  9837  1694  3000               	movlw	0
  9838  1695  00F1               	movwf	___fldiv@a+1
  9839  1696  3000               	movlw	0
  9840  1697  00F0               	movwf	___fldiv@a
  9841  1698                     l3125:
  9842  1698  17F2               	bsf	___fldiv@a+2,7
  9843  1699                     l3127:
  9844  1699  01F3               	clrf	___fldiv@a+3
  9845  169A  2EA3               	goto	l629
  9846  169B                     l3129:
  9847  169B  3000               	movlw	0
  9848  169C  00F3               	movwf	___fldiv@a+3
  9849  169D  3000               	movlw	0
  9850  169E  00F2               	movwf	___fldiv@a+2
  9851  169F  3000               	movlw	0
  9852  16A0  00F1               	movwf	___fldiv@a+1
  9853  16A1  3000               	movlw	0
  9854  16A2  00F0               	movwf	___fldiv@a
  9855  16A3                     l629:
  9856  16A3  0873               	movf	___fldiv@a+3,w
  9857  16A4  0472               	iorwf	___fldiv@a+2,w
  9858  16A5  0471               	iorwf	___fldiv@a+1,w
  9859  16A6  0470               	iorwf	___fldiv@a,w
  9860  16A7  1D03               	skipz
  9861  16A8  2EAA               	goto	u3831
  9862  16A9  2EAB               	goto	u3830
  9863  16AA                     u3831:
  9864  16AA  2EC4               	goto	l3139
  9865  16AB                     u3830:
  9866  16AB                     l3131:
  9867  16AB  3000               	movlw	0
  9868  16AC  00F7               	movwf	___fldiv@b+3
  9869  16AD  3000               	movlw	0
  9870  16AE  00F6               	movwf	___fldiv@b+2
  9871  16AF  3000               	movlw	0
  9872  16B0  00F5               	movwf	___fldiv@b+1
  9873  16B1  3000               	movlw	0
  9874  16B2  00F4               	movwf	___fldiv@b
  9875  16B3  3080               	movlw	128
  9876  16B4  04F6               	iorwf	___fldiv@b+2,f
  9877  16B5  307F               	movlw	127
  9878  16B6  04F7               	iorwf	___fldiv@b+3,f
  9879  16B7                     l3133:
  9880  16B7  0824               	movf	___fldiv@sign,w
  9881  16B8  00F8               	movwf	??___fldiv
  9882  16B9  0878               	movf	??___fldiv,w
  9883  16BA  04F7               	iorwf	___fldiv@b+3,f
  9884  16BB                     l3135:
  9885  16BB  0877               	movf	___fldiv@b+3,w
  9886  16BC  00F3               	movwf	?___fldiv+3
  9887  16BD  0876               	movf	___fldiv@b+2,w
  9888  16BE  00F2               	movwf	?___fldiv+2
  9889  16BF  0875               	movf	___fldiv@b+1,w
  9890  16C0  00F1               	movwf	?___fldiv+1
  9891  16C1  0874               	movf	___fldiv@b,w
  9892  16C2  00F0               	movwf	?___fldiv
  9893  16C3  2FFF               	goto	l631
  9894  16C4                     l3139:
  9895  16C4  082B               	movf	___fldiv@bexp,w
  9896  16C5  1D03               	btfss	3,2
  9897  16C6  2EC8               	goto	u3841
  9898  16C7  2EC9               	goto	u3840
  9899  16C8                     u3841:
  9900  16C8  2ED2               	goto	l3145
  9901  16C9                     u3840:
  9902  16C9                     l3141:
  9903  16C9  3000               	movlw	0
  9904  16CA  00F3               	movwf	?___fldiv+3
  9905  16CB  3000               	movlw	0
  9906  16CC  00F2               	movwf	?___fldiv+2
  9907  16CD  3000               	movlw	0
  9908  16CE  00F1               	movwf	?___fldiv+1
  9909  16CF  3000               	movlw	0
  9910  16D0  00F0               	movwf	?___fldiv
  9911  16D1  2FFF               	goto	l631
  9912  16D2                     l3145:
  9913  16D2  082B               	movf	___fldiv@bexp,w
  9914  16D3  00F8               	movwf	??___fldiv
  9915  16D4  01F9               	clrf	??___fldiv+1
  9916  16D5  0879               	movf	??___fldiv+1,w
  9917  16D6  00FB               	movwf	??___fldiv+3
  9918  16D7  082C               	movf	___fldiv@aexp,w
  9919  16D8  0278               	subwf	??___fldiv,w
  9920  16D9  00FA               	movwf	??___fldiv+2
  9921  16DA  1C03               	skipc
  9922  16DB  03FB               	decf	??___fldiv+3,f
  9923  16DC  087A               	movf	??___fldiv+2,w
  9924  16DD  3E7F               	addlw	127
  9925  16DE  00A5               	movwf	___fldiv@new_exp
  9926  16DF  3000               	movlw	0
  9927  16E0  3D7B               	addwfc	??___fldiv+3,w
  9928  16E1  00A6               	movwf	___fldiv@new_exp+1
  9929  16E2                     l3147:
  9930  16E2  0877               	movf	___fldiv@b+3,w
  9931  16E3  00A3               	movwf	___fldiv@rem+3
  9932  16E4  0876               	movf	___fldiv@b+2,w
  9933  16E5  00A2               	movwf	___fldiv@rem+2
  9934  16E6  0875               	movf	___fldiv@b+1,w
  9935  16E7  00A1               	movwf	___fldiv@rem+1
  9936  16E8  0874               	movf	___fldiv@b,w
  9937  16E9  00A0               	movwf	___fldiv@rem
  9938  16EA                     l3149:
  9939  16EA  3000               	movlw	0
  9940  16EB  00F7               	movwf	___fldiv@b+3
  9941  16EC  3000               	movlw	0
  9942  16ED  00F6               	movwf	___fldiv@b+2
  9943  16EE  3000               	movlw	0
  9944  16EF  00F5               	movwf	___fldiv@b+1
  9945  16F0  3000               	movlw	0
  9946  16F1  00F4               	movwf	___fldiv@b
  9947  16F2                     l3151:
  9948  16F2  3000               	movlw	0
  9949  16F3  00AA               	movwf	___fldiv@grs+3
  9950  16F4  3000               	movlw	0
  9951  16F5  00A9               	movwf	___fldiv@grs+2
  9952  16F6  3000               	movlw	0
  9953  16F7  00A8               	movwf	___fldiv@grs+1
  9954  16F8  3000               	movlw	0
  9955  16F9  00A7               	movwf	___fldiv@grs
  9956  16FA                     l3153:
  9957  16FA  01AC               	clrf	___fldiv@aexp
  9958  16FB  2F3A               	goto	l3173
  9959  16FC                     l3155:
  9960  16FC  082C               	movf	___fldiv@aexp,w
  9961  16FD  1903               	btfsc	3,2
  9962  16FE  2F00               	goto	u3851
  9963  16FF  2F01               	goto	u3850
  9964  1700                     u3851:
  9965  1700  2F1B               	goto	l3165
  9966  1701                     u3850:
  9967  1701                     l3157:
  9968  1701  3001               	movlw	1
  9969  1702                     u3865:
  9970  1702  35A0               	lslf	___fldiv@rem,f
  9971  1703  0DA1               	rlf	___fldiv@rem+1,f
  9972  1704  0DA2               	rlf	___fldiv@rem+2,f
  9973  1705  0DA3               	rlf	___fldiv@rem+3,f
  9974  1706  0B89               	decfsz	9,f
  9975  1707  2F02               	goto	u3865
  9976  1708  3001               	movlw	1
  9977  1709                     u3875:
  9978  1709  35F4               	lslf	___fldiv@b,f
  9979  170A  0DF5               	rlf	___fldiv@b+1,f
  9980  170B  0DF6               	rlf	___fldiv@b+2,f
  9981  170C  0DF7               	rlf	___fldiv@b+3,f
  9982  170D  0B89               	decfsz	9,f
  9983  170E  2F09               	goto	u3875
  9984  170F                     l3159:
  9985  170F  1FAA               	btfss	___fldiv@grs+3,7
  9986  1710  2F12               	goto	u3881
  9987  1711  2F13               	goto	u3880
  9988  1712                     u3881:
  9989  1712  2F14               	goto	l3163
  9990  1713                     u3880:
  9991  1713                     l3161:
  9992  1713  1474               	bsf	___fldiv@b,0
  9993  1714                     l3163:
  9994  1714  3001               	movlw	1
  9995  1715                     u3895:
  9996  1715  35A7               	lslf	___fldiv@grs,f
  9997  1716  0DA8               	rlf	___fldiv@grs+1,f
  9998  1717  0DA9               	rlf	___fldiv@grs+2,f
  9999  1718  0DAA               	rlf	___fldiv@grs+3,f
 10000  1719  0B89               	decfsz	9,f
 10001  171A  2F15               	goto	u3895
 10002  171B                     l3165:
 10003  171B  0873               	movf	___fldiv@a+3,w
 10004  171C  0223               	subwf	___fldiv@rem+3,w
 10005  171D  1D03               	skipz
 10006  171E  2F29               	goto	u3905
 10007  171F  0872               	movf	___fldiv@a+2,w
 10008  1720  0222               	subwf	___fldiv@rem+2,w
 10009  1721  1D03               	skipz
 10010  1722  2F29               	goto	u3905
 10011  1723  0871               	movf	___fldiv@a+1,w
 10012  1724  0221               	subwf	___fldiv@rem+1,w
 10013  1725  1D03               	skipz
 10014  1726  2F29               	goto	u3905
 10015  1727  0870               	movf	___fldiv@a,w
 10016  1728  0220               	subwf	___fldiv@rem,w
 10017  1729                     u3905:
 10018  1729  1C03               	skipc
 10019  172A  2F2C               	goto	u3901
 10020  172B  2F2D               	goto	u3900
 10021  172C                     u3901:
 10022  172C  2F36               	goto	l3171
 10023  172D                     u3900:
 10024  172D                     l3167:
 10025  172D  172A               	bsf	___fldiv@grs+3,6
 10026  172E                     l3169:
 10027  172E  0870               	movf	___fldiv@a,w
 10028  172F  02A0               	subwf	___fldiv@rem,f
 10029  1730  0871               	movf	___fldiv@a+1,w
 10030  1731  3BA1               	subwfb	___fldiv@rem+1,f
 10031  1732  0872               	movf	___fldiv@a+2,w
 10032  1733  3BA2               	subwfb	___fldiv@rem+2,f
 10033  1734  0873               	movf	___fldiv@a+3,w
 10034  1735  3BA3               	subwfb	___fldiv@rem+3,f
 10035  1736                     l3171:
 10036  1736  3001               	movlw	1
 10037  1737  00F8               	movwf	??___fldiv
 10038  1738  0878               	movf	??___fldiv,w
 10039  1739  07AC               	addwf	___fldiv@aexp,f
 10040  173A                     l3173:
 10041  173A  301A               	movlw	26
 10042  173B  022C               	subwf	___fldiv@aexp,w
 10043  173C  1C03               	skipc
 10044  173D  2F3F               	goto	u3911
 10045  173E  2F40               	goto	u3910
 10046  173F                     u3911:
 10047  173F  2EFC               	goto	l3155
 10048  1740                     u3910:
 10049  1740                     l3175:
 10050  1740  0823               	movf	___fldiv@rem+3,w
 10051  1741  0422               	iorwf	___fldiv@rem+2,w
 10052  1742  0421               	iorwf	___fldiv@rem+1,w
 10053  1743  0420               	iorwf	___fldiv@rem,w
 10054  1744  1903               	skipnz
 10055  1745  2F47               	goto	u3921
 10056  1746  2F48               	goto	u3920
 10057  1747                     u3921:
 10058  1747  2F61               	goto	l3189
 10059  1748                     u3920:
 10060  1748                     l3177:
 10061  1748  1427               	bsf	___fldiv@grs,0
 10062  1749  2F61               	goto	l3189
 10063  174A                     l3179:
 10064  174A  3001               	movlw	1
 10065  174B                     u3935:
 10066  174B  35F4               	lslf	___fldiv@b,f
 10067  174C  0DF5               	rlf	___fldiv@b+1,f
 10068  174D  0DF6               	rlf	___fldiv@b+2,f
 10069  174E  0DF7               	rlf	___fldiv@b+3,f
 10070  174F  0B89               	decfsz	9,f
 10071  1750  2F4B               	goto	u3935
 10072  1751                     l3181:
 10073  1751  1FAA               	btfss	___fldiv@grs+3,7
 10074  1752  2F54               	goto	u3941
 10075  1753  2F55               	goto	u3940
 10076  1754                     u3941:
 10077  1754  2F56               	goto	l3185
 10078  1755                     u3940:
 10079  1755                     l3183:
 10080  1755  1474               	bsf	___fldiv@b,0
 10081  1756                     l3185:
 10082  1756  3001               	movlw	1
 10083  1757                     u3955:
 10084  1757  35A7               	lslf	___fldiv@grs,f
 10085  1758  0DA8               	rlf	___fldiv@grs+1,f
 10086  1759  0DA9               	rlf	___fldiv@grs+2,f
 10087  175A  0DAA               	rlf	___fldiv@grs+3,f
 10088  175B  0B89               	decfsz	9,f
 10089  175C  2F57               	goto	u3955
 10090  175D                     l3187:
 10091  175D  30FF               	movlw	255
 10092  175E  07A5               	addwf	___fldiv@new_exp,f
 10093  175F  30FF               	movlw	255
 10094  1760  3DA6               	addwfc	___fldiv@new_exp+1,f
 10095  1761                     l3189:
 10096  1761  1FF6               	btfss	___fldiv@b+2,7
 10097  1762  2F64               	goto	u3961
 10098  1763  2F65               	goto	u3960
 10099  1764                     u3961:
 10100  1764  2F4A               	goto	l3179
 10101  1765                     u3960:
 10102  1765                     l3191:
 10103  1765  01AC               	clrf	___fldiv@aexp
 10104  1766                     l3193:
 10105  1766  1FAA               	btfss	___fldiv@grs+3,7
 10106  1767  2F69               	goto	u3971
 10107  1768  2F6A               	goto	u3970
 10108  1769                     u3971:
 10109  1769  2F86               	goto	l3201
 10110  176A                     u3970:
 10111  176A                     l3195:
 10112  176A  30FF               	movlw	255
 10113  176B  0527               	andwf	___fldiv@grs,w
 10114  176C  00F8               	movwf	??___fldiv
 10115  176D  30FF               	movlw	255
 10116  176E  0528               	andwf	___fldiv@grs+1,w
 10117  176F  00F9               	movwf	??___fldiv+1
 10118  1770  30FF               	movlw	255
 10119  1771  0529               	andwf	___fldiv@grs+2,w
 10120  1772  00FA               	movwf	??___fldiv+2
 10121  1773  307F               	movlw	127
 10122  1774  052A               	andwf	___fldiv@grs+3,w
 10123  1775  00FB               	movwf	??___fldiv+3
 10124  1776  087B               	movf	??___fldiv+3,w
 10125  1777  047A               	iorwf	??___fldiv+2,w
 10126  1778  0479               	iorwf	??___fldiv+1,w
 10127  1779  0478               	iorwf	??___fldiv,w
 10128  177A  1903               	skipnz
 10129  177B  2F7D               	goto	u3981
 10130  177C  2F7E               	goto	u3980
 10131  177D                     u3981:
 10132  177D  2F81               	goto	l645
 10133  177E                     u3980:
 10134  177E                     l3197:
 10135  177E  01AC               	clrf	___fldiv@aexp
 10136  177F  0AAC               	incf	___fldiv@aexp,f
 10137  1780  2F86               	goto	l3201
 10138  1781                     l645:
 10139  1781  1C74               	btfss	___fldiv@b,0
 10140  1782  2F84               	goto	u3991
 10141  1783  2F85               	goto	u3990
 10142  1784                     u3991:
 10143  1784  2F86               	goto	l3201
 10144  1785                     u3990:
 10145  1785  2F7E               	goto	l3197
 10146  1786                     l3201:
 10147  1786  082C               	movf	___fldiv@aexp,w
 10148  1787  1903               	btfsc	3,2
 10149  1788  2F8A               	goto	u4001
 10150  1789  2F8B               	goto	u4000
 10151  178A                     u4001:
 10152  178A  2FB3               	goto	l3211
 10153  178B                     u4000:
 10154  178B                     l3203:
 10155  178B  3001               	movlw	1
 10156  178C  07F4               	addwf	___fldiv@b,f
 10157  178D  3000               	movlw	0
 10158  178E  3DF5               	addwfc	___fldiv@b+1,f
 10159  178F  3000               	movlw	0
 10160  1790  3DF6               	addwfc	___fldiv@b+2,f
 10161  1791  3000               	movlw	0
 10162  1792  3DF7               	addwfc	___fldiv@b+3,f
 10163  1793                     l3205:
 10164  1793  1C77               	btfss	___fldiv@b+3,0
 10165  1794  2F96               	goto	u4011
 10166  1795  2F97               	goto	u4010
 10167  1796                     u4011:
 10168  1796  2FB3               	goto	l3211
 10169  1797                     u4010:
 10170  1797                     l3207:
 10171  1797  0874               	movf	___fldiv@b,w
 10172  1798  00F8               	movwf	??___fldiv
 10173  1799  0875               	movf	___fldiv@b+1,w
 10174  179A  00F9               	movwf	??___fldiv+1
 10175  179B  0876               	movf	___fldiv@b+2,w
 10176  179C  00FA               	movwf	??___fldiv+2
 10177  179D  0877               	movf	___fldiv@b+3,w
 10178  179E  00FB               	movwf	??___fldiv+3
 10179  179F  3001               	movlw	1
 10180  17A0  00FC               	movwf	??___fldiv+4
 10181  17A1                     u4025:
 10182  17A1  37FB               	asrf	??___fldiv+3,f
 10183  17A2  0CFA               	rrf	??___fldiv+2,f
 10184  17A3  0CF9               	rrf	??___fldiv+1,f
 10185  17A4  0CF8               	rrf	??___fldiv,f
 10186  17A5                     u4020:
 10187  17A5  0BFC               	decfsz	??___fldiv+4,f
 10188  17A6  2FA1               	goto	u4025
 10189  17A7  087B               	movf	??___fldiv+3,w
 10190  17A8  00F7               	movwf	___fldiv@b+3
 10191  17A9  087A               	movf	??___fldiv+2,w
 10192  17AA  00F6               	movwf	___fldiv@b+2
 10193  17AB  0879               	movf	??___fldiv+1,w
 10194  17AC  00F5               	movwf	___fldiv@b+1
 10195  17AD  0878               	movf	??___fldiv,w
 10196  17AE  00F4               	movwf	___fldiv@b
 10197  17AF                     l3209:
 10198  17AF  3001               	movlw	1
 10199  17B0  07A5               	addwf	___fldiv@new_exp,f
 10200  17B1  3000               	movlw	0
 10201  17B2  3DA6               	addwfc	___fldiv@new_exp+1,f
 10202  17B3                     l3211:
 10203  17B3  0826               	movf	___fldiv@new_exp+1,w
 10204  17B4  3A80               	xorlw	128
 10205  17B5  00F8               	movwf	??___fldiv
 10206  17B6  3080               	movlw	128
 10207  17B7  0278               	subwf	??___fldiv,w
 10208  17B8  1D03               	skipz
 10209  17B9  2FBC               	goto	u4035
 10210  17BA  30FF               	movlw	255
 10211  17BB  0225               	subwf	___fldiv@new_exp,w
 10212  17BC                     u4035:
 10213  17BC  1C03               	skipc
 10214  17BD  2FBF               	goto	u4031
 10215  17BE  2FC0               	goto	u4030
 10216  17BF                     u4031:
 10217  17BF  2FCD               	goto	l650
 10218  17C0                     u4030:
 10219  17C0                     l3213:
 10220  17C0  30FF               	movlw	255
 10221  17C1  0020               	movlb	0	; select bank0
 10222  17C2  00A5               	movwf	___fldiv@new_exp
 10223  17C3  3000               	movlw	0
 10224  17C4  00A6               	movwf	___fldiv@new_exp+1
 10225  17C5  3000               	movlw	0
 10226  17C6  00F7               	movwf	___fldiv@b+3
 10227  17C7  3000               	movlw	0
 10228  17C8  00F6               	movwf	___fldiv@b+2
 10229  17C9  3000               	movlw	0
 10230  17CA  00F5               	movwf	___fldiv@b+1
 10231  17CB  3000               	movlw	0
 10232  17CC  00F4               	movwf	___fldiv@b
 10233  17CD                     l650:
 10234  17CD  0020               	movlb	0	; select bank0
 10235  17CE  0826               	movf	___fldiv@new_exp+1,w
 10236  17CF  3A80               	xorlw	128
 10237  17D0  00F8               	movwf	??___fldiv
 10238  17D1  3080               	movlw	128
 10239  17D2  0278               	subwf	??___fldiv,w
 10240  17D3  1D03               	skipz
 10241  17D4  2FD7               	goto	u4045
 10242  17D5  3001               	movlw	1
 10243  17D6  0225               	subwf	___fldiv@new_exp,w
 10244  17D7                     u4045:
 10245  17D7  1803               	skipnc
 10246  17D8  2FDA               	goto	u4041
 10247  17D9  2FDB               	goto	u4040
 10248  17DA                     u4041:
 10249  17DA  2FE7               	goto	l651
 10250  17DB                     u4040:
 10251  17DB                     l3215:
 10252  17DB  0020               	movlb	0	; select bank0
 10253  17DC  01A5               	clrf	___fldiv@new_exp
 10254  17DD  01A6               	clrf	___fldiv@new_exp+1
 10255  17DE                     l3217:
 10256  17DE  3000               	movlw	0
 10257  17DF  00F7               	movwf	___fldiv@b+3
 10258  17E0  3000               	movlw	0
 10259  17E1  00F6               	movwf	___fldiv@b+2
 10260  17E2  3000               	movlw	0
 10261  17E3  00F5               	movwf	___fldiv@b+1
 10262  17E4  3000               	movlw	0
 10263  17E5  00F4               	movwf	___fldiv@b
 10264  17E6                     l3219:
 10265  17E6  01A4               	clrf	___fldiv@sign
 10266  17E7                     l651:
 10267  17E7  0020               	movlb	0	; select bank0
 10268  17E8  0825               	movf	___fldiv@new_exp,w
 10269  17E9  00F8               	movwf	??___fldiv
 10270  17EA  0878               	movf	??___fldiv,w
 10271  17EB  00AB               	movwf	___fldiv@bexp
 10272  17EC                     l3221:
 10273  17EC  1C2B               	btfss	___fldiv@bexp,0
 10274  17ED  2FEF               	goto	u4051
 10275  17EE  2FF0               	goto	u4050
 10276  17EF                     u4051:
 10277  17EF  2FF2               	goto	l3225
 10278  17F0                     u4050:
 10279  17F0                     l3223:
 10280  17F0  17F6               	bsf	___fldiv@b+2,7
 10281  17F1  2FF6               	goto	l653
 10282  17F2                     l3225:
 10283  17F2  307F               	movlw	127
 10284  17F3  00F8               	movwf	??___fldiv
 10285  17F4  0878               	movf	??___fldiv,w
 10286  17F5  05F6               	andwf	___fldiv@b+2,f
 10287  17F6                     l653:
 10288  17F6  362B               	lsrf	___fldiv@bexp,w
 10289  17F7  00F8               	movwf	??___fldiv
 10290  17F8  0878               	movf	??___fldiv,w
 10291  17F9  00F7               	movwf	___fldiv@b+3
 10292  17FA  0824               	movf	___fldiv@sign,w
 10293  17FB  00F8               	movwf	??___fldiv
 10294  17FC  0878               	movf	??___fldiv,w
 10295  17FD  04F7               	iorwf	___fldiv@b+3,f
 10296  17FE  2EBB               	goto	l3135
 10297  17FF                     l631:
 10298  17FF  0008               	return
 10299  1800                     __end_of___fldiv:
 10300                           
 10301                           	psect	text25
 10302  10CD                     __ptext25:	
 10303 ;; *************** function ___awmod *****************
 10304 ;; Defined at:
 10305 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
 10306 ;; Parameters:    Size  Location     Type
 10307 ;;  divisor         2    0[COMMON] int 
 10308 ;;  dividend        2    2[COMMON] int 
 10309 ;; Auto vars:     Size  Location     Type
 10310 ;;  sign            1    6[COMMON] unsigned char 
 10311 ;;  counter         1    5[COMMON] unsigned char 
 10312 ;; Return value:  Size  Location     Type
 10313 ;;                  2    0[COMMON] int 
 10314 ;; Registers used:
 10315 ;;		wreg, status,2, status,0
 10316 ;; Tracked objects:
 10317 ;;		On entry : 0/0
 10318 ;;		On exit  : 0/0
 10319 ;;		Unchanged: 0/0
 10320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10321 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10322 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10323 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10324 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10325 ;;Total ram usage:        7 bytes
 10326 ;; Hardware stack levels used: 1
 10327 ;; This function calls:
 10328 ;;		Nothing
 10329 ;; This function is called by:
 10330 ;;		_efgtoa
 10331 ;; This function uses a non-reentrant model
 10332 ;;
 10333                           
 10334  10CD                     ___awmod:	
 10335                           ;psect for function ___awmod
 10336                           
 10337  10CD                     l2971:	
 10338                           ;incstack = 0
 10339                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10340                           
 10341  10CD  01F6               	clrf	___awmod@sign
 10342  10CE                     l2973:
 10343  10CE  1FF3               	btfss	___awmod@dividend+1,7
 10344  10CF  28D1               	goto	u3491
 10345  10D0  28D2               	goto	u3490
 10346  10D1                     u3491:
 10347  10D1  28D9               	goto	l2979
 10348  10D2                     u3490:
 10349  10D2                     l2975:
 10350  10D2  09F2               	comf	___awmod@dividend,f
 10351  10D3  09F3               	comf	___awmod@dividend+1,f
 10352  10D4  0AF2               	incf	___awmod@dividend,f
 10353  10D5  1903               	skipnz
 10354  10D6  0AF3               	incf	___awmod@dividend+1,f
 10355  10D7                     l2977:
 10356  10D7  01F6               	clrf	___awmod@sign
 10357  10D8  0AF6               	incf	___awmod@sign,f
 10358  10D9                     l2979:
 10359  10D9  1FF1               	btfss	___awmod@divisor+1,7
 10360  10DA  28DC               	goto	u3501
 10361  10DB  28DD               	goto	u3500
 10362  10DC                     u3501:
 10363  10DC  28E2               	goto	l2983
 10364  10DD                     u3500:
 10365  10DD                     l2981:
 10366  10DD  09F0               	comf	___awmod@divisor,f
 10367  10DE  09F1               	comf	___awmod@divisor+1,f
 10368  10DF  0AF0               	incf	___awmod@divisor,f
 10369  10E0  1903               	skipnz
 10370  10E1  0AF1               	incf	___awmod@divisor+1,f
 10371  10E2                     l2983:
 10372  10E2  0870               	movf	___awmod@divisor,w
 10373  10E3  0471               	iorwf	___awmod@divisor+1,w
 10374  10E4  1903               	btfsc	3,2
 10375  10E5  28E7               	goto	u3511
 10376  10E6  28E8               	goto	u3510
 10377  10E7                     u3511:
 10378  10E7  2911               	goto	l3001
 10379  10E8                     u3510:
 10380  10E8                     l2985:
 10381  10E8  01F5               	clrf	___awmod@counter
 10382  10E9  0AF5               	incf	___awmod@counter,f
 10383  10EA  28F4               	goto	l2991
 10384  10EB                     l2987:
 10385  10EB  3001               	movlw	1
 10386  10EC                     u3525:
 10387  10EC  35F0               	lslf	___awmod@divisor,f
 10388  10ED  0DF1               	rlf	___awmod@divisor+1,f
 10389  10EE  0B89               	decfsz	9,f
 10390  10EF  28EC               	goto	u3525
 10391  10F0                     l2989:
 10392  10F0  3001               	movlw	1
 10393  10F1  00F4               	movwf	??___awmod
 10394  10F2  0874               	movf	??___awmod,w
 10395  10F3  07F5               	addwf	___awmod@counter,f
 10396  10F4                     l2991:
 10397  10F4  1FF1               	btfss	___awmod@divisor+1,7
 10398  10F5  28F7               	goto	u3531
 10399  10F6  28F8               	goto	u3530
 10400  10F7                     u3531:
 10401  10F7  28EB               	goto	l2987
 10402  10F8                     u3530:
 10403  10F8                     l2993:
 10404  10F8  0871               	movf	___awmod@divisor+1,w
 10405  10F9  0273               	subwf	___awmod@dividend+1,w
 10406  10FA  1D03               	skipz
 10407  10FB  28FE               	goto	u3545
 10408  10FC  0870               	movf	___awmod@divisor,w
 10409  10FD  0272               	subwf	___awmod@dividend,w
 10410  10FE                     u3545:
 10411  10FE  1C03               	skipc
 10412  10FF  2901               	goto	u3541
 10413  1100  2902               	goto	u3540
 10414  1101                     u3541:
 10415  1101  2906               	goto	l2997
 10416  1102                     u3540:
 10417  1102                     l2995:
 10418  1102  0870               	movf	___awmod@divisor,w
 10419  1103  02F2               	subwf	___awmod@dividend,f
 10420  1104  0871               	movf	___awmod@divisor+1,w
 10421  1105  3BF3               	subwfb	___awmod@dividend+1,f
 10422  1106                     l2997:
 10423  1106  3001               	movlw	1
 10424  1107                     u3555:
 10425  1107  36F1               	lsrf	___awmod@divisor+1,f
 10426  1108  0CF0               	rrf	___awmod@divisor,f
 10427  1109  0B89               	decfsz	9,f
 10428  110A  2907               	goto	u3555
 10429  110B                     l2999:
 10430  110B  3001               	movlw	1
 10431  110C  02F5               	subwf	___awmod@counter,f
 10432  110D  1D03               	btfss	3,2
 10433  110E  2910               	goto	u3561
 10434  110F  2911               	goto	u3560
 10435  1110                     u3561:
 10436  1110  28F8               	goto	l2993
 10437  1111                     u3560:
 10438  1111                     l3001:
 10439  1111  0876               	movf	___awmod@sign,w
 10440  1112  1903               	btfsc	3,2
 10441  1113  2915               	goto	u3571
 10442  1114  2916               	goto	u3570
 10443  1115                     u3571:
 10444  1115  291B               	goto	l3005
 10445  1116                     u3570:
 10446  1116                     l3003:
 10447  1116  09F2               	comf	___awmod@dividend,f
 10448  1117  09F3               	comf	___awmod@dividend+1,f
 10449  1118  0AF2               	incf	___awmod@dividend,f
 10450  1119  1903               	skipnz
 10451  111A  0AF3               	incf	___awmod@dividend+1,f
 10452  111B                     l3005:
 10453  111B  0873               	movf	___awmod@dividend+1,w
 10454  111C  00F1               	movwf	?___awmod+1
 10455  111D  0872               	movf	___awmod@dividend,w
 10456  111E  00F0               	movwf	?___awmod
 10457  111F                     l438:
 10458  111F  0008               	return
 10459  1120                     __end_of___awmod:
 10460                           
 10461                           	psect	text26
 10462  1224                     __ptext26:	
 10463 ;; *************** function ___awdiv *****************
 10464 ;; Defined at:
 10465 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
 10466 ;; Parameters:    Size  Location     Type
 10467 ;;  divisor         2    0[COMMON] int 
 10468 ;;  dividend        2    2[COMMON] int 
 10469 ;; Auto vars:     Size  Location     Type
 10470 ;;  quotient        2    7[COMMON] int 
 10471 ;;  sign            1    6[COMMON] unsigned char 
 10472 ;;  counter         1    5[COMMON] unsigned char 
 10473 ;; Return value:  Size  Location     Type
 10474 ;;                  2    0[COMMON] int 
 10475 ;; Registers used:
 10476 ;;		wreg, status,2, status,0
 10477 ;; Tracked objects:
 10478 ;;		On entry : 0/0
 10479 ;;		On exit  : 0/0
 10480 ;;		Unchanged: 0/0
 10481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10482 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10483 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10484 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10485 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10486 ;;Total ram usage:        9 bytes
 10487 ;; Hardware stack levels used: 1
 10488 ;; This function calls:
 10489 ;;		Nothing
 10490 ;; This function is called by:
 10491 ;;		_efgtoa
 10492 ;; This function uses a non-reentrant model
 10493 ;;
 10494                           
 10495  1224                     ___awdiv:	
 10496                           ;psect for function ___awdiv
 10497                           
 10498  1224                     l2927:	
 10499                           ;incstack = 0
 10500                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10501                           
 10502  1224  01F6               	clrf	___awdiv@sign
 10503  1225                     l2929:
 10504  1225  1FF1               	btfss	___awdiv@divisor+1,7
 10505  1226  2A28               	goto	u3391
 10506  1227  2A29               	goto	u3390
 10507  1228                     u3391:
 10508  1228  2A30               	goto	l2935
 10509  1229                     u3390:
 10510  1229                     l2931:
 10511  1229  09F0               	comf	___awdiv@divisor,f
 10512  122A  09F1               	comf	___awdiv@divisor+1,f
 10513  122B  0AF0               	incf	___awdiv@divisor,f
 10514  122C  1903               	skipnz
 10515  122D  0AF1               	incf	___awdiv@divisor+1,f
 10516  122E                     l2933:
 10517  122E  01F6               	clrf	___awdiv@sign
 10518  122F  0AF6               	incf	___awdiv@sign,f
 10519  1230                     l2935:
 10520  1230  1FF3               	btfss	___awdiv@dividend+1,7
 10521  1231  2A33               	goto	u3401
 10522  1232  2A34               	goto	u3400
 10523  1233                     u3401:
 10524  1233  2A3D               	goto	l2941
 10525  1234                     u3400:
 10526  1234                     l2937:
 10527  1234  09F2               	comf	___awdiv@dividend,f
 10528  1235  09F3               	comf	___awdiv@dividend+1,f
 10529  1236  0AF2               	incf	___awdiv@dividend,f
 10530  1237  1903               	skipnz
 10531  1238  0AF3               	incf	___awdiv@dividend+1,f
 10532  1239                     l2939:
 10533  1239  3001               	movlw	1
 10534  123A  00F4               	movwf	??___awdiv
 10535  123B  0874               	movf	??___awdiv,w
 10536  123C  06F6               	xorwf	___awdiv@sign,f
 10537  123D                     l2941:
 10538  123D  01F7               	clrf	___awdiv@quotient
 10539  123E  01F8               	clrf	___awdiv@quotient+1
 10540  123F                     l2943:
 10541  123F  0870               	movf	___awdiv@divisor,w
 10542  1240  0471               	iorwf	___awdiv@divisor+1,w
 10543  1241  1903               	btfsc	3,2
 10544  1242  2A44               	goto	u3411
 10545  1243  2A45               	goto	u3410
 10546  1244                     u3411:
 10547  1244  2A74               	goto	l2963
 10548  1245                     u3410:
 10549  1245                     l2945:
 10550  1245  01F5               	clrf	___awdiv@counter
 10551  1246  0AF5               	incf	___awdiv@counter,f
 10552  1247  2A51               	goto	l2951
 10553  1248                     l2947:
 10554  1248  3001               	movlw	1
 10555  1249                     u3425:
 10556  1249  35F0               	lslf	___awdiv@divisor,f
 10557  124A  0DF1               	rlf	___awdiv@divisor+1,f
 10558  124B  0B89               	decfsz	9,f
 10559  124C  2A49               	goto	u3425
 10560  124D                     l2949:
 10561  124D  3001               	movlw	1
 10562  124E  00F4               	movwf	??___awdiv
 10563  124F  0874               	movf	??___awdiv,w
 10564  1250  07F5               	addwf	___awdiv@counter,f
 10565  1251                     l2951:
 10566  1251  1FF1               	btfss	___awdiv@divisor+1,7
 10567  1252  2A54               	goto	u3431
 10568  1253  2A55               	goto	u3430
 10569  1254                     u3431:
 10570  1254  2A48               	goto	l2947
 10571  1255                     u3430:
 10572  1255                     l2953:
 10573  1255  3001               	movlw	1
 10574  1256                     u3445:
 10575  1256  35F7               	lslf	___awdiv@quotient,f
 10576  1257  0DF8               	rlf	___awdiv@quotient+1,f
 10577  1258  0B89               	decfsz	9,f
 10578  1259  2A56               	goto	u3445
 10579  125A  0871               	movf	___awdiv@divisor+1,w
 10580  125B  0273               	subwf	___awdiv@dividend+1,w
 10581  125C  1D03               	skipz
 10582  125D  2A60               	goto	u3455
 10583  125E  0870               	movf	___awdiv@divisor,w
 10584  125F  0272               	subwf	___awdiv@dividend,w
 10585  1260                     u3455:
 10586  1260  1C03               	skipc
 10587  1261  2A63               	goto	u3451
 10588  1262  2A64               	goto	u3450
 10589  1263                     u3451:
 10590  1263  2A69               	goto	l2959
 10591  1264                     u3450:
 10592  1264                     l2955:
 10593  1264  0870               	movf	___awdiv@divisor,w
 10594  1265  02F2               	subwf	___awdiv@dividend,f
 10595  1266  0871               	movf	___awdiv@divisor+1,w
 10596  1267  3BF3               	subwfb	___awdiv@dividend+1,f
 10597  1268                     l2957:
 10598  1268  1477               	bsf	___awdiv@quotient,0
 10599  1269                     l2959:
 10600  1269  3001               	movlw	1
 10601  126A                     u3465:
 10602  126A  36F1               	lsrf	___awdiv@divisor+1,f
 10603  126B  0CF0               	rrf	___awdiv@divisor,f
 10604  126C  0B89               	decfsz	9,f
 10605  126D  2A6A               	goto	u3465
 10606  126E                     l2961:
 10607  126E  3001               	movlw	1
 10608  126F  02F5               	subwf	___awdiv@counter,f
 10609  1270  1D03               	btfss	3,2
 10610  1271  2A73               	goto	u3471
 10611  1272  2A74               	goto	u3470
 10612  1273                     u3471:
 10613  1273  2A55               	goto	l2953
 10614  1274                     u3470:
 10615  1274                     l2963:
 10616  1274  0876               	movf	___awdiv@sign,w
 10617  1275  1903               	btfsc	3,2
 10618  1276  2A78               	goto	u3481
 10619  1277  2A79               	goto	u3480
 10620  1278                     u3481:
 10621  1278  2A7E               	goto	l2967
 10622  1279                     u3480:
 10623  1279                     l2965:
 10624  1279  09F7               	comf	___awdiv@quotient,f
 10625  127A  09F8               	comf	___awdiv@quotient+1,f
 10626  127B  0AF7               	incf	___awdiv@quotient,f
 10627  127C  1903               	skipnz
 10628  127D  0AF8               	incf	___awdiv@quotient+1,f
 10629  127E                     l2967:
 10630  127E  0878               	movf	___awdiv@quotient+1,w
 10631  127F  00F1               	movwf	?___awdiv+1
 10632  1280  0877               	movf	___awdiv@quotient,w
 10633  1281  00F0               	movwf	?___awdiv
 10634  1282                     l425:
 10635  1282  0008               	return
 10636  1283                     __end_of___awdiv:
 10637                           
 10638                           	psect	text27
 10639  080B                     __ptext27:	
 10640 ;; *************** function _atoi *****************
 10641 ;; Defined at:
 10642 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
 10643 ;; Parameters:    Size  Location     Type
 10644 ;;  s               2    6[COMMON] PTR const unsigned char 
 10645 ;;		 -> STR_3(11), STR_2(12), STR_1(11), 
 10646 ;; Auto vars:     Size  Location     Type
 10647 ;;  n               2    2[BANK0 ] int 
 10648 ;;  neg             2    0[BANK0 ] int 
 10649 ;; Return value:  Size  Location     Type
 10650 ;;                  2    6[COMMON] int 
 10651 ;; Registers used:
 10652 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10653 ;; Tracked objects:
 10654 ;;		On entry : 0/0
 10655 ;;		On exit  : 0/0
 10656 ;;		Unchanged: 0/0
 10657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10658 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10659 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10660 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10661 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10662 ;;Total ram usage:        9 bytes
 10663 ;; Hardware stack levels used: 1
 10664 ;; Hardware stack levels required when called: 1
 10665 ;; This function calls:
 10666 ;;		___wmul
 10667 ;;		_isdigit
 10668 ;;		_isspace
 10669 ;; This function is called by:
 10670 ;;		_vfpfcnvrt
 10671 ;; This function uses a non-reentrant model
 10672 ;;
 10673                           
 10674  080B                     _atoi:	
 10675                           ;psect for function _atoi
 10676                           
 10677  080B                     l3795:	
 10678                           ;incstack = 0
 10679                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10680                           
 10681  080B  0020               	movlb	0	; select bank0
 10682  080C  01A2               	clrf	atoi@n
 10683  080D  01A3               	clrf	atoi@n+1
 10684  080E  01A0               	clrf	atoi@neg
 10685  080F  01A1               	clrf	atoi@neg+1
 10686  0810  2815               	goto	l3801
 10687  0811                     l3797:
 10688  0811  3001               	movlw	1
 10689  0812  07F6               	addwf	atoi@s,f
 10690  0813  3000               	movlw	0
 10691  0814  3DF7               	addwfc	atoi@s+1,f
 10692  0815                     l3801:
 10693  0815  0876               	movf	atoi@s,w
 10694  0816  0084               	movwf	4
 10695  0817  0877               	movf	atoi@s+1,w
 10696  0818  0085               	movwf	5
 10697  0819  0012               	moviw fsr0++
 10698  081A  3A20               	xorlw	32
 10699  081B  1903               	btfsc	3,2
 10700  081C  281E               	goto	u5131
 10701  081D  281F               	goto	u5130
 10702  081E                     u5131:
 10703  081E  2811               	goto	l3797
 10704  081F                     u5130:
 10705  081F                     l3803:
 10706  081F  0876               	movf	atoi@s,w
 10707  0820  0084               	movwf	4
 10708  0821  0877               	movf	atoi@s+1,w
 10709  0822  0085               	movwf	5
 10710  0823  0800               	movf	0,w	;code access
 10711  0824  3EF7               	addlw	247
 10712  0825  00F8               	movwf	??_atoi
 10713  0826  30FF               	movlw	255
 10714  0827  1803               	skipnc
 10715  0828  3000               	movlw	0
 10716  0829  00F9               	movwf	??_atoi+1
 10717  082A  3000               	movlw	0
 10718  082B  0279               	subwf	??_atoi+1,w
 10719  082C  3005               	movlw	5
 10720  082D  1903               	skipnz
 10721  082E  0278               	subwf	??_atoi,w
 10722  082F  1C03               	skipc
 10723  0830  2832               	goto	u5141
 10724  0831  2833               	goto	u5140
 10725  0832                     u5141:
 10726  0832  2811               	goto	l3797
 10727  0833                     u5140:
 10728  0833  283E               	goto	l3807
 10729  0834                     l3805:
 10730  0834  3001               	movlw	1
 10731  0835  0020               	movlb	0	; select bank0
 10732  0836  00A0               	movwf	atoi@neg
 10733  0837  3000               	movlw	0
 10734  0838  00A1               	movwf	atoi@neg+1
 10735  0839                     l940:
 10736  0839  3001               	movlw	1
 10737  083A  07F6               	addwf	atoi@s,f
 10738  083B  3000               	movlw	0
 10739  083C  3DF7               	addwfc	atoi@s+1,f
 10740  083D  2873               	goto	l3815
 10741  083E                     l3807:
 10742  083E  0876               	movf	atoi@s,w
 10743  083F  0084               	movwf	4
 10744  0840  0877               	movf	atoi@s+1,w
 10745  0841  0085               	movwf	5
 10746  0842  0800               	movf	0,w	;code access
 10747  0843  00F8               	movwf	??_atoi
 10748  0844  01F9               	clrf	??_atoi+1
 10749                           
 10750                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10751                           ; Switch size 1, requested type "simple"
 10752                           ; Number of cases is 1, Range of values is 0 to 0
 10753                           ; switch strategies available:
 10754                           ; Name         Instructions Cycles
 10755                           ; simple_byte            4     3 (average)
 10756                           ; direct_byte            8     6 (fixed)
 10757                           ; jumptable            260     6 (fixed)
 10758                           ;	Chosen strategy is simple_byte
 10759  0845  0879               	movf	??_atoi+1,w
 10760  0846  3A00               	xorlw	0	; case 0
 10761  0847  1903               	skipnz
 10762  0848  284A               	goto	l4295
 10763  0849  2873               	goto	l3815
 10764  084A                     l4295:
 10765                           
 10766                           ; Switch size 1, requested type "simple"
 10767                           ; Number of cases is 2, Range of values is 43 to 45
 10768                           ; switch strategies available:
 10769                           ; Name         Instructions Cycles
 10770                           ; simple_byte            7     4 (average)
 10771                           ; direct_byte           15     9 (fixed)
 10772                           ; jumptable            263     9 (fixed)
 10773                           ;	Chosen strategy is simple_byte
 10774  084A  0878               	movf	??_atoi,w
 10775  084B  3A2B               	xorlw	43	; case 43
 10776  084C  1903               	skipnz
 10777  084D  2839               	goto	l940
 10778  084E  3A06               	xorlw	6	; case 45
 10779  084F  1903               	skipnz
 10780  0850  2834               	goto	l3805
 10781  0851  2873               	goto	l3815
 10782  0852                     l3809:
 10783  0852  0876               	movf	atoi@s,w
 10784  0853  0084               	movwf	4
 10785  0854  0877               	movf	atoi@s+1,w
 10786  0855  0085               	movwf	5
 10787  0856  0800               	movf	0,w	;code access
 10788  0857  00F8               	movwf	??_atoi
 10789  0858  0020               	movlb	0	; select bank0
 10790  0859  0823               	movf	atoi@n+1,w
 10791  085A  00F1               	movwf	___wmul@multiplier+1
 10792  085B  0822               	movf	atoi@n,w
 10793  085C  00F0               	movwf	___wmul@multiplier
 10794  085D  300A               	movlw	10
 10795  085E  00F2               	movwf	___wmul@multiplicand
 10796  085F  3000               	movlw	0
 10797  0860  00F3               	movwf	___wmul@multiplicand+1
 10798  0861  319E  263B  3188   	fcall	___wmul
 10799  0864  0871               	movf	?___wmul+1,w
 10800  0865  00FA               	movwf	??_atoi+2
 10801  0866  0878               	movf	??_atoi,w
 10802  0867  0270               	subwf	?___wmul,w
 10803  0868  00F9               	movwf	??_atoi+1
 10804  0869  1C03               	skipc
 10805  086A  03FA               	decf	??_atoi+2,f
 10806  086B  0879               	movf	??_atoi+1,w
 10807  086C  3E30               	addlw	48
 10808  086D  0020               	movlb	0	; select bank0
 10809  086E  00A2               	movwf	atoi@n
 10810  086F  3000               	movlw	0
 10811  0870  3D7A               	addwfc	??_atoi+2,w
 10812  0871  00A3               	movwf	atoi@n+1
 10813  0872  2839               	goto	l940
 10814  0873                     l3815:
 10815  0873  0876               	movf	atoi@s,w
 10816  0874  0084               	movwf	4
 10817  0875  0877               	movf	atoi@s+1,w
 10818  0876  0085               	movwf	5
 10819  0877  0800               	movf	0,w	;code access
 10820  0878  3ED0               	addlw	208
 10821  0879  00F8               	movwf	??_atoi
 10822  087A  30FF               	movlw	255
 10823  087B  1803               	skipnc
 10824  087C  3000               	movlw	0
 10825  087D  00F9               	movwf	??_atoi+1
 10826  087E  3000               	movlw	0
 10827  087F  0279               	subwf	??_atoi+1,w
 10828  0880  300A               	movlw	10
 10829  0881  1903               	skipnz
 10830  0882  0278               	subwf	??_atoi,w
 10831  0883  1C03               	skipc
 10832  0884  2886               	goto	u5151
 10833  0885  2887               	goto	u5150
 10834  0886                     u5151:
 10835  0886  2852               	goto	l3809
 10836  0887                     u5150:
 10837  0887                     l3817:
 10838  0887  0020               	movlb	0	; select bank0
 10839  0888  0820               	movf	atoi@neg,w
 10840  0889  0421               	iorwf	atoi@neg+1,w
 10841  088A  1D03               	btfss	3,2
 10842  088B  288D               	goto	u5161
 10843  088C  288E               	goto	u5160
 10844  088D                     u5161:
 10845  088D  289A               	goto	l3821
 10846  088E                     u5160:
 10847  088E                     l3819:
 10848  088E  0922               	comf	atoi@n,w
 10849  088F  00F8               	movwf	??_atoi
 10850  0890  0923               	comf	atoi@n+1,w
 10851  0891  00F9               	movwf	??_atoi+1
 10852  0892  0AF8               	incf	??_atoi,f
 10853  0893  1903               	skipnz
 10854  0894  0AF9               	incf	??_atoi+1,f
 10855  0895  0878               	movf	??_atoi,w
 10856  0896  00F6               	movwf	?_atoi
 10857  0897  0879               	movf	??_atoi+1,w
 10858  0898  00F7               	movwf	?_atoi+1
 10859  0899  289E               	goto	l951
 10860  089A                     l3821:
 10861  089A  0823               	movf	atoi@n+1,w
 10862  089B  00F7               	movwf	?_atoi+1
 10863  089C  0822               	movf	atoi@n,w
 10864  089D  00F6               	movwf	?_atoi
 10865  089E                     l951:
 10866  089E  0008               	return
 10867  089F                     __end_of_atoi:
 10868                           
 10869                           	psect	text28
 10870  1EBB                     __ptext28:	
 10871 ;; *************** function _isspace *****************
 10872 ;; Defined at:
 10873 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
 10874 ;; Parameters:    Size  Location     Type
 10875 ;;  c               2    0[COMMON] int 
 10876 ;; Auto vars:     Size  Location     Type
 10877 ;;		None
 10878 ;; Return value:  Size  Location     Type
 10879 ;;                  2    0[COMMON] int 
 10880 ;; Registers used:
 10881 ;;		wreg, status,2, status,0
 10882 ;; Tracked objects:
 10883 ;;		On entry : 0/0
 10884 ;;		On exit  : 0/0
 10885 ;;		Unchanged: 0/0
 10886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10887 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10888 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10889 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10890 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10891 ;;Total ram usage:        5 bytes
 10892 ;; Hardware stack levels used: 1
 10893 ;; This function calls:
 10894 ;;		Nothing
 10895 ;; This function is called by:
 10896 ;;		_atoi
 10897 ;; This function uses a non-reentrant model
 10898 ;;
 10899                           
 10900  1EBB                     _isspace:	
 10901                           ;psect for function _isspace
 10902                           
 10903  1EBB                     l3465:	
 10904                           ;incstack = 0
 10905                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10906                           
 10907  1EBB  01F4               	clrf	_isspace$1017
 10908  1EBC  0AF4               	incf	_isspace$1017,f
 10909  1EBD                     l3467:
 10910  1EBD  3020               	movlw	32
 10911  1EBE  0670               	xorwf	isspace@c,w
 10912  1EBF  0471               	iorwf	isspace@c+1,w
 10913  1EC0  1903               	btfsc	3,2
 10914  1EC1  2EC3               	goto	u4591
 10915  1EC2  2EC4               	goto	u4590
 10916  1EC3                     u4591:
 10917  1EC3  2ED4               	goto	l3473
 10918  1EC4                     u4590:
 10919  1EC4                     l3469:
 10920  1EC4  0870               	movf	isspace@c,w
 10921  1EC5  3EF7               	addlw	247
 10922  1EC6  00F2               	movwf	??_isspace
 10923  1EC7  30FF               	movlw	255
 10924  1EC8  3D71               	addwfc	isspace@c+1,w
 10925  1EC9  00F3               	movwf	??_isspace+1
 10926  1ECA  3000               	movlw	0
 10927  1ECB  0273               	subwf	??_isspace+1,w
 10928  1ECC  3005               	movlw	5
 10929  1ECD  1903               	skipnz
 10930  1ECE  0272               	subwf	??_isspace,w
 10931  1ECF  1C03               	skipc
 10932  1ED0  2ED2               	goto	u4601
 10933  1ED1  2ED3               	goto	u4600
 10934  1ED2                     u4601:
 10935  1ED2  2ED4               	goto	l3473
 10936  1ED3                     u4600:
 10937  1ED3                     l3471:
 10938  1ED3  01F4               	clrf	_isspace$1017
 10939  1ED4                     l3473:
 10940  1ED4  0874               	movf	_isspace$1017,w
 10941  1ED5  00F2               	movwf	??_isspace
 10942  1ED6  01F3               	clrf	??_isspace+1
 10943  1ED7  0872               	movf	??_isspace,w
 10944  1ED8  00F0               	movwf	?_isspace
 10945  1ED9  0873               	movf	??_isspace+1,w
 10946  1EDA  00F1               	movwf	?_isspace+1
 10947  1EDB                     l975:
 10948  1EDB  0008               	return
 10949  1EDC                     __end_of_isspace:
 10950                           
 10951                           	psect	text29
 10952  1DD8                     __ptext29:	
 10953 ;; *************** function _isdigit *****************
 10954 ;; Defined at:
 10955 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
 10956 ;; Parameters:    Size  Location     Type
 10957 ;;  c               2    0[COMMON] int 
 10958 ;; Auto vars:     Size  Location     Type
 10959 ;;		None
 10960 ;; Return value:  Size  Location     Type
 10961 ;;                  2    0[COMMON] int 
 10962 ;; Registers used:
 10963 ;;		wreg, status,2, status,0
 10964 ;; Tracked objects:
 10965 ;;		On entry : 0/0
 10966 ;;		On exit  : 0/0
 10967 ;;		Unchanged: 0/0
 10968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10969 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10971 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10972 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10973 ;;Total ram usage:        6 bytes
 10974 ;; Hardware stack levels used: 1
 10975 ;; This function calls:
 10976 ;;		Nothing
 10977 ;; This function is called by:
 10978 ;;		_vfpfcnvrt
 10979 ;;		_atoi
 10980 ;; This function uses a non-reentrant model
 10981 ;;
 10982                           
 10983  1DD8                     _isdigit:	
 10984                           ;psect for function _isdigit
 10985                           
 10986  1DD8                     l3461:	
 10987                           ;incstack = 0
 10988                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10989                           
 10990  1DD8  0870               	movf	isdigit@c,w
 10991  1DD9  3ED0               	addlw	208
 10992  1DDA  00F2               	movwf	??_isdigit
 10993  1DDB  30FF               	movlw	255
 10994  1DDC  3D71               	addwfc	isdigit@c+1,w
 10995  1DDD  00F3               	movwf	??_isdigit+1
 10996  1DDE  3000               	movlw	0
 10997  1DDF  0273               	subwf	??_isdigit+1,w
 10998  1DE0  300A               	movlw	10
 10999  1DE1  1903               	skipnz
 11000  1DE2  0272               	subwf	??_isdigit,w
 11001  1DE3  1C03               	skipc
 11002  1DE4  2DE6               	goto	u4571
 11003  1DE5  2DE8               	goto	u4570
 11004  1DE6                     u4571:
 11005  1DE6  3001               	movlw	1
 11006  1DE7  2DE9               	goto	u4580
 11007  1DE8                     u4570:
 11008  1DE8  3000               	movlw	0
 11009  1DE9                     u4580:
 11010  1DE9  00F4               	movwf	??_isdigit+2
 11011  1DEA  01F5               	clrf	??_isdigit+3
 11012  1DEB  0874               	movf	??_isdigit+2,w
 11013  1DEC  00F0               	movwf	?_isdigit
 11014  1DED  0875               	movf	??_isdigit+3,w
 11015  1DEE  00F1               	movwf	?_isdigit+1
 11016  1DEF                     l967:
 11017  1DEF  0008               	return
 11018  1DF0                     __end_of_isdigit:
 11019                           
 11020                           	psect	text30
 11021  1E3B                     __ptext30:	
 11022 ;; *************** function ___wmul *****************
 11023 ;; Defined at:
 11024 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 11025 ;; Parameters:    Size  Location     Type
 11026 ;;  multiplier      2    0[COMMON] unsigned int 
 11027 ;;  multiplicand    2    2[COMMON] unsigned int 
 11028 ;; Auto vars:     Size  Location     Type
 11029 ;;  product         2    4[COMMON] unsigned int 
 11030 ;; Return value:  Size  Location     Type
 11031 ;;                  2    0[COMMON] unsigned int 
 11032 ;; Registers used:
 11033 ;;		wreg, status,2, status,0
 11034 ;; Tracked objects:
 11035 ;;		On entry : 0/0
 11036 ;;		On exit  : 0/0
 11037 ;;		Unchanged: 0/0
 11038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11039 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11040 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11042 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11043 ;;Total ram usage:        6 bytes
 11044 ;; Hardware stack levels used: 1
 11045 ;; This function calls:
 11046 ;;		Nothing
 11047 ;; This function is called by:
 11048 ;;		_atoi
 11049 ;; This function uses a non-reentrant model
 11050 ;;
 11051                           
 11052  1E3B                     ___wmul:	
 11053                           ;psect for function ___wmul
 11054                           
 11055  1E3B                     l2913:	
 11056                           ;incstack = 0
 11057                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11058                           
 11059  1E3B  01F4               	clrf	___wmul@product
 11060  1E3C  01F5               	clrf	___wmul@product+1
 11061  1E3D                     l2915:
 11062  1E3D  1C70               	btfss	___wmul@multiplier,0
 11063  1E3E  2E40               	goto	u3351
 11064  1E3F  2E41               	goto	u3350
 11065  1E40                     u3351:
 11066  1E40  2E45               	goto	l272
 11067  1E41                     u3350:
 11068  1E41                     l2917:
 11069  1E41  0872               	movf	___wmul@multiplicand,w
 11070  1E42  07F4               	addwf	___wmul@product,f
 11071  1E43  0873               	movf	___wmul@multiplicand+1,w
 11072  1E44  3DF5               	addwfc	___wmul@product+1,f
 11073  1E45                     l272:
 11074  1E45  3001               	movlw	1
 11075  1E46                     u3365:
 11076  1E46  35F2               	lslf	___wmul@multiplicand,f
 11077  1E47  0DF3               	rlf	___wmul@multiplicand+1,f
 11078  1E48  0B89               	decfsz	9,f
 11079  1E49  2E46               	goto	u3365
 11080  1E4A                     l2919:
 11081  1E4A  3001               	movlw	1
 11082  1E4B                     u3375:
 11083  1E4B  36F1               	lsrf	___wmul@multiplier+1,f
 11084  1E4C  0CF0               	rrf	___wmul@multiplier,f
 11085  1E4D  0B89               	decfsz	9,f
 11086  1E4E  2E4B               	goto	u3375
 11087  1E4F                     l2921:
 11088  1E4F  0870               	movf	___wmul@multiplier,w
 11089  1E50  0471               	iorwf	___wmul@multiplier+1,w
 11090  1E51  1D03               	btfss	3,2
 11091  1E52  2E54               	goto	u3381
 11092  1E53  2E55               	goto	u3380
 11093  1E54                     u3381:
 11094  1E54  2E3D               	goto	l2915
 11095  1E55                     u3380:
 11096  1E55                     l2923:
 11097  1E55  0875               	movf	___wmul@product+1,w
 11098  1E56  00F1               	movwf	?___wmul+1
 11099  1E57  0874               	movf	___wmul@product,w
 11100  1E58  00F0               	movwf	?___wmul
 11101  1E59                     l274:
 11102  1E59  0008               	return
 11103  1E5A                     __end_of___wmul:
 11104                           
 11105                           	psect	text31
 11106  0007                     __ptext31:	
 11107 ;; *************** function ___xxtofl *****************
 11108 ;; Defined at:
 11109 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
 11110 ;; Parameters:    Size  Location     Type
 11111 ;;  sign            1    wreg     unsigned char 
 11112 ;;  val             4    0[COMMON] long 
 11113 ;; Auto vars:     Size  Location     Type
 11114 ;;  sign            1    8[COMMON] unsigned char 
 11115 ;;  arg             4   10[COMMON] unsigned long 
 11116 ;;  exp             1    9[COMMON] unsigned char 
 11117 ;; Return value:  Size  Location     Type
 11118 ;;                  4    0[COMMON] unsigned char 
 11119 ;; Registers used:
 11120 ;;		wreg, status,2, status,0
 11121 ;; Tracked objects:
 11122 ;;		On entry : 0/0
 11123 ;;		On exit  : 0/0
 11124 ;;		Unchanged: 0/0
 11125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11126 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11127 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11128 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11129 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11130 ;;Total ram usage:       14 bytes
 11131 ;; Hardware stack levels used: 1
 11132 ;; This function calls:
 11133 ;;		Nothing
 11134 ;; This function is called by:
 11135 ;;		_main
 11136 ;; This function uses a non-reentrant model
 11137 ;;
 11138                           
 11139  0007                     ___xxtofl:	
 11140                           ;psect for function ___xxtofl
 11141                           
 11142                           
 11143                           ;incstack = 0
 11144                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 11145                           ;___xxtofl@sign stored from wreg
 11146  0007  00F8               	movwf	___xxtofl@sign
 11147  0008                     l4127:
 11148  0008  0878               	movf	___xxtofl@sign,w
 11149  0009  1903               	btfsc	3,2
 11150  000A  280C               	goto	u5461
 11151  000B  280D               	goto	u5460
 11152  000C                     u5461:
 11153  000C  2821               	goto	l4133
 11154  000D                     u5460:
 11155  000D                     l4129:
 11156  000D  1FF3               	btfss	___xxtofl@val+3,7
 11157  000E  2810               	goto	u5471
 11158  000F  2811               	goto	u5470
 11159  0010                     u5471:
 11160  0010  2821               	goto	l4133
 11161  0011                     u5470:
 11162  0011                     l4131:
 11163  0011  0970               	comf	___xxtofl@val,w
 11164  0012  00FA               	movwf	___xxtofl@arg
 11165  0013  0971               	comf	___xxtofl@val+1,w
 11166  0014  00FB               	movwf	___xxtofl@arg+1
 11167  0015  0972               	comf	___xxtofl@val+2,w
 11168  0016  00FC               	movwf	___xxtofl@arg+2
 11169  0017  0973               	comf	___xxtofl@val+3,w
 11170  0018  00FD               	movwf	___xxtofl@arg+3
 11171  0019  0AFA               	incf	___xxtofl@arg,f
 11172  001A  1903               	skipnz
 11173  001B  0AFB               	incf	___xxtofl@arg+1,f
 11174  001C  1903               	skipnz
 11175  001D  0AFC               	incf	___xxtofl@arg+2,f
 11176  001E  1903               	skipnz
 11177  001F  0AFD               	incf	___xxtofl@arg+3,f
 11178  0020  2829               	goto	l713
 11179  0021                     l4133:
 11180  0021  0873               	movf	___xxtofl@val+3,w
 11181  0022  00FD               	movwf	___xxtofl@arg+3
 11182  0023  0872               	movf	___xxtofl@val+2,w
 11183  0024  00FC               	movwf	___xxtofl@arg+2
 11184  0025  0871               	movf	___xxtofl@val+1,w
 11185  0026  00FB               	movwf	___xxtofl@arg+1
 11186  0027  0870               	movf	___xxtofl@val,w
 11187  0028  00FA               	movwf	___xxtofl@arg
 11188  0029                     l713:
 11189  0029  0873               	movf	___xxtofl@val+3,w
 11190  002A  0472               	iorwf	___xxtofl@val+2,w
 11191  002B  0471               	iorwf	___xxtofl@val+1,w
 11192  002C  0470               	iorwf	___xxtofl@val,w
 11193  002D  1D03               	skipz
 11194  002E  2830               	goto	u5481
 11195  002F  2831               	goto	u5480
 11196  0030                     u5481:
 11197  0030  283A               	goto	l4139
 11198  0031                     u5480:
 11199  0031                     l4135:
 11200  0031  3000               	movlw	0
 11201  0032  00F3               	movwf	?___xxtofl+3
 11202  0033  3000               	movlw	0
 11203  0034  00F2               	movwf	?___xxtofl+2
 11204  0035  3000               	movlw	0
 11205  0036  00F1               	movwf	?___xxtofl+1
 11206  0037  3000               	movlw	0
 11207  0038  00F0               	movwf	?___xxtofl
 11208  0039  28B2               	goto	l715
 11209  003A                     l4139:
 11210  003A  3096               	movlw	150
 11211  003B  00F4               	movwf	??___xxtofl
 11212  003C  0874               	movf	??___xxtofl,w
 11213  003D  00F9               	movwf	___xxtofl@exp
 11214  003E  284A               	goto	l4143
 11215  003F                     l4141:
 11216  003F  3001               	movlw	1
 11217  0040  00F4               	movwf	??___xxtofl
 11218  0041  0874               	movf	??___xxtofl,w
 11219  0042  07F9               	addwf	___xxtofl@exp,f
 11220  0043  3001               	movlw	1
 11221  0044                     u5495:
 11222  0044  36FD               	lsrf	___xxtofl@arg+3,f
 11223  0045  0CFC               	rrf	___xxtofl@arg+2,f
 11224  0046  0CFB               	rrf	___xxtofl@arg+1,f
 11225  0047  0CFA               	rrf	___xxtofl@arg,f
 11226  0048  0B89               	decfsz	9,f
 11227  0049  2844               	goto	u5495
 11228  004A                     l4143:
 11229  004A  30FE               	movlw	254
 11230  004B  057D               	andwf	___xxtofl@arg+3,w
 11231  004C  1D03               	btfss	3,2
 11232  004D  284F               	goto	u5501
 11233  004E  2850               	goto	u5500
 11234  004F                     u5501:
 11235  004F  283F               	goto	l4141
 11236  0050                     u5500:
 11237  0050  2864               	goto	l719
 11238  0051                     l4145:
 11239  0051  3001               	movlw	1
 11240  0052  00F4               	movwf	??___xxtofl
 11241  0053  0874               	movf	??___xxtofl,w
 11242  0054  07F9               	addwf	___xxtofl@exp,f
 11243  0055                     l4147:
 11244  0055  3001               	movlw	1
 11245  0056  07FA               	addwf	___xxtofl@arg,f
 11246  0057  3000               	movlw	0
 11247  0058  3DFB               	addwfc	___xxtofl@arg+1,f
 11248  0059  3000               	movlw	0
 11249  005A  3DFC               	addwfc	___xxtofl@arg+2,f
 11250  005B  3000               	movlw	0
 11251  005C  3DFD               	addwfc	___xxtofl@arg+3,f
 11252  005D                     l4149:
 11253  005D  3001               	movlw	1
 11254  005E                     u5515:
 11255  005E  36FD               	lsrf	___xxtofl@arg+3,f
 11256  005F  0CFC               	rrf	___xxtofl@arg+2,f
 11257  0060  0CFB               	rrf	___xxtofl@arg+1,f
 11258  0061  0CFA               	rrf	___xxtofl@arg,f
 11259  0062  0B89               	decfsz	9,f
 11260  0063  285E               	goto	u5515
 11261  0064                     l719:
 11262  0064  30FF               	movlw	255
 11263  0065  057D               	andwf	___xxtofl@arg+3,w
 11264  0066  1D03               	btfss	3,2
 11265  0067  2869               	goto	u5521
 11266  0068  286A               	goto	u5520
 11267  0069                     u5521:
 11268  0069  2851               	goto	l4145
 11269  006A                     u5520:
 11270  006A  2874               	goto	l4153
 11271  006B                     l4151:
 11272  006B  3001               	movlw	1
 11273  006C  02F9               	subwf	___xxtofl@exp,f
 11274  006D  3001               	movlw	1
 11275  006E                     u5535:
 11276  006E  35FA               	lslf	___xxtofl@arg,f
 11277  006F  0DFB               	rlf	___xxtofl@arg+1,f
 11278  0070  0DFC               	rlf	___xxtofl@arg+2,f
 11279  0071  0DFD               	rlf	___xxtofl@arg+3,f
 11280  0072  0B89               	decfsz	9,f
 11281  0073  286E               	goto	u5535
 11282  0074                     l4153:
 11283  0074  1BFC               	btfsc	___xxtofl@arg+2,7
 11284  0075  2877               	goto	u5541
 11285  0076  2878               	goto	u5540
 11286  0077                     u5541:
 11287  0077  287E               	goto	l726
 11288  0078                     u5540:
 11289  0078                     l4155:
 11290  0078  3002               	movlw	2
 11291  0079  0279               	subwf	___xxtofl@exp,w
 11292  007A  1803               	skipnc
 11293  007B  287D               	goto	u5551
 11294  007C  287E               	goto	u5550
 11295  007D                     u5551:
 11296  007D  286B               	goto	l4151
 11297  007E                     u5550:
 11298  007E                     l726:
 11299  007E  1879               	btfsc	___xxtofl@exp,0
 11300  007F  2881               	goto	u5561
 11301  0080  2882               	goto	u5560
 11302  0081                     u5561:
 11303  0081  288A               	goto	l727
 11304  0082                     u5560:
 11305  0082                     l4157:
 11306  0082  30FF               	movlw	255
 11307  0083  05FA               	andwf	___xxtofl@arg,f
 11308  0084  30FF               	movlw	255
 11309  0085  05FB               	andwf	___xxtofl@arg+1,f
 11310  0086  307F               	movlw	127
 11311  0087  05FC               	andwf	___xxtofl@arg+2,f
 11312  0088  30FF               	movlw	255
 11313  0089  05FD               	andwf	___xxtofl@arg+3,f
 11314  008A                     l727:
 11315  008A  1003               	clrc
 11316  008B  0CF9               	rrf	___xxtofl@exp,f
 11317  008C                     l4159:
 11318  008C  0879               	movf	___xxtofl@exp,w
 11319  008D  00F4               	movwf	??___xxtofl
 11320  008E  01F5               	clrf	??___xxtofl+1
 11321  008F  01F6               	clrf	??___xxtofl+2
 11322  0090  01F7               	clrf	??___xxtofl+3
 11323  0091  3018               	movlw	24
 11324  0092                     u5575:
 11325  0092  35F4               	lslf	??___xxtofl,f
 11326  0093  0DF5               	rlf	??___xxtofl+1,f
 11327  0094  0DF6               	rlf	??___xxtofl+2,f
 11328  0095  0DF7               	rlf	??___xxtofl+3,f
 11329  0096                     u5570:
 11330  0096  0B89               	decfsz	9,f
 11331  0097  2892               	goto	u5575
 11332  0098  0874               	movf	??___xxtofl,w
 11333  0099  04FA               	iorwf	___xxtofl@arg,f
 11334  009A  0875               	movf	??___xxtofl+1,w
 11335  009B  04FB               	iorwf	___xxtofl@arg+1,f
 11336  009C  0876               	movf	??___xxtofl+2,w
 11337  009D  04FC               	iorwf	___xxtofl@arg+2,f
 11338  009E  0877               	movf	??___xxtofl+3,w
 11339  009F  04FD               	iorwf	___xxtofl@arg+3,f
 11340  00A0                     l4161:
 11341  00A0  0878               	movf	___xxtofl@sign,w
 11342  00A1  1903               	btfsc	3,2
 11343  00A2  28A4               	goto	u5581
 11344  00A3  28A5               	goto	u5580
 11345  00A4                     u5581:
 11346  00A4  28AA               	goto	l4167
 11347  00A5                     u5580:
 11348  00A5                     l4163:
 11349  00A5  1FF3               	btfss	___xxtofl@val+3,7
 11350  00A6  28A8               	goto	u5591
 11351  00A7  28A9               	goto	u5590
 11352  00A8                     u5591:
 11353  00A8  28AA               	goto	l4167
 11354  00A9                     u5590:
 11355  00A9                     l4165:
 11356  00A9  17FD               	bsf	___xxtofl@arg+3,7
 11357  00AA                     l4167:
 11358  00AA  087D               	movf	___xxtofl@arg+3,w
 11359  00AB  00F3               	movwf	?___xxtofl+3
 11360  00AC  087C               	movf	___xxtofl@arg+2,w
 11361  00AD  00F2               	movwf	?___xxtofl+2
 11362  00AE  087B               	movf	___xxtofl@arg+1,w
 11363  00AF  00F1               	movwf	?___xxtofl+1
 11364  00B0  087A               	movf	___xxtofl@arg,w
 11365  00B1  00F0               	movwf	?___xxtofl
 11366  00B2                     l715:
 11367  00B2  0008               	return
 11368  00B3                     __end_of___xxtofl:
 11369                           
 11370                           	psect	text32
 11371  1E9A                     __ptext32:	
 11372 ;; *************** function _LCD_Write_Text *****************
 11373 ;; Defined at:
 11374 ;;		line 104 in file "LCD_LIB.c"
 11375 ;; Parameters:    Size  Location     Type
 11376 ;;  fila            1    wreg     unsigned char 
 11377 ;;  col             1   11[COMMON] unsigned char 
 11378 ;;  text            1   12[COMMON] PTR unsigned char 
 11379 ;;		 -> strLCD(20), 
 11380 ;; Auto vars:     Size  Location     Type
 11381 ;;  fila            1    0[BANK0 ] unsigned char 
 11382 ;; Return value:  Size  Location     Type
 11383 ;;                  1    wreg      void 
 11384 ;; Registers used:
 11385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11386 ;; Tracked objects:
 11387 ;;		On entry : 0/0
 11388 ;;		On exit  : 0/0
 11389 ;;		Unchanged: 0/0
 11390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11392 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11393 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11394 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11395 ;;Total ram usage:        4 bytes
 11396 ;; Hardware stack levels used: 1
 11397 ;; Hardware stack levels required when called: 3
 11398 ;; This function calls:
 11399 ;;		_LCD_Set_Cursor
 11400 ;;		_LCD_Write_Cp
 11401 ;; This function is called by:
 11402 ;;		_main
 11403 ;; This function uses a non-reentrant model
 11404 ;;
 11405                           
 11406  1E9A                     _LCD_Write_Text:	
 11407                           ;psect for function _LCD_Write_Text
 11408                           
 11409                           
 11410                           ;incstack = 0
 11411                           ; Regs used in _LCD_Write_Text: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11412                           ;LCD_Write_Text@fila stored from wreg
 11413  1E9A  0020               	movlb	0	; select bank0
 11414  1E9B  00A0               	movwf	LCD_Write_Text@fila
 11415  1E9C                     l4119:
 11416                           
 11417                           ;LCD_LIB.c: 105:     LCD_Set_Cursor(fila, col);
 11418  1E9C  087B               	movf	LCD_Write_Text@col,w
 11419  1E9D  00FD               	movwf	??_LCD_Write_Text
 11420  1E9E  087D               	movf	??_LCD_Write_Text,w
 11421  1E9F  00F6               	movwf	LCD_Set_Cursor@col
 11422  1EA0  0820               	movf	LCD_Write_Text@fila,w
 11423  1EA1  319F  2796  319E   	fcall	_LCD_Set_Cursor
 11424                           
 11425                           ;LCD_LIB.c: 106:     while(*text){
 11426  1EA4  2EB1               	goto	l4125
 11427  1EA5                     l4121:
 11428                           
 11429                           ;LCD_LIB.c: 107:         LCD_Write_Cp(*text);
 11430  1EA5  087C               	movf	LCD_Write_Text@text,w
 11431  1EA6  0086               	movwf	6
 11432  1EA7  3001               	movlw	1	; select bank2/3
 11433  1EA8  0087               	movwf	7
 11434  1EA9  0801               	movf	1,w
 11435  1EAA  319E  2608  319E   	fcall	_LCD_Write_Cp
 11436  1EAD                     l4123:
 11437                           
 11438                           ;LCD_LIB.c: 108:         text++;
 11439  1EAD  3001               	movlw	1
 11440  1EAE  00FD               	movwf	??_LCD_Write_Text
 11441  1EAF  087D               	movf	??_LCD_Write_Text,w
 11442  1EB0  07FC               	addwf	LCD_Write_Text@text,f
 11443  1EB1                     l4125:
 11444                           
 11445                           ;LCD_LIB.c: 106:     while(*text){
 11446  1EB1  087C               	movf	LCD_Write_Text@text,w
 11447  1EB2  0086               	movwf	6
 11448  1EB3  3001               	movlw	1	; select bank2/3
 11449  1EB4  0087               	movwf	7
 11450  1EB5  0801               	movf	1,w
 11451  1EB6  1D03               	btfss	3,2
 11452  1EB7  2EB9               	goto	u5451
 11453  1EB8  2EBA               	goto	u5450
 11454  1EB9                     u5451:
 11455  1EB9  2EA5               	goto	l4121
 11456  1EBA                     u5450:
 11457  1EBA                     l122:
 11458  1EBA  0008               	return
 11459  1EBB                     __end_of_LCD_Write_Text:
 11460                           
 11461                           	psect	text33
 11462  1E08                     __ptext33:	
 11463 ;; *************** function _LCD_Write_Cp *****************
 11464 ;; Defined at:
 11465 ;;		line 72 in file "LCD_LIB.c"
 11466 ;; Parameters:    Size  Location     Type
 11467 ;;  letra           1    wreg     unsigned char 
 11468 ;; Auto vars:     Size  Location     Type
 11469 ;;  letra           1    5[COMMON] unsigned char 
 11470 ;;  NibbleL         1    4[COMMON] unsigned char 
 11471 ;;  NibbleH         1    3[COMMON] unsigned char 
 11472 ;; Return value:  Size  Location     Type
 11473 ;;                  1    wreg      void 
 11474 ;; Registers used:
 11475 ;;		wreg, status,2, status,0, pclath, cstack
 11476 ;; Tracked objects:
 11477 ;;		On entry : 0/0
 11478 ;;		On exit  : 0/0
 11479 ;;		Unchanged: 0/0
 11480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11482 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11483 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11484 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11485 ;;Total ram usage:        5 bytes
 11486 ;; Hardware stack levels used: 1
 11487 ;; Hardware stack levels required when called: 1
 11488 ;; This function calls:
 11489 ;;		_Load_Data
 11490 ;; This function is called by:
 11491 ;;		_main
 11492 ;;		_LCD_Write_Text
 11493 ;;		_LCD_Write_Text_Cp
 11494 ;;		_LCD_Write
 11495 ;; This function uses a non-reentrant model
 11496 ;;
 11497                           
 11498  1E08                     _LCD_Write_Cp:	
 11499                           ;psect for function _LCD_Write_Cp
 11500                           
 11501                           
 11502                           ;incstack = 0
 11503                           ; Regs used in _LCD_Write_Cp: [wreg+status,2+status,0+pclath+cstack]
 11504                           ;LCD_Write_Cp@letra stored from wreg
 11505  1E08  00F5               	movwf	LCD_Write_Cp@letra
 11506  1E09                     l4023:
 11507                           
 11508                           ;LCD_LIB.c: 73:     char NibbleH, NibbleL;;LCD_LIB.c: 74:     NibbleH = letra>>4;
 11509  1E09  0875               	movf	LCD_Write_Cp@letra,w
 11510  1E0A  00F1               	movwf	??_LCD_Write_Cp
 11511  1E0B  3004               	movlw	4
 11512  1E0C                     u5425:
 11513  1E0C  36F1               	lsrf	??_LCD_Write_Cp,f
 11514  1E0D  0B89               	decfsz	9,f
 11515  1E0E  2E0C               	goto	u5425
 11516  1E0F  0871               	movf	??_LCD_Write_Cp,w
 11517  1E10  00F2               	movwf	??_LCD_Write_Cp+1
 11518  1E11  0872               	movf	??_LCD_Write_Cp+1,w
 11519  1E12  00F3               	movwf	LCD_Write_Cp@NibbleH
 11520  1E13                     l4025:
 11521                           
 11522                           ;LCD_LIB.c: 75:     NibbleL = letra & 0x0F;
 11523  1E13  0875               	movf	LCD_Write_Cp@letra,w
 11524  1E14  390F               	andlw	15
 11525  1E15  00F1               	movwf	??_LCD_Write_Cp
 11526  1E16  0871               	movf	??_LCD_Write_Cp,w
 11527  1E17  00F4               	movwf	LCD_Write_Cp@NibbleL
 11528  1E18                     l4027:
 11529                           
 11530                           ;LCD_LIB.c: 76:     Load_Data(NibbleH);
 11531  1E18  0873               	movf	LCD_Write_Cp@NibbleH,w
 11532  1E19  319F  276D  319E   	fcall	_Load_Data
 11533  1E1C                     l4029:
 11534                           
 11535                           ;LCD_LIB.c: 77:     Load_Data(NibbleL);
 11536  1E1C  0874               	movf	LCD_Write_Cp@NibbleL,w
 11537  1E1D  319F  276D  319E   	fcall	_Load_Data
 11538  1E20                     l98:
 11539  1E20  0008               	return
 11540  1E21                     __end_of_LCD_Write_Cp:
 11541                           
 11542                           	psect	text34
 11543  1F6D                     __ptext34:	
 11544 ;; *************** function _Load_Data *****************
 11545 ;; Defined at:
 11546 ;;		line 20 in file "LCD_LIB.c"
 11547 ;; Parameters:    Size  Location     Type
 11548 ;;  data            1    wreg     unsigned char 
 11549 ;; Auto vars:     Size  Location     Type
 11550 ;;  data            1    0[COMMON] unsigned char 
 11551 ;; Return value:  Size  Location     Type
 11552 ;;                  1    wreg      void 
 11553 ;; Registers used:
 11554 ;;		wreg
 11555 ;; Tracked objects:
 11556 ;;		On entry : 0/0
 11557 ;;		On exit  : 0/0
 11558 ;;		Unchanged: 0/0
 11559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11561 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11563 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11564 ;;Total ram usage:        1 bytes
 11565 ;; Hardware stack levels used: 1
 11566 ;; This function calls:
 11567 ;;		Nothing
 11568 ;; This function is called by:
 11569 ;;		_LCD_Write_Cp
 11570 ;; This function uses a non-reentrant model
 11571 ;;
 11572                           
 11573  1F6D                     _Load_Data:	
 11574                           ;psect for function _Load_Data
 11575                           
 11576                           
 11577                           ;incstack = 0
 11578                           ; Regs used in _Load_Data: [wreg]
 11579                           ;Load_Data@data stored from wreg
 11580  1F6D  00F0               	movwf	Load_Data@data
 11581  1F6E                     l3865:
 11582                           
 11583                           ;LCD_LIB.c: 21:     LATDbits.LATD0 = 1;
 11584  1F6E  0022               	movlb	2	; select bank2
 11585  1F6F  140F               	bsf	15,0	;volatile
 11586  1F70                     l3867:
 11587                           
 11588                           ;LCD_LIB.c: 23:     if( (data & 1) == 0 ) LATDbits.LATD4 = 0; else LATDbits.LATD4 = 1;
 11589  1F70  1870               	btfsc	Load_Data@data,0
 11590  1F71  2F73               	goto	u5231
 11591  1F72  2F74               	goto	u5230
 11592  1F73                     u5231:
 11593  1F73  2F76               	goto	l81
 11594  1F74                     u5230:
 11595  1F74                     l3869:
 11596  1F74  120F               	bcf	15,4	;volatile
 11597  1F75  2F77               	goto	l3871
 11598  1F76                     l81:
 11599  1F76  160F               	bsf	15,4	;volatile
 11600  1F77                     l3871:
 11601                           
 11602                           ;LCD_LIB.c: 24:     if( (data & 2) == 0 ) LATDbits.LATD5 = 0; else LATDbits.LATD5 = 1;
 11603  1F77  18F0               	btfsc	Load_Data@data,1
 11604  1F78  2F7A               	goto	u5241
 11605  1F79  2F7B               	goto	u5240
 11606  1F7A                     u5241:
 11607  1F7A  2F7D               	goto	l83
 11608  1F7B                     u5240:
 11609  1F7B                     l3873:
 11610  1F7B  128F               	bcf	15,5	;volatile
 11611  1F7C  2F7E               	goto	l3875
 11612  1F7D                     l83:
 11613  1F7D  168F               	bsf	15,5	;volatile
 11614  1F7E                     l3875:
 11615                           
 11616                           ;LCD_LIB.c: 25:     if( (data & 4) == 0 ) LATDbits.LATD6 = 0; else LATDbits.LATD6 = 1;
 11617  1F7E  1970               	btfsc	Load_Data@data,2
 11618  1F7F  2F81               	goto	u5251
 11619  1F80  2F82               	goto	u5250
 11620  1F81                     u5251:
 11621  1F81  2F84               	goto	l85
 11622  1F82                     u5250:
 11623  1F82                     l3877:
 11624  1F82  130F               	bcf	15,6	;volatile
 11625  1F83  2F85               	goto	l3879
 11626  1F84                     l85:
 11627  1F84  170F               	bsf	15,6	;volatile
 11628  1F85                     l3879:
 11629                           
 11630                           ;LCD_LIB.c: 26:     if( (data & 8) == 0 ) LATDbits.LATD7 = 0; else LATDbits.LATD7 = 1;
 11631  1F85  19F0               	btfsc	Load_Data@data,3
 11632  1F86  2F88               	goto	u5261
 11633  1F87  2F89               	goto	u5260
 11634  1F88                     u5261:
 11635  1F88  2F8B               	goto	l87
 11636  1F89                     u5260:
 11637  1F89                     l3881:
 11638  1F89  138F               	bcf	15,7	;volatile
 11639  1F8A  2F8C               	goto	l88
 11640  1F8B                     l87:
 11641  1F8B  178F               	bsf	15,7	;volatile
 11642  1F8C                     l88:
 11643                           
 11644                           ;LCD_LIB.c: 28:     LATDbits.LATD2 = 0;
 11645  1F8C  110F               	bcf	15,2	;volatile
 11646                           
 11647                           ;LCD_LIB.c: 29:     LATDbits.LATD2 = 1;
 11648  1F8D  150F               	bsf	15,2	;volatile
 11649                           
 11650                           ;LCD_LIB.c: 30:     LATDbits.LATD2 = 0;
 11651  1F8E  110F               	bcf	15,2	;volatile
 11652  1F8F                     l3883:
 11653                           
 11654                           ;LCD_LIB.c: 32:     _delay((unsigned long)((300)*(20000000UL/4000000.0)));
 11655  1F8F  30D6               	movlw	214
 11656  1F90                     u5627:
 11657  1F90  3200               	nop2
 11658  1F91  3200               	nop2
 11659  1F92  0B89               	decfsz	9,f
 11660  1F93  2F90               	goto	u5627
 11661  1F94  3200               	nop2
 11662  1F95                     l89:
 11663  1F95  0008               	return
 11664  1F96                     __end_of_Load_Data:
 11665                           
 11666                           	psect	text35
 11667  1F96                     __ptext35:	
 11668 ;; *************** function _LCD_Set_Cursor *****************
 11669 ;; Defined at:
 11670 ;;		line 90 in file "LCD_LIB.c"
 11671 ;; Parameters:    Size  Location     Type
 11672 ;;  fila            1    wreg     unsigned char 
 11673 ;;  col             1    6[COMMON] unsigned char 
 11674 ;; Auto vars:     Size  Location     Type
 11675 ;;  fila            1    9[COMMON] unsigned char 
 11676 ;;  pos             1   10[COMMON] unsigned char 
 11677 ;; Return value:  Size  Location     Type
 11678 ;;                  1    wreg      void 
 11679 ;; Registers used:
 11680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11681 ;; Tracked objects:
 11682 ;;		On entry : 0/0
 11683 ;;		On exit  : 0/0
 11684 ;;		Unchanged: 0/0
 11685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11686 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11687 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11688 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11689 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11690 ;;Total ram usage:        5 bytes
 11691 ;; Hardware stack levels used: 1
 11692 ;; Hardware stack levels required when called: 2
 11693 ;; This function calls:
 11694 ;;		_LCD_Cmd
 11695 ;; This function is called by:
 11696 ;;		_LCD_Write_Text
 11697 ;;		_LCD_Write
 11698 ;; This function uses a non-reentrant model
 11699 ;;
 11700                           
 11701  1F96                     _LCD_Set_Cursor:	
 11702                           ;psect for function _LCD_Set_Cursor
 11703                           
 11704                           
 11705                           ;incstack = 0
 11706                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11707                           ;LCD_Set_Cursor@fila stored from wreg
 11708  1F96  00F9               	movwf	LCD_Set_Cursor@fila
 11709  1F97                     l4031:
 11710                           
 11711                           ;LCD_LIB.c: 91:     char pos;;LCD_LIB.c: 92:     switch(fila){
 11712  1F97  2FB0               	goto	l4043
 11713  1F98                     l4033:
 11714  1F98  0876               	movf	LCD_Set_Cursor@col,w
 11715  1F99  3E7F               	addlw	127
 11716  1F9A  00F7               	movwf	??_LCD_Set_Cursor
 11717  1F9B  0877               	movf	??_LCD_Set_Cursor,w
 11718  1F9C  00FA               	movwf	LCD_Set_Cursor@pos
 11719  1F9D  2FC6               	goto	l4045
 11720  1F9E                     l4035:
 11721  1F9E  0876               	movf	LCD_Set_Cursor@col,w
 11722  1F9F  3EBF               	addlw	191
 11723  1FA0  00F7               	movwf	??_LCD_Set_Cursor
 11724  1FA1  0877               	movf	??_LCD_Set_Cursor,w
 11725  1FA2  00FA               	movwf	LCD_Set_Cursor@pos
 11726  1FA3  2FC6               	goto	l4045
 11727  1FA4                     l4037:
 11728  1FA4  0876               	movf	LCD_Set_Cursor@col,w
 11729  1FA5  3E93               	addlw	147
 11730  1FA6  00F7               	movwf	??_LCD_Set_Cursor
 11731  1FA7  0877               	movf	??_LCD_Set_Cursor,w
 11732  1FA8  00FA               	movwf	LCD_Set_Cursor@pos
 11733  1FA9  2FC6               	goto	l4045
 11734  1FAA                     l4039:
 11735  1FAA  0876               	movf	LCD_Set_Cursor@col,w
 11736  1FAB  3ED3               	addlw	211
 11737  1FAC  00F7               	movwf	??_LCD_Set_Cursor
 11738  1FAD  0877               	movf	??_LCD_Set_Cursor,w
 11739  1FAE  00FA               	movwf	LCD_Set_Cursor@pos
 11740  1FAF  2FC6               	goto	l4045
 11741  1FB0                     l4043:
 11742  1FB0  0879               	movf	LCD_Set_Cursor@fila,w
 11743  1FB1  00F7               	movwf	??_LCD_Set_Cursor
 11744  1FB2  01F8               	clrf	??_LCD_Set_Cursor+1
 11745                           
 11746                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11747                           ; Switch size 1, requested type "simple"
 11748                           ; Number of cases is 1, Range of values is 0 to 0
 11749                           ; switch strategies available:
 11750                           ; Name         Instructions Cycles
 11751                           ; simple_byte            4     3 (average)
 11752                           ; direct_byte            8     6 (fixed)
 11753                           ; jumptable            260     6 (fixed)
 11754                           ;	Chosen strategy is simple_byte
 11755  1FB3  0878               	movf	??_LCD_Set_Cursor+1,w
 11756  1FB4  3A00               	xorlw	0	; case 0
 11757  1FB5  1903               	skipnz
 11758  1FB6  2FB8               	goto	l4297
 11759  1FB7  2FC6               	goto	l4045
 11760  1FB8                     l4297:
 11761                           
 11762                           ; Switch size 1, requested type "simple"
 11763                           ; Number of cases is 4, Range of values is 1 to 4
 11764                           ; switch strategies available:
 11765                           ; Name         Instructions Cycles
 11766                           ; simple_byte           13     7 (average)
 11767                           ; direct_byte           17     9 (fixed)
 11768                           ; jumptable            263     9 (fixed)
 11769                           ;	Chosen strategy is simple_byte
 11770  1FB8  0877               	movf	??_LCD_Set_Cursor,w
 11771  1FB9  3A01               	xorlw	1	; case 1
 11772  1FBA  1903               	skipnz
 11773  1FBB  2F98               	goto	l4033
 11774  1FBC  3A03               	xorlw	3	; case 2
 11775  1FBD  1903               	skipnz
 11776  1FBE  2F9E               	goto	l4035
 11777  1FBF  3A01               	xorlw	1	; case 3
 11778  1FC0  1903               	skipnz
 11779  1FC1  2FA4               	goto	l4037
 11780  1FC2  3A07               	xorlw	7	; case 4
 11781  1FC3  1903               	skipnz
 11782  1FC4  2FAA               	goto	l4039
 11783  1FC5  2FC6               	goto	l4045
 11784  1FC6                     l4045:
 11785                           
 11786                           ;LCD_LIB.c: 98:     LCD_Cmd(pos);
 11787  1FC6  087A               	movf	LCD_Set_Cursor@pos,w
 11788  1FC7  319E  265A  319F   	fcall	_LCD_Cmd
 11789  1FCA                     l113:
 11790  1FCA  0008               	return
 11791  1FCB                     __end_of_LCD_Set_Cursor:
 11792                           
 11793                           	psect	text36
 11794  1E5A                     __ptext36:	
 11795 ;; *************** function _LCD_Cmd *****************
 11796 ;; Defined at:
 11797 ;;		line 64 in file "LCD_LIB.c"
 11798 ;; Parameters:    Size  Location     Type
 11799 ;;  cmd             1    wreg     unsigned char 
 11800 ;; Auto vars:     Size  Location     Type
 11801 ;;  cmd             1    5[COMMON] unsigned char 
 11802 ;;  NibbleL         1    4[COMMON] unsigned char 
 11803 ;;  NibbleH         1    3[COMMON] unsigned char 
 11804 ;; Return value:  Size  Location     Type
 11805 ;;                  1    wreg      void 
 11806 ;; Registers used:
 11807 ;;		wreg, status,2, status,0, pclath, cstack
 11808 ;; Tracked objects:
 11809 ;;		On entry : 0/0
 11810 ;;		On exit  : 0/0
 11811 ;;		Unchanged: 0/0
 11812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11814 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11815 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11816 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11817 ;;Total ram usage:        5 bytes
 11818 ;; Hardware stack levels used: 1
 11819 ;; Hardware stack levels required when called: 1
 11820 ;; This function calls:
 11821 ;;		_Load_Cmd
 11822 ;; This function is called by:
 11823 ;;		_main
 11824 ;;		_LCD_Set_Cursor
 11825 ;; This function uses a non-reentrant model
 11826 ;;
 11827                           
 11828  1E5A                     _LCD_Cmd:	
 11829                           ;psect for function _LCD_Cmd
 11830                           
 11831                           
 11832                           ;incstack = 0
 11833                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11834                           ;LCD_Cmd@cmd stored from wreg
 11835  1E5A  00F5               	movwf	LCD_Cmd@cmd
 11836  1E5B                     l3855:
 11837                           
 11838                           ;LCD_LIB.c: 65:     char NibbleH, NibbleL;;LCD_LIB.c: 66:     NibbleH = cmd>>4;
 11839  1E5B  0875               	movf	LCD_Cmd@cmd,w
 11840  1E5C  00F1               	movwf	??_LCD_Cmd
 11841  1E5D  3004               	movlw	4
 11842  1E5E                     u5225:
 11843  1E5E  36F1               	lsrf	??_LCD_Cmd,f
 11844  1E5F  0B89               	decfsz	9,f
 11845  1E60  2E5E               	goto	u5225
 11846  1E61  0871               	movf	??_LCD_Cmd,w
 11847  1E62  00F2               	movwf	??_LCD_Cmd+1
 11848  1E63  0872               	movf	??_LCD_Cmd+1,w
 11849  1E64  00F3               	movwf	LCD_Cmd@NibbleH
 11850  1E65                     l3857:
 11851                           
 11852                           ;LCD_LIB.c: 67:     NibbleL = cmd & 0x0F;
 11853  1E65  0875               	movf	LCD_Cmd@cmd,w
 11854  1E66  390F               	andlw	15
 11855  1E67  00F1               	movwf	??_LCD_Cmd
 11856  1E68  0871               	movf	??_LCD_Cmd,w
 11857  1E69  00F4               	movwf	LCD_Cmd@NibbleL
 11858  1E6A                     l3859:
 11859                           
 11860                           ;LCD_LIB.c: 68:     Load_Cmd(NibbleH);
 11861  1E6A  0873               	movf	LCD_Cmd@NibbleH,w
 11862  1E6B  319F  2744  319E   	fcall	_Load_Cmd
 11863  1E6E                     l3861:
 11864                           
 11865                           ;LCD_LIB.c: 69:     Load_Cmd(NibbleL);
 11866  1E6E  0874               	movf	LCD_Cmd@NibbleL,w
 11867  1E6F  319F  2744  319E   	fcall	_Load_Cmd
 11868  1E72                     l3863:
 11869                           
 11870                           ;LCD_LIB.c: 70:     _delay((unsigned long)((2)*(20000000UL/4000.0)));
 11871  1E72  300D               	movlw	13
 11872  1E73  00F1               	movwf	??_LCD_Cmd
 11873  1E74  30FC               	movlw	252
 11874  1E75                     u5637:
 11875  1E75  0B89               	decfsz	9,f
 11876  1E76  2E75               	goto	u5637
 11877  1E77  0BF1               	decfsz	??_LCD_Cmd,f
 11878  1E78  2E75               	goto	u5637
 11879  1E79                     l95:
 11880  1E79  0008               	return
 11881  1E7A                     __end_of_LCD_Cmd:
 11882                           
 11883                           	psect	text37
 11884  107D                     __ptext37:	
 11885 ;; *************** function _LCD_Init *****************
 11886 ;; Defined at:
 11887 ;;		line 37 in file "LCD_LIB.c"
 11888 ;; Parameters:    Size  Location     Type
 11889 ;;		None
 11890 ;; Auto vars:     Size  Location     Type
 11891 ;;		None
 11892 ;; Return value:  Size  Location     Type
 11893 ;;                  1    wreg      void 
 11894 ;; Registers used:
 11895 ;;		wreg, status,2, status,0, pclath, cstack
 11896 ;; Tracked objects:
 11897 ;;		On entry : 0/0
 11898 ;;		On exit  : 0/0
 11899 ;;		Unchanged: 0/0
 11900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11903 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11904 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11905 ;;Total ram usage:        1 bytes
 11906 ;; Hardware stack levels used: 1
 11907 ;; Hardware stack levels required when called: 1
 11908 ;; This function calls:
 11909 ;;		_Load_Cmd
 11910 ;; This function is called by:
 11911 ;;		_main
 11912 ;; This function uses a non-reentrant model
 11913 ;;
 11914                           
 11915  107D                     _LCD_Init:	
 11916                           ;psect for function _LCD_Init
 11917                           
 11918  107D                     l4071:	
 11919                           ;incstack = 0
 11920                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 11921                           
 11922                           
 11923                           ;LCD_LIB.c: 39:     TRISDbits.TRISD0 = 0; TRISDbits.TRISD2 = 0; TRISDbits.TRISD4 = 0;
 11924  107D  0021               	movlb	1	; select bank1
 11925  107E  100F               	bcf	15,0	;volatile
 11926  107F  110F               	bcf	15,2	;volatile
 11927  1080  120F               	bcf	15,4	;volatile
 11928                           
 11929                           ;LCD_LIB.c: 40:     TRISDbits.TRISD5 = 0; TRISDbits.TRISD6 = 0; TRISDbits.TRISD7 = 0;
 11930  1081  128F               	bcf	15,5	;volatile
 11931  1082  130F               	bcf	15,6	;volatile
 11932  1083  138F               	bcf	15,7	;volatile
 11933                           
 11934                           ;LCD_LIB.c: 42:     LATDbits.LATD2 = 0; LATDbits.LATD4 = 0; LATDbits.LATD5 = 0;
 11935  1084  0022               	movlb	2	; select bank2
 11936  1085  110F               	bcf	15,2	;volatile
 11937  1086  120F               	bcf	15,4	;volatile
 11938  1087  128F               	bcf	15,5	;volatile
 11939                           
 11940                           ;LCD_LIB.c: 43:     LATDbits.LATD6 = 0; LATDbits.LATD7 = 0;
 11941  1088  130F               	bcf	15,6	;volatile
 11942  1089  138F               	bcf	15,7	;volatile
 11943  108A                     l4073:
 11944                           
 11945                           ;LCD_LIB.c: 45:     _delay((unsigned long)((15)*(20000000UL/4000.0)));
 11946  108A  3062               	movlw	98
 11947  108B  00F1               	movwf	??_LCD_Init
 11948  108C  3066               	movlw	102
 11949  108D                     u5647:
 11950  108D  0B89               	decfsz	9,f
 11951  108E  288D               	goto	u5647
 11952  108F  0BF1               	decfsz	??_LCD_Init,f
 11953  1090  288D               	goto	u5647
 11954  1091                     l4075:
 11955                           
 11956                           ;LCD_LIB.c: 46:     Load_Cmd(0x03);
 11957  1091  3003               	movlw	3
 11958  1092  319F  2744  3190   	fcall	_Load_Cmd
 11959  1095                     l4077:
 11960                           
 11961                           ;LCD_LIB.c: 47:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
 11962  1095  3021               	movlw	33
 11963  1096  00F1               	movwf	??_LCD_Init
 11964  1097  3076               	movlw	118
 11965  1098                     u5657:
 11966  1098  0B89               	decfsz	9,f
 11967  1099  2898               	goto	u5657
 11968  109A  0BF1               	decfsz	??_LCD_Init,f
 11969  109B  2898               	goto	u5657
 11970  109C  3200               	nop2
 11971                           
 11972                           ;LCD_LIB.c: 48:     Load_Cmd(0x03);
 11973  109D  3003               	movlw	3
 11974  109E  319F  2744  3190   	fcall	_Load_Cmd
 11975  10A1                     l4079:
 11976                           
 11977                           ;LCD_LIB.c: 49:     _delay((unsigned long)((100)*(20000000UL/4000000.0)));
 11978  10A1  30A6               	movlw	166
 11979  10A2                     u5667:
 11980  10A2  0B89               	decfsz	9,f
 11981  10A3  28A2               	goto	u5667
 11982  10A4  3200               	nop2
 11983  10A5                     l4081:
 11984                           
 11985                           ;LCD_LIB.c: 50:     Load_Cmd(0x03);
 11986  10A5  3003               	movlw	3
 11987  10A6  319F  2744  3190   	fcall	_Load_Cmd
 11988  10A9                     l4083:
 11989                           
 11990                           ;LCD_LIB.c: 51:     Load_Cmd(0x02);
 11991  10A9  3002               	movlw	2
 11992  10AA  319F  2744  3190   	fcall	_Load_Cmd
 11993  10AD                     l4085:
 11994                           
 11995                           ;LCD_LIB.c: 53:     Load_Cmd(0x02);
 11996  10AD  3002               	movlw	2
 11997  10AE  319F  2744  3190   	fcall	_Load_Cmd
 11998  10B1                     l4087:
 11999                           
 12000                           ;LCD_LIB.c: 54:     Load_Cmd(0x08);
 12001  10B1  3008               	movlw	8
 12002  10B2  319F  2744  3190   	fcall	_Load_Cmd
 12003  10B5                     l4089:
 12004                           
 12005                           ;LCD_LIB.c: 56:     Load_Cmd(0x00);
 12006  10B5  3000               	movlw	0
 12007  10B6  319F  2744  3190   	fcall	_Load_Cmd
 12008  10B9                     l4091:
 12009                           
 12010                           ;LCD_LIB.c: 57:     Load_Cmd(0x0F);
 12011  10B9  300F               	movlw	15
 12012  10BA  319F  2744  3190   	fcall	_Load_Cmd
 12013  10BD                     l4093:
 12014                           
 12015                           ;LCD_LIB.c: 59:     Load_Cmd(0x00);
 12016  10BD  3000               	movlw	0
 12017  10BE  319F  2744  3190   	fcall	_Load_Cmd
 12018  10C1                     l4095:
 12019                           
 12020                           ;LCD_LIB.c: 60:     Load_Cmd(0x01);
 12021  10C1  3001               	movlw	1
 12022  10C2  319F  2744  3190   	fcall	_Load_Cmd
 12023  10C5                     l4097:
 12024                           
 12025                           ;LCD_LIB.c: 61:     _delay((unsigned long)((2)*(20000000UL/4000.0)));
 12026  10C5  300D               	movlw	13
 12027  10C6  00F1               	movwf	??_LCD_Init
 12028  10C7  30FC               	movlw	252
 12029  10C8                     u5677:
 12030  10C8  0B89               	decfsz	9,f
 12031  10C9  28C8               	goto	u5677
 12032  10CA  0BF1               	decfsz	??_LCD_Init,f
 12033  10CB  28C8               	goto	u5677
 12034  10CC                     l92:
 12035  10CC  0008               	return
 12036  10CD                     __end_of_LCD_Init:
 12037                           
 12038                           	psect	text38
 12039  1F44                     __ptext38:	
 12040 ;; *************** function _Load_Cmd *****************
 12041 ;; Defined at:
 12042 ;;		line 6 in file "LCD_LIB.c"
 12043 ;; Parameters:    Size  Location     Type
 12044 ;;  cmd             1    wreg     unsigned char 
 12045 ;; Auto vars:     Size  Location     Type
 12046 ;;  cmd             1    0[COMMON] unsigned char 
 12047 ;; Return value:  Size  Location     Type
 12048 ;;                  1    wreg      void 
 12049 ;; Registers used:
 12050 ;;		wreg
 12051 ;; Tracked objects:
 12052 ;;		On entry : 0/0
 12053 ;;		On exit  : 0/0
 12054 ;;		Unchanged: 0/0
 12055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12057 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12059 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12060 ;;Total ram usage:        1 bytes
 12061 ;; Hardware stack levels used: 1
 12062 ;; This function calls:
 12063 ;;		Nothing
 12064 ;; This function is called by:
 12065 ;;		_LCD_Init
 12066 ;;		_LCD_Cmd
 12067 ;; This function uses a non-reentrant model
 12068 ;;
 12069                           
 12070  1F44                     _Load_Cmd:	
 12071                           ;psect for function _Load_Cmd
 12072                           
 12073                           
 12074                           ;incstack = 0
 12075                           ; Regs used in _Load_Cmd: [wreg]
 12076                           ;Load_Cmd@cmd stored from wreg
 12077  1F44  00F0               	movwf	Load_Cmd@cmd
 12078  1F45                     l3477:
 12079                           
 12080                           ;LCD_LIB.c: 7:     LATDbits.LATD0 = 0;
 12081  1F45  0022               	movlb	2	; select bank2
 12082  1F46  100F               	bcf	15,0	;volatile
 12083  1F47                     l3479:
 12084                           
 12085                           ;LCD_LIB.c: 9:     if( (cmd & 1) == 0 ) LATDbits.LATD4 = 0; else LATDbits.LATD4 = 1;
 12086  1F47  1870               	btfsc	Load_Cmd@cmd,0
 12087  1F48  2F4A               	goto	u4611
 12088  1F49  2F4B               	goto	u4610
 12089  1F4A                     u4611:
 12090  1F4A  2F4D               	goto	l70
 12091  1F4B                     u4610:
 12092  1F4B                     l3481:
 12093  1F4B  120F               	bcf	15,4	;volatile
 12094  1F4C  2F4E               	goto	l3483
 12095  1F4D                     l70:
 12096  1F4D  160F               	bsf	15,4	;volatile
 12097  1F4E                     l3483:
 12098                           
 12099                           ;LCD_LIB.c: 10:     if( (cmd & 2) == 0 ) LATDbits.LATD5 = 0; else LATDbits.LATD5 = 1;
 12100  1F4E  18F0               	btfsc	Load_Cmd@cmd,1
 12101  1F4F  2F51               	goto	u4621
 12102  1F50  2F52               	goto	u4620
 12103  1F51                     u4621:
 12104  1F51  2F54               	goto	l72
 12105  1F52                     u4620:
 12106  1F52                     l3485:
 12107  1F52  128F               	bcf	15,5	;volatile
 12108  1F53  2F55               	goto	l3487
 12109  1F54                     l72:
 12110  1F54  168F               	bsf	15,5	;volatile
 12111  1F55                     l3487:
 12112                           
 12113                           ;LCD_LIB.c: 11:     if( (cmd & 4) == 0 ) LATDbits.LATD6 = 0; else LATDbits.LATD6 = 1;
 12114  1F55  1970               	btfsc	Load_Cmd@cmd,2
 12115  1F56  2F58               	goto	u4631
 12116  1F57  2F59               	goto	u4630
 12117  1F58                     u4631:
 12118  1F58  2F5B               	goto	l74
 12119  1F59                     u4630:
 12120  1F59                     l3489:
 12121  1F59  130F               	bcf	15,6	;volatile
 12122  1F5A  2F5C               	goto	l3491
 12123  1F5B                     l74:
 12124  1F5B  170F               	bsf	15,6	;volatile
 12125  1F5C                     l3491:
 12126                           
 12127                           ;LCD_LIB.c: 12:     if( (cmd & 8) == 0 ) LATDbits.LATD7 = 0; else LATDbits.LATD7 = 1;
 12128  1F5C  19F0               	btfsc	Load_Cmd@cmd,3
 12129  1F5D  2F5F               	goto	u4641
 12130  1F5E  2F60               	goto	u4640
 12131  1F5F                     u4641:
 12132  1F5F  2F62               	goto	l76
 12133  1F60                     u4640:
 12134  1F60                     l3493:
 12135  1F60  138F               	bcf	15,7	;volatile
 12136  1F61  2F63               	goto	l77
 12137  1F62                     l76:
 12138  1F62  178F               	bsf	15,7	;volatile
 12139  1F63                     l77:
 12140                           
 12141                           ;LCD_LIB.c: 14:     LATDbits.LATD2 = 0;
 12142  1F63  110F               	bcf	15,2	;volatile
 12143                           
 12144                           ;LCD_LIB.c: 15:     LATDbits.LATD2 = 1;
 12145  1F64  150F               	bsf	15,2	;volatile
 12146                           
 12147                           ;LCD_LIB.c: 16:     LATDbits.LATD2 = 0;
 12148  1F65  110F               	bcf	15,2	;volatile
 12149  1F66                     l3495:
 12150                           
 12151                           ;LCD_LIB.c: 17:     _delay((unsigned long)((300)*(20000000UL/4000000.0)));
 12152  1F66  30D6               	movlw	214
 12153  1F67                     u5687:
 12154  1F67  3200               	nop2
 12155  1F68  3200               	nop2
 12156  1F69  0B89               	decfsz	9,f
 12157  1F6A  2F67               	goto	u5687
 12158  1F6B  3200               	nop2
 12159  1F6C                     l78:
 12160  1F6C  0008               	return
 12161  1F6D                     __end_of_Load_Cmd:
 12162                           
 12163                           	psect	text39
 12164  1D8C                     __ptext39:	
 12165 ;; *************** function _ADC_Init *****************
 12166 ;; Defined at:
 12167 ;;		line 3 in file "ADC.c"
 12168 ;; Parameters:    Size  Location     Type
 12169 ;;		None
 12170 ;; Auto vars:     Size  Location     Type
 12171 ;;		None
 12172 ;; Return value:  Size  Location     Type
 12173 ;;                  1    wreg      void 
 12174 ;; Registers used:
 12175 ;;		wreg, status,2, status,0
 12176 ;; Tracked objects:
 12177 ;;		On entry : 0/0
 12178 ;;		On exit  : 0/0
 12179 ;;		Unchanged: 0/0
 12180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12185 ;;Total ram usage:        0 bytes
 12186 ;; Hardware stack levels used: 1
 12187 ;; This function calls:
 12188 ;;		Nothing
 12189 ;; This function is called by:
 12190 ;;		_main
 12191 ;; This function uses a non-reentrant model
 12192 ;;
 12193                           
 12194  1D8C                     _ADC_Init:	
 12195                           ;psect for function _ADC_Init
 12196                           
 12197  1D8C                     l4063:	
 12198                           ;incstack = 0
 12199                           ; Regs used in _ADC_Init: [wreg+status,2+status,0]
 12200                           
 12201                           
 12202                           ;ADC.c: 4:     ADCON1bits.ADFM = 1;
 12203  1D8C  0021               	movlb	1	; select bank1
 12204  1D8D  179E               	bsf	30,7	;volatile
 12205  1D8E                     l4065:
 12206                           
 12207                           ;ADC.c: 5:     ADCON1bits.ADCS = 0b110;
 12208  1D8E  081E               	movf	30,w	;volatile
 12209  1D8F  398F               	andlw	-113
 12210  1D90  3860               	iorlw	96
 12211  1D91  009E               	movwf	30	;volatile
 12212  1D92                     l4067:
 12213                           
 12214                           ;ADC.c: 6:     ADCON1bits.ADNREF = 0;
 12215  1D92  111E               	bcf	30,2	;volatile
 12216                           
 12217                           ;ADC.c: 7:     ADCON1bits.ADPREF = 0b00;
 12218  1D93  30FC               	movlw	-4
 12219  1D94  059E               	andwf	30,f	;volatile
 12220  1D95                     l4069:
 12221                           
 12222                           ;ADC.c: 8:     ADCON0bits.ADON = 1;
 12223  1D95  141D               	bsf	29,0	;volatile
 12224  1D96                     l55:
 12225  1D96  0008               	return
 12226  1D97                     __end_of_ADC_Init:
 12227                           
 12228                           	psect	text40
 12229  1DAB                     __ptext40:	
 12230 ;; *************** function _ADC_Get_Value *****************
 12231 ;; Defined at:
 12232 ;;		line 10 in file "ADC.c"
 12233 ;; Parameters:    Size  Location     Type
 12234 ;;  ch              1    wreg     unsigned char 
 12235 ;; Auto vars:     Size  Location     Type
 12236 ;;  ch              1    3[COMMON] unsigned char 
 12237 ;; Return value:  Size  Location     Type
 12238 ;;                  2    0[COMMON] int 
 12239 ;; Registers used:
 12240 ;;		wreg, status,2, status,0
 12241 ;; Tracked objects:
 12242 ;;		On entry : 0/0
 12243 ;;		On exit  : 0/0
 12244 ;;		Unchanged: 0/0
 12245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12246 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12247 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12248 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12249 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12250 ;;Total ram usage:        4 bytes
 12251 ;; Hardware stack levels used: 1
 12252 ;; This function calls:
 12253 ;;		Nothing
 12254 ;; This function is called by:
 12255 ;;		_main
 12256 ;; This function uses a non-reentrant model
 12257 ;;
 12258                           
 12259  1DAB                     _ADC_Get_Value:	
 12260                           ;psect for function _ADC_Get_Value
 12261                           
 12262                           
 12263                           ;incstack = 0
 12264                           ; Regs used in _ADC_Get_Value: [wreg+status,2+status,0]
 12265                           ;ADC_Get_Value@ch stored from wreg
 12266  1DAB  00F3               	movwf	ADC_Get_Value@ch
 12267  1DAC                     l4099:
 12268                           
 12269                           ;ADC.c: 11:     ADCON0bits.CHS = ch & 0x1F;
 12270  1DAC  0873               	movf	ADC_Get_Value@ch,w
 12271  1DAD  391F               	andlw	31
 12272  1DAE  00F2               	movwf	??_ADC_Get_Value
 12273  1DAF  0DF2               	rlf	??_ADC_Get_Value,f
 12274  1DB0  0DF2               	rlf	??_ADC_Get_Value,f
 12275  1DB1  0021               	movlb	1	; select bank1
 12276  1DB2  081D               	movf	29,w	;volatile
 12277  1DB3  0672               	xorwf	??_ADC_Get_Value,w
 12278  1DB4  3983               	andlw	-125
 12279  1DB5  0672               	xorwf	??_ADC_Get_Value,w
 12280  1DB6  009D               	movwf	29	;volatile
 12281  1DB7                     l4101:
 12282                           
 12283                           ;ADC.c: 12:     ADCON0bits.GO_nDONE = 1;
 12284  1DB7  149D               	bsf	29,1	;volatile
 12285  1DB8                     l58:	
 12286                           ;ADC.c: 13:     while(ADCON0bits.GO_nDONE == 1);
 12287                           
 12288  1DB8  189D               	btfsc	29,1	;volatile
 12289  1DB9  2DBB               	goto	u5441
 12290  1DBA  2DBC               	goto	u5440
 12291  1DBB                     u5441:
 12292  1DBB  2DB8               	goto	l58
 12293  1DBC                     u5440:
 12294  1DBC                     l4103:
 12295                           
 12296                           ;ADC.c: 14:     return ( (ADRESH<<8) | ADRESL );
 12297  1DBC  081C               	movf	28,w	;volatile
 12298  1DBD  00F1               	movwf	?_ADC_Get_Value+1
 12299  1DBE  081B               	movf	27,w	;volatile
 12300  1DBF  00F0               	movwf	?_ADC_Get_Value
 12301  1DC0                     l61:
 12302  1DC0  0008               	return
 12303  1DC1                     __end_of_ADC_Get_Value:
 12304  007E                     btemp	set	126	;btemp
 12305  007E                     wtemp0	set	126
 12306                           
 12307                           	psect	idloc
 12308                           
 12309                           ;Config register IDLOC0 @ 0x8000
 12310                           ;	unspecified, using default values
 12311  8000                     	org	32768
 12312  8000  3FFF               	dw	16383
 12313                           
 12314                           ;Config register IDLOC1 @ 0x8001
 12315                           ;	unspecified, using default values
 12316  8001                     	org	32769
 12317  8001  3FFF               	dw	16383
 12318                           
 12319                           ;Config register IDLOC2 @ 0x8002
 12320                           ;	unspecified, using default values
 12321  8002                     	org	32770
 12322  8002  3FFF               	dw	16383
 12323                           
 12324                           ;Config register IDLOC3 @ 0x8003
 12325                           ;	unspecified, using default values
 12326  8003                     	org	32771
 12327  8003  3FFF               	dw	16383
 12328                           
 12329                           	psect	config
 12330                           
 12331                           ;Config register CONFIG1 @ 0x8007
 12332                           ;	Oscillator Selection
 12333                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
 12334                           ;	Watchdog Timer Enable
 12335                           ;	WDTE = OFF, WDT disabled
 12336                           ;	Power-up Timer Enable
 12337                           ;	PWRTE = OFF, PWRT disabled
 12338                           ;	MCLR Pin Function Select
 12339                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 12340                           ;	Flash Program Memory Code Protection
 12341                           ;	CP = OFF, Program memory code protection is disabled
 12342                           ;	Data Memory Code Protection
 12343                           ;	CPD = OFF, Data memory code protection is disabled
 12344                           ;	Brown-out Reset Enable
 12345                           ;	BOREN = ON, Brown-out Reset enabled
 12346                           ;	Clock Out Enable
 12347                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 12348                           ;	Internal/External Switchover
 12349                           ;	IESO = ON, Internal/External Switchover mode is enabled
 12350                           ;	Fail-Safe Clock Monitor Enable
 12351                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 12352  8007                     	org	32775
 12353  8007  3FE2               	dw	16354
 12354                           
 12355                           ;Config register CONFIG2 @ 0x8008
 12356                           ;	Flash Memory Self-Write Protection
 12357                           ;	WRT = OFF, Write protection off
 12358                           ;	Voltage Regulator Capacitor Enable
 12359                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
 12360                           ;	PLL Enable
 12361                           ;	PLLEN = OFF, 4x PLL disabled
 12362                           ;	Stack Overflow/Underflow Reset Enable
 12363                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 12364                           ;	Brown-out Reset Voltage Selection
 12365                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 12366                           ;	Low-Voltage Programming Enable
 12367                           ;	LVP = ON, Low-voltage programming enabled
 12368  8008                     	org	32776
 12369  8008  3EFF               	dw	16127

Data Sizes:
    Strings     53
    Constant    0
    Data        20
    BSS         110
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80      0      50
    BANK3            80      0      80
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_2(CODE[12]), STR_1(CODE[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_2(CODE[12]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_2(CODE[12]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_2(CODE[12]), STR_1(CODE[11]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> strLCD(BANK2[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S796$source	PTR const unsigned char  size(1) Largest target is 0

    f...source	PTR const unsigned char  size(1) Largest target is 0

    S796$buffer	PTR unsigned char  size(1) Largest target is 0

    f...buffer	PTR unsigned char  size(1) Largest target is 0

    LCD_Write_Text@text	PTR unsigned char  size(1) Largest target is 20
		 -> strLCD(BANK2[20]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Text
    _main->___xxtofl
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fladd->___xxtofl
    ___flmul->___xxtofl
    _atoi->___wmul
    _atoi->_isdigit
    _LCD_Write_Text->_LCD_Set_Cursor
    _LCD_Write_Cp->_Load_Data
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Cmd->_Load_Cmd
    _LCD_Init->_Load_Cmd

Critical Paths under _main in BANK0

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flsub
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flge->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   37114
                                             78 BANK1      2     2      0
                      _ADC_Get_Value
                           _ADC_Init
                            _LCD_Cmd
                           _LCD_Init
                       _LCD_Write_Cp
                     _LCD_Write_Text
                            ___fladd
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6   28684
                                             59 BANK1     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   28150
                                             51 BANK1      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2   27802
                                             62 BANK0     18    16      2
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     5      4     410
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              59    54      5   22262
                                             54 BANK0      8     3      5
                                              0 BANK1     51    51      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              4     2      2     920
                                              6 COMMON     4     2      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     6      2     641
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2907
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             13 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     287
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             11     7      4     381
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2789
                                             46 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    2440
                                             26 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    3785
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     942
                                             26 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    1881
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1165
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Text                                       4     2      2    1189
                                             11 COMMON     3     1      2
                                              0 BANK0      1     1      0
                     _LCD_Set_Cursor
                       _LCD_Write_Cp
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Cp                                         5     5      0     178
                                              1 COMMON     5     5      0
                          _Load_Data
 ---------------------------------------------------------------------------------
 (3) _Load_Data                                            1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       5     4      1     466
                                              6 COMMON     5     4      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              5     5      0     178
                                              1 COMMON     5     5      0
                           _Load_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      88
                                              1 COMMON     1     1      0
                           _Load_Cmd
 ---------------------------------------------------------------------------------
 (4) _Load_Cmd                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Get_Value                                        4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Get_Value
   _ADC_Init
   _LCD_Cmd
     _Load_Cmd
   _LCD_Init
     _Load_Cmd
   _LCD_Write_Cp
     _Load_Data
   _LCD_Write_Text
     _LCD_Set_Cursor
       _LCD_Cmd
     _LCD_Write_Cp
   ___fladd
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      32       9       62.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     130      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     130      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Sep 20 15:37:18 2023

           ___fldiv@aexp 002C             ___fldiv@bexp 002B             ___fldiv@sign 0024  
                     l61 1DC0                       l70 1F4D                       l55 1D96  
                     l72 1F54                       l81 1F76                       l58 1DB8  
                     l74 1F5B                       l83 1F7D                       l76 1F62  
                     l92 10CC                       l77 1F63                       l85 1F84  
                     l78 1F6C                       l95 1E79                       l87 1F8B  
                     l88 1F8C                       l89 1F95                       l98 1E20  
           ___awdiv@sign 0076      ___wmul@multiplicand 0072      __Umul8_16@word_mpld 0076  
                    l113 1FCA                      l122 1EBA                      l272 1E45  
                    l425 1282                      l441 104B                      l274 1E59  
                    l442 1067                      l450 1393                      l604 0A74  
                    l453 13E7                      l438 111F                      l462 080A  
                    l631 17FF                      l447 107C                      l615 0ACD  
                    l607 0AAB                      l616 0AD6                      l713 0029  
                    l473 12E1                      l650 17CD                      l458 1400  
                    l466 12F6                      l810 02FA                      l715 00B2  
                    l651 17E7                      l619 1E99                      l811 02DC  
                    l476 12F6                      l653 17F6                      l645 1781  
                    l629 16A3                      l573 08FD                      l821 033E  
                    l726 007E                      l727 008A                      l719 0064  
                    l903 0FFF                      l735 1F43                      l681 0D21  
                    l577 099E                      l841 0586                      l690 1F1F  
                    l594 0A30                      l586 0AD6                      l675 0CA9  
                    l579 097A                      l915 1FFF                      l940 0839  
                    l836 0570                      l669 0D2D                      l925 1375  
                    l781 1223                      l598 0A52                      l951 089E  
                    l688 1F0F                      l776 11E7                      l880 0D6B  
                    l961 14E3                      l882 0D9D                      l779 1209  
                    l875 0D56                      l956 1442                      l957 14EB  
                    l981 1E07                      l797 07E0                      l877 0D62  
                    l878 0D65                      l967 1DEF                      l975 1EDB  
                    l879 0D68                      l996 1172          ADC_Get_Value@ch 0073  
                    _pad 11CB                      _mcp 012C                      _ldr 0128  
           ___awmod@sign 0076                      wreg 0009             ___flmul@aexp 0032  
           ___flmul@bexp 0033             ___flmul@sign 002D             ___flmul@temp 0038  
           ___flmul@prod 0034          __end_of_LCD_Cmd 1E7A           _LCD_Set_Cursor 1F96  
           ___fltol@exp1 007A                     l1004 102E                     l1013 1EFC  
                   l1007 0006                     l1023 11CA                     l1033 1DD7  
                   l1019 1E3A                     l1036 1DD7                     l3001 1111  
                   l3003 1116                     l3011 1043                     l3005 111B  
                   l3101 1660                     l3013 105F                     l3021 1376  
                   l3111 1678                     l3103 1665                     l3015 1079  
                   l3031 13CB                     l3023 138B                     l3201 1786  
                   l3121 168B                     l3113 167D                     l3105 166D  
                   l3017 107B                     l3009 102F                     l3033 13CF  
                   l3025 13A7                     l3041 0800                     l4001 0FCB  
                   l3203 178B                     l3211 17B3                     l3131 16AB  
                   l3123 1690                     l3115 1681                     l3107 166E  
                   l3035 13FD                     l3027 13AF                     l3043 0808  
                   l3051 128E                     l4011 0FDC                     l4101 1DB7  
                   l3221 17EC                     l3213 17C0                     l3205 1793  
                   l3141 16C9                     l3133 16B7                     l3125 1698  
                   l3117 1685                     l3109 1670                     l3037 13FF  
                   l3029 13B3                     l3301 0BF7                     l3045 080A  
                   l3061 12B3                     l4013 0FF5                     l4005 0FD1  
                   l4103 1DBC                     l4031 1F97                     l4023 1E09  
                   l3223 17F0                     l3215 17DB                     l3207 1797  
                   l3151 16F2                     l3135 16BB                     l3127 1699  
                   l3119 1686                     l3311 0C48                     l3303 0BFE  
                   l3231 0AD7                     l3071 12C1                     l3063 12B5  
                   l3055 1297                     l4007 0FD9                     l4111 1F2C  
                   l4033 1F98                     l4025 1E13                     l4121 1EA5  
                   l3225 17F2                     l3217 17DE                     l3209 17AF  
                   l3161 1713                     l3153 16FA                     l3145 16D2  
                   l3129 169B                     l3321 0C7D                     l3313 0C5F  
                   l3305 0C12                     l3241 0AEB                     l3233 0ADD  
                   l3081 12E6                     l3065 12B9                     l3073 12D1  
                   l3057 12AA                     l3049 1283                     l3401 1341  
                   l4113 1F2E                     l4201 1559                     l4035 1F9E  
                   l4043 1FB0                     l4027 1E18                     l4123 1EAD  
                   l4131 0011                     l3219 17E6                     l3171 1736  
                   l3163 1714                     l3155 16FC                     l3147 16E2  
                   l3139 16C4                     l3091 164C                     l3331 0C8E  
                   l3323 0C7E                     l3315 0C66                     l3307 0C1F  
                   l3251 0B07                     l3243 0AF0                     l3235 0AE1  
                   l3083 12EB                     l3059 12AB                     l3403 1346  
                   l4051 1FCD                     l4115 1F3A                     l4107 1F22  
                   l4211 15BD                     l4203 1564                     l4037 1FA4  
                   l4045 1FC6                     l4029 1E1C                     l4125 1EB1  
                   l4141 003F                     l4133 0021                     l3181 1751  
                   l3157 1701                     l3165 171B                     l3173 173A  
                   l3149 16EA                     l3093 1652                     l3341 0CB3  
                   l3333 0C92                     l3325 0C85                     l3317 0C72  
                   l3309 0C33                     l3261 0B1A                     l3253 0B0B  
                   l3245 0AF8                     l3237 0AE5                     l2701 08C3  
                   l3085 1E7A                     l3413 1371                     l3421 1DC1  
                   l3501 00C7                     l4053 1FD1                     l4109 1F2A  
                   l4213 15C8                     l4205 1568                     l4063 1D8C  
                   l4071 107D                     l4039 1FAA                     l4119 1E9C  
                   l4151 006B                     l4143 004A                     l4135 0031  
                   l4127 0008                     l3191 1765                     l3183 1755  
                   l3175 1740                     l3167 172D                     l3159 170F  
                   l3095 1656                     l3351 0CE8                     l3343 0CBB  
                   l3335 0CA6                     l3319 0C79                     l3327 0C89  
                   l3271 0B36                     l3263 0B22                     l3255 0B0F  
                   l3247 0AFA                     l3239 0AE6                     l2711 08DB  
                   l2703 08CB                     l3087 1E7D                     l3079 12D8  
                   l3407 134B                     l3431 1401                     l3511 0109  
                   l3503 00E5                     l4055 1FD5                     l4215 15D1  
                   l4207 1571                     l4065 1D8E                     l4081 10A5  
                   l4073 108A                     l4161 00A0                     l4153 0074  
                   l4145 0051                     l4129 000D                     l3193 1766  
                   l3185 1756                     l3177 1748                     l3169 172E  
                   l3097 165A                     l3361 0D18                     l3353 0CF2  
                   l3345 0CBF                     l3329 0C8D                     l3281 0B73  
                   l3265 0B24                     l3257 0B10                     l3249 0B02  
                   l2801 09CD                     l2721 08F2                     l2713 08DF  
                   l2705 08D0                     l3409 1351                     l3441 145F  
                   l3433 1419                     l3417 1EDD                     l3425 1DC1  
                   l3601 0300                     l3521 0124                     l3513 010F  
                   l3505 00EA                     l4057 1FED                     l4217 1618  
                   l4209 15A4                     l4067 1D92                     l4091 10B9  
                   l4083 10A9                     l4075 1091                     l4163 00A5  
                   l4155 0078                     l4147 0055                     l4139 003A  
                   l3195 176A                     l3187 175D                     l3179 174A  
                   l3099 165B                     l3363 0D1C                     l3355 0D00  
                   l3347 0CD7                     l3339 0CAE                     l3291 0BBB  
                   l3283 0B80                     l3275 0B3F                     l3267 0B2C  
                   l3259 0B15                     l2811 0A1A                     l2803 09D5  
                   l2731 090B                     l2723 08F3                     l2715 08E0  
                   l2707 08D6                     l3451 14A4                     l3435 1434  
                   l3371 11CD                     l3419 1EE5                     l3427 1DD0  
                   l3611 0342                     l3603 0306                     l3523 012A  
                   l3515 0114                     l3507 00FE                     l4059 1FF7  
                   l4219 1631                     l4171 14EC                     l4069 1D95  
                   l4093 10BD                     l4085 10AD                     l4077 1095  
                   l4165 00A9                     l4157 0082                     l4149 005D  
                   l3461 1DD8                     l3197 177E                     l3189 1761  
                   l3365 0D1D                     l3357 0D09                     l3349 0CDB  
                   l3293 0BC8                     l3285 0B9A                     l3277 0B4C  
                   l3269 0B31                     l2813 0A1F                     l2805 09DA  
                   l2741 091F                     l2733 090F                     l2717 08E5  
                   l2725 08F5                     l2709 08D7                     l3453 14BB  
                   l3445 1474                     l3437 1441                     l2901 1E27  
                   l3381 11EA                     l3373 11D2                     l3701 0622  
                   l3621 035C                     l3613 0348                     l3605 0315  
                   l3541 0170                     l3533 0145                     l3525 012F  
                   l3517 011B                     l3509 0101                     l4181 14F5  
                   l4173 14EF                     l4095 10C1                     l4087 10B1  
                   l4079 10A1                     l4167 00AA                     l4159 008C  
                   l3471 1ED3                     l3367 0D25                     l3359 0D0B  
                   l3295 0BCF                     l3287 0BA7                     l3279 0B59  
                   l2831 0A59                     l2823 0A46                     l2807 09F0  
                   l2815 0A28                     l2751 0933                     l2743 0923  
                   l2735 0913                     l2727 0903                     l2719 08EA  
                   l3455 14C4                     l3447 148B                     l3439 1447  
                   l2671 112A                     l2903 1E2B                     l3383 11F6  
                   l3375 11DB                     l3703 0626                     l3711 0642  
                   l3623 0360                     l3631 0374                     l3615 034E  
                   l3607 0331                     l3551 019A                     l3535 0156  
                   l3519 0120                     l3527 0133                     l4191 14FD  
                   l4183 14F6                     l4175 14F0                     l3481 1F4B  
                   l4097 10C5                     l4089 10B5                     l2921 1E4F  
                   l2913 1E3B                     l3473 1ED4                     l3465 1EBB  
                   l3801 0815                     l3297 0BDC                     l3289 0BB4  
                   l2841 0A67                     l2833 0A5B                     l2825 0A4D  
                   l2817 0A38                     l2809 0A14                     l2753 0937  
                   l2745 0927                     l2737 0917                     l2729 0907  
                   l2761 0947                     l3393 12F7                     l3457 14DB  
                   l3449 1493                     l2673 112F                     l2905 1E34  
                   l3385 11FB                     l3377 11E0                     l3721 06C6  
                   l3713 0690                     l3705 062C                     l3641 0435  
                   l3633 0376                     l3625 0368                     l3617 0352  
                   l3609 0338                     l3553 01AB                     l3537 0161  
                   l3545 0188                     l4193 1500                     l4185 14F8  
                   l4177 14F2                     l4099 1DAC                     l3491 1F5C  
                   l3483 1F4E                     l2923 1E55                     l2915 1E3D  
                   l3467 1EBD                     l3803 081F                     l2931 1229  
                   l3299 0BE3                     l2851 0A7E                     l2843 0A6B  
                   l2835 0A60                     l2827 0A51                     l2819 0A3D  
                   l2771 0986                     l2763 0948                     l2755 093B  
                   l2747 092B                     l2739 091B                     l2691 08AE  
                   l2683 089F                     l3395 130F                     l2675 1139  
                   l2667 1120                     l3387 120E                     l3379 11E5  
                   l3731 06F3                     l3723 06D6                     l3715 06AC  
                   l3707 0639                     l3651 04C0                     l3643 0447  
                   l3635 037E                     l3627 036A                     l3619 0356  
                   l3571 0200                     l3555 01B6                     l3563 01DD  
                   l3539 016B                     l4195 1504                     l4187 14F9  
                   l4179 14F4                     l3493 1F60                     l3485 1F52  
                   l3477 1F45                     l2917 1E41                     l3469 1EC4  
                   l3821 089A                     l3805 0834                     l2941 123D  
                   l2933 122E                     l2861 0AB5                     l2853 0A86  
                   l2845 0A71                     l2829 0A56                     l2837 0A62  
                   l2781 09A2                     l2773 098A                     l2765 095F  
                   l2757 093F                     l2749 092F                     l2693 08B3  
                   l2685 08A5                     l3397 1324                     l2677 1157  
                   l2669 1125                     l3389 1217                     l2909 1DF0  
                   l3741 070C                     l3733 06FA                     l3725 06DD  
                   l3717 06B0                     l3709 063E                     l3661 0566  
                   l3653 04C8                     l3645 0499                     l3637 0387  
                   l3629 0370                     l3581 028D                     l3573 022C  
                   l3565 01E6                     l3557 01C0                     l4293 0D86  
                   l4197 150D                     l4189 14FA                     ?_pad 0024  
                   l3495 1F66                     l3487 1F55                     l3479 1F47  
                   l2919 1E4A                     l4295 084A                     l3815 0873  
                   l3807 083E                     l2951 1251                     l2943 123F  
                   l2935 1230                     l2927 1224                     l2871 0AC9  
                   l2863 0ABD                     l2855 0A8A                     l2791 09BC  
                   l2839 0A66                     l2783 09A7                     l2775 098B  
                   l2767 097E                     l2759 0943                     l2695 08B8  
                   l2687 08A9                     l3399 132A                     l2679 1169  
                   l3751 0723                     l3743 0710                     l3735 0700  
                   l3727 06E2                     l3671 058D                     l3719 06B4  
                   l3663 056C                     l3655 04FB                     l3647 04A3  
                   l3639 0431                     l3591 02D8                     l3575 0230  
                   l3583 02B4                     l3567 01E8                     l3559 01C5  
                   l3831 117C                     l3911 0D97                     l4199 1540  
                   l3489 1F59                     l4297 1FB8                     l3817 0887  
                   l3809 0852                     l2961 126E                     l2953 1255  
                   l2945 1245                     l2937 1234                     l2929 1225  
                   l2881 1F07                     l2873 0AD1                     l2865 0AC2  
                   l2857 0AA7                     l2849 0A79                     l2793 09C0  
                   l2777 0993                     l2769 0984                     l2697 08C0  
                   l2689 08AD                     l3761 075A                     l3753 073B  
                   l3745 0714                     l3737 0704                     l3729 06EE  
                   l3681 05E3                     l3673 05CD                     l3665 0579  
                   l3657 0535                     l3649 04BB                     l3593 02EB  
                   l3585 02C5                     l3577 026C                     l3497 00B5  
                   l3841 1193                     l3833 1188                     l3921 0DCD  
                   l3913 0DA2                     l3905 0D6E                     l3819 088E  
                   l2955 1264                     l2947 1248                     l2963 1274  
                   l2939 1239                     l2971 10CD                     l2883 1F0B  
                   l2875 0AD5                     l2867 0AC3                     l2859 0AB0  
                   l2795 09C6                     l2787 09B0                     l2779 0997  
                   l2699 08C1                     l2891 1008                     l3771 077D  
                   l3763 0769                     l3755 074C                     l3747 0719  
                   l3739 070A                     l3691 0604                     l3675 05D2  
                   l3683 05E8                     l3667 057F                     l3659 053A  
                   l3595 02F1                     l3587 02CB                     l3579 0289  
                   l3499 00B7                     l3851 11BD                     l3843 1197  
                   l3923 0DD1                     l3915 0DA6                     l3861 1E6E  
                   l2965 1279                     l2957 1268                     l2949 124D  
                   l2981 10DD                     l2973 10CE                     l2885 1F16  
                   l2877 1EFE                     l2869 0AC7                     l2797 09C8  
                   l2789 09B8                     l2893 100B                     l3781 07A3  
                   l3773 0789                     l3765 076E                     l3757 0750  
                   l3749 071E                     l3693 0608                     l3685 05EF  
                   l3677 05D9                     l3669 0584                     l3589 02D1  
                   l3845 119F                     l3837 118B                     l3829 1174  
                   l3941 0E2A                     l3933 0DF0                     l3925 0DD2  
                   l3917 0DB8                     l3909 0D73                     l3863 1E72  
                   l3855 1E5B                     l3871 1F77                     l2967 127E  
                   l2959 1269                     l2991 10F4                     l2983 10E2  
                   l2975 10D2                     l2887 1F1B                     l2879 1F00  
                   l2799 09CC                     l2895 1019                     l3783 07A9  
                   l3775 078E                     l3767 0774                     l3759 0754  
                   l3791 07C9                     l3695 060D                     l3687 05F3  
                   l3679 05DF                     l3847 11A8                     l3839 118F  
                   l3943 0E3B                     l3935 0E0C                     l3919 0DC0  
                   l3927 0DD8                     l3857 1E65                     l3881 1F89  
                   l3873 1F7B                     l3865 1F6E                     l2993 10F8  
                   l2985 10E8                     l2977 10D7                     l2897 101E  
                   l3785 07AE                     l3769 0779                     l3697 0619  
                   l3689 05FF                     l3849 11AE                     l3961 0EC2  
                   l3953 0E69                     l3945 0E43                     l3937 0E1E  
                   l3929 0DE8                     l3859 1E6A                     l3883 1F8F  
                   l3875 1F7E                     l3867 1F70                     l3795 080B  
                   l2995 1102                     l2987 10EB                     l2979 10D9  
                   l2899 1E22                     l3787 07BA                     l3779 0792  
                   l3699 061E                     l3971 0F01                     l3963 0EC7  
                   l3947 0E51                     l3939 0E21                     l3955 0E85  
                   l3891 0D4E                     l3877 1F82                     l3869 1F74  
                   l3797 0811                     l2997 1106                     l2989 10F0  
                   l3789 07BF                     l3973 0F11                     l3965 0EE4  
                   l3957 0EA0                     l3949 0E61                     l3893 0D52  
                   l3885 0D30                     l3879 1F85                     l2999 110B  
                   l3991 0F90                     l3983 0F4C                     l3967 0EEA  
                   l3959 0EA5                     l3895 0D58                     l3887 0D41  
                   l3985 0F67                     l3969 0EF9                     l3977 0F27  
                   l3889 0D49                     l3987 0F78                     l3979 0F39  
                   l3995 0FA6                     l3997 0FB8                     l3989 0F88  
                   l3999 0FC0                     STR_1 2017                     STR_2 2000  
                   STR_3 200C                     STR_4 2022                     STR_5 202A  
                   STR_8 2026                     STR_9 202E                     u3000 099E  
                   u3001 099D                     u3010 09A2                     u3011 09A1  
                   u3100 0A3D                     u3020 09A7                     u3101 0A3C  
                   u3021 09A6                     u3030 09BC                     u3031 09BB  
                   u4000 178B                     u3200 0A8A                     u3120 0A51  
                   u3040 09C0                     u4001 178A                     u3201 0A89  
                   u3121 0A50                     u3041 09BF                     u4010 1797  
                   u3210 0A98                     u3130 0A56                     u3050 09CC  
                   u4011 1796                     u3131 0A55                     u3115 0A47  
                   u3051 09CB                     u4020 17A5                     u3300 1F1B  
                   u4100 0B15                     u3220 0AA7                     u3140 0A60  
                   u3301 1F1A                     u4101 0B14                     u3221 0AA6  
                   u3141 0A5F                     u4030 17C0                     u4110 0B1A  
                   u3230 0AB0                     u3150 0A66                     u3070 09F0  
                   u3310 102E                     u4031 17BF                     u4111 0B19  
                   u3231 0AAF                     u3215 0A94                     u3151 0A65  
                   u3071 09EF                     u3311 102D                     u3400 1234  
                   u4040 17DB                     u4200 0C7D                     u4120 0B31  
                   u3240 0AB5                     u3160 0A6B                     u3080 0A1F  
                   u3320 1E34                     u5000 05EF                     u3401 1233  
                   u4041 17DA                     u4025 17A1                     u4201 0C7C  
                   u4121 0B30                     u3241 0AB4                     u3161 0A6A  
                   u3081 0A1E                     u3073 09EC                     u3065 09CF  
                   u3321 1E33                     u5001 05EE                     u3410 1245  
                   u4050 17F0                     u4130 0B36                     u3250 0AC2  
                   u3170 0A71                     u3090 0A38                     u3330 1E00  
                   u5010 05F3                     u3411 1244                     u4051 17EF  
                   u4035 17BC                     u4131 0B35                     u3251 0AC1  
                   u3171 0A70                     u3091 0A37                     u3331 1DFE  
                   u5011 05F2                     u3500 10DD                     u4300 0D00  
                   u4220 0C8D                     u4060 0AE5                     u3260 0AC7  
                   u3180 0A78                     u3340 1E01                     u5100 0769  
                   u5020 062C                     u3501 10DC                     u4045 17D7  
                   u4301 0CFF                     u4221 0C8C                     u4061 0AE4  
                   u3261 0AC6                     u3181 0A77                     u5101 0768  
                   u5021 062B                     u3350 1E41                     u3430 1255  
                   u3510 10E8                     u4310 0D1C                     u4230 0C92  
                   u4070 0AEB                     u3270 0AD5                     u3190 0A7E  
                   u5110 0774                     u5030 06C6                     u3351 1E40  
                   u3431 1254                     u3511 10E7                     u4311 0D1B  
                   u4231 0C91                     u4215 0C7F                     u4071 0AEA  
                   u3271 0AD4                     u3191 0A7D                     u5111 0773  
                   u5031 06C5                     u3600 1079                     u3280 1F0B  
                   u4240 0CA6                     u4160 0C3E                     u4080 0AF0  
                   u4400 1351                     u4320 11D2                     u5120 07A3  
                   u5040 06D6                     u5200 11AE                     u3425 1249  
                   u3601 1078                     u3281 1F0A                     u4305 0CFC  
                   u4241 0CA5                     u4145 0BB5                     u4081 0AEF  
                   u4401 1350                     u4321 11D1                     u5121 07A2  
                   u5105 0765                     u5041 06D5                     u5201 11AD  
                   u5130 081F                     u3450 1264                     u3530 10F8  
                   u3610 138B                     u4250 0CAD                     u4170 0C55  
                   u4090 0B0F                     u4410 135E                     u2810 1125  
                   u4330 11E0                     u5050 06DD                     u5210 11BD  
                   u5131 081E                     u3451 1263                     u3531 10F7  
                   u3611 138A                     u4251 0CAC                     u4155 0BE4  
                   u4091 0B0E                     u2811 1124                     u4331 11DF  
                   u5051 06DC                     u5035 06C2                     u5211 11BC  
                   u3380 1E55                     u5140 0833                     u3540 1102  
                   u3620 13A7                     u4260 0CB3                     u2900 08E5  
                   u3700 12C0                     u4420 1369                     u4500 1473  
                   u2820 112A                     u4340 1209                     u5060 06E2  
                   u5300 0DB8                     u3381 1E54                     u3365 1E46  
                   u5141 0832                     u3445 1256                     u3541 1101  
                   u3525 10EC                     u3605 1075                     u3621 13A6  
                   u4261 0CB2                     u4165 0C3A                     u2901 08E4  
                   u3701 12BF                     u4421 1367                     u4501 1472  
                   u2821 1129                     u4341 1208                     u5061 06E1  
                   u5045 06D2                     u5301 0DB7                     u5230 1F74  
                   u5150 0887                     u3470 1274                     u3390 1229  
                   u3630 13B3                     u4270 0CBF                     u2910 08EA  
                   u4430 136A                     u4510 1481                     u2830 1139  
                   u4350 120E                     u5070 0700                     u5310 0DD1  
                   u5231 1F73                     u3375 1E4B                     u5151 0886  
                   u3471 1273                     u3455 1260                     u3391 1228  
                   u3631 13B2                     u3295 1F10                     u4271 0CBE  
                   u4175 0C51                     u2911 08E9                     u4415 135A  
                   u2831 1138                     u4351 120D                     u5071 06FF  
                   u5311 0DD0                     u5240 1F7B                     u4600 1ED3  
                   u5160 088E                     u3480 1279                     u3560 1111  
                   u3800 1685                     u3640 13CF                     u4280 0CCD  
                   u2920 0903                     u3720 12D0                     u4360 131C  
                   u4520 148B                     u2840 1157                     u4440 1EFC  
                   u5080 0710                     u5400 0F67                     u5320 0E0C  
                   u5225 1E5E                     u5241 1F7A                     u4601 1ED2  
                   u5161 088D                     u3481 1278                     u3465 126A  
                   u3561 1110                     u3545 10FE                     u3801 1684  
                   u3641 13CE                     u4185 0C60                     u2921 0902  
                   u3721 12CF                     u4521 148A                     u2841 1156  
                   u4345 1205                     u4441 1EFB                     u5081 070F  
                   u5401 0F66                     u5321 0E0B                     u4610 1F4B  
                   u5250 1F82                     u3570 1116                     u3490 10D2  
                   u3810 168B                     u3650 13FD                     u4290 0CE8  
                   u2930 0907                     u2850 08AD                     u3730 12D7  
                   u4370 132A                     u4530 14B1                     u4450 1DD0  
                   u5090 075A                     u5170 1188                     u5410 0FB8  
                   u5330 0E1E                     u4611 1F4A                     u5251 1F81  
                   u3571 1115                     u3555 1107                     u3491 10D1  
                   u3811 168A                     u3651 13FC                     u4291 0CE7  
                   u4195 0C73                     u2931 0906                     u2851 08AC  
                   u3731 12D6                     u3715 12C2                     u4371 1329  
                   u4515 147D                     u4451 1DCF                     u5091 0759  
                   u5171 1187                     u5411 0FB7                     u5331 0E1D  
                   u4620 1F52                     u5260 1F89                     u5500 0050  
                   u3900 172D                     u3820 1690                     u3580 1043  
                   u3660 0808                     u2940 095F                     u2860 08B3  
                   u4380 1337                     u4540 14BB                     u4460 1426  
                   u4700 0156                     u5180 119F                     u5340 0E3B  
                   u4621 1F51                     u5261 1F88                     u5501 004F  
                   u3901 172C                     u3821 168F                     u3581 1042  
                   u4285 0CC9                     u3661 0807                     u2941 095E  
                   u2861 08B2                     u4365 1318                     u4541 14BA  
                   u2845 1153                     u4701 0155                     u5181 119E  
                   u5341 0E3A                     u4630 1F59                     u3910 1740  
                   u3830 16AB                     u3590 105F                     u2950 0969  
                   u2870 08B8                     u3750 12E6                     u3670 128E  
                   u4390 1341                     u4550 14D1                     u4470 1441  
                   u4710 019A                     u5190 11A8                     u5350 0E85  
                   u5270 0D41                     u5430 1FF7                     u4631 1F58  
                   u3911 173F                     u3831 16AA                     u3591 105E  
                   u3655 13F9                     u4295 0CE4                     u2951 0967  
                   u2871 08B7                     u3751 12E5                     u3671 128D  
                   u4391 1340                     u4535 14AD                     u4471 1440  
                   u4711 0199                     u5191 11A7                     u5351 0E84  
                   u5271 0D40                     u5431 1FF6                     u5440 1DBC  
                   u4640 1F60                     u5520 006A                     u3920 1748  
                   u3840 16C9                     u2960 096A                     u2880 08D6  
                   u3760 12EB                     u3680 12A4                     u4560 14DB  
                   u4480 1447                     u4800 0306                     u4720 01AB  
                   u5360 0EA5                     u5280 0D9D                     u5441 1DBB  
                   u4641 1F5F                     u5425 1E0C                     u5521 0069  
                   u3921 1747                     u3905 1729                     u3841 16C8  
                   u2945 095B                     u2881 08D5                     u3761 12EA  
                   u3745 12D9                     u4385 1333                     u4561 14DA  
                   u4481 1446                     u4465 1422                     u4801 0305  
                   u4721 01AA                     u5361 0EA4                     u5281 0D9C  
                   u5450 1EBA                     u4570 1DE8                     u3850 1701  
                   u3770 165A                     u2970 097E                     u2890 08DF  
                   u3690 12B9                     u4490 1455                     u4810 0315  
                   u4730 01FF                     u4650 00E5                     u5370 0EC7  
                   u5290 0DA2                     u5451 1EB9                     u5515 005E  
                   u4571 1DE6                     u3851 1700                     u3771 1659  
                   u2971 097D                     u2891 08DE                     u3691 12B8  
                   u4555 14CD                     u4475 143D                     u4811 0314  
                   u4731 01FE                     u4651 00E4                     u5371 0EC6  
                   u5291 0DA1                     u5540 0078                     u5460 000D  
                   u4580 1DE9                     u3940 1755                     u3780 1660  
                   u2980 098A                     u4900 0499                     u4820 0331  
                   u4740 026B                     u4660 010F                     u5380 0EEA  
                   u5541 0077                     u5461 000C                     u3941 1754  
                   u3781 165F                     u2981 0989                     u3685 12A0  
                   u4901 0498                     u4821 0330                     u4741 026A  
                   u4661 010E                     u5381 0EE9                     u5550 007E  
                   u5470 0011                     u4590 1EC4                     u3790 1665  
                   u4910 04BB                     u4830 0348                     u4750 02B4  
                   u4670 0114                     u5390 0F39                     u5551 007D  
                   u5535 006E                     u5471 0010                     u4591 1EC3  
                   u3935 174B                     u3791 1664                     u4495 1451  
                   u4911 04BA                     u4831 0347                     u4815 0311  
                   u4751 02B3                     u4671 0113                     u5391 0F38  
                   u5560 0082                     u5480 0031                     u3960 1765  
                   u3880 1713                     u4920 04C0                     u4840 034E  
                   u4760 02D1                     u4680 011B                     u5561 0081  
                   u5481 0030                     u3961 1764                     u3881 1712  
                   u3865 1702                     u4921 04BF                     u4841 034D  
                   u4825 032D                     u4761 02D0                     u4681 011A  
                   u5617 1642                     u5570 0096                     u3970 176A  
                   u4930 0535                     u4850 0352                     u4770 02D8  
                   u4690 0145                     u5627 1F90                     u3971 1769  
                   u3955 1757                     u3875 1709                     u2995 098D  
                   u4931 0534                     u4851 0351                     u4771 02D7  
                   u4691 0144                     u5580 00A5                     u3980 177E  
                   u4940 056C                     u4860 035C                     u4780 02EB  
                   u5637 1E75                     u5581 00A4                     u3981 177D  
                   u4941 056B                     u4861 035B                     u4781 02EA  
                   u5590 00A9                     u3990 1785                     u4950 057F  
                   u4870 0360                     u4790 02FF                     u5647 108D  
                   u5591 00A8                     u5575 0092                     u5495 0044  
                   u3991 1784                     u3895 1715                     u4951 057E  
                   u4871 035F                     u4791 02FE                     u4960 05D2  
                   u4880 0370                     u5657 1098                     u4961 05D1  
                   u4881 036F                     u4785 02E7                     u4970 05D9  
                   u4890 0447                     u5667 10A2                     u4971 05D8  
                   u4891 0446                     u4980 05DF                     u5677 10C8  
                   u4981 05DE                     u4990 05E3                     u5687 1F67  
                   u4991 05E2                     u4895 0443                     _lm35 0130  
                   _dbuf 01A0                     _atoi 080B                     _main 14EC  
                   _prec 0138                     _nout 0134                     pad@i 0027  
                   pad@p 0025                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     pad@w 0029                     btemp 007E  
       __end_of_ADC_Init 1D97            ___fpclassifyf 12F7                     start 0002  
        ___fldiv@new_exp 0025            ?_LCD_Write_Cp 0070              Load_Cmd@cmd 0070  
                  ??_pad 007C         __end_of_LCD_Init 10CD            ___fltol@sign1 0079  
                  ?_atoi 0076          __end_of___fladd 0AD7                    ?_main 0070  
        __end_of___fldiv 1800          __end_of___awdiv 1283          __end_of___flneg 080B  
                  STR_12 2032                    STR_14 2032          __end_of___awmod 1120  
        __end_of___flmul 0D2E          __end_of___flsub 1E9A          __end_of___fltol 12F7  
        ___awdiv@divisor 0070          ___awdiv@counter 0075             vfpfcnvrt@fmt 005E  
 __end_of_LCD_Set_Cursor 1FCB                    _flags 013A                    _fputc 1120  
                  _fputs 1006          __end_of_isdigit 1DF0                    atoi@n 0022  
                  pad@fp 002B                    atoi@s 0076                    _width 0136  
                  _putch 0006          __end_of_isspace 1EDC          __end_of_isupper 1E08  
                  status 0003                    wtemp0 007E          __end_of_sprintf 1F44  
         ?___fpclassifyf 0070          __end_of_tolower 1DD8          __end_of_strncmp 11CB  
         ??_LCD_Write_Cp 0071          __initialization 07E1           _LCD_Write_Text 1E9A  
           __end_of_atoi 089F             __end_of_main 164C         __end_of_Load_Cmd 1F6D  
                 ??_atoi 0078                   ??_main 00EE                ??_LCD_Cmd 0071  
        ?_LCD_Set_Cursor 0076                   ?_fputc 0070                   ?_fputs 0078  
                 _ADRESH 009C                   _ADRESL 009B         ___awdiv@dividend 0072  
                 ?_putch 0070                   _BORCON 0116                   _OSCCON 0099  
          vfpfcnvrt@done 0065         __end_of___xxtofl 00B3   __end_of_LCD_Write_Text 1EBB  
           vfprintf@cfmt 00D9                   ___flge 1376                   ___fleq 102F  
              ??___fladd 0042                   ___wmul 1E3B                ??___fldiv 0078  
              ??___awdiv 0074                ??___flneg 0074                ??___awmod 0074  
              ??___flmul 0028                ??___flsub 007E                ??___fltol 0074  
                 _efgtoa 00B3                   _conver 013C                   _floorf 1401  
       ___awdiv@quotient 0077          ___awmod@divisor 0070                   _strLCD 013E  
        ___awmod@counter 0075                   pad@buf 0024                   _strcpy 1EDC  
                 _strlen 1E21                   fputc@c 0070                   fputs@c 0020  
                 fputs@i 0021                   fputs@s 0023                ??_isdigit 0072  
        ___fpclassifyf@e 0020                ?_ADC_Init 0070          ___fpclassifyf@u 0022  
        ___fpclassifyf@x 0070                ??_isspace 0072                ??_isupper 0072  
                 putch@c 0070         __end_of_vfprintf 2000                ??_sprintf 00E1  
              ??_tolower 0078                ??_strncmp 0074            _ADC_Get_Value 1DAB  
             ___flge@ff1 003A               ___flge@ff2 003E          ??___fpclassifyf 0074  
           ___xxtofl@arg 007A             ___xxtofl@exp 0079             ___xxtofl@val 0070  
             ___fleq@ff1 0070               ___fleq@ff2 0074  __end_of__initialization 07FD  
              ?_LCD_Init 0070               ___flneg@f1 0070               ___fltol@f1 0070  
        ?_LCD_Write_Text 007B           __pcstackCOMMON 0070             __pidataBANK2 1D97  
          __end_of_fputc 1173            __end_of_fputs 102F            __end_of_putch 0007  
         LCD_Cmd@NibbleH 0073           LCD_Cmd@NibbleL 0074        __end_of_Load_Data 1F96  
             ??_ADC_Init 0070     __end_of_LCD_Write_Cp 1E21            Load_Data@data 0070  
         ?_ADC_Get_Value 0070                  ??_fputc 0073                  ??_fputs 0079  
                ??_putch 0070               __pbssBANK2 0120               __pbssBANK3 01A0  
              ?_Load_Cmd 0070               ??_LCD_Init 0071        __end_of__Umul8_16 1F20  
             _efgtoa$930 00A0               _efgtoa$938 00A2               _efgtoa$939 00A4  
             __pmaintext 14EC                  ?___flge 003A                  ?___fleq 0070  
                ?___wmul 0070                  ?_efgtoa 0056                  ?_floorf 002D  
                ?_strcpy 0070                  ?_strlen 0070                  _LCD_Cmd 1E5A  
              ?___xxtofl 0070                  _OSCTUNE 0098               ??_Load_Cmd 0070  
                ___fladd 089F                  ___fldiv 164C                  ___awdiv 1224  
                ___flneg 0800                  ___awmod 10CD                  ___flmul 0AD7  
                ___flsub 1E7A                  ___fltol 1283                ?_vfprintf 00D3  
       ??_LCD_Set_Cursor 0077                  __ptext1 1F20                  __ptext2 1FCB  
                __ptext3 0D2E                  __ptext4 1173                  __ptext5 00B3  
                __ptext6 1DC1                  __ptext7 1DF0                  __ptext8 1EDC  
                __ptext9 11CB                  _isdigit 1DD8               ??___xxtofl 0074  
       ___awmod@dividend 0072                  _isspace 1EBB          ??_ADC_Get_Value 0072  
                _isupper 1DF0                  efgtoa@c 005A                  efgtoa@d 00B2  
                efgtoa@e 00CB                  efgtoa@f 0056                  efgtoa@g 00C7  
                efgtoa@h 00BD                  efgtoa@i 00C5                  efgtoa@l 00C1  
                efgtoa@m 00AC                  efgtoa@n 00CD                  efgtoa@p 00B7  
                efgtoa@t 00A6                  efgtoa@u 00CF                  efgtoa@w 00B9  
                atoi@neg 0020                  _sprintf 1F20                  _tolower 1DC1  
                clrloop0 1D87                  _strncmp 1173     end_of_initialization 07FD  
                floorf@e 003B                  floorf@m 0037                  floorf@u 003D  
                floorf@x 002D        LCD_Write_Cp@letra 0075                  fputc@fp 0072  
                init_ram 1000                  fputs@fp 0078                  initloop 1001  
      __end_of_vfpfcnvrt 1000               efgtoa@mode 00BC               efgtoa@sign 00B4  
             ??_vfprintf 00D6                  strcpy@d 0076                  strlen@a 0073  
                strcpy@s 0074                  strlen@s 0074              ___fladd@grs 004D  
          ___xxtofl@sign 0078        LCD_Write_Text@col 007B                _TRISAbits 008C  
              _TRISDbits 008F              ___fldiv@grs 0027              ___fldiv@rem 0020  
       ??_LCD_Write_Text 007D              ___flmul@grs 002E               LCD_Cmd@cmd 0075  
           _LCD_Write_Cp 1E08           __end_of___flge 1401           __end_of___fleq 107D  
            vfpfcnvrt@ap 005F              vfpfcnvrt@ct 006B              vfpfcnvrt@fp 006F  
         __end_of___wmul 1E5A           __end_of_efgtoa 07E1           __end_of_floorf 14EC  
             floorf@F526 0120           __end_of_strcpy 1EFD           __end_of_strlen 1E3B  
    start_initialization 07E1                _Load_Data 1F6D              __end_of_pad 1224  
  __end_of___fpclassifyf 1376              vfprintf@fmt 00D3                 ??___flge 0042  
               ??___fleq 0078                 ??___wmul 0074                 ??_efgtoa 005B  
              __Umul8_16 1EFD              __pdataBANK2 013E                 ??_floorf 0031  
               ??_strcpy 0072                 ??_strlen 0072                ___fladd@a 003E  
              ___fladd@b 003A                 ?_LCD_Cmd 0070                ___fldiv@a 0070  
              ___fldiv@b 0074                ___flmul@a 0024                ___flmul@b 0020  
              ___flsub@a 004E                ___flsub@b 0052               ?_Load_Data 0070  
              ___latbits 0003            __pcstackBANK0 0020            __pcstackBANK1 00A0  
               ?___fladd 003A                 ?___fldiv 0070                 ?___awdiv 0070  
               ?___flneg 0070                 ?___awmod 0070                 ?___flmul 0020  
               ?___flsub 004E                 ?___fltol 0070               ?__Umul8_16 0070  
               ?_isdigit 0070                 _ADC_Init 1D8C                 ?_isspace 0070  
               ?_isupper 0070                 ?_sprintf 00DB                 ?_tolower 0076  
               ?_strncmp 0070                 _LCD_Init 107D           ___wmul@product 0074  
               _LATDbits 010F                clear_ram0 1D86                _vfpfcnvrt 0D2E  
             _ADCON0bits 009D               _ADCON1bits 009E        ___wmul@multiplier 0070  
    LCD_Write_Cp@NibbleH 0073      LCD_Write_Cp@NibbleL 0074              ??_Load_Data 0070  
           _isspace$1017 0074    __end_of_ADC_Get_Value 1DC1               vfpfcnvrt@c 006E  
             vfpfcnvrt@f 0067                 _Load_Cmd 1F44               vfprintf@ap 00D5  
             vfprintf@fp 00D8              ??__Umul8_16 0072               ?_vfpfcnvrt 005E  
             _ANSELAbits 018C       ___fpclassifyf@F465 0124               sprintf@fmt 00DB  
               ___xxtofl 0007                 __ptext10 1E21                 __ptext11 1006  
               __ptext20 0AD7                 __ptext12 1120                 __ptext21 1EFD  
               __ptext13 0006                 __ptext30 1E3B                 __ptext22 1376  
               __ptext14 1401                 __ptext31 0007                 __ptext23 102F  
               __ptext15 12F7                 __ptext40 1DAB                 __ptext32 1E9A  
               __ptext24 164C                 __ptext16 1283                 __ptext33 1E08  
               __ptext25 10CD                 __ptext17 1E7A                 __ptext34 1F6D  
               __ptext26 1224                 __ptext18 089F                 __ptext35 1F96  
               __ptext27 080B                 __ptext19 0800                 __ptext36 1E5A  
               __ptext28 1EBB                 __ptext37 107D                 __ptext29 1DD8  
               __ptext38 1F44                 __ptext39 1D8C               strcpy@dest 0077  
               efgtoa@fp 00B6                 efgtoa@ne 00AA                 efgtoa@pp 00A8  
               efgtoa@ou 00AE                 _vfprintf 1FCB                 isdigit@c 0070  
              sprintf@ap 00E3                 isspace@c 0070                strcpy@src 0070  
               isupper@c 0070                strncmp@_l 0075                strncmp@_r 0070  
            efgtoa@nmode 00BB       LCD_Set_Cursor@fila 0079              ??_vfpfcnvrt 0060  
          __pstringtext1 2000            __pstringtext2 200C            __pstringtext3 2017  
          __pstringtext4 2022            __pstringtext5 2026            __pstringtext6 202A  
          __pstringtext7 202E            __pstringtext8 2032            __pstringtext9 0000  
 __Umul8_16@multiplicand 0070                 sprintf@f 00E4                 tolower@c 0076  
               sprintf@s 00E2                 strncmp@l 0078                 strncmp@n 0072  
               strncmp@r 0076        LCD_Set_Cursor@col 0076        LCD_Set_Cursor@pos 007A  
          ___fladd@signs 004A             ___fladd@aexp 004B             ___fladd@bexp 004C  
   __Umul8_16@multiplier 0078       LCD_Write_Text@fila 0020       LCD_Write_Text@text 007C  
      __Umul8_16@product 0074  
